function bindTo(target, source) {
  var descriptors = Object.getOwnPropertyDescriptors(source);
  for (var key in descriptors) {
    if (!(key[0].toUpperCase() === key[0])) {
      var descriptor = descriptors[key];
      if (typeof descriptor.value === "function") {
        descriptor.value = descriptor.value.bind(source);
      } else if (typeof descriptor.get === "function") {
        descriptor.get = descriptor.get.bind(source);
      }
    }
  }
  Object.defineProperties(target, descriptors);
}

var Scope = function () {};
Scope.prototype = self;
var $doc, $entry, $moduleName, $moduleBase;
var $wnd = new Scope();
bindTo($wnd, self);
var dh = {};
$wnd.dh = dh;
import { dhinternal } from "./dh-internal.mjs";
$wnd.dhinternal = dhinternal;
var $gwt_version = "2.9.0";
var $intern_0 = { 3: 1, 6: 1, 5: 1 },
  $intern_1 = 2147483647,
  $intern_2 = -17592186044416,
  $intern_3 = 17592186044416,
  $intern_4 = 4194304,
  $intern_5 = 1048575,
  $intern_6 = { 3: 1, 41: 1, 26: 1, 25: 1 },
  $intern_7 = { 3: 1, 5: 1 },
  $intern_8 = { 3: 1, 6: 1, 16: 1, 9: 1, 5: 1, 12: 1 },
  $intern_9 = 65536,
  $intern_10 = 65535,
  $intern_11 = { 53: 1, 79: 1 },
  $intern_12 = { 56: 1 },
  $intern_13 = { 30: 1 },
  $intern_14 = { 53: 1, 81: 1 },
  $intern_15 = { 3: 1, 53: 1, 79: 1 },
  $intern_16 = { 3: 1, 30: 1 },
  $intern_17 = { 3: 1, 6: 1, 9: 1, 5: 1 },
  $intern_18 = { 144: 1, 197: 1, 232: 1 },
  $intern_19 = { 15: 1 },
  $intern_20 = { 35: 1, 3: 1 },
  $intern_21 = 1000,
  $intern_22 = -2147483648,
  $intern_23 = { 95: 1, 3: 1 },
  $intern_24 = 1900,
  $intern_25 = { 3: 1, 33: 1, 78: 1 },
  $intern_26 = 4194303,
  $intern_27 = 524288,
  $intern_28 = -9223372036854775808,
  $intern_29 = 1000000000,
  $intern_30 = { 225: 1 },
  $intern_31 = { 111: 1, 3: 1 },
  $intern_32 = { 166: 1, 3: 1 },
  $intern_33 = { 3: 1, 6: 1, 5: 1, 80: 1, 322: 1 },
  $intern_34 = { 112: 1 },
  $intern_35 = { 43: 1 },
  $intern_36 = { 11: 1 },
  $intern_37 = 1000000,
  $intern_38 = 16777216,
  $intern_39 = { 57: 1, 51: 1 },
  $intern_40 = { 126: 1, 3: 1, 5: 1 },
  $intern_41 = { 3: 1, 6: 1, 5: 1, 80: 1 },
  $intern_42 = { 44: 1 },
  $intern_43 = { 3: 1, 94: 1 },
  $intern_44 = { 86: 1, 3: 1, 6: 1, 9: 1, 5: 1 },
  $intern_45 = { 193: 1, 3: 1, 5: 1 },
  $intern_46 = 600000,
  $intern_47 = { 106: 1 },
  $intern_48 = { 17: 1 },
  $intern_49 = { 32: 1 },
  $intern_50 = { 239: 1 },
  $intern_51 = { 57: 1, 257: 1 },
  $intern_52 = { 168: 1, 3: 1, 5: 1 },
  $intern_53 = -128,
  $intern_54 = -32768,
  $intern_55 = { 96: 1, 3: 1 },
  $intern_56 = { 192: 1, 3: 1, 5: 1 },
  $intern_57 = { 125: 1, 3: 1, 5: 1 },
  $intern_58 = { 42: 1, 3: 1, 33: 1, 37: 1 },
  $intern_59 = { l: 0, m: 0, h: 524288 },
  $intern_60 = -3.4028234663852886e38,
  $intern_61 = -1.7976931348623157e308,
  $intern_62 = { 36: 1 },
  $intern_63 = { 107: 1, 3: 1, 5: 1 },
  $intern_64 = { 3: 1 },
  $intern_65 = { 3: 1, 142: 1, 25: 1 },
  $intern_66 = { l: 4194303, m: 4194303, h: 524287 },
  $intern_67 = 0.3010299956639812,
  $intern_68 = 4294967295,
  $intern_69 = 4294967296,
  $intern_70 = 1073741824,
  $intern_71 = { 33: 1, 127: 1 },
  $intern_72 = 16777619,
  $intern_73 = { 3: 1, 33: 1, 37: 1, 121: 1 },
  $intern_74 = { 144: 1, 197: 1, 379: 1 },
  $intern_75 = { 144: 1, 197: 1, 891: 1 };
var cggl = {};
var jl = {};
var cggcc = {};
var cggcci = {};
var ju = {};
var juf = {};
var jus = {};
var ji = {};
var cggic = {};
var cggicc = {};
var cggici = {};
var cggicic = {};
var cggis = {};
var cggisi = {};
var cgguc = {};
var jb = {};
var ec = {};
var ed = {};
var idjpdaffsoaaf = {};
var idwca = {};
var idwcal = {};
var idwsf = {};
var idwcab = {};
var idwcabd = {};
var idwcabs = {};
var idwcab2 = {};
var idwcac = {};
var idwcaf = {};
var idwcag = {};
var idwcai = {};
var idwcai2 = {};
var idwcai3 = {};
var idwcap = {};
var idwcas = {};
var idwcas2 = {};
var idwcas3 = {};
var idwcat = {};
var idwcate = {};
var idwcaw = {};
var idwcawc = {};
var idwcawce = {};
var idwcawp = {};
var idwcawpe = {};
var idwcf = {};
var idwci = {};
var idwcs = {};
var idwsd = {};
var idwsdc = {};
var idwsil = {};
var ji2 = {};
var jm = {};
var jn = {};
var jnc = {};
var _;
var prototypesByTypeId_0;
var initFnList_0;
var permutationId = -1;
cggl.$$init_3 = function $$init_3() {};
function setGwtProperty(propertyName, propertyValue) {
  typeof window === "object" &&
    typeof window["$gwt"] === "object" &&
    (window["$gwt"][propertyName] = propertyValue);
}

function gwtOnLoad_0(errFn, modName, modBase, softPermutationId) {
  cggl.ensureModuleInit();
  var initFnList = initFnList_0;
  $moduleName = modName;
  $moduleBase = modBase;
  permutationId = softPermutationId;
  function initializeModules() {
    for (var i = 0; i < initFnList.length; i++) {
      initFnList[i]();
    }
  }

  if (errFn) {
    try {
      $entry(initializeModules)();
    } catch (e) {
      errFn(modName, e);
    }
  } else {
    $entry(initializeModules)();
  }
}

cggl.ensureModuleInit = function ensureModuleInit() {
  initFnList_0 == null && (initFnList_0 = []);
};
function addInitFunctions() {
  cggl.ensureModuleInit();
  var initFnList = initFnList_0;
  for (var i = 0; i < arguments.length; i++) {
    initFnList.push(arguments[i]);
  }
}

cggl.$$init_4 = function $$init_4() {};
function typeMarkerFn() {}

function toString_7(object) {
  if (Array.isArray(object) && object.typeMarker === typeMarkerFn) {
    return jl.toString_2(object);
  }
  return object.toString();
}

function provide(namespace, optCtor) {
  var cur = $wnd;
  if (namespace === "") {
    return cur;
  }
  var parts = namespace.split(".");
  !(parts[0] in cur) && cur.execScript && cur.execScript("var " + parts[0]);
  if (optCtor) {
    var clazz = optCtor.prototype.___clazz;
    clazz.jsConstructor = optCtor;
  }
  for (var part; parts.length && (part = parts.shift()); ) {
    cur = cur[part] = cur[part] || (!parts.length && optCtor) || {};
  }
  return cur;
}

cggl.portableObjCreate = function portableObjCreate(obj) {
  function F() {}

  F.prototype = obj || {};
  return new F();
};
cggl.maybeGetClassLiteralFromPlaceHolder =
  function maybeGetClassLiteralFromPlaceHolder(entry) {
    return entry instanceof Array ? entry[0] : null;
  };
function makeLambdaFunction(samMethod, ctor, ctorArguments) {
  var lambda = function () {
    return samMethod.apply(lambda, arguments);
  };
  ctor.apply(lambda, ctorArguments);
  return lambda;
}

function emptyMethod() {}

function defineProperties(proto, propertyDefinition) {
  for (var key in propertyDefinition) {
    propertyDefinition[key]["configurable"] = true;
  }
  Object.defineProperties(proto, propertyDefinition);
}

function defineClass(typeId, superTypeIdOrPrototype, castableTypeMap) {
  var prototypesByTypeId = prototypesByTypeId_0;
  var prototype_0 = prototypesByTypeId[typeId];
  var clazz = cggl.maybeGetClassLiteralFromPlaceHolder(prototype_0);
  if (prototype_0 && !clazz) {
    _ = prototype_0;
  } else {
    _ = cggl.createSubclassPrototype(superTypeIdOrPrototype);
    _.castableTypeMap = castableTypeMap;
    !superTypeIdOrPrototype && (_.typeMarker = typeMarkerFn);
    prototypesByTypeId[typeId] = _;
  }
  for (var i = 3; i < arguments.length; ++i) {
    arguments[i].prototype = _;
  }
  clazz && (_.___clazz = clazz);
}

cggl.createSubclassPrototype = function createSubclassPrototype(
  superTypeIdOrPrototype
) {
  var superPrototype =
    superTypeIdOrPrototype && superTypeIdOrPrototype.prototype;
  !superPrototype &&
    (superPrototype = prototypesByTypeId_0[superTypeIdOrPrototype]);
  return cggl.portableObjCreate(superPrototype);
};
function bootstrap() {
  prototypesByTypeId_0 = {};
  !Array.isArray &&
    (Array.isArray = function (vArg) {
      return Object.prototype.toString.call(vArg) === "[object Array]";
    });
  function now_0() {
    return new Date().getTime();
  }

  !Date.now && (Date.now = now_0);
}

cggl.$$init_5 = function $$init_5() {};
$wnd.goog = $wnd.goog || {};
$wnd.goog.global = $wnd.goog.global || $wnd;
bootstrap();
jl.$equals = function $equals(this$static, other) {
  return maskUndefined(this$static) === maskUndefined(other);
};
jl.$getClass = function $getClass(this$static) {
  return this$static.___clazz;
};
jl.$hashCode = function $hashCode(this$static) {
  return ji.getHashCode_1(this$static);
};
jl.$toString = function $toString(this$static) {
  var number;
  return (
    jl.$getName_0(jl.getClass__Ljava_lang_Class___devirtual$(this$static)) +
    "@" +
    ((number = ji.uncheckedCast(
      jl.toUnsigned(jl.hashCode__I__devirtual$(this$static))
    )),
    number.toString(16))
  );
};
function Object_0() {}

jl.equals_Ljava_lang_Object__Z__devirtual$ =
  function equals_Ljava_lang_Object__Z__devirtual$(this$static, other) {
    return instanceOfString(this$static)
      ? jl.$equals_12(this$static, other)
      : instanceOfDouble(this$static)
      ? jl.$equals_9(this$static, other)
      : instanceOfBoolean(this$static)
      ? jl.$equals_8(this$static, other)
      : hasJavaObjectVirtualDispatch(this$static)
      ? this$static.equals_0(other)
      : isJavaArray(this$static)
      ? jl.$equals(this$static, other)
      : cggcc.$equals_0(this$static, other);
  };
jl.getClass__Ljava_lang_Class___devirtual$ =
  function getClass__Ljava_lang_Class___devirtual$(this$static) {
    return instanceOfString(this$static)
      ? jl.$getClass_572()
      : instanceOfDouble(this$static)
      ? jl.$getClass_571()
      : instanceOfBoolean(this$static)
      ? jl.$getClass_570()
      : hasJavaObjectVirtualDispatch(this$static)
      ? this$static.___clazz
      : isJavaArray(this$static)
      ? jl.$getClass(this$static)
      : cggcc.$getClass_0(this$static);
  };
jl.hashCode__I__devirtual$ = function hashCode__I__devirtual$(this$static) {
  return instanceOfString(this$static)
    ? jl.$hashCode_12(this$static)
    : instanceOfDouble(this$static)
    ? jl.$hashCode_9(this$static)
    : instanceOfBoolean(this$static)
    ? jl.$hashCode_8(this$static)
    : hasJavaObjectVirtualDispatch(this$static)
    ? this$static.hashCode_1()
    : isJavaArray(this$static)
    ? jl.$hashCode(this$static)
    : cggcc.$hashCode_0(this$static);
};
jl.toString_2 = function toString_2(object) {
  var number;
  return (
    jl.$getName_0(jl.getClass__Ljava_lang_Class___devirtual$(object)) +
    "@" +
    ((number = ji.uncheckedCast(
      jl.toUnsigned(jl.hashCode__I__devirtual$(object))
    )),
    number.toString(16))
  );
};
defineClass(1, null, {}, Object_0);
_.equals_0 = function equals(other) {
  return jl.$equals(this, other);
};
_.getClass_0 = function getClass_0() {
  return jl.$getClass(this);
};
_.hashCode_1 = function hashCode_0() {
  return jl.$hashCode(this);
};
_.toString_0 = function toString_1() {
  return jl.$toString(this);
};
_.equals = function (other) {
  return this.equals_0(other);
};
_.hashCode = function () {
  return this.hashCode_1();
};
_.toString = function () {
  return this.toString_0();
};
cggcc.$equals_0 = function $equals_0(this$static, other) {
  return cggcc.hasEquals(this$static)
    ? cggcc.callEquals(this$static, other)
    : maskUndefined(this$static) === maskUndefined(other);
};
cggcc.$getClass_0 = function $getClass_0(this$static) {
  return (
    this$static.___clazz ||
    (Array.isArray(this$static) &&
      getClassLiteralForArray(
        cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit,
        1
      )) ||
    cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit
  );
};
cggcc.$hashCode_0 = function $hashCode_0(this$static) {
  return cggcc.hasHashCode(this$static)
    ? cggcc.callHashCode(this$static)
    : ji.getHashCode_1(this$static);
};
cggcc.callEquals = function callEquals(thisObject, thatObject) {
  return thisObject.equals(thatObject);
};
cggcc.callHashCode = function callHashCode(object) {
  return object.hashCode();
};
cggcc.createArray = function createArray() {
  return [];
};
cggcc.hasEquals = function hasEquals(object) {
  return !!object && !!object.equals;
};
cggcc.hasHashCode = function hasHashCode(object) {
  return !!object && !!object.hashCode;
};
cggcc.toStringVerbose = function toStringVerbose(obj) {
  var defined = function (m) {
    return typeof m != "undefined";
  };
  var strip = function (s) {
    return s.replace(/\r\n/g, "");
  };
  if (defined(obj.outerHTML)) return strip(obj.outerHTML);
  defined(obj.innerHTML) &&
    obj.cloneNode &&
    $doc.createElement("div").appendChild(obj.cloneNode(true)).innerHTML;
  if (defined(obj.nodeType) && obj.nodeType == 3) {
    return (
      "'" + obj.data.replace(/ /g, "\u25AB").replace(/\u00A0/, "\u25AA") + "'"
    );
  }
  if (typeof defined(obj.htmlText) && obj.collapse) {
    var html = obj.htmlText;
    if (html) {
      return "IETextRange [" + strip(html) + "]";
    } else {
      var dup = obj.duplicate();
      dup.pasteHTML("|");
      var out = "IETextRange " + strip(obj.parentElement().outerHTML);
      dup.moveStart("character", -1);
      dup.pasteHTML("");
      return out;
    }
  }
  return obj.toString ? obj.toString() : "[JavaScriptObject]";
};
cggcci.$clinit_StackTraceCreator = function $clinit_StackTraceCreator() {
  cggcci.$clinit_StackTraceCreator = emptyMethod;
  var c, enforceLegacy;
  enforceLegacy = !cggcci.supportsErrorStack();
  c = new cggcci.StackTraceCreator$CollectorModernNoSourceMap();
  cggcci.collector_1 = enforceLegacy
    ? new cggcci.StackTraceCreator$CollectorLegacy()
    : c;
};
cggcci.captureStackTrace = function captureStackTrace(error) {
  cggcci.$clinit_StackTraceCreator();
  cggcci.collector_1.collect(error);
};
cggcci.constructJavaStackTrace = function constructJavaStackTrace(thrown) {
  cggcci.$clinit_StackTraceCreator();
  var stackTrace;
  stackTrace = cggcci.collector_1.getStackTrace(thrown);
  return cggcci.dropInternalFrames(stackTrace);
};
cggcci.dropInternalFrames = function dropInternalFrames(stackTrace) {
  var dropFrameUntilFnName, dropFrameUntilFnName2, i, numberOfFramesToSearch;
  dropFrameUntilFnName = "captureStackTrace";
  dropFrameUntilFnName2 = "initializeBackingError";
  numberOfFramesToSearch = $wnd.Math.min(stackTrace.length, 5);
  for (i = numberOfFramesToSearch - 1; i >= 0; i--) {
    if (
      jl.$equals_12(stackTrace[i].methodName_0, dropFrameUntilFnName) ||
      jl.$equals_12(stackTrace[i].methodName_0, dropFrameUntilFnName2)
    ) {
      stackTrace.length >= i + 1 &&
        ji.uncheckedCast(stackTrace).splice(0, i + 1);
      break;
    }
  }
  return stackTrace;
};
cggcci.extractFunctionName = function extractFunctionName(fnName) {
  var fnRE = /function(?:\s+([\w$]+))?\s*\(/;
  var match_0 = fnRE.exec(fnName);
  return (match_0 && match_0[1]) || "anonymous";
};
cggcci.getFnStack = function getFnStack(e) {
  cggcci.$clinit_StackTraceCreator();
  return e && e["fnStack"] ? e["fnStack"] : [];
};
cggcci.getFunctionName = function getFunctionName(fn) {
  cggcci.$clinit_StackTraceCreator();
  return fn.name || (fn.name = cggcci.extractFunctionName(fn.toString()));
};
cggcci.parseInt_0 = function parseInt_0(number) {
  cggcci.$clinit_StackTraceCreator();
  return parseInt(number) || -1;
};
cggcci.split_0 = function split_0(t) {
  cggcci.$clinit_StackTraceCreator();
  var e = t.backingJsObject;
  if (e && e.stack) {
    var stack_0 = e.stack;
    var toString_0 = e + "\n";
    stack_0.substring(0, toString_0.length) == toString_0 &&
      (stack_0 = stack_0.substring(toString_0.length));
    return stack_0.split("\n");
  }
  return [];
};
cggcci.supportsErrorStack = function supportsErrorStack() {
  if (Error.stackTraceLimit > 0) {
    $wnd.Error.stackTraceLimit = Error.stackTraceLimit = 64;
    return true;
  }
  return "stack" in new Error();
};
defineClass(929, 1, {});
cggcci.StackTraceCreator$CollectorLegacy =
  function StackTraceCreator$CollectorLegacy() {};
defineClass(708, 929, {}, cggcci.StackTraceCreator$CollectorLegacy);
_.collect = function collect(error) {
  var seen = {};
  var fnStack = [];
  error["fnStack"] = fnStack;
  var callee = arguments.callee.caller;
  while (callee) {
    var name_0 = cggcci.getFunctionName(callee);
    fnStack.push(name_0);
    var keyName = ":" + name_0;
    var withThisName = seen[keyName];
    if (withThisName) {
      var i, j;
      for (i = 0, j = withThisName.length; i < j; i++) {
        if (withThisName[i] === callee) {
          return;
        }
      }
    }
    (withThisName || (seen[keyName] = [])).push(callee);
    callee = callee.caller;
  }
};
_.getStackTrace = function getStackTrace(t) {
  var i, length_0, stack_0, stackTrace;
  stack_0 = cggcci.getFnStack(t);
  length_0 = cggcc.$length_1(stack_0);
  stackTrace = initUnidimensionalArray(
    cggl.Ljava_lang_StackTraceElement_2_classLit,
    $intern_0,
    113,
    length_0,
    0,
    1
  );
  for (i = 0; i < length_0; i++) {
    stackTrace[i] = new jl.StackTraceElement(
      cggcc.$get_1(stack_0, i),
      null,
      -1
    );
  }
  return stackTrace;
};
cggcci.$parse = function $parse(this$static, stString) {
  var closeParen,
    col,
    endFileUrlIndex,
    fileName,
    index_0,
    lastColonIndex,
    line,
    location_0,
    toReturn;
  location_0 = "";
  if (ji.uncheckedCast(stString).length == 0) {
    return this$static.createSte("Unknown", "anonymous", -1, -1);
  }
  toReturn = jl.$trim(stString);
  jl.$equals_12(ji.uncheckedCast(toReturn).substr(0, 3), "at ") &&
    (toReturn = ji.uncheckedCast(toReturn).substr(3));
  toReturn = cggcci.$stripSquareBrackets(toReturn);
  index_0 = ji.uncheckedCast(toReturn).indexOf("(");
  if (index_0 == -1) {
    index_0 = ji.uncheckedCast(toReturn).indexOf("@");
    if (index_0 == -1) {
      location_0 = toReturn;
      toReturn = "";
    } else {
      location_0 = jl.$trim(ji.uncheckedCast(toReturn).substr(index_0 + 1));
      toReturn = jl.$trim(ji.uncheckedCast(toReturn).substr(0, index_0));
    }
  } else {
    closeParen = ji.uncheckedCast(toReturn).indexOf(")", index_0);
    location_0 = ji
      .uncheckedCast(toReturn)
      .substr(index_0 + 1, closeParen - (index_0 + 1));
    toReturn = jl.$trim(ji.uncheckedCast(toReturn).substr(0, index_0));
  }
  index_0 = jl.$indexOf(toReturn, fromCodePoint(46));
  index_0 != -1 && (toReturn = ji.uncheckedCast(toReturn).substr(index_0 + 1));
  (ji.uncheckedCast(toReturn).length == 0 ||
    jl.$equals_12(toReturn, "Anonymous function")) &&
    (toReturn = "anonymous");
  lastColonIndex = jl.$lastIndexOf(location_0, fromCodePoint(58));
  endFileUrlIndex = jl.$lastIndexOf_0(
    location_0,
    fromCodePoint(58),
    lastColonIndex - 1
  );
  line = -1;
  col = -1;
  fileName = "Unknown";
  if (lastColonIndex != -1 && endFileUrlIndex != -1) {
    fileName = ji.uncheckedCast(location_0).substr(0, endFileUrlIndex);
    line = cggcci.parseInt_0(
      ji
        .uncheckedCast(location_0)
        .substr(endFileUrlIndex + 1, lastColonIndex - (endFileUrlIndex + 1))
    );
    col = cggcci.parseInt_0(
      ji.uncheckedCast(location_0).substr(lastColonIndex + 1)
    );
  }
  return this$static.createSte(fileName, toReturn, line, col);
};
cggcci.$stripSquareBrackets = function $stripSquareBrackets(toReturn) {
  return toReturn.replace(/\[.*?\]/g, "");
};
defineClass(930, 929, {});
_.collect = function collect_0(error) {};
_.createSte = function createSte(fileName, method, line, col) {
  return new jl.StackTraceElement(
    method,
    fileName + "@" + col,
    line < 0 ? -1 : line
  );
};
_.getStackTrace = function getStackTrace_0(t) {
  var addIndex, i, length_0, stack_0, stackTrace, ste;
  stack_0 = cggcci.split_0(t);
  stackTrace = initUnidimensionalArray(
    cggl.Ljava_lang_StackTraceElement_2_classLit,
    $intern_0,
    113,
    0,
    0,
    1
  );
  addIndex = 0;
  length_0 = cggcc.$length_1(stack_0);
  if (length_0 == 0) {
    return stackTrace;
  }
  ste = cggcci.$parse(this, cggcc.$get_1(stack_0, 0));
  jl.$equals_12(ste.methodName_0, "anonymous") ||
    (stackTrace[addIndex++] = ste);
  for (i = 1; i < length_0; i++) {
    stackTrace[addIndex++] = cggcci.$parse(this, cggcc.$get_1(stack_0, i));
  }
  return stackTrace;
};
cggcci.StackTraceCreator$CollectorModernNoSourceMap =
  function StackTraceCreator$CollectorModernNoSourceMap() {};
defineClass(709, 930, {}, cggcci.StackTraceCreator$CollectorModernNoSourceMap);
_.createSte = function createSte_0(fileName, method, line, col) {
  return new jl.StackTraceElement(method, fileName, -1);
};
cggl.asArray_0 = function asArray_0(array) {
  return array;
};
cggl.canSet = function canSet(array, value_0) {
  var elementTypeCategory;
  switch (cggl.getElementTypeCategory(array)) {
    case 6:
      return instanceOfString(value_0);
    case 7:
      return instanceOfDouble(value_0);
    case 8:
      return instanceOfBoolean(value_0);
    case 3:
      return (
        Array.isArray(value_0) &&
        ((elementTypeCategory = cggl.getElementTypeCategory(value_0)),
        !(elementTypeCategory >= 14 && elementTypeCategory <= 16))
      );
    case 11:
      return value_0 != null && cggl.isFunction(value_0);
    case 12:
      return value_0 != null && cggl.isJsObject(value_0);
    case 0:
      return canCast(value_0, cggl.getElementTypeId(array));
    case 2:
      return (
        cggl.isJsObjectOrFunction(value_0) &&
        !(value_0.typeMarker === typeMarkerFn)
      );
    case 1:
      return (
        (cggl.isJsObjectOrFunction(value_0) &&
          !(value_0.typeMarker === typeMarkerFn)) ||
        canCast(value_0, cggl.getElementTypeId(array))
      );
    default:
      return true;
  }
};
function ensureNotNull(array) {
  return ji.checkCriticalNotNull(array), array;
}

function getClassLiteralForArray(clazz, dimensions) {
  return cggl.getClassLiteralForArrayImpl(clazz, dimensions);
}

cggl.getClassLiteralForArrayImpl = function getClassLiteralForArrayImpl(
  clazz,
  dimensions
) {
  return jl.getClassLiteralForArray_0(clazz, dimensions);
};
cggl.getElementTypeCategory = function getElementTypeCategory(array) {
  return array.__elementTypeCategory$ == null
    ? 10
    : array.__elementTypeCategory$;
};
cggl.getElementTypeId = function getElementTypeId(array) {
  return array.__elementTypeId$;
};
function initMultidimensionalArray(
  leafClassLiteral,
  castableTypeMapExprs,
  elementTypeIds,
  leafElementTypeCategory,
  dimExprs,
  count
) {
  return cggl.initMultidimensionalArray_0(
    leafClassLiteral,
    castableTypeMapExprs,
    elementTypeIds,
    leafElementTypeCategory,
    dimExprs,
    0,
    count
  );
}

cggl.initMultidimensionalArray_0 = function initMultidimensionalArray_0(
  leafClassLiteral,
  castableTypeMapExprs,
  elementTypeIds,
  leafElementTypeCategory,
  dimExprs,
  index_0,
  count
) {
  var elementTypeCategory, i, isLastDimension, length_0, result;
  length_0 = dimExprs[index_0];
  isLastDimension = index_0 == count - 1;
  elementTypeCategory = isLastDimension ? leafElementTypeCategory : 0;
  result = cggl.initializeArrayElementsWithDefaults(
    elementTypeCategory,
    length_0
  );
  leafElementTypeCategory != 10 &&
    stampJavaTypeInfo(
      getClassLiteralForArray(leafClassLiteral, count - index_0),
      castableTypeMapExprs[index_0],
      elementTypeIds[index_0],
      elementTypeCategory,
      result
    );
  if (!isLastDimension) {
    ++index_0;
    for (i = 0; i < length_0; ++i) {
      cggl.set_1(
        result,
        i,
        cggl.initMultidimensionalArray_0(
          leafClassLiteral,
          castableTypeMapExprs,
          elementTypeIds,
          leafElementTypeCategory,
          dimExprs,
          index_0,
          count
        )
      );
    }
  }
  return result;
};
function initUnidimensionalArray(
  leafClassLiteral,
  castableTypeMap,
  elementTypeId,
  length_0,
  elementTypeCategory,
  dimensions
) {
  var result;
  result = cggl.initializeArrayElementsWithDefaults(
    elementTypeCategory,
    length_0
  );
  elementTypeCategory != 10 &&
    stampJavaTypeInfo(
      getClassLiteralForArray(leafClassLiteral, dimensions),
      castableTypeMap,
      elementTypeId,
      elementTypeCategory,
      result
    );
  return result;
}

cggl.initializeArrayElementsWithDefaults =
  function initializeArrayElementsWithDefaults(elementTypeCategory, length_0) {
    var array = new Array(length_0);
    var initValue;
    switch (elementTypeCategory) {
      case 14:
      case 15:
        initValue = 0;
        break;
      case 16:
        initValue = false;
        break;
      default:
        return array;
    }
    for (var i = 0; i < length_0; ++i) {
      array[i] = initValue;
    }
    return array;
  };
function isJavaArray(src_0) {
  return Array.isArray(src_0) && src_0.typeMarker === typeMarkerFn;
}

function newArray_0(size_0) {
  return new Array(size_0);
}

cggl.set_1 = function set_1(array, index_0, value_0) {
  return (array[index_0] = value_0);
};
function setCheck(array, index_0, value_0) {
  ji.checkCriticalArrayType(value_0 == null || cggl.canSet(array, value_0));
  return cggl.set_1(array, index_0, value_0);
}

cggl.setClass = function setClass(o, clazz) {
  o.___clazz = clazz;
};
cggl.setElementTypeCategory = function setElementTypeCategory(
  array,
  elementTypeCategory
) {
  array.__elementTypeCategory$ = elementTypeCategory;
};
cggl.setElementTypeId = function setElementTypeId(array, elementTypeId) {
  array.__elementTypeId$ = elementTypeId;
};
function stampJavaTypeInfo(
  arrayClass,
  castableTypeMap,
  elementTypeId,
  elementTypeCategory,
  array
) {
  cggl.setClass(array, arrayClass);
  array.castableTypeMap = castableTypeMap;
  array.typeMarker = typeMarkerFn;
  cggl.setElementTypeId(array, elementTypeId);
  cggl.setElementTypeCategory(array, elementTypeCategory);
  return array;
}

cggl.stampJavaTypeInfo_0 = function stampJavaTypeInfo_0(array, referenceType) {
  cggl.getElementTypeCategory(referenceType) != 10 &&
    stampJavaTypeInfo(
      jl.getClass__Ljava_lang_Class___devirtual$(referenceType),
      referenceType.castableTypeMap,
      cggl.getElementTypeId(referenceType),
      cggl.getElementTypeCategory(referenceType),
      array
    );
  return cggl.asArray_0(array);
};
function canCast(src_0, dstId) {
  if (instanceOfString(src_0)) {
    return !!stringCastMap[dstId];
  } else if (src_0.castableTypeMap) {
    return !!src_0.castableTypeMap[dstId];
  } else if (instanceOfDouble(src_0)) {
    return !!doubleCastMap[dstId];
  } else if (instanceOfBoolean(src_0)) {
    return !!booleanCastMap[dstId];
  }
  return false;
}

function castTo(src_0, dstId) {
  ji.checkCriticalType(src_0 == null || canCast(src_0, dstId));
  return src_0;
}

function castToArray(src_0) {
  var elementTypeCategory;
  ji.checkCriticalType(
    src_0 == null ||
      (Array.isArray(src_0) &&
        ((elementTypeCategory = cggl.getElementTypeCategory(src_0)),
        !(elementTypeCategory >= 14 && elementTypeCategory <= 16)))
  );
  return src_0;
}

function castToBoolean(src_0) {
  ji.checkCriticalType(src_0 == null || instanceOfBoolean(src_0));
  return src_0;
}

function castToDouble(src_0) {
  ji.checkCriticalType(src_0 == null || instanceOfDouble(src_0));
  return src_0;
}

function castToFunction(src_0) {
  ji.checkCriticalType(src_0 == null || cggl.isFunction(src_0));
  return src_0;
}

function castToJsArray(src_0) {
  ji.checkCriticalType(src_0 == null || Array.isArray(src_0));
  return src_0;
}

function castToJsObject(src_0) {
  ji.checkCriticalType(src_0 == null || cggl.isJsObject(src_0));
  return src_0;
}

function castToJso(src_0) {
  ji.checkCriticalType(
    src_0 == null ||
      (cggl.isJsObjectOrFunction(src_0) && !(src_0.typeMarker === typeMarkerFn))
  );
  return src_0;
}

function castToNative(src_0, jsType) {
  ji.checkCriticalType(src_0 == null || cggl.jsinstanceOf(src_0, jsType));
  return src_0;
}

function castToString(src_0) {
  ji.checkCriticalType(src_0 == null || instanceOfString(src_0));
  return src_0;
}

function hasJavaObjectVirtualDispatch(src_0) {
  return !Array.isArray(src_0) && src_0.typeMarker === typeMarkerFn;
}

function instanceOf(src_0, dstId) {
  return src_0 != null && canCast(src_0, dstId);
}

function instanceOfArray(src_0) {
  var elementTypeCategory;
  return (
    Array.isArray(src_0) &&
    ((elementTypeCategory = cggl.getElementTypeCategory(src_0)),
    !(elementTypeCategory >= 14 && elementTypeCategory <= 16))
  );
}

function instanceOfBoolean(src_0) {
  return typeof src_0 === "boolean";
}

function instanceOfDouble(src_0) {
  return typeof src_0 === "number";
}

function instanceOfJso(src_0) {
  return (
    src_0 != null &&
    cggl.isJsObjectOrFunction(src_0) &&
    !(src_0.typeMarker === typeMarkerFn)
  );
}

function instanceOfNative(src_0, jsType) {
  return cggl.jsinstanceOf(src_0, jsType);
}

function instanceOfString(src_0) {
  return typeof src_0 === "string";
}

cggl.isFunction = function isFunction(src_0) {
  return typeof src_0 === "function";
};
cggl.isJsObject = function isJsObject(src_0) {
  return typeof src_0 === "object" || typeof src_0 == "function";
};
cggl.isJsObjectOrFunction = function isJsObjectOrFunction(src_0) {
  return typeof src_0 === "object" || typeof src_0 === "function";
};
cggl.jsinstanceOf = function jsinstanceOf(obj, jsType) {
  return obj && jsType && obj instanceof jsType;
};
function maskUndefined(src_0) {
  return src_0 == null ? null : src_0;
}

function round_byte(x_0) {
  return (round_int(x_0) << 24) >> 24;
}

function round_int(x_0) {
  return Math.max(Math.min(x_0, $intern_1), -2147483648) | 0;
}

function round_short(x_0) {
  return (round_int(x_0) << 16) >> 16;
}

function throwClassCastExceptionUnlessNull(o) {
  ji.checkCriticalType(o == null);
  return o;
}

var booleanCastMap;
var doubleCastMap;
var stringCastMap;
cggl.getJavaException = function getJavaException(e) {
  return e && e.__java$exception;
};
function toJava(e) {
  var javaException;
  if (instanceOf(e, 25)) {
    return e;
  }
  javaException = cggl.getJavaException(e);
  if (!javaException) {
    javaException = new cggcc.JavaScriptException(e);
    cggcci.captureStackTrace(javaException);
  }
  return javaException;
}

function toJs(t) {
  return t.backingJsObject;
}

function add_1(a, b) {
  var result;
  if (cggl.isSmallLong0(a) && cggl.isSmallLong0(b)) {
    result =
      cggl.asDouble0(cggl.asSmallLong0(a)) +
      cggl.asDouble0(cggl.asSmallLong0(b));
    if ($intern_2 < result && result < $intern_3) {
      return cggl.createSmallLongEmul0(result);
    }
  }
  return cggl.createLongEmul(
    cggl.add_0(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      cggl.isSmallLong0(b)
        ? cggl.toBigLong(cggl.asSmallLong0(b))
        : cggl.asBigLong0(b)
    )
  );
}

function and_1(a, b) {
  return cggl.createLongEmul(
    cggl.and_0(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      cggl.isSmallLong0(b)
        ? cggl.toBigLong(cggl.asSmallLong0(b))
        : cggl.asBigLong0(b)
    )
  );
}

cggl.asBigLong0 = function asBigLong0(value_0) {
  return value_0;
};
cggl.asDouble0 = function asDouble0(value_0) {
  return value_0;
};
cggl.asSmallLong0 = function asSmallLong0(value_0) {
  return value_0;
};
cggl.coerceToInt0 = function coerceToInt0(value_0) {
  return value_0 | 0;
};
function compare_1(a, b) {
  var result;
  if (cggl.isSmallLong0(a) && cggl.isSmallLong0(b)) {
    result =
      cggl.asDouble0(cggl.asSmallLong0(a)) -
      cggl.asDouble0(cggl.asSmallLong0(b));
    if (!isNaN(result)) {
      return result;
    }
  }
  return cggl.compare_0(
    cggl.isSmallLong0(a)
      ? cggl.toBigLong(cggl.asSmallLong0(a))
      : cggl.asBigLong0(a),
    cggl.isSmallLong0(b)
      ? cggl.toBigLong(cggl.asSmallLong0(b))
      : cggl.asBigLong0(b)
  );
}

cggl.createBigLongEmul0 = function createBigLongEmul0(value_0) {
  return value_0;
};
cggl.createLongEmul = function createLongEmul(big_0) {
  var a2;
  a2 = cggl.getHNative(big_0);
  if (a2 == 0) {
    return cggl.createSmallLongEmul0(
      cggl.getLNative(big_0) + cggl.getMNative(big_0) * $intern_4
    );
  }
  if (a2 == $intern_5) {
    return cggl.createSmallLongEmul0(
      cggl.getLNative(big_0) + cggl.getMNative(big_0) * $intern_4 - $intern_3
    );
  }
  return cggl.createBigLongEmul0(big_0);
};
cggl.createSmallLongEmul0 = function createSmallLongEmul0(value_0) {
  return value_0;
};
function div(a, b) {
  var result;
  if (cggl.isSmallLong0(a) && cggl.isSmallLong0(b)) {
    result =
      cggl.asDouble0(cggl.asSmallLong0(a)) /
      cggl.asDouble0(cggl.asSmallLong0(b));
    if ($intern_2 < result && result < $intern_3) {
      return cggl.createSmallLongEmul0(
        result < 0 ? $wnd.Math.ceil(result) : $wnd.Math.floor(result)
      );
    }
  }
  return cggl.createLongEmul(
    cggl.divMod(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      cggl.isSmallLong0(b)
        ? cggl.toBigLong(cggl.asSmallLong0(b))
        : cggl.asBigLong0(b),
      false
    )
  );
}

function eq(a, b) {
  return compare_1(a, b) == 0;
}

function fromDouble_0(value_0) {
  if ($intern_2 < value_0 && value_0 < $intern_3) {
    return cggl.createSmallLongEmul0(
      value_0 < 0 ? $wnd.Math.ceil(value_0) : $wnd.Math.floor(value_0)
    );
  }
  return cggl.createLongEmul(cggl.fromDouble(value_0));
}

function fromInt(value_0) {
  return cggl.createSmallLongEmul0(value_0);
}

function gt(a, b) {
  return compare_1(a, b) > 0;
}

function gte_0(a, b) {
  return compare_1(a, b) >= 0;
}

cggl.isSafeIntegerRange = function isSafeIntegerRange(value_0) {
  return $intern_2 < value_0 && value_0 < $intern_3;
};
cggl.isSmallLong0 = function isSmallLong0(value_0) {
  return typeof value_0 === "number";
};
function lt(a, b) {
  return compare_1(a, b) < 0;
}

function lte(a, b) {
  return compare_1(a, b) <= 0;
}

function mod(a, b) {
  var result;
  if (cggl.isSmallLong0(a) && cggl.isSmallLong0(b)) {
    result =
      cggl.asDouble0(cggl.asSmallLong0(a)) %
      cggl.asDouble0(cggl.asSmallLong0(b));
    if ($intern_2 < result && result < $intern_3) {
      return cggl.createSmallLongEmul0(result);
    }
  }
  return cggl.createLongEmul(
    (cggl.divMod(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      cggl.isSmallLong0(b)
        ? cggl.toBigLong(cggl.asSmallLong0(b))
        : cggl.asBigLong0(b),
      true
    ),
    cggl.remainder_0)
  );
}

function mul_0(a, b) {
  var result;
  if (cggl.isSmallLong0(a) && cggl.isSmallLong0(b)) {
    result =
      cggl.asDouble0(cggl.asSmallLong0(a)) *
      cggl.asDouble0(cggl.asSmallLong0(b));
    if ($intern_2 < result && result < $intern_3) {
      return cggl.createSmallLongEmul0(result);
    }
  }
  return cggl.createLongEmul(
    cggl.mul(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      cggl.isSmallLong0(b)
        ? cggl.toBigLong(cggl.asSmallLong0(b))
        : cggl.asBigLong0(b)
    )
  );
}

function neg_0(a) {
  var result;
  if (cggl.isSmallLong0(a)) {
    result = 0 - cggl.asDouble0(cggl.asSmallLong0(a));
    if (!isNaN(result)) {
      return cggl.createSmallLongEmul0(result);
    }
  }
  return cggl.createLongEmul(cggl.neg(cggl.asBigLong0(a)));
}

function neq(a, b) {
  return compare_1(a, b) != 0;
}

function or_1(a, b) {
  return cggl.createLongEmul(
    cggl.or_0(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      cggl.isSmallLong0(b)
        ? cggl.toBigLong(cggl.asSmallLong0(b))
        : cggl.asBigLong0(b)
    )
  );
}

function shl_0(a, n) {
  return cggl.createLongEmul(
    cggl.shl(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      n
    )
  );
}

function shr_0(a, n) {
  return cggl.createLongEmul(
    cggl.shr(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      n
    )
  );
}

function shru_0(a, n) {
  return cggl.createLongEmul(
    cggl.shru(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      n
    )
  );
}

function sub_3(a, b) {
  var result;
  if (cggl.isSmallLong0(a) && cggl.isSmallLong0(b)) {
    result =
      cggl.asDouble0(cggl.asSmallLong0(a)) -
      cggl.asDouble0(cggl.asSmallLong0(b));
    if ($intern_2 < result && result < $intern_3) {
      return cggl.createSmallLongEmul0(result);
    }
  }
  return cggl.createLongEmul(
    cggl.sub_2(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      cggl.isSmallLong0(b)
        ? cggl.toBigLong(cggl.asSmallLong0(b))
        : cggl.asBigLong0(b)
    )
  );
}

cggl.toBigLong = function toBigLong(longValue) {
  var a0, a1, a3, value_0;
  value_0 = cggl.asDouble0(longValue);
  a3 = 0;
  if (value_0 < 0) {
    value_0 += $intern_3;
    a3 = $intern_5;
  }
  a1 = round_int(value_0 / $intern_4);
  a0 = round_int(value_0 - a1 * $intern_4);
  return cggl.create0(a0, a1, a3);
};
function toDouble_0(a) {
  var d;
  if (cggl.isSmallLong0(a)) {
    d = cggl.asDouble0(cggl.asSmallLong0(a));
    return d == -0 ? 0 : d;
  }
  return cggl.toDouble(cggl.asBigLong0(a));
}

function toInt_0(a) {
  if (cggl.isSmallLong0(a)) {
    return cggl.coerceToInt0(cggl.asDouble0(cggl.asSmallLong0(a)));
  }
  return cggl.toInt(cggl.asBigLong0(a));
}

function toString_6(a) {
  if (cggl.isSmallLong0(a)) {
    return "" + cggl.asDouble0(cggl.asSmallLong0(a));
  }
  return cggl.toString_5(cggl.asBigLong0(a));
}

function xor_0(a, b) {
  return cggl.createLongEmul(
    cggl.xor(
      cggl.isSmallLong0(a)
        ? cggl.toBigLong(cggl.asSmallLong0(a))
        : cggl.asBigLong0(a),
      cggl.isSmallLong0(b)
        ? cggl.toBigLong(cggl.asSmallLong0(b))
        : cggl.asBigLong0(b)
    )
  );
}

function $isInstance(instance) {
  var type_0;
  if (instance == null) {
    return false;
  }
  type_0 = typeof instance;
  return (
    jl.$equals_12(type_0, "boolean") ||
    jl.$equals_12(type_0, "number") ||
    jl.$equals_12(type_0, "string") ||
    instance.$implements__java_io_Serializable ||
    Array.isArray(instance)
  );
}

jl.$$init = function $$init(this$static) {
  this$static.stackTrace = initUnidimensionalArray(
    cggl.Ljava_lang_StackTraceElement_2_classLit,
    $intern_0,
    113,
    0,
    0,
    1
  );
};
jl.$addSuppressed = function $addSuppressed(this$static, exception) {
  ji.checkCriticalNotNull_0(exception, "Cannot suppress a null exception.");
  ji.checkCriticalArgument_0(
    exception != this$static,
    "Exception can not suppress itself."
  );
  if (this$static.disableSuppression) {
    return;
  }
  this$static.suppressedExceptions == null
    ? (this$static.suppressedExceptions = stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Throwable_2_classLit, 1),
        $intern_0,
        25,
        0,
        [exception]
      ))
    : (this$static.suppressedExceptions[
        this$static.suppressedExceptions.length
      ] = exception);
};
jl.$captureStackTrace = function $captureStackTrace(this$static) {
  cggcci.captureStackTrace(this$static);
};
jl.$constructJavaStackTrace = function $constructJavaStackTrace(this$static) {
  return cggcci.constructJavaStackTrace(this$static);
};
jl.$fillInStackTrace = function $fillInStackTrace(this$static) {
  if (this$static.writableStackTrace) {
    this$static.backingJsObject !== "__noinit__" &&
      this$static.initializeBackingError();
    this$static.stackTrace = null;
  }
  return this$static;
};
jl.$getCause = function $getCause(this$static) {
  return this$static.cause_0;
};
jl.$getMessage = function $getMessage(this$static) {
  return this$static.detailMessage;
};
jl.$linkBack = function $linkBack(this$static, error) {
  if (error instanceof Object) {
    try {
      error.__java$exception = this$static;
      if (
        navigator.userAgent.toLowerCase().indexOf("msie") != -1 &&
        $doc.documentMode < 9
      ) {
        return;
      }
      var throwable = this$static;
      Object.defineProperties(error, {
        cause: {
          get: function () {
            var cause = throwable.getCause();
            return cause && cause.getBackingJsObject();
          },
        },
        suppressed: {
          get: function () {
            return throwable.getBackingSuppressed();
          },
        },
      });
    } catch (ignored) {}
  }
};
jl.$printStackTraceImpl = function $printStackTraceImpl(
  this$static,
  out,
  ident
) {
  var t, t$array, t$index, t$max, theCause;
  jl.$printStackTraceItems(this$static);
  for (
    t$array =
      (this$static.suppressedExceptions == null &&
        (this$static.suppressedExceptions = initUnidimensionalArray(
          cggl.Ljava_lang_Throwable_2_classLit,
          $intern_0,
          25,
          0,
          0,
          1
        )),
      this$static.suppressedExceptions),
      t$index = 0,
      t$max = t$array.length;
    t$index < t$max;
    ++t$index
  ) {
    t = t$array[t$index];
    jl.$printStackTraceImpl(t, out, "\t" + ident);
  }
  theCause = this$static.cause_0;
  !!theCause && jl.$printStackTraceImpl(theCause, out, ident);
};
jl.$printStackTraceItems = function $printStackTraceItems(this$static) {
  var element$array, element$index, element$max;
  for (
    element$array =
      (this$static.stackTrace == null &&
        (this$static.stackTrace = jl.$constructJavaStackTrace(this$static)),
      this$static.stackTrace),
      element$index = 0,
      element$max = element$array.length;
    element$index < element$max;
    ++element$index
  );
};
jl.$setBackingJsObject = function $setBackingJsObject(
  this$static,
  backingJsObject
) {
  this$static.backingJsObject = backingJsObject;
  jl.$linkBack(this$static, backingJsObject);
};
jl.$toString_0 = function $toString_0(this$static) {
  return jl.$toString_1(this$static, this$static.getMessage_0());
};
jl.$toString_1 = function $toString_1(this$static, message) {
  var className;
  className = jl.$getName_0(this$static.___clazz);
  return message == null ? className : className + ": " + message;
};
jl.Throwable = function Throwable() {
  jl.$$init(this);
  jl.$fillInStackTrace(this);
  this.initializeBackingError();
};
jl.Throwable_0 = function Throwable_0(message) {
  jl.$$init(this);
  this.detailMessage = message;
  jl.$fillInStackTrace(this);
  this.initializeBackingError();
};
jl.Throwable_1 = function Throwable_1(message, cause) {
  jl.$$init(this);
  this.cause_0 = cause;
  this.detailMessage = message;
  jl.$fillInStackTrace(this);
  this.initializeBackingError();
};
jl.fixIE = function fixIE(e) {
  if (!("stack" in e)) {
    try {
      throw e;
    } catch (ignored) {}
  }
  return e;
};
function of(e) {
  var throwable;
  if (e != null) {
    throwable = e.__java$exception;
    if (throwable) {
      return throwable;
    }
  }
  return instanceOfNative(e, TypeError)
    ? new jl.NullPointerException_0(e)
    : new jl.JsException_0(e);
}

defineClass(25, 1, { 3: 1, 25: 1 });
_.createError = function createError(msg) {
  return new Error(msg);
};
_.getBackingJsObject = function getBackingJsObject() {
  return this.backingJsObject;
};
_.getBackingSuppressed = function getBackingSuppressed() {
  return jus.$toArray_6(
    jus.$map_0(
      ju.stream_4(
        (this.suppressedExceptions == null &&
          (this.suppressedExceptions = initUnidimensionalArray(
            cggl.Ljava_lang_Throwable_2_classLit,
            $intern_0,
            25,
            0,
            0,
            1
          )),
        this.suppressedExceptions)
      ),
      new jl.Throwable$lambda$0$Type()
    ),
    new jus.StreamImpl$0methodref$lambda$2$Type()
  );
};
_.getCause = function getCause() {
  return jl.$getCause(this);
};
_.getMessage_0 = function getMessage() {
  return jl.$getMessage(this);
};
_.initializeBackingError = function initializeBackingError() {
  jl.$setBackingJsObject(
    this,
    jl.fixIE(this.createError(jl.$toString_1(this, this.detailMessage)))
  );
  jl.$captureStackTrace(this);
};
_.toString_0 = function toString_3() {
  return jl.$toString_0(this);
};
_.backingJsObject = "__noinit__";
_.disableSuppression = false;
_.writableStackTrace = true;
jl.Exception = function Exception() {
  jl.Throwable.call(this);
};
jl.Exception_0 = function Exception_0(backingJsObject) {
  jl.$$init(this);
  jl.$fillInStackTrace(this);
  this.backingJsObject = backingJsObject;
  jl.$linkBack(this, backingJsObject);
  this.detailMessage =
    backingJsObject == null ? "null" : toString_7(backingJsObject);
};
jl.Exception_1 = function Exception_1(message) {
  jl.Throwable_0.call(this, message);
};
defineClass(41, 25, { 3: 1, 41: 1, 25: 1 });
jl.RuntimeException = function RuntimeException() {
  jl.Exception.call(this);
};
jl.RuntimeException_0 = function RuntimeException_0(backingJsObject) {
  jl.Exception_0.call(this, backingJsObject);
};
jl.RuntimeException_1 = function RuntimeException_1(message) {
  jl.Exception_1.call(this, message);
};
defineClass(26, 41, $intern_6, jl.RuntimeException_1);
jl.IndexOutOfBoundsException = function IndexOutOfBoundsException() {
  jl.RuntimeException.call(this);
};
jl.IndexOutOfBoundsException_0 = function IndexOutOfBoundsException_0(message) {
  jl.RuntimeException_1.call(this, message);
};
defineClass(
  109,
  26,
  $intern_6,
  jl.IndexOutOfBoundsException,
  jl.IndexOutOfBoundsException_0
);
jl.ArrayIndexOutOfBoundsException = function ArrayIndexOutOfBoundsException(
  msg
) {
  jl.IndexOutOfBoundsException_0.call(this, msg);
};
defineClass(335, 109, $intern_6, jl.ArrayIndexOutOfBoundsException);
jl.ArrayStoreException = function ArrayStoreException() {
  jl.RuntimeException.call(this);
};
jl.ArrayStoreException_0 = function ArrayStoreException_0(message) {
  jl.RuntimeException_1.call(this, message);
};
defineClass(
  365,
  26,
  $intern_6,
  jl.ArrayStoreException,
  jl.ArrayStoreException_0
);
function $isInstance_3(instance) {
  var type_0;
  type_0 = typeof instance;
  if (
    jl.$equals_12(type_0, "boolean") ||
    jl.$equals_12(type_0, "number") ||
    jl.$equals_12(type_0, "string")
  ) {
    return true;
  }
  return instance != null && instance.$implements__java_lang_Comparable;
}

jl.$clinit_Boolean = function $clinit_Boolean() {
  jl.$clinit_Boolean = emptyMethod;
  FALSE = ji.uncheckedCast(false);
  TRUE = ji.uncheckedCast(true);
};
jl.$booleanValue = function $booleanValue(this$static) {
  return ji.unsafeCastToBoolean(
    (ji.checkCriticalNotNull(this$static), this$static)
  );
};
jl.$compareTo_2 = function $compareTo_2(this$static, b) {
  return compare_3(
    ji.unsafeCastToBoolean((ji.checkCriticalNotNull(this$static), this$static)),
    ji.unsafeCastToBoolean((ji.checkCriticalNotNull(b), b))
  );
};
jl.$compareTo_3 = function $compareTo_3(this$static, b) {
  return jl.$compareTo_2(this$static, castToBoolean(b));
};
jl.$equals_8 = function $equals_8(this$static, o) {
  return (
    ji.checkCriticalNotNull(this$static),
    maskUndefined(this$static) === maskUndefined(o)
  );
};
jl.$getClass_570 = function $getClass_570() {
  return cggl.Ljava_lang_Boolean_2_classLit;
};
jl.$hashCode_8 = function $hashCode_8(this$static) {
  return ji.unsafeCastToBoolean(
    (ji.checkCriticalNotNull(this$static), this$static)
  )
    ? 1231
    : 1237;
};
function $isInstance_0(instance) {
  jl.$clinit_Boolean();
  return jl.$equals_12("boolean", typeof instance);
}

function compare_3(x_0, y_0) {
  jl.$clinit_Boolean();
  return x_0 == y_0 ? 0 : x_0 ? 1 : -1;
}

jl.compareTo_Ljava_lang_Object__I__devirtual$ =
  function compareTo_Ljava_lang_Object__I__devirtual$(this$static, other) {
    jl.$clinit_Boolean();
    return instanceOfString(this$static)
      ? jl.$compareTo_8(this$static, other)
      : instanceOfDouble(this$static)
      ? jl.$compareTo_5(this$static, other)
      : instanceOfBoolean(this$static)
      ? jl.$compareTo_3(this$static, other)
      : this$static.compareTo_0(other);
  };
booleanCastMap = { 3: 1, 337: 1, 33: 1 };
var FALSE;
var TRUE;
function $isInstance_1(instance) {
  if (jl.$equals_12(typeof instance, "string")) {
    return true;
  }
  return instance != null && instance.$implements__java_lang_CharSequence;
}

jl.$ensureNamesAreInitialized = function $ensureNamesAreInitialized(
  this$static
) {
  if (this$static.typeName != null) {
    return;
  }
  jl.initializeNames(this$static);
};
jl.$getName_0 = function $getName_0(this$static) {
  jl.$ensureNamesAreInitialized(this$static);
  return this$static.typeName;
};
jl.$isArray = function $isArray(this$static) {
  return (this$static.modifiers & 4) != 0;
};
jl.$isPrimitive = function $isPrimitive(this$static) {
  return (this$static.modifiers & 1) != 0;
};
jl.Class = function Class() {
  ++nextSequentialId;
  this.typeName = null;
  this.simpleName = null;
  this.packageName = null;
  this.compoundName = null;
  this.canonicalName = null;
  this.typeId = null;
  this.arrayLiterals = null;
};
jl.createClassObject = function createClassObject(
  packageName,
  compoundClassName
) {
  var clazz;
  clazz = new jl.Class();
  clazz.packageName = packageName;
  clazz.compoundName = compoundClassName;
  return clazz;
};
function createForClass(packageName, compoundClassName, typeId) {
  var clazz;
  clazz = jl.createClassObject(packageName, compoundClassName);
  jl.maybeSetClassLiteral(typeId, clazz);
  return clazz;
}

function createForEnum(
  packageName,
  compoundClassName,
  typeId,
  enumConstantsFunc
) {
  var clazz;
  clazz = jl.createClassObject(packageName, compoundClassName);
  jl.maybeSetClassLiteral(typeId, clazz);
  clazz.modifiers = enumConstantsFunc ? 8 : 0;
  return clazz;
}

function createForInterface(packageName, compoundClassName) {
  var clazz;
  clazz = jl.createClassObject(packageName, compoundClassName);
  clazz.modifiers = 2;
  return clazz;
}

function createForPrimitive(className, primitiveTypeId) {
  var clazz;
  clazz = jl.createClassObject("", className);
  clazz.typeId = primitiveTypeId;
  clazz.modifiers = 1;
  return clazz;
}

jl.getClassLiteralForArray_0 = function getClassLiteralForArray_0(
  leafClass,
  dimensions
) {
  var arrayLiterals = (leafClass.arrayLiterals = leafClass.arrayLiterals || []);
  return (
    arrayLiterals[dimensions] ||
    (arrayLiterals[dimensions] =
      leafClass.createClassLiteralForArray(dimensions))
  );
};
function getPrototypeForClass(clazz) {
  if (clazz.isPrimitive()) {
    return null;
  }
  var typeId = clazz.typeId;
  return prototypesByTypeId_0[typeId];
}

jl.initializeNames = function initializeNames(clazz) {
  if (clazz.isArray_0()) {
    var componentType = clazz.componentType;
    componentType.isPrimitive()
      ? (clazz.typeName = "[" + componentType.typeId)
      : !componentType.isArray_0()
      ? (clazz.typeName = "[L" + componentType.getName_0() + ";")
      : (clazz.typeName = "[" + componentType.getName_0());
    clazz.canonicalName = componentType.getCanonicalName() + "[]";
    clazz.simpleName = componentType.getSimpleName() + "[]";
    return;
  }
  var packageName = clazz.packageName;
  var compoundName = clazz.compoundName;
  compoundName = compoundName.split("/");
  clazz.typeName = jl.join_2(".", [packageName, jl.join_2("$", compoundName)]);
  clazz.canonicalName = jl.join_2(".", [
    packageName,
    jl.join_2(".", compoundName),
  ]);
  clazz.simpleName = compoundName[compoundName.length - 1];
};
jl.join_2 = function join_2(separator, strings) {
  var i = 0;
  while (!strings[i] || strings[i] == "") {
    i++;
  }
  var result = strings[i++];
  for (; i < strings.length; i++) {
    if (!strings[i] || strings[i] == "") {
      continue;
    }
    result += separator + strings[i];
  }
  return result;
};
jl.maybeSetClassLiteral = function maybeSetClassLiteral(typeId, clazz) {
  var proto;
  if (!typeId) {
    return;
  }
  clazz.typeId = typeId;
  var prototype_0 = getPrototypeForClass(clazz);
  if (!prototype_0) {
    prototypesByTypeId_0[typeId] = [clazz];
    return;
  }
  prototype_0.___clazz = clazz;
};
defineClass(331, 1, {}, jl.Class);
_.createClassLiteralForArray = function createClassLiteralForArray(dimensions) {
  var clazz;
  clazz = new jl.Class();
  clazz.modifiers = 4;
  dimensions > 1
    ? (clazz.componentType = jl.getClassLiteralForArray_0(this, dimensions - 1))
    : (clazz.componentType = this);
  return clazz;
};
_.getCanonicalName = function getCanonicalName() {
  jl.$ensureNamesAreInitialized(this);
  return this.canonicalName;
};
_.getName_0 = function getName_5() {
  return jl.$getName_0(this);
};
_.getSimpleName = function getSimpleName() {
  jl.$ensureNamesAreInitialized(this);
  return this.simpleName;
};
_.isArray_0 = function isArray() {
  return jl.$isArray(this);
};
_.isPrimitive = function isPrimitive() {
  return jl.$isPrimitive(this);
};
_.toString_0 = function toString_48() {
  return (
    ((this.modifiers & 2) != 0
      ? "interface "
      : (this.modifiers & 1) != 0
      ? ""
      : "class ") + (jl.$ensureNamesAreInitialized(this), this.typeName)
  );
};
_.modifiers = 0;
var nextSequentialId = 1;
jl.ClassCastException = function ClassCastException() {
  jl.RuntimeException.call(this);
};
jl.ClassCastException_0 = function ClassCastException_0() {
  jl.RuntimeException_1.call(this, null);
};
defineClass(350, 26, $intern_6, jl.ClassCastException, jl.ClassCastException_0);
function $isInstance_2(instance) {
  if (instance == null) {
    return false;
  }
  return instance.$implements__java_lang_Cloneable || Array.isArray(instance);
}

jl.$isInstance_4 = function $isInstance_4(instance) {
  return (
    jl.$equals_12("number", typeof instance) ||
    instanceOfNative(instance, $wnd.java.lang.Number$impl)
  );
};
jl.__parseAndValidateDouble = function __parseAndValidateDouble(s) {
  jl.floatRegex == null &&
    (jl.floatRegex = new RegExp(
      "^\\s*[+-]?(NaN|Infinity|((\\d+\\.?\\d*)|(\\.\\d+))([eE][+-]?\\d+)?[dDfF]?)\\s*$"
    ));
  if (!jl.floatRegex.test(s)) {
    throw toJs(new jl.NumberFormatException('For input string: "' + s + '"'));
  }
  return parseFloat(s);
};
jl.__parseAndValidateInt = function __parseAndValidateInt(
  s,
  lowerBound,
  upperBound
) {
  var i, isTooLow, length_0, startIndex, toReturn;
  if (s == null) {
    throw toJs(new jl.NumberFormatException("null"));
  }
  length_0 = ji.uncheckedCast(s).length;
  startIndex =
    length_0 > 0 &&
    (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(s).length),
    ji.uncheckedCast(s).charCodeAt(0) == 45 ||
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(s).length),
      ji.uncheckedCast(s).charCodeAt(0) == 43))
      ? 1
      : 0;
  for (i = startIndex; i < length_0; i++) {
    if (
      digit_0(
        (ji.checkCriticalStringElementIndex(i, ji.uncheckedCast(s).length),
        ji.uncheckedCast(s).charCodeAt(i))
      ) == -1
    ) {
      throw toJs(new jl.NumberFormatException('For input string: "' + s + '"'));
    }
  }
  toReturn = parseInt(s, 10);
  isTooLow = toReturn < lowerBound;
  if (isNaN(toReturn)) {
    throw toJs(new jl.NumberFormatException('For input string: "' + s + '"'));
  } else if (isTooLow || toReturn > upperBound) {
    throw toJs(new jl.NumberFormatException('For input string: "' + s + '"'));
  }
  return toReturn;
};
jl.__parseAndValidateLong = function __parseAndValidateLong(s) {
  var c,
    firstTime,
    head,
    i,
    length_0,
    maxDigits,
    minValue,
    negative,
    orig,
    radixPower,
    toReturn;
  if (s == null) {
    throw toJs(new jl.NumberFormatException("null"));
  }
  orig = s;
  length_0 = ji.uncheckedCast(s).length;
  negative = false;
  if (length_0 > 0) {
    c =
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(s).length),
      ji.uncheckedCast(s).charCodeAt(0));
    if (c == 45 || c == 43) {
      s = ji.uncheckedCast(s).substr(1);
      --length_0;
      negative = c == 45;
    }
  }
  if (length_0 == 0) {
    throw toJs(
      new jl.NumberFormatException('For input string: "' + orig + '"')
    );
  }
  while (
    ji.uncheckedCast(s).length > 0 &&
    (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(s).length),
    ji.uncheckedCast(s).charCodeAt(0) == 48)
  ) {
    s = ji.uncheckedCast(s).substr(1);
    --length_0;
  }
  if (length_0 > (jl.$clinit_Number$__ParseLong(), jl.maxLengthForRadix)[10]) {
    throw toJs(
      new jl.NumberFormatException('For input string: "' + orig + '"')
    );
  }
  for (i = 0; i < length_0; i++) {
    if (
      digit_0(
        (ji.checkCriticalStringElementIndex(i, ji.uncheckedCast(s).length),
        ji.uncheckedCast(s).charCodeAt(i))
      ) == -1
    ) {
      throw toJs(
        new jl.NumberFormatException('For input string: "' + orig + '"')
      );
    }
  }
  toReturn = 0;
  maxDigits = jl.maxDigitsForRadix[10];
  radixPower = fromInt(jl.maxDigitsRadixPower[10]);
  minValue = neg_0(jl.maxValueForRadix[10]);
  firstTime = true;
  head = length_0 % maxDigits;
  if (head > 0) {
    toReturn = fromInt(-parseInt(ji.uncheckedCast(s).substr(0, head), 10));
    s = ji.uncheckedCast(s).substr(head);
    length_0 -= head;
    firstTime = false;
  }
  while (length_0 >= maxDigits) {
    head = parseInt(ji.uncheckedCast(s).substr(0, maxDigits), 10);
    s = ji.uncheckedCast(s).substr(maxDigits);
    length_0 -= maxDigits;
    if (firstTime) {
      firstTime = false;
    } else {
      if (compare_1(toReturn, minValue) < 0) {
        throw toJs(
          new jl.NumberFormatException('For input string: "' + orig + '"')
        );
      }
      toReturn = mul_0(toReturn, radixPower);
    }
    toReturn = sub_3(toReturn, cggl.createSmallLongEmul0(head));
  }
  if (compare_1(toReturn, 0) > 0) {
    throw toJs(
      new jl.NumberFormatException('For input string: "' + orig + '"')
    );
  }
  if (!negative) {
    toReturn = neg_0(toReturn);
    if (compare_1(toReturn, 0) < 0) {
      throw toJs(
        new jl.NumberFormatException('For input string: "' + orig + '"')
      );
    }
  }
  return toReturn;
};
jl.doubleValue__D__devirtual$ = function doubleValue__D__devirtual$(
  this$static
) {
  return instanceOfDouble(this$static)
    ? jl.$doubleValue(this$static)
    : this$static.doubleValue_0();
};
jl.longValue__J__devirtual$ = function longValue__J__devirtual$(this$static) {
  return instanceOfDouble(this$static)
    ? jl.$longValue(this$static)
    : this$static.longValue_0();
};
defineClass(114, 1, { 3: 1, 114: 1 });
jl.$compareTo_4 = function $compareTo_4(this$static, b) {
  return compare_4(
    ji.unsafeCastToDouble((ji.checkCriticalNotNull(this$static), this$static)),
    ji.unsafeCastToDouble((ji.checkCriticalNotNull(b), b))
  );
};
jl.$compareTo_5 = function $compareTo_5(this$static, b) {
  return jl.$compareTo_4(this$static, castToDouble(b));
};
jl.$doubleValue = function $doubleValue(this$static) {
  return ji.unsafeCastToDouble(
    (ji.checkCriticalNotNull(this$static), this$static)
  );
};
jl.$equals_9 = function $equals_9(this$static, o) {
  return (
    ji.checkCriticalNotNull(this$static),
    maskUndefined(this$static) === maskUndefined(o)
  );
};
jl.$getClass_571 = function $getClass_571() {
  return cggl.Ljava_lang_Double_2_classLit;
};
jl.$hashCode_9 = function $hashCode_9(this$static) {
  return round_int(
    ji.unsafeCastToDouble((ji.checkCriticalNotNull(this$static), this$static))
  );
};
jl.$intValue = function $intValue(this$static) {
  return round_int(
    ji.unsafeCastToDouble((ji.checkCriticalNotNull(this$static), this$static))
  );
};
function $isInstance_5(instance) {
  return jl.$equals_12("number", typeof instance);
}

jl.$longValue = function $longValue(this$static) {
  return fromDouble_0(
    ji.unsafeCastToDouble((ji.checkCriticalNotNull(this$static), this$static))
  );
};
function compare_4(x_0, y_0) {
  if (x_0 < y_0) {
    return -1;
  }
  if (x_0 > y_0) {
    return 1;
  }
  if (x_0 == y_0) {
    return x_0 == 0 ? compare_4(1 / x_0, 1 / y_0) : 0;
  }
  return isNaN(x_0) ? (isNaN(y_0) ? 0 : 1) : -1;
}

doubleCastMap = { 3: 1, 33: 1, 392: 1, 114: 1 };
jl.$compareTo_0 = function $compareTo_0(this$static, other) {
  return this$static.ordinal_0 - other.ordinal_0;
};
jl.$name = function $name(this$static) {
  return this$static.name_0 != null
    ? this$static.name_0
    : "" + this$static.ordinal_0;
};
jl.$ordinal = function $ordinal(this$static) {
  return this$static.ordinal_0;
};
function Enum(name_0, ordinal) {
  this.name_0 = name_0;
  this.ordinal_0 = ordinal;
}

function createValueOfMap(enumConstants) {
  var result, value_0, value$array, value$index, value$max;
  result = {};
  for (
    value$array = enumConstants,
      value$index = 0,
      value$max = value$array.length;
    value$index < value$max;
    ++value$index
  ) {
    value_0 = value$array[value$index];
    jl.put0(
      result,
      ":" + (value_0.name_0 != null ? value_0.name_0 : "" + value_0.ordinal_0),
      value_0
    );
  }
  return result;
}

jl.get0 = function get0(map_0, name_0) {
  return map_0[name_0];
};
jl.put0 = function put0(map_0, name_0, value_0) {
  map_0[name_0] = value_0;
};
function valueOf_3(map_0, name_0) {
  var result;
  ji.checkCriticalNotNull(name_0);
  result = jl.get0(map_0, ":" + name_0);
  ji.checkCriticalArgument_1(
    !!result,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
      $intern_7,
      1,
      5,
      [name_0]
    )
  );
  return result;
}

defineClass(37, 1, { 3: 1, 33: 1, 37: 1 });
_.compareTo_0 = function compareTo_1(other) {
  return jl.$compareTo_0(this, castTo(other, 37));
};
_.compareTo = function compareTo_0(other) {
  return jl.$compareTo_0(this, other);
};
_.equals = function equals_3(other) {
  return this === other;
};
_.equals_0 = function (other) {
  return this.equals(other);
};
_.hashCode = function hashCode_4() {
  return ji.getHashCode_1(this);
};
_.hashCode_1 = function () {
  return this.hashCode();
};
_.name = function name_2() {
  return jl.$name(this);
};
_.ordinal = function ordinal_0() {
  return jl.$ordinal(this);
};
_.toString = function toString_13() {
  return this.name_0 != null ? this.name_0 : "" + this.ordinal_0;
};
_.toString_0 = function () {
  return this.toString();
};
_.ordinal_0 = 0;
jl.IllegalArgumentException = function IllegalArgumentException() {
  jl.RuntimeException.call(this);
};
jl.IllegalArgumentException_0 = function IllegalArgumentException_0(message) {
  jl.RuntimeException_1.call(this, message);
};
defineClass(
  19,
  26,
  { 3: 1, 41: 1, 19: 1, 26: 1, 25: 1 },
  jl.IllegalArgumentException,
  jl.IllegalArgumentException_0
);
jl.IllegalStateException = function IllegalStateException() {
  jl.RuntimeException.call(this);
};
jl.IllegalStateException_0 = function IllegalStateException_0(s) {
  jl.RuntimeException_1.call(this, s);
};
defineClass(
  45,
  26,
  $intern_6,
  jl.IllegalStateException,
  jl.IllegalStateException_0
);
jl.$compareTo_6 = function $compareTo_6(this$static, b) {
  return compare_5(this$static.value_0, b.value_0);
};
jl.$equals_10 = function $equals_10(this$static, o) {
  return instanceOf(o, 98) && castTo(o, 98).value_0 == this$static.value_0;
};
jl.$hashCode_10 = function $hashCode_10(this$static) {
  return this$static.value_0;
};
jl.Integer = function Integer(value_0) {
  this.value_0 = value_0;
};
function compare_5(x_0, y_0) {
  return x_0 < y_0 ? -1 : x_0 > y_0 ? 1 : 0;
}

function numberOfLeadingZeros_0(i) {
  var m, n, y_0;
  if (i < 0) {
    return 0;
  } else if (i == 0) {
    return 32;
  } else {
    y_0 = -(i >> 16);
    m = (y_0 >> 16) & 16;
    n = 16 - m;
    i = i >> m;
    y_0 = i - 256;
    m = (y_0 >> 16) & 8;
    n += m;
    i <<= m;
    y_0 = i - 4096;
    m = (y_0 >> 16) & 4;
    n += m;
    i <<= m;
    y_0 = i - 16384;
    m = (y_0 >> 16) & 2;
    n += m;
    i <<= m;
    y_0 = i >> 14;
    m = y_0 & ~(y_0 >> 1);
    return n + 2 - m;
  }
}

function numberOfTrailingZeros(i) {
  var r, rtn;
  if (i == 0) {
    return 32;
  } else {
    rtn = 0;
    for (r = 1; (r & i) == 0; r <<= 1) {
      ++rtn;
    }
    return rtn;
  }
}

jl.toUnsigned = function toUnsigned(value_0) {
  return value_0 >>> 0;
};
jl.valueOf_29 = function valueOf_29(i) {
  var rebase, result;
  if (i > -129 && i < 128) {
    rebase = i + 128;
    result = (jl.$clinit_Integer$BoxedValues(), jl.boxedValues)[rebase];
    !result && (result = jl.boxedValues[rebase] = new jl.Integer(i));
    return result;
  }
  return new jl.Integer(i);
};
defineClass(98, 114, { 3: 1, 33: 1, 98: 1, 114: 1 }, jl.Integer);
_.compareTo_0 = function compareTo_3(b) {
  return jl.$compareTo_6(this, castTo(b, 98));
};
_.doubleValue_0 = function doubleValue() {
  return this.value_0;
};
_.equals_0 = function equals_38(o) {
  return jl.$equals_10(this, o);
};
_.hashCode_1 = function hashCode_38() {
  return jl.$hashCode_10(this);
};
_.longValue_0 = function longValue_0() {
  return fromInt(this.value_0);
};
_.toString_0 = function toString_49() {
  return "" + this.value_0;
};
_.value_0 = 0;
jl.$forEach_2 = function $forEach_2(this$static, action) {
  var t, t$iterator;
  ji.checkCriticalNotNull(action);
  for (t$iterator = this$static.iterator_0(); t$iterator.hasNext_1(); ) {
    t = t$iterator.next_1();
    action.accept(t);
  }
};
jl.JsException = function JsException() {
  jl.RuntimeException.call(this);
};
jl.JsException_0 = function JsException_0(backingJsObject) {
  jl.RuntimeException_0.call(this, backingJsObject);
};
jl.JsException_1 = function JsException_1(msg) {
  jl.RuntimeException_1.call(this, msg);
};
defineClass(195, 26, $intern_6, jl.JsException_0);
jl.max_1 = function max_1(x_0, y_0) {
  return compare_1(x_0, y_0) > 0 ? x_0 : y_0;
};
jl.min_1 = function min_1(x_0, y_0) {
  return compare_1(x_0, y_0) < 0 ? x_0 : y_0;
};
jl.signum = function signum(d) {
  return d == 0 || isNaN(d) ? d : d < 0 ? -1 : 1;
};
defineClass(4684, 1, {});
jl.NullPointerException = function NullPointerException() {
  jl.JsException.call(this);
};
jl.NullPointerException_0 = function NullPointerException_0(typeError) {
  jl.JsException_0.call(this, typeError);
};
jl.NullPointerException_1 = function NullPointerException_1(message) {
  jl.JsException_1.call(this, message);
};
defineClass(
  194,
  195,
  $intern_6,
  jl.NullPointerException,
  jl.NullPointerException_0,
  jl.NullPointerException_1
);
_.createError = function createError_0(msg) {
  return new TypeError(msg);
};
jl.$charAt_0 = function $charAt_0(this$static, index_0) {
  ji.checkCriticalStringElementIndex(
    index_0,
    ji.uncheckedCast(this$static).length
  );
  return ji.uncheckedCast(this$static).charCodeAt(index_0);
};
jl.$compareTo_8 = function $compareTo_8(this$static, other) {
  return jl.$compareTo_9(this$static, castToString(other));
};
jl.$compareTo_9 = function $compareTo_9(this$static, other) {
  var a, b;
  a = ji.unsafeCastToDouble(
    (ji.checkCriticalNotNull(this$static), this$static)
  );
  b = ji.unsafeCastToDouble((ji.checkCriticalNotNull(other), other));
  return a == b ? 0 : a < b ? -1 : 1;
};
jl.$compareToIgnoreCase = function $compareToIgnoreCase(this$static, other) {
  return jl.$compareTo_9(
    ji.uncheckedCast(this$static).toLowerCase(),
    ji.uncheckedCast(other).toLowerCase()
  );
};
jl.$create_1 = function $create_1(bytes) {
  return jl.valueOf_32(ji.$decodeString(bytes, bytes.length));
};
jl.$endsWith = function $endsWith(this$static, suffix) {
  var suffixlength;
  suffixlength = ji.uncheckedCast(suffix).length;
  return jl.$equals_12(
    ji
      .uncheckedCast(this$static)
      .substr(
        ji.uncheckedCast(this$static).length - suffixlength,
        suffixlength
      ),
    suffix
  );
};
jl.$equals_12 = function $equals_12(this$static, other) {
  return (
    ji.checkCriticalNotNull(this$static),
    maskUndefined(this$static) === maskUndefined(other)
  );
};
jl.$equalsIgnoreCase = function $equalsIgnoreCase(this$static, other) {
  ji.checkCriticalNotNull(this$static);
  if (other == null) {
    return false;
  }
  if (jl.$equals_12(this$static, other)) {
    return true;
  }
  return (
    ji.uncheckedCast(this$static).length == ji.uncheckedCast(other).length &&
    jl.$equals_12(
      ji.uncheckedCast(this$static).toLowerCase(),
      ji.uncheckedCast(other).toLowerCase()
    )
  );
};
jl.$getClass_572 = function $getClass_572() {
  return cggl.Ljava_lang_String_2_classLit;
};
jl.$hashCode_12 = function $hashCode_12(this$static) {
  return ji.getHashCode_2(this$static);
};
jl.$indexOf = function $indexOf(this$static, str) {
  return ji.uncheckedCast(this$static).indexOf(str);
};
jl.$indexOf_0 = function $indexOf_0(this$static, str, startIndex) {
  return ji.uncheckedCast(this$static).indexOf(str, startIndex);
};
function $isInstance_6(instance) {
  return jl.$equals_12("string", typeof instance);
}

jl.$lastIndexOf = function $lastIndexOf(this$static, str) {
  return ji.uncheckedCast(this$static).lastIndexOf(str);
};
jl.$lastIndexOf_0 = function $lastIndexOf_0(this$static, str, start_0) {
  return ji.uncheckedCast(this$static).lastIndexOf(str, start_0);
};
jl.$replaceAll = function $replaceAll(this$static, regex, replace) {
  replace = jl.translateReplaceString(replace);
  return ji.uncheckedCast(this$static).replace(new RegExp(regex, "g"), replace);
};
jl.$split = function $split(this$static, regex) {
  var compiled,
    count,
    lastNonEmpty,
    lastTrail,
    matchIndex,
    matchObj,
    out,
    trail;
  compiled = new RegExp(regex, "g");
  out = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    0,
    6,
    1
  );
  count = 0;
  trail = this$static;
  lastTrail = null;
  while (true) {
    matchObj = compiled.exec(trail);
    if (matchObj == null || trail == "") {
      out[count] = trail;
      break;
    } else {
      matchIndex = matchObj.index;
      out[count] = ji.uncheckedCast(trail).substr(0, matchIndex);
      trail = jl.$substring_0(
        trail,
        matchIndex + ji.uncheckedCast(ji.uncheckedCast(matchObj)[0]).length,
        ji.uncheckedCast(trail).length
      );
      compiled.lastIndex = 0;
      if (lastTrail == trail) {
        out[count] = ji.uncheckedCast(trail).substr(0, 1);
        trail = ji.uncheckedCast(trail).substr(1);
      }
      lastTrail = trail;
      ++count;
    }
  }
  if (ji.uncheckedCast(this$static).length > 0) {
    lastNonEmpty = out.length;
    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == "") {
      --lastNonEmpty;
    }
    lastNonEmpty < out.length && (ji.uncheckedCast(out).length = lastNonEmpty);
  }
  return out;
};
jl.$startsWith_0 = function $startsWith_0(this$static, prefix) {
  return jl.$equals_12(
    ji.uncheckedCast(this$static).substr(0, ji.uncheckedCast(prefix).length),
    prefix
  );
};
jl.$startsWith_1 = function $startsWith_1(this$static, prefix, toffset) {
  return (
    toffset >= 0 &&
    jl.$equals_12(
      ji
        .uncheckedCast(this$static)
        .substr(toffset, ji.uncheckedCast(prefix).length),
      prefix
    )
  );
};
jl.$substring = function $substring(this$static, beginIndex) {
  return ji.uncheckedCast(this$static).substr(beginIndex);
};
jl.$substring_0 = function $substring_0(this$static, beginIndex, endIndex) {
  return ji
    .uncheckedCast(this$static)
    .substr(beginIndex, endIndex - beginIndex);
};
jl.$toLowerCase = function $toLowerCase(this$static, locale) {
  return locale == (ju.$clinit_Locale(), ju.$clinit_Locale(), ju.defaultLocale)
    ? ji.uncheckedCast(this$static).toLocaleLowerCase()
    : ji.uncheckedCast(this$static).toLowerCase();
};
jl.$trim = function $trim(this$static) {
  var end, length_0, start_0;
  length_0 = ji.uncheckedCast(this$static).length;
  start_0 = 0;
  while (
    start_0 < length_0 &&
    (ji.checkCriticalStringElementIndex(
      start_0,
      ji.uncheckedCast(this$static).length
    ),
    ji.uncheckedCast(this$static).charCodeAt(start_0) <= 32)
  ) {
    ++start_0;
  }
  end = length_0;
  while (
    end > start_0 &&
    (ji.checkCriticalStringElementIndex(
      end - 1,
      ji.uncheckedCast(this$static).length
    ),
    ji.uncheckedCast(this$static).charCodeAt(end - 1) <= 32)
  ) {
    --end;
  }
  return start_0 > 0 || end < length_0
    ? ji.uncheckedCast(this$static).substr(start_0, end - start_0)
    : this$static;
};
jl.fromCharCode = function fromCharCode(array) {
  return String.fromCharCode.apply(null, array);
};
function fromCodePoint(codePoint) {
  var hiSurrogate, loSurrogate;
  if (codePoint >= $intern_9) {
    hiSurrogate =
      (55296 + (((codePoint - $intern_9) >> 10) & 1023)) & $intern_10;
    loSurrogate = (56320 + ((codePoint - $intern_9) & 1023)) & $intern_10;
    return (
      String.fromCharCode(hiSurrogate) + ("" + String.fromCharCode(loSurrogate))
    );
  } else {
    return String.fromCharCode(codePoint & $intern_10);
  }
}

jl.translateReplaceString = function translateReplaceString(replaceStr) {
  var pos;
  pos = 0;
  while (0 <= (pos = ji.uncheckedCast(replaceStr).indexOf("\\", pos))) {
    ji.checkCriticalStringElementIndex(
      pos + 1,
      ji.uncheckedCast(replaceStr).length
    );
    ji.uncheckedCast(replaceStr).charCodeAt(pos + 1) == 36
      ? (replaceStr =
          ji.uncheckedCast(replaceStr).substr(0, pos) +
          "$" +
          jl.$substring(replaceStr, ++pos))
      : (replaceStr =
          ji.uncheckedCast(replaceStr).substr(0, pos) +
          ("" + jl.$substring(replaceStr, ++pos)));
  }
  return replaceStr;
};
function valueOf_31(x_0) {
  return x_0 == null ? "null" : toString_7(x_0);
}

jl.valueOf_32 = function valueOf_32(x_0) {
  return jl.valueOf_33(x_0, 0, x_0.length);
};
jl.valueOf_33 = function valueOf_33(x_0, offset, count) {
  var batchEnd, batchStart, end, s;
  end = offset + count;
  ji.checkCriticalStringBounds(offset, end, x_0.length);
  s = "";
  for (batchStart = offset; batchStart < end; ) {
    batchEnd = $wnd.Math.min(batchStart + 10000, end);
    s += jl.fromCharCode(ji.uncheckedCast(x_0).slice(batchStart, batchEnd));
    batchStart = batchEnd;
  }
  return s;
};
stringCastMap = { 3: 1, 278: 1, 33: 1, 2: 1 };
jl.StringIndexOutOfBoundsException = function StringIndexOutOfBoundsException(
  message
) {
  jl.IndexOutOfBoundsException_0.call(this, message);
};
defineClass(357, 109, $intern_6, jl.StringIndexOutOfBoundsException);
jl.Throwable$lambda$0$Type = function Throwable$lambda$0$Type() {};
defineClass(377, 1, {}, jl.Throwable$lambda$0$Type);
_.apply_1 = function apply_250(arg0) {
  return castTo(arg0, 25).backingJsObject;
};
jl.UnsupportedOperationException = function UnsupportedOperationException() {
  jl.RuntimeException.call(this);
};
jl.UnsupportedOperationException_0 = function UnsupportedOperationException_0(
  message
) {
  jl.RuntimeException_1.call(this, message);
};
defineClass(
  46,
  26,
  $intern_6,
  jl.UnsupportedOperationException,
  jl.UnsupportedOperationException_0
);
ju.$spliterator_2 = function $spliterator_2(this$static) {
  return new ju.Spliterators$IteratorSpliterator(this$static, 0);
};
ju.$stream_0 = function $stream_0(this$static) {
  return new jus.StreamImpl(null, this$static.spliterator_0());
};
ju.$addAll = function $addAll(this$static, c) {
  var changed, e, e$iterator;
  ji.checkCriticalNotNull(c);
  changed = false;
  for (e$iterator = c.iterator_0(); e$iterator.hasNext_1(); ) {
    e = e$iterator.next_1();
    changed = changed | this$static.add(e);
  }
  return changed;
};
ju.$advanceToFind = function $advanceToFind(this$static, o, remove) {
  var e, iter;
  for (iter = this$static.iterator_0(); iter.hasNext_1(); ) {
    e = iter.next_1();
    if (
      maskUndefined(o) === maskUndefined(e) ||
      (o != null && jl.equals_Ljava_lang_Object__Z__devirtual$(o, e))
    ) {
      remove && iter.remove_0();
      return true;
    }
  }
  return false;
};
ju.$containsAll = function $containsAll(this$static, c) {
  var e, e$iterator;
  ji.checkCriticalNotNull(c);
  for (e$iterator = c.iterator_0(); e$iterator.hasNext_1(); ) {
    e = e$iterator.next_1();
    if (!this$static.contains(e)) {
      return false;
    }
  }
  return true;
};
ju.$forEach_0 = function $forEach_0(this$static, action) {
  jl.$forEach_2(this$static, action);
};
ju.$spliterator = function $spliterator(this$static) {
  return new ju.Spliterators$IteratorSpliterator(this$static, 0);
};
ju.$stream = function $stream(this$static) {
  return new jus.StreamImpl(null, this$static.spliterator_0());
};
ju.$toArray = function $toArray(this$static) {
  return this$static.toArray_0(
    initUnidimensionalArray(
      cggl.Ljava_lang_Object_2_classLit,
      $intern_7,
      1,
      this$static.size(),
      5,
      1
    )
  );
};
ju.$toArray_0 = function $toArray_0(this$static, a) {
  var i, it, result, size_0;
  size_0 = this$static.size();
  a.length < size_0 && (a = ji.stampJavaTypeInfo_1(new Array(size_0), a));
  result = a;
  it = this$static.iterator_0();
  for (i = 0; i < size_0; ++i) {
    setCheck(result, i, it.next_1());
  }
  a.length > size_0 && setCheck(a, size_0, null);
  return a;
};
ju.$toString_11 = function $toString_11(this$static) {
  var e, e$iterator, joiner;
  joiner = new ju.StringJoiner(", ", "[", "]");
  for (e$iterator = this$static.iterator_0(); e$iterator.hasNext_1(); ) {
    e = e$iterator.next_1();
    ju.$add_1(
      joiner,
      e === this$static
        ? "(this Collection)"
        : e == null
        ? "null"
        : toString_7(e)
    );
  }
  return !joiner.builder
    ? joiner.emptyValue
    : ji.uncheckedCast(joiner.suffix).length == 0
    ? joiner.builder.string
    : joiner.builder.string + ("" + joiner.suffix);
};
defineClass(908, 1, { 53: 1 });
_.forEach_0 = function forEach_1(action) {
  ju.$forEach_0(this, action);
};
_.spliterator_0 = function spliterator_0() {
  return ju.$spliterator(this);
};
_.stream_0 = function stream_2() {
  return ju.$stream(this);
};
_.add = function add_2(o) {
  throw toJs(
    new jl.UnsupportedOperationException_0(
      "Add not supported on this collection"
    )
  );
};
_.addAll = function addAll(c) {
  return ju.$addAll(this, c);
};
_.clear = function clear_0() {
  var iter;
  for (iter = this.iterator_0(); iter.hasNext_1(); ) {
    iter.next_1();
    iter.remove_0();
  }
};
_.contains = function contains_1(o) {
  return ju.$advanceToFind(this, o, false);
};
_.containsAll = function containsAll(c) {
  return ju.$containsAll(this, c);
};
_.isEmpty = function isEmpty() {
  return this.size() == 0;
};
_.remove = function remove_4(o) {
  return ju.$advanceToFind(this, o, true);
};
_.removeAll = function removeAll(c) {
  var changed, iter, o;
  ji.checkCriticalNotNull(c);
  changed = false;
  for (iter = this.iterator_0(); iter.hasNext_1(); ) {
    o = iter.next_1();
    if (c.contains(o)) {
      iter.remove_0();
      changed = true;
    }
  }
  return changed;
};
_.retainAll = function retainAll(c) {
  var changed, iter, o;
  ji.checkCriticalNotNull(c);
  changed = false;
  for (iter = this.iterator_0(); iter.hasNext_1(); ) {
    o = iter.next_1();
    if (!c.contains(o)) {
      iter.remove_0();
      changed = true;
    }
  }
  return changed;
};
_.toArray = function toArray() {
  return ju.$toArray(this);
};
_.toArray_0 = function toArray_0(a) {
  return ju.$toArray_0(this, a);
};
_.toString_0 = function toString_37() {
  return ju.$toString_11(this);
};
ju.$spliterator_4 = function $spliterator_4(this$static) {
  return new ju.Spliterators$IteratorSpliterator(this$static, 16);
};
ju.$equals_15 = function $equals_15(this$static, o) {
  var elem, elem$iterator, elemOther, iterOther, other;
  if (o === this$static) {
    return true;
  }
  if (!instanceOf(o, 79)) {
    return false;
  }
  other = castTo(o, 79);
  if (this$static.size() != other.size()) {
    return false;
  }
  iterOther = other.iterator_0();
  for (elem$iterator = this$static.iterator_0(); elem$iterator.hasNext_1(); ) {
    elem = elem$iterator.next_1();
    elemOther = iterOther.next_1();
    if (
      !(
        maskUndefined(elem) === maskUndefined(elemOther) ||
        (elem != null &&
          jl.equals_Ljava_lang_Object__Z__devirtual$(elem, elemOther))
      )
    ) {
      return false;
    }
  }
  return true;
};
ju.$hashCode_15 = function $hashCode_15(this$static) {
  return ju.hashCode_62(this$static);
};
ju.$indexOf_1 = function $indexOf_1(this$static, toFind) {
  var i, n;
  for (i = 0, n = this$static.size(); i < n; ++i) {
    if (ju.equals_68(toFind, this$static.getAtIndex(i))) {
      return i;
    }
  }
  return -1;
};
ju.$iterator_5 = function $iterator_5(this$static) {
  return new ju.AbstractList$IteratorImpl(this$static);
};
ju.$spliterator_1 = function $spliterator_1(this$static) {
  return new ju.Spliterators$IteratorSpliterator(this$static, 16);
};
ju.$subList = function $subList(this$static, fromIndex, toIndex) {
  return new ju.AbstractList$SubList(this$static, fromIndex, toIndex);
};
defineClass(920, 908, $intern_11);
_.spliterator_0 = function spliterator_2() {
  return ju.$spliterator_1(this);
};
_.addAtIndex = function add_7(index_0, element) {
  throw toJs(
    new jl.UnsupportedOperationException_0("Add not supported on this list")
  );
};
_.add = function add_8(obj) {
  this.addAtIndex(this.size(), obj);
  return true;
};
_.addAllAtIndex = function addAll_0(index_0, c) {
  var changed, e, e$iterator;
  ji.checkCriticalNotNull(c);
  changed = false;
  for (e$iterator = c.iterator_0(); e$iterator.hasNext_1(); ) {
    e = e$iterator.next_1();
    this.addAtIndex(index_0++, e);
    changed = true;
  }
  return changed;
};
_.clear = function clear_4() {
  this.removeRange_0(0, this.size());
};
_.equals_0 = function equals_48(o) {
  return ju.$equals_15(this, o);
};
_.hashCode_1 = function hashCode_48() {
  return ju.$hashCode_15(this);
};
_.indexOf = function indexOf(toFind) {
  return ju.$indexOf_1(this, toFind);
};
_.iterator_0 = function iterator_10() {
  return ju.$iterator_5(this);
};
_.lastIndexOf = function lastIndexOf(toFind) {
  var i;
  for (i = this.size() - 1; i > -1; --i) {
    if (ju.equals_68(toFind, this.getAtIndex(i))) {
      return i;
    }
  }
  return -1;
};
_.removeAtIndex = function remove_14(index_0) {
  throw toJs(
    new jl.UnsupportedOperationException_0("Remove not supported on this list")
  );
};
_.removeRange_0 = function removeRange(fromIndex, endIndex) {
  var i, iter;
  iter = new ju.AbstractList$ListIteratorImpl(this, fromIndex);
  for (i = fromIndex; i < endIndex; ++i) {
    ji.checkCriticalElement(iter.i < iter.this$01_0.size());
    iter.this$01_0.getAtIndex((iter.last_0 = iter.i++));
    ju.$remove_1(iter);
  }
};
_.setAtIndex = function set_2(index_0, o) {
  throw toJs(
    new jl.UnsupportedOperationException_0("Set not supported on this list")
  );
};
_.subList = function subList(fromIndex, toIndex) {
  return ju.$subList(this, fromIndex, toIndex);
};
ju.$forEachRemaining_0 = function $forEachRemaining_0(this$static, consumer) {
  ji.checkCriticalNotNull(consumer);
  while (this$static.hasNext_1()) {
    consumer.accept(this$static.next_1());
  }
};
ju.$remove_10 = function $remove_10() {
  throw toJs(new jl.UnsupportedOperationException());
};
ju.$$init_56 = function $$init_56(this$static) {};
ju.$forEachRemaining = function $forEachRemaining(this$static, consumer) {
  ju.$forEachRemaining_0(this$static, consumer);
};
ju.$hasNext_4 = function $hasNext_4(this$static) {
  return this$static.i < this$static.this$01_0.size();
};
ju.$next_4 = function $next_4(this$static) {
  ji.checkCriticalElement(this$static.i < this$static.this$01_0.size());
  return this$static.this$01_0.getAtIndex(
    (this$static.last_0 = this$static.i++)
  );
};
ju.$remove_1 = function $remove_1(this$static) {
  ji.checkCriticalState(this$static.last_0 != -1);
  this$static.this$01_0.removeAtIndex(this$static.last_0);
  this$static.i = this$static.last_0;
  this$static.last_0 = -1;
};
ju.AbstractList$IteratorImpl = function AbstractList$IteratorImpl(this$0) {
  this.this$01_0 = this$0;
  ju.$$init_56(this);
};
defineClass(72, 1, $intern_12, ju.AbstractList$IteratorImpl);
_.forEachRemaining = function forEachRemaining_7(consumer) {
  ju.$forEachRemaining(this, consumer);
};
_.hasNext_1 = function hasNext_8() {
  return ju.$hasNext_4(this);
};
_.next_1 = function next_11() {
  return ju.$next_4(this);
};
_.remove_0 = function remove_15() {
  ju.$remove_1(this);
};
_.i = 0;
_.last_0 = -1;
ju.$previous = function $previous(this$static) {
  ji.checkCriticalElement(this$static.i > 0);
  return this$static.this$01.getAtIndex((this$static.last_0 = --this$static.i));
};
ju.$remove_2 = function $remove_2(this$static) {
  ju.$remove_1(this$static);
};
ju.AbstractList$ListIteratorImpl = function AbstractList$ListIteratorImpl(
  this$0,
  start_0
) {
  this.this$01 = this$0;
  ju.AbstractList$IteratorImpl.call(this, this$0);
  ji.checkCriticalPositionIndex(start_0, this$0.size());
  this.i = start_0;
};
defineClass(293, 72, $intern_12, ju.AbstractList$ListIteratorImpl);
_.remove_0 = function remove_16() {
  ju.$remove_2(this);
};
ju.AbstractList$SubList = function AbstractList$SubList(
  wrapped,
  fromIndex,
  toIndex
) {
  ji.checkCriticalPositionIndexes(fromIndex, toIndex, wrapped.size());
  this.wrapped = wrapped;
  this.fromIndex = fromIndex;
  this.size_0 = toIndex - fromIndex;
};
defineClass(348, 920, $intern_11, ju.AbstractList$SubList);
_.addAtIndex = function add_9(index_0, element) {
  ji.checkCriticalPositionIndex(index_0, this.size_0);
  this.wrapped.addAtIndex(this.fromIndex + index_0, element);
  ++this.size_0;
};
_.getAtIndex = function get_27(index_0) {
  ji.checkCriticalElementIndex(index_0, this.size_0);
  return this.wrapped.getAtIndex(this.fromIndex + index_0);
};
_.removeAtIndex = function remove_17(index_0) {
  var result;
  ji.checkCriticalElementIndex(index_0, this.size_0);
  result = this.wrapped.removeAtIndex(this.fromIndex + index_0);
  --this.size_0;
  return result;
};
_.setAtIndex = function set_3(index_0, element) {
  ji.checkCriticalElementIndex(index_0, this.size_0);
  return this.wrapped.setAtIndex(this.fromIndex + index_0, element);
};
_.size = function size_7() {
  return this.size_0;
};
_.fromIndex = 0;
_.size_0 = 0;
ju.$computeIfAbsent_0 = function $computeIfAbsent_0(
  this$static,
  key,
  remappingFunction
) {
  var value_0;
  ji.checkCriticalNotNull(remappingFunction);
  value_0 = this$static.get(key);
  if (value_0 == null) {
    value_0 = remappingFunction.apply_1(key);
    value_0 != null && this$static.put(key, value_0);
  }
  return value_0;
};
ju.$forEach_4 = function $forEach_4(this$static, consumer) {
  var entry, entry$iterator;
  ji.checkCriticalNotNull(consumer);
  for (
    entry$iterator = new ju.AbstractHashMap$EntrySetIterator(
      new ju.AbstractHashMap$EntrySet(this$static).this$01
    );
    entry$iterator.hasNext_0;

  ) {
    entry = ju.$next_3(entry$iterator);
    consumer.accept_1(entry.getKey(), entry.getValue_0());
  }
};
ju.$getOrDefault_2 = function $getOrDefault_2(this$static, key, defaultValue) {
  var currentValue;
  currentValue = this$static.get(key);
  return currentValue == null && !this$static.containsKey(key)
    ? defaultValue
    : currentValue;
};
ju.$merge_1 = function $merge_1(this$static, key, value_0, remappingFunction) {
  var currentValue, newValue;
  ji.checkCriticalNotNull(remappingFunction);
  ji.checkCriticalNotNull(value_0);
  currentValue = this$static.get(key);
  newValue =
    currentValue == null
      ? value_0
      : remappingFunction.apply_4(currentValue, value_0);
  newValue == null ? this$static.remove(key) : this$static.put(key, newValue);
  return newValue;
};
ju.$putIfAbsent = function $putIfAbsent(this$static, key, value_0) {
  var currentValue;
  currentValue = this$static.get(key);
  return currentValue != null ? currentValue : this$static.put(key, value_0);
};
ju.$replace = function $replace(this$static, key, value_0) {
  return this$static.containsKey(key) ? this$static.put(key, value_0) : null;
};
ju.$computeIfAbsent = function $computeIfAbsent(
  this$static,
  key,
  remappingFunction
) {
  return ju.$computeIfAbsent_0(this$static, key, remappingFunction);
};
ju.$containsEntry = function $containsEntry(this$static, entry) {
  var key, ourValue, value_0;
  key = entry.getKey();
  value_0 = entry.getValue_0();
  ourValue = this$static.get(key);
  if (
    !(
      maskUndefined(value_0) === maskUndefined(ourValue) ||
      (value_0 != null &&
        jl.equals_Ljava_lang_Object__Z__devirtual$(value_0, ourValue))
    )
  ) {
    return false;
  }
  if (ourValue == null && !this$static.containsKey(key)) {
    return false;
  }
  return true;
};
ju.$equals_14 = function $equals_14(this$static, obj) {
  var entry, entry$iterator, otherMap;
  if (maskUndefined(obj) === maskUndefined(this$static)) {
    return true;
  }
  if (!instanceOf(obj, 30)) {
    return false;
  }
  otherMap = castTo(obj, 30);
  if (this$static.size() != otherMap.size()) {
    return false;
  }
  for (
    entry$iterator = otherMap.entrySet_0().iterator_0();
    entry$iterator.hasNext_1();

  ) {
    entry = castTo(entry$iterator.next_1(), 27);
    if (!this$static.containsEntry(entry)) {
      return false;
    }
  }
  return true;
};
ju.$hashCode_14 = function $hashCode_14(this$static) {
  return ju.hashCode_61(this$static.entrySet_0());
};
ju.$implFindEntry = function $implFindEntry(this$static, key, remove) {
  var entry, iter, k;
  for (iter = this$static.entrySet_0().iterator_0(); iter.hasNext_1(); ) {
    entry = castTo(iter.next_1(), 27);
    k = entry.getKey();
    if (
      maskUndefined(key) === maskUndefined(k) ||
      (key != null && jl.equals_Ljava_lang_Object__Z__devirtual$(key, k))
    ) {
      if (remove) {
        entry = new ju.AbstractMap$SimpleEntry(
          entry.getKey(),
          entry.getValue_0()
        );
        iter.remove_0();
      }
      return entry;
    }
  }
  return null;
};
ju.$isEmpty_0 = function $isEmpty_0(this$static) {
  return this$static.size() == 0;
};
ju.$keySet = function $keySet(this$static) {
  return new ju.AbstractMap$1(this$static);
};
ju.$toString_16 = function $toString_16(this$static) {
  var entry, entry$iterator, joiner;
  joiner = new ju.StringJoiner(", ", "{", "}");
  for (
    entry$iterator = this$static.entrySet_0().iterator_0();
    entry$iterator.hasNext_1();

  ) {
    entry = castTo(entry$iterator.next_1(), 27);
    ju.$add_1(
      joiner,
      ju.$toString_17(this$static, entry.getKey()) +
        "=" +
        ju.$toString_17(this$static, entry.getValue_0())
    );
  }
  return !joiner.builder
    ? joiner.emptyValue
    : ji.uncheckedCast(joiner.suffix).length == 0
    ? joiner.builder.string
    : joiner.builder.string + ("" + joiner.suffix);
};
ju.$toString_17 = function $toString_17(this$static, o) {
  return maskUndefined(o) === maskUndefined(this$static)
    ? "(this Map)"
    : o == null
    ? "null"
    : toString_7(o);
};
ju.$values_0 = function $values_0(this$static) {
  return new ju.AbstractMap$2(this$static);
};
ju.getEntryValueOrNull = function getEntryValueOrNull(entry) {
  return !entry ? null : entry.getValue_0();
};
defineClass(931, 1, $intern_13);
_.computeIfAbsent = function computeIfAbsent(key, remappingFunction) {
  return ju.$computeIfAbsent(this, key, remappingFunction);
};
_.getOrDefault = function getOrDefault(key, defaultValue) {
  var currentValue;
  return (
    (currentValue = this.get(key)),
    currentValue == null && !this.containsKey(key) ? defaultValue : currentValue
  );
};
_.merge_0 = function merge(key, value_0, remappingFunction) {
  return ju.$merge_1(this, key, value_0, remappingFunction);
};
_.putIfAbsent = function putIfAbsent(key, value_0) {
  var currentValue;
  return (
    (currentValue = this.get(key)),
    currentValue != null ? currentValue : this.put(key, value_0)
  );
};
_.replace = function replace_0(key, value_0) {
  return this.containsKey(key) ? this.put(key, value_0) : null;
};
_.clear = function clear_1() {
  this.entrySet_0().clear();
};
_.containsEntry = function containsEntry(entry) {
  return ju.$containsEntry(this, entry);
};
_.containsKey = function containsKey(key) {
  return !!ju.$implFindEntry(this, key, false);
};
_.containsValue = function containsValue(value_0) {
  var entry, entry$iterator, v;
  for (
    entry$iterator = this.entrySet_0().iterator_0();
    entry$iterator.hasNext_1();

  ) {
    entry = castTo(entry$iterator.next_1(), 27);
    v = entry.getValue_0();
    if (
      maskUndefined(value_0) === maskUndefined(v) ||
      (value_0 != null &&
        jl.equals_Ljava_lang_Object__Z__devirtual$(value_0, v))
    ) {
      return true;
    }
  }
  return false;
};
_.equals_0 = function equals_47(obj) {
  return ju.$equals_14(this, obj);
};
_.get = function get_25(key) {
  return ju.getEntryValueOrNull(ju.$implFindEntry(this, key, false));
};
_.hashCode_1 = function hashCode_47() {
  return ju.$hashCode_14(this);
};
_.isEmpty = function isEmpty_1() {
  return ju.$isEmpty_0(this);
};
_.keySet = function keySet() {
  return ju.$keySet(this);
};
_.put = function put(key, value_0) {
  throw toJs(
    new jl.UnsupportedOperationException_0("Put not supported on this map")
  );
};
_.putAll = function putAll(map_0) {
  var e, e$iterator;
  ji.checkCriticalNotNull(map_0);
  for (e$iterator = map_0.entrySet_0().iterator_0(); e$iterator.hasNext_1(); ) {
    e = castTo(e$iterator.next_1(), 27);
    this.put(e.getKey(), e.getValue_0());
  }
};
_.remove = function remove_10(key) {
  return ju.getEntryValueOrNull(ju.$implFindEntry(this, key, true));
};
_.size = function size_4() {
  return this.entrySet_0().size();
};
_.toString_0 = function toString_59() {
  return ju.$toString_16(this);
};
_.values = function values_8() {
  return ju.$values_0(this);
};
ju.$spliterator_5 = function $spliterator_5(this$static) {
  return new ju.Spliterators$IteratorSpliterator(this$static, 1);
};
ju.$removeAll = function $removeAll(this$static, c) {
  var iter, o, o$iterator, size_0;
  ji.checkCriticalNotNull(c);
  size_0 = this$static.size();
  if (size_0 < c.size()) {
    for (iter = this$static.iterator_0(); iter.hasNext_1(); ) {
      o = iter.next_1();
      c.contains(o) && iter.remove_0();
    }
  } else {
    for (o$iterator = c.iterator_0(); o$iterator.hasNext_1(); ) {
      o = o$iterator.next_1();
      this$static.remove(o);
    }
  }
  return size_0 != this$static.size();
};
ju.$spliterator_0 = function $spliterator_0(this$static) {
  return new ju.Spliterators$IteratorSpliterator(this$static, 1);
};
defineClass(909, 908, $intern_14);
_.spliterator_0 = function spliterator_1() {
  return ju.$spliterator_0(this);
};
_.equals_0 = function equals_33(o) {
  var other;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, 81)) {
    return false;
  }
  other = castTo(o, 81);
  if (other.size() != this.size()) {
    return false;
  }
  return ju.$containsAll(this, other);
};
_.hashCode_1 = function hashCode_33() {
  return ju.hashCode_61(this);
};
_.removeAll = function removeAll_0(c) {
  return ju.$removeAll(this, c);
};
ju.$contains_0 = function $contains_0(this$static, key) {
  return this$static.this$01.containsKey(key);
};
ju.$iterator_6 = function $iterator_6(this$static) {
  var outerIter;
  outerIter = this$static.this$01.entrySet_0().iterator_0();
  return new ju.AbstractMap$1$1(outerIter);
};
ju.AbstractMap$1 = function AbstractMap$1(this$0) {
  this.this$01 = this$0;
};
defineClass(92, 909, $intern_14, ju.AbstractMap$1);
_.clear = function clear_5() {
  this.this$01.clear();
};
_.contains = function contains_4(key) {
  return ju.$contains_0(this, key);
};
_.iterator_0 = function iterator_11() {
  return ju.$iterator_6(this);
};
_.remove = function remove_18(key) {
  if (this.this$01.containsKey(key)) {
    this.this$01.remove(key);
    return true;
  }
  return false;
};
_.size = function size_8() {
  return this.this$01.size();
};
ju.$hasNext_5 = function $hasNext_5(this$static) {
  return this$static.val$outerIter2.hasNext_1();
};
ju.$next_5 = function $next_5(this$static) {
  var entry;
  entry = castTo(this$static.val$outerIter2.next_1(), 27);
  return entry.getKey();
};
ju.$remove_3 = function $remove_3(this$static) {
  this$static.val$outerIter2.remove_0();
};
ju.AbstractMap$1$1 = function AbstractMap$1$1(val$outerIter) {
  this.val$outerIter2 = val$outerIter;
};
defineClass(101, 1, $intern_12, ju.AbstractMap$1$1);
_.forEachRemaining = function forEachRemaining_8(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_9() {
  return ju.$hasNext_5(this);
};
_.next_1 = function next_12() {
  return ju.$next_5(this);
};
_.remove_0 = function remove_19() {
  ju.$remove_3(this);
};
ju.$iterator_7 = function $iterator_7(this$static) {
  var outerIter;
  outerIter = this$static.this$01.entrySet_0().iterator_0();
  return new ju.AbstractMap$2$1(outerIter);
};
ju.AbstractMap$2 = function AbstractMap$2(this$0) {
  this.this$01 = this$0;
};
defineClass(88, 908, { 53: 1 }, ju.AbstractMap$2);
_.clear = function clear_6() {
  this.this$01.clear();
};
_.contains = function contains_5(value_0) {
  return this.this$01.containsValue(value_0);
};
_.iterator_0 = function iterator_12() {
  return ju.$iterator_7(this);
};
_.size = function size_9() {
  return this.this$01.size();
};
ju.$hasNext_6 = function $hasNext_6(this$static) {
  return this$static.val$outerIter2.hasNext_1();
};
ju.$next_6 = function $next_6(this$static) {
  var entry;
  entry = castTo(this$static.val$outerIter2.next_1(), 27);
  return entry.getValue_0();
};
ju.AbstractMap$2$1 = function AbstractMap$2$1(val$outerIter) {
  this.val$outerIter2 = val$outerIter;
};
defineClass(297, 1, $intern_12, ju.AbstractMap$2$1);
_.forEachRemaining = function forEachRemaining_9(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_10() {
  return ju.$hasNext_6(this);
};
_.next_1 = function next_13() {
  return ju.$next_6(this);
};
_.remove_0 = function remove_20() {
  this.val$outerIter2.remove_0();
};
ju.$getKey = function $getKey(this$static) {
  return this$static.key_0;
};
ju.$getValue = function $getValue(this$static) {
  return this$static.value_0;
};
ju.$setValue_0 = function $setValue_0(this$static, value_0) {
  var oldValue;
  oldValue = this$static.value_0;
  this$static.value_0 = value_0;
  return oldValue;
};
ju.AbstractMap$AbstractEntry = function AbstractMap$AbstractEntry(
  key,
  value_0
) {
  this.key_0 = key;
  this.value_0 = value_0;
};
defineClass(214, 1, { 214: 1, 27: 1 });
_.equals_0 = function equals_49(other) {
  var entry;
  if (!instanceOf(other, 27)) {
    return false;
  }
  entry = castTo(other, 27);
  return (
    ju.equals_68(this.key_0, entry.getKey()) &&
    ju.equals_68(this.value_0, entry.getValue_0())
  );
};
_.getKey = function getKey() {
  return ju.$getKey(this);
};
_.getValue_0 = function getValue() {
  return ju.$getValue(this);
};
_.hashCode_1 = function hashCode_49() {
  return ju.hashCode_67(this.key_0) ^ ju.hashCode_67(this.value_0);
};
_.setValue_0 = function setValue(value_0) {
  return ju.$setValue_0(this, value_0);
};
_.toString_0 = function toString_60() {
  return this.key_0 + "=" + this.value_0;
};
ju.AbstractMap$SimpleEntry = function AbstractMap$SimpleEntry(key, value_0) {
  ju.AbstractMap$AbstractEntry.call(this, key, value_0);
};
defineClass(160, 214, { 214: 1, 160: 1, 27: 1 }, ju.AbstractMap$SimpleEntry);
ju.$$init_57 = function $$init_57(this$static) {
  this$static.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
};
ju.$add = function $add(this$static, o) {
  this$static.array[this$static.array.length] = o;
  return true;
};
ju.$addAll_0 = function $addAll_0(this$static, c) {
  var cArray, len;
  cArray = c.toArray();
  len = cArray.length;
  if (len == 0) {
    return false;
  }
  ji.insertTo_0(this$static.array, this$static.array.length, cArray);
  return true;
};
ju.$clear_1 = function $clear_1(this$static) {
  this$static.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
};
ju.$contains_1 = function $contains_1(this$static, o) {
  return ju.$indexOf_3(this$static, o, 0) != -1;
};
ju.$forEach_3 = function $forEach_3(this$static, consumer) {
  var e, e$array, e$index, e$max;
  ji.checkCriticalNotNull(consumer);
  for (
    e$array = this$static.array, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    consumer.accept(e);
  }
};
ju.$get_18 = function $get_18(this$static, index_0) {
  ji.checkCriticalElementIndex(index_0, this$static.array.length);
  return this$static.array[index_0];
};
ju.$indexOf_2 = function $indexOf_2(this$static, o) {
  return ju.$indexOf_3(this$static, o, 0);
};
ju.$indexOf_3 = function $indexOf_3(this$static, o, index_0) {
  for (; index_0 < this$static.array.length; ++index_0) {
    if (ju.equals_68(o, this$static.array[index_0])) {
      return index_0;
    }
  }
  return -1;
};
ju.$isEmpty_1 = function $isEmpty_1(this$static) {
  return this$static.array.length == 0;
};
ju.$iterator_10 = function $iterator_10(this$static) {
  return new ju.ArrayList$1(this$static);
};
ju.$lastIndexOf_1 = function $lastIndexOf_1(this$static, o, index_0) {
  for (; index_0 >= 0; --index_0) {
    if (ju.equals_68(o, this$static.array[index_0])) {
      return index_0;
    }
  }
  return -1;
};
ju.$remove_4 = function $remove_4(this$static, index_0) {
  var previous;
  previous =
    (ji.checkCriticalElementIndex(index_0, this$static.array.length),
    this$static.array[index_0]);
  ji.removeFrom(this$static.array, index_0, 1);
  return previous;
};
ju.$size_2 = function $size_2(this$static) {
  return this$static.array.length;
};
ju.$toArray_1 = function $toArray_1(this$static) {
  return ji.clone(this$static.array, this$static.array.length);
};
ju.$toArray_2 = function $toArray_2(this$static, out) {
  var i, size_0;
  size_0 = this$static.array.length;
  out.length < size_0 && (out = ji.stampJavaTypeInfo_1(new Array(size_0), out));
  for (i = 0; i < size_0; ++i) {
    setCheck(out, i, this$static.array[i]);
  }
  out.length > size_0 && setCheck(out, size_0, null);
  return out;
};
ju.ArrayList = function ArrayList() {
  ju.$$init_57(this);
};
ju.ArrayList_0 = function ArrayList_0(initialCapacity) {
  ju.$$init_57(this);
  ji.checkCriticalArgument_0(
    initialCapacity >= 0,
    "Initial capacity must not be negative"
  );
};
ju.ArrayList_1 = function ArrayList_1(c) {
  ju.$$init_57(this);
  ji.insertTo_0(this.array, 0, c.toArray());
};
defineClass(10, 920, $intern_15, ju.ArrayList, ju.ArrayList_0, ju.ArrayList_1);
_.addAtIndex = function add_10(index_0, o) {
  ji.checkCriticalPositionIndex(index_0, this.array.length);
  ji.insertTo(this.array, index_0, o);
};
_.add = function add_11(o) {
  return ju.$add(this, o);
};
_.addAllAtIndex = function addAll_1(index_0, c) {
  var cArray, len;
  ji.checkCriticalPositionIndex(index_0, this.array.length);
  cArray = c.toArray();
  len = cArray.length;
  if (len == 0) {
    return false;
  }
  ji.insertTo_0(this.array, index_0, cArray);
  return true;
};
_.addAll = function addAll_2(c) {
  return ju.$addAll_0(this, c);
};
_.clear = function clear_9() {
  ju.$clear_1(this);
};
_.contains = function contains_8(o) {
  return ju.$contains_1(this, o);
};
_.forEach_0 = function forEach_7(consumer) {
  ju.$forEach_3(this, consumer);
};
_.getAtIndex = function get_29(index_0) {
  return ju.$get_18(this, index_0);
};
_.indexOf = function indexOf_0(o) {
  return ju.$indexOf_2(this, o);
};
_.isEmpty = function isEmpty_2() {
  return ju.$isEmpty_1(this);
};
_.iterator_0 = function iterator_15() {
  return ju.$iterator_10(this);
};
_.lastIndexOf = function lastIndexOf_0(o) {
  return ju.$lastIndexOf_1(this, o, this.array.length - 1);
};
_.removeAtIndex = function remove_25(index_0) {
  return ju.$remove_4(this, index_0);
};
_.remove = function remove_26(o) {
  var i;
  i = ju.$indexOf_3(this, o, 0);
  if (i == -1) {
    return false;
  }
  ji.checkCriticalElementIndex(i, this.array.length);
  ji.removeFrom(this.array, i, 1);
  return true;
};
_.removeRange_0 = function removeRange_0(fromIndex, endIndex) {
  var count;
  ji.checkCriticalPositionIndexes(fromIndex, endIndex, this.array.length);
  count = endIndex - fromIndex;
  ji.removeFrom(this.array, fromIndex, count);
};
_.setAtIndex = function set_4(index_0, o) {
  var previous;
  previous =
    (ji.checkCriticalElementIndex(index_0, this.array.length),
    this.array[index_0]);
  this.array[index_0] = o;
  return previous;
};
_.size = function size_13() {
  return ju.$size_2(this);
};
_.toArray = function toArray_1() {
  return ju.$toArray_1(this);
};
_.toArray_0 = function toArray_2(out) {
  return ju.$toArray_2(this, out);
};
ju.$$init_58 = function $$init_58(this$static) {};
ju.$hasNext_8 = function $hasNext_8(this$static) {
  return this$static.i < this$static.this$01.array.length;
};
ju.$next_8 = function $next_8(this$static) {
  ji.checkCriticalElement(this$static.i < this$static.this$01.array.length);
  this$static.last_0 = this$static.i++;
  return this$static.this$01.array[this$static.last_0];
};
ju.$remove_5 = function $remove_5(this$static) {
  ji.checkCriticalState(this$static.last_0 != -1);
  ju.$remove_4(this$static.this$01, (this$static.i = this$static.last_0));
  this$static.last_0 = -1;
};
ju.ArrayList$1 = function ArrayList$1(this$0) {
  this.this$01 = this$0;
  ju.$$init_58(this);
};
defineClass(85, 1, $intern_12, ju.ArrayList$1);
_.forEachRemaining = function forEachRemaining_11(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_12() {
  return ju.$hasNext_8(this);
};
_.next_1 = function next_15() {
  return ju.$next_8(this);
};
_.remove_0 = function remove_27() {
  ju.$remove_5(this);
};
_.i = 0;
_.last_0 = -1;
ju.binarySearch = function binarySearch(sortedArray, key) {
  return ju.binarySearch0_0(sortedArray, sortedArray.length, key, null);
};
ju.binarySearch0 = function binarySearch0(sortedArray, toIndex, key) {
  var high, low, mid, midVal;
  low = 0;
  high = toIndex - 1;
  while (low <= high) {
    mid = low + ((high - low) >> 1);
    midVal = sortedArray[mid];
    if (midVal < key) {
      low = mid + 1;
    } else if (midVal > key) {
      high = mid - 1;
    } else {
      return mid;
    }
  }
  return -low - 1;
};
ju.binarySearch0_0 = function binarySearch0_0(
  sortedArray,
  toIndex,
  key,
  comparator
) {
  var compareResult, high, low, mid, midVal;
  comparator =
    (ju.$clinit_Comparators(),
    !comparator ? ju.INTERNAL_NATURAL_ORDER : comparator);
  low = 0;
  high = toIndex - 1;
  while (low <= high) {
    mid = low + ((high - low) >> 1);
    midVal = sortedArray[mid];
    compareResult = comparator.compare_0(midVal, key);
    if (compareResult < 0) {
      low = mid + 1;
    } else if (compareResult > 0) {
      high = mid - 1;
    } else {
      return mid;
    }
  }
  return -low - 1;
};
ju.deepEquals = function deepEquals(a1, a2) {
  var i, n;
  if (maskUndefined(a1) === maskUndefined(a2)) {
    return true;
  }
  if (a1 == null || a2 == null) {
    return false;
  }
  if (a1.length != a2.length) {
    return false;
  }
  for (i = 0, n = a1.length; i < n; ++i) {
    if (!ju.deepEquals_0(a1[i], a2[i])) {
      return false;
    }
  }
  return true;
};
ju.deepHashCode = function deepHashCode(a) {
  var hash, hashCode, obj, obj$array, obj$index, obj$max;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    obj$array = a, obj$index = 0, obj$max = obj$array.length;
    obj$index < obj$max;
    ++obj$index
  ) {
    obj = obj$array[obj$index];
    instanceOfArray(obj)
      ? (hash = ju.deepHashCode(castToArray(obj)))
      : instanceOf(obj, 166)
      ? (hash = ju.hashCode_59(castTo(obj, 166)))
      : instanceOf(obj, 96)
      ? (hash = ju.hashCode_51(castTo(obj, 96)))
      : instanceOf(obj, 95)
      ? (hash = ju.hashCode_52(castTo(obj, 95)))
      : instanceOf(obj, 273)
      ? (hash = ju.hashCode_58(castTo(obj, 273)))
      : instanceOf(obj, 35)
      ? (hash = ju.hashCode_55(castTo(obj, 35)))
      : instanceOf(obj, 94)
      ? (hash = ju.hashCode_56(castTo(obj, 94)))
      : instanceOf(obj, 274)
      ? (hash = ju.hashCode_54(castTo(obj, 274)))
      : instanceOf(obj, 111)
      ? (hash = ju.hashCode_53(castTo(obj, 111)))
      : (hash = obj != null ? jl.hashCode__I__devirtual$(obj) : 0);
    hashCode = 31 * hashCode + hash;
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.equals_51 = function equals_51(array1, array2) {
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (array1[i] != array2[i]) {
      return false;
    }
  }
  return true;
};
ju.equals_52 = function equals_52(array1, array2) {
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (array1[i] != array2[i]) {
      return false;
    }
  }
  return true;
};
ju.equals_53 = function equals_53(array1, array2) {
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (
      !jl.$equals_9(ji.uncheckedCast(array1[i]), ji.uncheckedCast(array2[i]))
    ) {
      return false;
    }
  }
  return true;
};
ju.equals_54 = function equals_54(array1, array2) {
  return ju.equals_53(ji.uncheckedCast(array1), ji.uncheckedCast(array2));
};
ju.equals_55 = function equals_55(array1, array2) {
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (array1[i] != array2[i]) {
      return false;
    }
  }
  return true;
};
ju.equals_56 = function equals_56(array1, array2) {
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (compare_1(array1[i], array2[i]) != 0) {
      return false;
    }
  }
  return true;
};
ju.equals_57 = function equals_57(array1, array2) {
  var i, val1, val2;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    val1 = array1[i];
    val2 = array2[i];
    if (
      !(
        maskUndefined(val1) === maskUndefined(val2) ||
        (val1 != null && jl.equals_Ljava_lang_Object__Z__devirtual$(val1, val2))
      )
    ) {
      return false;
    }
  }
  return true;
};
ju.equals_58 = function equals_58(array1, array2) {
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (array1[i] != array2[i]) {
      return false;
    }
  }
  return true;
};
ju.equals_59 = function equals_59(array1, array2) {
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (array1[i] !== array2[i]) {
      return false;
    }
  }
  return true;
};
ju.hashCode_51 = function hashCode_51(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + e;
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_52 = function hashCode_52(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + e;
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_53 = function hashCode_53(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + round_int(e);
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_54 = function hashCode_54(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + round_int(e);
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_55 = function hashCode_55(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + e;
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_56 = function hashCode_56(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + toInt_0(e);
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_57 = function hashCode_57(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + (e != null ? jl.hashCode__I__devirtual$(e) : 0);
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_58 = function hashCode_58(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + e;
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_59 = function hashCode_59(a) {
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (
    e$array = a, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + (jl.$clinit_Boolean(), e ? 1231 : 1237);
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.insertionSort = function insertionSort(array, low, high, comp) {
  var i, j, t;
  for (i = low + 1; i < high; ++i) {
    for (j = i; j > low && comp.compare_0(array[j - 1], array[j]) > 0; --j) {
      t = array[j];
      setCheck(array, j, array[j - 1]);
      setCheck(array, j - 1, t);
    }
  }
};
ju.merge_0 = function merge_0(
  src_0,
  srcLow,
  srcMid,
  srcHigh,
  dest,
  destLow,
  destHigh,
  comp
) {
  var topIdx;
  topIdx = srcMid;
  while (destLow < destHigh) {
    topIdx >= srcHigh ||
    (srcLow < srcMid && comp.compare_0(src_0[srcLow], src_0[topIdx]) <= 0)
      ? setCheck(dest, destLow++, src_0[srcLow++])
      : setCheck(dest, destLow++, src_0[topIdx++]);
  }
};
ju.mergeSort = function mergeSort(x_0, fromIndex, toIndex, comp) {
  var temp;
  comp = (ju.$clinit_Comparators(), !comp ? ju.INTERNAL_NATURAL_ORDER : comp);
  temp = ji.uncheckedCast(x_0).slice(fromIndex, toIndex);
  ju.mergeSort_0(temp, x_0, fromIndex, toIndex, -fromIndex, comp);
};
ju.mergeSort_0 = function mergeSort_0(temp, array, low, high, ofs, comp) {
  var length_0, tempHigh, tempLow, tempMid;
  length_0 = high - low;
  if (length_0 < 7) {
    ju.insertionSort(array, low, high, comp);
    return;
  }
  tempLow = low + ofs;
  tempHigh = high + ofs;
  tempMid = tempLow + ((tempHigh - tempLow) >> 1);
  ju.mergeSort_0(array, temp, tempLow, tempMid, -ofs, comp);
  ju.mergeSort_0(array, temp, tempMid, tempHigh, -ofs, comp);
  if (comp.compare_0(temp[tempMid - 1], temp[tempMid]) <= 0) {
    while (low < high) {
      setCheck(array, low++, temp[tempLow++]);
    }
    return;
  }
  ju.merge_0(temp, tempLow, tempMid, tempHigh, array, low, high, comp);
};
ju.sort_2 = function sort_2(x_0, toIndex, c) {
  ji.checkCriticalArrayBounds_0(toIndex, x_0.length);
  ju.mergeSort(x_0, 0, toIndex, c);
};
ju.spliterator_4 = function spliterator_4(array, endExclusive) {
  return (
    ju.checkCriticalArrayBounds(endExclusive, array.length),
    new ju.Spliterators$IntArraySpliterator(array, endExclusive)
  );
};
ju.spliterator_5 = function spliterator_5(array, endExclusive) {
  return (
    ju.checkCriticalArrayBounds(endExclusive, array.length),
    new ju.Spliterators$ArraySpliterator(array, endExclusive)
  );
};
ju.stream_3 = function stream_3(array) {
  return new jus.IntStreamImpl(null, ju.spliterator_4(array, array.length));
};
ju.stream_4 = function stream_4(array) {
  return new jus.StreamImpl(null, ju.spliterator_5(array, array.length));
};
ju.toString_62 = function toString_62(x_0) {
  if (x_0 == null) {
    return "null";
  }
  return ju.$toString_11(new ju.Arrays$ArrayList(x_0));
};
ju.$clinit_Collections = function $clinit_Collections() {
  ju.$clinit_Collections = emptyMethod;
  ju.EMPTY_LIST = new ju.Collections$EmptyList();
  ju.EMPTY_MAP = new ju.Collections$EmptyMap();
  ju.EMPTY_SET = new ju.Collections$EmptySet();
};
ju.hashCode_61 = function hashCode_61(collection) {
  ju.$clinit_Collections();
  var e, e$iterator, hashCode;
  hashCode = 0;
  for (e$iterator = collection.iterator_0(); e$iterator.hasNext_1(); ) {
    e = e$iterator.next_1();
    hashCode = hashCode + (e != null ? jl.hashCode__I__devirtual$(e) : 0);
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.hashCode_62 = function hashCode_62(list) {
  ju.$clinit_Collections();
  var e, e$iterator, hashCode;
  hashCode = 1;
  for (e$iterator = list.iterator_0(); e$iterator.hasNext_1(); ) {
    e = e$iterator.next_1();
    hashCode = 31 * hashCode + (e != null ? jl.hashCode__I__devirtual$(e) : 0);
    hashCode = hashCode | 0;
  }
  return hashCode;
};
ju.singleton = function singleton(o) {
  ju.$clinit_Collections();
  var set_0;
  set_0 = new ju.HashSet_0();
  set_0.map_0.put(o, set_0);
  return new ju.Collections$UnmodifiableSet(set_0);
};
ju.singletonMap = function singletonMap(key, value_0) {
  ju.$clinit_Collections();
  var map_0;
  map_0 = new ju.HashMap_0(1);
  ju.$put_4(map_0.hashCodeMap, key, value_0);
  return new ju.Collections$UnmodifiableMap(map_0);
};
ju.Collections$EmptyList = function Collections$EmptyList() {};
defineClass(745, 920, $intern_15, ju.Collections$EmptyList);
_.contains = function contains_10(object) {
  return false;
};
_.getAtIndex = function get_31(location_0) {
  ji.checkCriticalElementIndex(location_0, 0);
  return null;
};
_.iterator_0 = function iterator_16() {
  return (
    ju.$clinit_Collections(),
    ju.$clinit_Collections$EmptyListIterator(),
    ju.INSTANCE_0
  );
};
_.size = function size_15() {
  return 0;
};
ju.$clinit_Collections$EmptyListIterator =
  function $clinit_Collections$EmptyListIterator() {
    ju.$clinit_Collections$EmptyListIterator = emptyMethod;
    ju.INSTANCE_0 = new ju.Collections$EmptyListIterator();
  };
ju.Collections$EmptyListIterator = function Collections$EmptyListIterator() {};
defineClass(746, 1, $intern_12, ju.Collections$EmptyListIterator);
_.forEachRemaining = function forEachRemaining_12(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_13() {
  return false;
};
_.next_1 = function next_16() {
  throw toJs(new ju.NoSuchElementException());
};
_.remove_0 = function remove_28() {
  throw toJs(new jl.IllegalStateException());
};
ju.Collections$EmptyMap = function Collections$EmptyMap() {};
defineClass(748, 931, $intern_16, ju.Collections$EmptyMap);
_.containsKey = function containsKey_2(key) {
  return false;
};
_.containsValue = function containsValue_1(value_0) {
  return false;
};
_.entrySet_0 = function entrySet_1() {
  return ju.$clinit_Collections(), ju.EMPTY_SET;
};
_.get = function get_32(key) {
  return null;
};
_.keySet = function keySet_1() {
  return ju.$clinit_Collections(), ju.EMPTY_SET;
};
_.size = function size_16() {
  return 0;
};
_.values = function values_9() {
  return ju.$clinit_Collections(), ju.EMPTY_LIST;
};
ju.Collections$EmptySet = function Collections$EmptySet() {};
defineClass(747, 909, { 3: 1, 53: 1, 81: 1 }, ju.Collections$EmptySet);
_.contains = function contains_11(object) {
  return false;
};
_.iterator_0 = function iterator_17() {
  return (
    ju.$clinit_Collections(),
    ju.$clinit_Collections$EmptyListIterator(),
    ju.INSTANCE_0
  );
};
_.size = function size_17() {
  return 0;
};
ju.NoSuchElementException = function NoSuchElementException() {
  jl.RuntimeException.call(this);
};
ju.NoSuchElementException_0 = function NoSuchElementException_0(s) {
  jl.RuntimeException_1.call(this, s);
};
defineClass(
  119,
  26,
  { 3: 1, 41: 1, 26: 1, 25: 1, 119: 1 },
  ju.NoSuchElementException,
  ju.NoSuchElementException_0
);
ju.deepEquals_0 = function deepEquals_0(a, b) {
  var class1, class2, isObjectArray1, isObjectArray2;
  if (maskUndefined(a) === maskUndefined(b)) {
    return true;
  }
  if (a == null || b == null) {
    return false;
  }
  class1 = jl.getClass__Ljava_lang_Class___devirtual$(a);
  class2 = jl.getClass__Ljava_lang_Class___devirtual$(b);
  if ((class1.modifiers & 4) == 0 || (class2.modifiers & 4) == 0) {
    return jl.equals_Ljava_lang_Object__Z__devirtual$(a, b);
  }
  isObjectArray1 = instanceOfArray(a);
  isObjectArray2 = instanceOfArray(b);
  if (isObjectArray1 || isObjectArray2) {
    return (
      isObjectArray1 &&
      isObjectArray2 &&
      ju.deepEquals(castToArray(a), castToArray(b))
    );
  }
  if (class1 != class2) {
    return false;
  }
  if (instanceOf(a, 166)) {
    return ju.equals_59(castTo(a, 166), castTo(b, 166));
  }
  if (instanceOf(a, 96)) {
    return ju.equals_51(castTo(a, 96), castTo(b, 96));
  }
  if (instanceOf(a, 95)) {
    return ju.equals_52(castTo(a, 95), castTo(b, 95));
  }
  if (instanceOf(a, 273)) {
    return ju.equals_58(castTo(a, 273), castTo(b, 273));
  }
  if (instanceOf(a, 35)) {
    return ju.equals_55(castTo(a, 35), castTo(b, 35));
  }
  if (instanceOf(a, 94)) {
    return ju.equals_56(castTo(a, 94), castTo(b, 94));
  }
  if (instanceOf(a, 274)) {
    return ju.equals_54(castTo(a, 274), castTo(b, 274));
  }
  return ju.equals_53(castTo(a, 111), castTo(b, 111));
};
ju.equals_68 = function equals_68(a, b) {
  return (
    maskUndefined(a) === maskUndefined(b) ||
    (a != null && jl.equals_Ljava_lang_Object__Z__devirtual$(a, b))
  );
};
ju.hashCode_67 = function hashCode_67(o) {
  return o != null ? jl.hashCode__I__devirtual$(o) : 0;
};
ju.requireNonNull = function requireNonNull(obj) {
  if (obj == null) {
    throw toJs(new jl.NullPointerException());
  }
  return obj;
};
ju.requireNonNull_0 = function requireNonNull_0(obj, message) {
  if (obj == null) {
    throw toJs(new jl.NullPointerException_1(message));
  }
  return obj;
};
ju.$forEachRemaining_5 = function $forEachRemaining_5(this$static, consumer) {
  while (this$static.tryAdvance(consumer));
};
ju.checkCriticalArrayBounds = function checkCriticalArrayBounds(end, length_0) {
  if (0 > end || end > length_0) {
    throw toJs(
      new jl.ArrayIndexOutOfBoundsException(
        "fromIndex: 0, toIndex: " + end + ", length: " + length_0
      )
    );
  }
};
ju.$characteristics = function $characteristics(this$static) {
  return this$static.characteristics;
};
ju.$estimateSize = function $estimateSize(this$static) {
  return this$static.sizeEstimate;
};
ju.Spliterators$BaseSpliterator = function Spliterators$BaseSpliterator(
  size_0,
  characteristics
) {
  this.sizeEstimate = size_0;
  this.characteristics =
    (characteristics & 64) != 0 ? characteristics | 16384 : characteristics;
};
defineClass(279, 1, {});
_.forEachRemaining = function forEachRemaining_19(consumer) {
  ju.$forEachRemaining_5(this, consumer);
};
_.characteristics_0 = function characteristics_1() {
  return ju.$characteristics(this);
};
_.estimateSize_0 = function estimateSize_0() {
  return ju.$estimateSize(this);
};
_.characteristics = 0;
_.sizeEstimate = 0;
ju.Spliterators$AbstractSpliterator = function Spliterators$AbstractSpliterator(
  size_0,
  characteristics
) {
  ju.Spliterators$BaseSpliterator.call(this, size_0, characteristics);
};
defineClass(145, 279, {});
ju.$forEachRemaining_10 = function $forEachRemaining_10(this$static, consumer) {
  ji.checkCriticalNotNull(consumer);
  while (this$static.index_0 < this$static.limit) {
    this$static.consume(consumer, this$static.index_0++);
  }
};
ju.$tryAdvance_2 = function $tryAdvance_2(this$static, consumer) {
  ji.checkCriticalNotNull(consumer);
  if (this$static.index_0 < this$static.limit) {
    this$static.consume(consumer, this$static.index_0++);
    return true;
  }
  return false;
};
ju.Spliterators$BaseArraySpliterator =
  function Spliterators$BaseArraySpliterator(limit) {
    this.index_0 = 0;
    this.limit = limit;
    this.characteristics = 17488;
  };
defineClass(336, 1, {});
_.forEachRemaining = function forEachRemaining_24(consumer) {
  ju.$forEachRemaining_5(this, consumer);
};
_.characteristics_0 = function characteristics_2() {
  return this.characteristics;
};
_.estimateSize_0 = function estimateSize_1() {
  return fromInt(this.limit - this.index_0);
};
_.characteristics = 0;
_.index_0 = 0;
_.limit = 0;
ju.$consume = function $consume(this$static, consumer, index_0) {
  consumer.accept(this$static.array[index_0]);
};
ju.Spliterators$ArraySpliterator = function Spliterators$ArraySpliterator(
  array,
  limit
) {
  ju.Spliterators$BaseArraySpliterator.call(this, limit);
  this.array = array;
};
defineClass(386, 336, {}, ju.Spliterators$ArraySpliterator);
_.consume = function consume(consumer, index_0) {
  ju.$consume(this, castTo(consumer, 15), index_0);
};
_.forEachRemaining = function forEachRemaining_25(consumer) {
  ju.$forEachRemaining_10(this, consumer);
};
_.tryAdvance = function tryAdvance_2(consumer) {
  return ju.$tryAdvance_2(this, consumer);
};
juf.Function$lambda$0$Type = function Function$lambda$0$Type() {};
defineClass(143, 1, {}, juf.Function$lambda$0$Type);
_.apply_1 = function apply_251(t) {
  return t;
};
jus.of_3 = function of_3(
  supplier,
  accumulator,
  combiner,
  finisher,
  characteristics
) {
  ji.checkCriticalNotNull(supplier);
  ji.checkCriticalNotNull(accumulator);
  ji.checkCriticalNotNull(combiner);
  ji.checkCriticalNotNull(finisher);
  ji.checkCriticalNotNull(characteristics);
  return new jus.CollectorImpl(supplier, accumulator, finisher);
};
jus.of_4 = function of_4(supplier, accumulator, combiner, characteristics) {
  ji.checkCriticalNotNull(supplier);
  ji.checkCriticalNotNull(accumulator);
  ji.checkCriticalNotNull(combiner);
  ji.checkCriticalNotNull(characteristics);
  return new jus.CollectorImpl(
    supplier,
    accumulator,
    new juf.Function$lambda$0$Type()
  );
};
jus.$clinit_Collector$Characteristics =
  function $clinit_Collector$Characteristics() {
    jus.$clinit_Collector$Characteristics = emptyMethod;
    jus.CONCURRENT = new jus.Collector$Characteristics("CONCURRENT", 0);
    jus.IDENTITY_FINISH = new jus.Collector$Characteristics(
      "IDENTITY_FINISH",
      1
    );
    jus.UNORDERED = new jus.Collector$Characteristics("UNORDERED", 2);
  };
jus.Collector$Characteristics = function Collector$Characteristics(
  enum$name,
  enum$ordinal
) {
  Enum.call(this, enum$name, enum$ordinal);
};
jus.values_12 = function values_12() {
  jus.$clinit_Collector$Characteristics();
  return stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
      1
    ),
    $intern_17,
    48,
    0,
    [jus.CONCURRENT, jus.IDENTITY_FINISH, jus.UNORDERED]
  );
};
defineClass(
  48,
  37,
  { 3: 1, 33: 1, 37: 1, 48: 1 },
  jus.Collector$Characteristics
);
jus.CollectorImpl = function CollectorImpl(supplier, accumulator, finisher) {
  this.supplier = supplier;
  this.accumulator = accumulator;
  ju.$clinit_Collections();
  this.finisher = finisher;
};
defineClass(362, 1, {}, jus.CollectorImpl);
jus.addAll_4 = function addAll_4(collection, items) {
  collection.addAll(items);
  return collection;
};
jus.groupingBy = function groupingBy(classifier, mapFactory, downstream) {
  return jus.groupingBy0(
    new jus.Collectors$lambda$6$Type(),
    classifier,
    mapFactory,
    downstream
  );
};
jus.groupingBy_0 = function groupingBy_0(classifier, downstream) {
  return jus.groupingBy(
    classifier,
    new jus.Collectors$3methodref$ctor$Type(),
    downstream
  );
};
jus.groupingBy0 = function groupingBy0(
  supplier,
  classifier,
  mapFactory,
  downstream
) {
  return jus.of_3(
    supplier,
    new jus.Collectors$lambda$7$Type(classifier),
    new jus.Collectors$lambda$8$Type(),
    new jus.Collectors$lambda$9$Type(mapFactory, downstream),
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
        1
      ),
      $intern_17,
      48,
      0,
      []
    )
  );
};
jus.lambda$22_0 = function lambda$22_0() {
  var partition;
  partition = new ju.LinkedHashMap();
  ju.$put_6(
    partition,
    (jl.$clinit_Boolean(), ji.uncheckedCast(false)),
    new ju.ArrayList()
  );
  ju.$put_6(partition, ji.uncheckedCast(true), new ju.ArrayList());
  return partition;
};
jus.lambda$26_0 = function lambda$26_0(op_0, mapper_1, u_2, t_3) {
  return setCheck(
    u_2,
    0,
    idwcawp.$apply_9(
      u_2[0],
      idwcawp.$makeParamsForSeries(mapper_1.$$outer_0, castTo(t_3, 59))
    )
  );
};
jus.lambda$27 = function lambda$27(op_0, u1_1, u2_2) {
  setCheck(u1_1, 0, idwcawp.$apply_9(u1_1[0], u2_2[0]));
  return u1_1;
};
jus.lambda$42 = function lambda$42(c1_0, c2_1) {
  return c1_0.addAll(c2_1), c1_0;
};
jus.lambda$44 = function lambda$44() {
  throw toJs(
    new jl.IllegalStateException_0(
      "Can't assign multiple values to the same key"
    )
  );
};
jus.lambda$46 = function lambda$46(
  keyMapper_0,
  valueMapper_1,
  mergeFunction_2,
  map_3,
  item_4
) {
  var key, newValue;
  key = keyMapper_0.apply_1(item_4);
  newValue = valueMapper_1.apply_1(item_4);
  map_3.containsKey(key)
    ? map_3.put(key, mergeFunction_2.apply_4(map_3.get(key), newValue))
    : map_3.put(key, newValue);
};
jus.lambda$47 = function lambda$47(mergeFunction_0, m1_1, m2_2) {
  return jus.mergeAll(m1_1, m2_2, mergeFunction_0);
};
jus.lambda$50 = function lambda$50(c1_0, c2_1) {
  return ju.$addAll(c1_0, c2_1), c1_0;
};
jus.lambda$7_6 = function lambda$7_6(classifier_0, m_1, o_2) {
  var k, l;
  k = classifier_0.apply_1(o_2);
  l = castTo(m_1.get(k), 79);
  if (!l) {
    l = new ju.ArrayList();
    m_1.put(k, l);
  }
  l.add(o_2);
};
jus.lambda$9_5 = function lambda$9_5(mapFactory_0, downstream_1, m_2) {
  var entry, entry$iterator, result;
  result = castTo(mapFactory_0.get_0(), 30);
  for (
    entry$iterator = m_2.entrySet_0().iterator_0();
    entry$iterator.hasNext_1();

  ) {
    entry = castTo(entry$iterator.next_1(), 27);
    result.put(
      entry.getKey(),
      jus.streamAndCollect(downstream_1, castTo(entry.getValue_0(), 79))
    );
  }
  return result;
};
jus.mergeAll = function mergeAll(m1, m2, mergeFunction) {
  var entry, entry$iterator;
  for (
    entry$iterator = m2.entrySet_0().iterator_0();
    entry$iterator.hasNext_1();

  ) {
    entry = castTo(entry$iterator.next_1(), 27);
    m1.merge_0(entry.getKey(), entry.getValue_0(), mergeFunction);
  }
  return m1;
};
jus.partitioningBy = function partitioningBy(predicate, downstream) {
  return jus.groupingBy0(
    new jus.Collectors$lambda$22$Type(),
    new jus.Collectors$12methodref$test$Type(predicate),
    new jus.Collectors$13methodref$ctor$Type(),
    downstream
  );
};
jus.reducing = function reducing(identity, mapper, op) {
  return jus.of_3(
    new jus.Collectors$lambda$25$Type(identity),
    new jus.Collectors$lambda$26$Type(op, mapper),
    new jus.Collectors$lambda$27$Type(op),
    new jus.Collectors$lambda$28$Type(),
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
        1
      ),
      $intern_17,
      48,
      0,
      []
    )
  );
};
jus.streamAndCollect = function streamAndCollect(downstream, list) {
  var a, t, t$iterator;
  a = downstream.supplier.get_0();
  for (t$iterator = list.iterator_0(); t$iterator.hasNext_1(); ) {
    t = t$iterator.next_1();
    downstream.accumulator.accept_1(a, t);
  }
  return downstream.finisher.apply_1(a);
};
jus.toMap = function toMap(keyMapper, valueMapper, mergeFunction, mapSupplier) {
  return jus.of_4(
    mapSupplier,
    new jus.Collectors$lambda$46$Type(keyMapper, valueMapper, mergeFunction),
    new jus.Collectors$lambda$47$Type(mergeFunction),
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
        1
      ),
      $intern_17,
      48,
      0,
      [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
    )
  );
};
jus.Collectors$20methodref$add$Type =
  function Collectors$20methodref$add$Type() {};
defineClass(133, 1, {}, jus.Collectors$20methodref$add$Type);
_.accept_1 = function accept_103(arg0, arg1) {
  castTo(arg0, 53).add(arg1);
};
jus.Collectors$21methodref$ctor$Type =
  function Collectors$21methodref$ctor$Type() {};
defineClass(135, 1, {}, jus.Collectors$21methodref$ctor$Type);
_.get_0 = function get_36() {
  return new ju.ArrayList();
};
jus.Collectors$lambda$42$Type = function Collectors$lambda$42$Type() {};
defineClass(134, 1, {}, jus.Collectors$lambda$42$Type);
_.apply_4 = function apply_258(arg0, arg1) {
  return jus.lambda$42(castTo(arg0, 53), castTo(arg1, 53));
};
jus.$$init_73 = function $$init_73(this$static) {};
jus.$close_6 = function $close_6(this$static) {
  if (!this$static.root_0) {
    this$static.terminated = true;
    jus.$runClosers(this$static);
  } else {
    this$static.root_0.close_0();
  }
};
jus.$onClose_0 = function $onClose_0(this$static, closeHandler) {
  !this$static.root_0
    ? ju.$add(this$static.onClose, closeHandler)
    : jus.$onClose_0(this$static.root_0, closeHandler);
  return this$static;
};
jus.$runClosers = function $runClosers(this$static) {
  var e, i, size_0, suppressed, throwables;
  throwables = new ju.ArrayList();
  ju.$forEach_3(
    this$static.onClose,
    new jus.TerminatableStream$lambda$0$Type(throwables)
  );
  this$static.onClose.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  if (throwables.array.length != 0) {
    e =
      (ji.checkCriticalElementIndex(0, throwables.array.length),
      castTo(throwables.array[0], 25));
    for (i = 1, size_0 = throwables.array.length; i < size_0; ++i) {
      suppressed =
        (ji.checkCriticalElementIndex(i, throwables.array.length),
        castTo(throwables.array[i], 25));
      suppressed != e && jl.$addSuppressed(e, suppressed);
    }
    if (instanceOf(e, 26)) {
      throw toJs(castTo(e, 26));
    }
    if (instanceOf(e, 142)) {
      throw toJs(castTo(e, 142));
    }
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Couldn't have caught this exception from a Runnable! " + e
      )
    );
  }
};
jus.$terminate = function $terminate(this$static) {
  if (!this$static.root_0) {
    jus.$throwIfTerminated(this$static);
    this$static.terminated = true;
  } else {
    jus.$terminate(this$static.root_0);
  }
};
jus.$throwIfTerminated = function $throwIfTerminated(this$static) {
  if (this$static.root_0) {
    jus.$throwIfTerminated(this$static.root_0);
  } else if (this$static.terminated) {
    throw toJs(
      new jl.IllegalStateException_0(
        "Stream already terminated, can't be modified or used"
      )
    );
  }
};
jus.TerminatableStream = function TerminatableStream(previous) {
  jus.$$init_73(this);
  if (!previous) {
    this.root_0 = null;
    this.onClose = new ju.ArrayList();
  } else {
    this.root_0 = previous;
    this.onClose = null;
  }
};
jus.lambda$0_20 = function lambda$0_20(throwables_0, runnable_1) {
  var e;
  try {
    runnable_1.run();
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      e = $e0;
      throwables_0.array[throwables_0.array.length] = e;
    } else throw toJs($e0);
  }
};
defineClass(187, 1, {});
_.close_0 = function close_11() {
  jus.$close_6(this);
};
_.terminated = false;
jus.concat = function concat(a, b) {
  var result, spliterator, spliteratorOfStreams;
  spliteratorOfStreams = new ju.Spliterators$IteratorSpliterator(
    new ju.Arrays$ArrayList(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_util_stream_Stream_2_classLit, 1),
        $intern_7,
        232,
        0,
        [a, b]
      )
    ),
    16
  );
  spliterator = new jus.Stream$2(spliteratorOfStreams);
  result = new jus.StreamImpl(null, spliterator);
  return castTo(
    castTo(
      castTo(
        jus.$onClose_0(result, new jus.Stream$0methodref$close$Type(a)),
        197
      ),
      232
    ).onClose_0(new jus.Stream$1methodref$close$Type(b)),
    232
  );
};
jus.of_5 = function of_5(values) {
  return new jus.StreamImpl(null, ju.spliterator_5(values, values.length));
};
jus.$clinit_StreamImpl = function $clinit_StreamImpl() {
  jus.$clinit_StreamImpl = emptyMethod;
  jus.NULL_CONSUMER = new jus.StreamImpl$lambda$0$Type();
};
jus.$anyMatch_0 = function $anyMatch_0(this$static, predicate) {
  return (jus.$throwIfTerminated(this$static),
  jus.$spliterator_13(
    new jus.StreamImpl(
      this$static,
      new jus.StreamImpl$FilterSpliterator(predicate, this$static.spliterator)
    )
  )).tryAdvance(jus.NULL_CONSUMER);
};
jus.$close_7 = function $close_7(this$static) {
  jus.$close_6(this$static);
};
jus.$collect_1 = function $collect_1(this$static, collector) {
  var lastArg;
  return collector.finisher.apply_1(
    jus.$reduce(
      this$static,
      collector.supplier.get_0(),
      ((lastArg = new jus.StreamImpl$lambda$4$Type(collector)), lastArg)
    )
  );
};
jus.$distinct_0 = function $distinct_0(this$static) {
  var seen;
  jus.$throwIfTerminated(this$static);
  seen = new ju.HashSet();
  return jus.$filter_1(
    this$static,
    new jus.StreamImpl$1methodref$add$Type(seen)
  );
};
jus.$filter_1 = function $filter_1(this$static, predicate) {
  jus.$throwIfTerminated(this$static);
  return new jus.StreamImpl(
    this$static,
    new jus.StreamImpl$FilterSpliterator(predicate, this$static.spliterator)
  );
};
jus.$findFirst = function $findFirst(this$static) {
  var holder;
  jus.$terminate(this$static);
  holder = new jus.StreamImpl$ValueConsumer();
  if (this$static.spliterator.tryAdvance(holder)) {
    return (
      ju.$clinit_Optional(),
      new ju.Optional(ji.checkCriticalNotNull(holder.value_0))
    );
  }
  return ju.$clinit_Optional(), ju.$clinit_Optional(), ju.EMPTY_1;
};
jus.$flatMap = function $flatMap(this$static, mapper) {
  var flatMapSpliterator, spliteratorOfStreams;
  jus.$throwIfTerminated(this$static);
  spliteratorOfStreams = new jus.StreamImpl$MapToObjSpliterator(
    mapper,
    this$static.spliterator
  );
  flatMapSpliterator = new jus.StreamImpl$1(spliteratorOfStreams);
  return new jus.StreamImpl(this$static, flatMapSpliterator);
};
jus.$flatMapToInt = function $flatMapToInt(this$static, mapper) {
  var flatMapSpliterator, spliteratorOfStreams;
  jus.$throwIfTerminated(this$static);
  spliteratorOfStreams = new jus.StreamImpl$MapToObjSpliterator(
    mapper,
    this$static.spliterator
  );
  flatMapSpliterator = new jus.StreamImpl$2(spliteratorOfStreams);
  return new jus.IntStreamImpl(this$static, flatMapSpliterator);
};
jus.$flatMapToLong = function $flatMapToLong(this$static, mapper) {
  var flatMapSpliterator, spliteratorOfStreams;
  jus.$throwIfTerminated(this$static);
  spliteratorOfStreams = new jus.StreamImpl$MapToObjSpliterator(
    mapper,
    this$static.spliterator
  );
  flatMapSpliterator = new jus.StreamImpl$3(spliteratorOfStreams);
  return new jus.LongStreamImpl(this$static, flatMapSpliterator);
};
jus.$forEach_6 = function $forEach_6(this$static, action) {
  jus.$terminate(this$static);
  this$static.spliterator.forEachRemaining(action);
};
jus.$iterator_21 = function $iterator_21(this$static) {
  return new ju.Spliterators$ConsumerIterator(
    (jus.$terminate(this$static), this$static.spliterator)
  );
};
jus.$map_0 = function $map_0(this$static, mapper) {
  jus.$throwIfTerminated(this$static);
  return new jus.StreamImpl(
    this$static,
    new jus.StreamImpl$MapToObjSpliterator(mapper, this$static.spliterator)
  );
};
jus.$mapToInt = function $mapToInt(this$static, mapper) {
  jus.$throwIfTerminated(this$static);
  return new jus.IntStreamImpl(
    this$static,
    new jus.StreamImpl$MapToIntSpliterator(mapper, this$static.spliterator)
  );
};
jus.$mapToLong = function $mapToLong(this$static, mapper) {
  jus.$throwIfTerminated(this$static);
  return new jus.LongStreamImpl(
    this$static,
    new jus.StreamImpl$MapToLongSpliterator(mapper, this$static.spliterator)
  );
};
jus.$noneMatch_0 = function $noneMatch_0(this$static, predicate) {
  return !(jus.$throwIfTerminated(this$static),
  jus.$spliterator_13(
    new jus.StreamImpl(
      this$static,
      new jus.StreamImpl$FilterSpliterator(predicate, this$static.spliterator)
    )
  )).tryAdvance(jus.NULL_CONSUMER);
};
jus.$onClose_1 = function $onClose_1(this$static, arg0) {
  return jus.$onClose_0(this$static, arg0);
};
jus.$peek_0 = function $peek_0(this$static, action) {
  var peekSpliterator;
  ji.checkCriticalNotNull(action);
  jus.$throwIfTerminated(this$static);
  peekSpliterator = new jus.StreamImpl$6(
    this$static,
    this$static.spliterator.estimateSize_0(),
    this$static.spliterator.characteristics_0(),
    action
  );
  return new jus.StreamImpl(this$static, peekSpliterator);
};
jus.$reduce = function $reduce(this$static, identity, accumulator) {
  var consumer;
  jus.$terminate(this$static);
  consumer = new jus.StreamImpl$ValueConsumer();
  consumer.value_0 = identity;
  this$static.spliterator.forEachRemaining(
    new jus.StreamImpl$lambda$5$Type(consumer, accumulator)
  );
  return consumer.value_0;
};
jus.$reduce_0 = function $reduce_0(this$static, accumulator) {
  var consumer;
  consumer = new jus.StreamImpl$ValueConsumer();
  if (!this$static.spliterator.tryAdvance(consumer)) {
    jus.$terminate(this$static);
    return ju.$clinit_Optional(), ju.$clinit_Optional(), ju.EMPTY_1;
  }
  return (
    ju.$clinit_Optional(),
    new ju.Optional(
      ji.checkCriticalNotNull(
        jus.$reduce(this$static, consumer.value_0, accumulator)
      )
    )
  );
};
jus.$spliterator_13 = function $spliterator_13(this$static) {
  jus.$terminate(this$static);
  return this$static.spliterator;
};
jus.$toArray_6 = function $toArray_6(this$static, generator) {
  var collected;
  collected = castTo(
    jus.$collect_1(
      this$static,
      jus.of_4(
        new jus.Collectors$21methodref$ctor$Type(),
        new jus.Collectors$20methodref$add$Type(),
        new jus.Collectors$lambda$42$Type(),
        stampJavaTypeInfo(
          getClassLiteralForArray(
            cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
            1
          ),
          $intern_17,
          48,
          0,
          [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
        )
      )
    ),
    79
  );
  return collected.toArray_0(castToArray(generator.apply_2(collected.size())));
};
jus.StreamImpl = function StreamImpl(prev, spliterator) {
  jus.$clinit_StreamImpl();
  jus.TerminatableStream.call(this, prev);
  this.spliterator = spliterator;
};
jus.lambda$4_12 = function lambda$4_12(collector_0, a_1, t_2) {
  jus.$clinit_StreamImpl();
  collector_0.accumulator.accept_1(a_1, t_2);
  return a_1;
};
jus.lambda$5_10 = function lambda$5_10(consumer_0, accumulator_1, item_2) {
  jus.$clinit_StreamImpl();
  jus.$accept_5(consumer_0, accumulator_1.apply_4(consumer_0.value_0, item_2));
};
defineClass(20, 187, $intern_18, jus.StreamImpl);
_.close_0 = function close_16() {
  jus.$close_7(this);
};
_.onClose_0 = function onClose_4(arg0) {
  return jus.$onClose_1(this, arg0);
};
_.iterator_0 = function iterator_32() {
  return jus.$iterator_21(this);
};
_.map_1 = function map_1(mapper) {
  return jus.$map_0(this, mapper);
};
_.spliterator_0 = function spliterator_16() {
  return jus.$spliterator_13(this);
};
_.toArray_1 = function toArray_9(generator) {
  return jus.$toArray_6(this, generator);
};
jus.StreamImpl$0methodref$lambda$2$Type =
  function StreamImpl$0methodref$lambda$2$Type() {};
defineClass(276, 1, {}, jus.StreamImpl$0methodref$lambda$2$Type);
_.apply_2 = function apply_265(arg0) {
  return (
    jus.$clinit_StreamImpl(),
    initUnidimensionalArray(
      cggl.Ljava_lang_Object_2_classLit,
      $intern_7,
      1,
      arg0,
      5,
      1
    )
  );
};
jus.$lambda$0_22 = function $lambda$0_22(this$static, action_1, u_1) {
  action_1.accept(this$static.map_0.apply_1(u_1));
};
jus.$tryAdvance_14 = function $tryAdvance_14(this$static, action) {
  return this$static.original.tryAdvance(
    new jus.StreamImpl$MapToObjSpliterator$lambda$0$Type(this$static, action)
  );
};
jus.StreamImpl$MapToObjSpliterator = function StreamImpl$MapToObjSpliterator(
  map_0,
  original
) {
  ju.Spliterators$AbstractSpliterator.call(
    this,
    original.estimateSize_0(),
    original.characteristics_0() & -6
  );
  ji.checkCriticalNotNull(map_0);
  this.map_0 = map_0;
  this.original = original;
};
defineClass(267, 145, {}, jus.StreamImpl$MapToObjSpliterator);
_.tryAdvance = function tryAdvance_24(action) {
  return jus.$tryAdvance_14(this, action);
};
jus.StreamImpl$MapToObjSpliterator$lambda$0$Type =
  function StreamImpl$MapToObjSpliterator$lambda$0$Type($$outer_0, action_1) {
    this.$$outer_0 = $$outer_0;
    this.action_1 = action_1;
  };
defineClass(
  777,
  1,
  $intern_19,
  jus.StreamImpl$MapToObjSpliterator$lambda$0$Type
);
_.accept = function accept_123(arg0) {
  jus.$lambda$0_22(this.$$outer_0, this.action_1, arg0);
};
jus.$accept_5 = function $accept_5(this$static, value_0) {
  this$static.value_0 = value_0;
};
jus.StreamImpl$ValueConsumer = function StreamImpl$ValueConsumer() {};
defineClass(300, 1, $intern_19, jus.StreamImpl$ValueConsumer);
_.accept = function accept_124(value_0) {
  jus.$accept_5(this, value_0);
};
jus.StreamImpl$lambda$0$Type = function StreamImpl$lambda$0$Type() {};
defineClass(781, 1, $intern_19, jus.StreamImpl$lambda$0$Type);
_.accept = function accept_125(arg0) {
  jus.$clinit_StreamImpl();
};
jus.StreamImpl$lambda$4$Type = function StreamImpl$lambda$4$Type(collector_0) {
  this.collector_0 = collector_0;
};
defineClass(782, 1, {}, jus.StreamImpl$lambda$4$Type);
_.apply_4 = function apply_266(arg0, arg1) {
  return jus.lambda$4_12(this.collector_0, arg0, arg1);
};
jus.StreamImpl$lambda$5$Type = function StreamImpl$lambda$5$Type(
  consumer_0,
  accumulator_1
) {
  this.consumer_0 = consumer_0;
  this.accumulator_1 = accumulator_1;
};
defineClass(783, 1, $intern_19, jus.StreamImpl$lambda$5$Type);
_.accept = function accept_126(arg0) {
  jus.lambda$5_10(this.consumer_0, this.accumulator_1, arg0);
};
ji.clone = function clone(array, toIndex) {
  var result;
  result = ji.uncheckedCast(array).slice(0, toIndex);
  return ji.stampJavaTypeInfo_1(result, array);
};
ji.copy_3 = function copy_3(src_0, srcOfs, dest, destOfs, len, overwrite) {
  var batchEnd, batchStart, destArray, end, spliceArgs;
  if (src_0 === dest) {
    src_0 = ji.uncheckedCast(src_0).slice(srcOfs, srcOfs + len);
    srcOfs = 0;
  }
  destArray = ji.uncheckedCast(dest);
  for (batchStart = srcOfs, end = srcOfs + len; batchStart < end; ) {
    batchEnd = $wnd.Math.min(batchStart + 10000, end);
    len = batchEnd - batchStart;
    spliceArgs = ji.uncheckedCast(src_0).slice(batchStart, batchEnd);
    ji.uncheckedCast(spliceArgs).splice(0, 0, destOfs, overwrite ? len : 0);
    Array.prototype.splice.apply(destArray, spliceArgs);
    batchStart = batchEnd;
    destOfs += len;
  }
};
ji.insertTo = function insertTo(array, index_0, value_0) {
  ji.uncheckedCast(array).splice(index_0, 0, value_0);
};
ji.insertTo_0 = function insertTo_0(array, index_0, values) {
  ji.copy_3(values, 0, array, index_0, values.length, false);
};
ji.removeFrom = function removeFrom(array, index_0, deleteCount) {
  ji.uncheckedCast(array).splice(index_0, deleteCount);
};
ji.setLength = function setLength(array, length_0) {
  ji.uncheckedCast(array).length = length_0;
};
defineClass(4686, 1, {});
ji.stampJavaTypeInfo_1 = function stampJavaTypeInfo_1(array, referenceType) {
  return cggl.stampJavaTypeInfo_0(array, referenceType);
};
ji.checkCriticalArgument = function checkCriticalArgument(expression) {
  if (!expression) {
    throw toJs(new jl.IllegalArgumentException());
  }
};
ji.checkCriticalArgument_0 = function checkCriticalArgument_0(
  expression,
  errorMessage
) {
  if (!expression) {
    throw toJs(new jl.IllegalArgumentException_0(errorMessage));
  }
};
ji.checkCriticalArgument_1 = function checkCriticalArgument_1(
  expression,
  errorMessageArgs
) {
  if (!expression) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        ji.format_4("Enum constant undefined: %s", errorMessageArgs)
      )
    );
  }
};
ji.checkCriticalArrayBounds_0 = function checkCriticalArrayBounds_0(
  end,
  length_0
) {
  if (0 > end) {
    throw toJs(
      new jl.IllegalArgumentException_0("fromIndex: 0 > toIndex: " + end)
    );
  }
  if (end > length_0) {
    throw toJs(
      new jl.ArrayIndexOutOfBoundsException(
        "fromIndex: 0, toIndex: " + end + ", length: " + length_0
      )
    );
  }
};
ji.checkCriticalArraySize = function checkCriticalArraySize(size_0) {
  if (size_0 < 0) {
    throw toJs(
      new jl.NegativeArraySizeException("Negative array size: " + size_0)
    );
  }
};
ji.checkCriticalArrayType = function checkCriticalArrayType(expression) {
  if (!expression) {
    throw toJs(new jl.ArrayStoreException());
  }
};
ji.checkCriticalArrayType_0 = function checkCriticalArrayType_0(
  expression,
  errorMessage
) {
  if (!expression) {
    throw toJs(new jl.ArrayStoreException_0(errorMessage));
  }
};
ji.checkCriticalElement = function checkCriticalElement(expression) {
  if (!expression) {
    throw toJs(new ju.NoSuchElementException());
  }
};
ji.checkCriticalElementIndex = function checkCriticalElementIndex(
  index_0,
  size_0
) {
  if (index_0 < 0 || index_0 >= size_0) {
    throw toJs(
      new jl.IndexOutOfBoundsException_0(
        "Index: " + index_0 + ", Size: " + size_0
      )
    );
  }
};
ji.checkCriticalNotNull = function checkCriticalNotNull(reference) {
  if (reference == null) {
    throw toJs(new jl.NullPointerException());
  }
  return reference;
};
ji.checkCriticalNotNull_0 = function checkCriticalNotNull_0(
  reference,
  errorMessage
) {
  if (reference == null) {
    throw toJs(new jl.NullPointerException_1(errorMessage));
  }
};
ji.checkCriticalPositionIndex = function checkCriticalPositionIndex(
  index_0,
  size_0
) {
  if (index_0 < 0 || index_0 > size_0) {
    throw toJs(
      new jl.IndexOutOfBoundsException_0(
        "Index: " + index_0 + ", Size: " + size_0
      )
    );
  }
};
ji.checkCriticalPositionIndexes = function checkCriticalPositionIndexes(
  start_0,
  end,
  size_0
) {
  if (start_0 < 0 || end > size_0) {
    throw toJs(
      new jl.IndexOutOfBoundsException_0(
        "fromIndex: " + start_0 + ", toIndex: " + end + ", size: " + size_0
      )
    );
  }
  if (start_0 > end) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "fromIndex: " + start_0 + " > toIndex: " + end
      )
    );
  }
};
ji.checkCriticalState = function checkCriticalState(expression) {
  if (!expression) {
    throw toJs(new jl.IllegalStateException());
  }
};
ji.checkCriticalState_0 = function checkCriticalState_0(expression) {
  if (!expression) {
    throw toJs(new jl.IllegalStateException_0("Builder already built"));
  }
};
ji.checkCriticalStringBounds = function checkCriticalStringBounds(
  start_0,
  end,
  length_0
) {
  if (start_0 < 0 || end > length_0 || end < start_0) {
    throw toJs(
      new jl.StringIndexOutOfBoundsException(
        "fromIndex: " + start_0 + ", toIndex: " + end + ", length: " + length_0
      )
    );
  }
};
ji.checkCriticalStringElementIndex = function checkCriticalStringElementIndex(
  index_0,
  size_0
) {
  if (index_0 < 0 || index_0 >= size_0) {
    throw toJs(
      new jl.StringIndexOutOfBoundsException(
        "Index: " + index_0 + ", Size: " + size_0
      )
    );
  }
};
ji.checkCriticalType = function checkCriticalType(expression) {
  if (!expression) {
    throw toJs(new jl.ClassCastException_0());
  }
};
ji.format_4 = function format_4(template, args) {
  var builder, i, placeholderStart, templateStart;
  template = template == null ? "null" : template;
  builder =
    (ji.uncheckedCast(template).length + 16 * args.length,
    new jl.StringBuilder_0());
  templateStart = 0;
  i = 0;
  while (i < args.length) {
    placeholderStart = ji.uncheckedCast(template).indexOf("%s", templateStart);
    if (placeholderStart == -1) {
      break;
    }
    jl.$append_9(
      builder,
      ji
        .uncheckedCast(template)
        .substr(templateStart, placeholderStart - templateStart)
    );
    jl.$append_8(builder, args[i++]);
    templateStart = placeholderStart + 2;
  }
  jl.$append_9(builder, ji.uncheckedCast(template).substr(templateStart));
  if (i < args.length) {
    builder.string += " [";
    jl.$append_8(builder, args[i++]);
    while (i < args.length) {
      builder.string += ", ";
      jl.$append_8(builder, args[i++]);
    }
    builder.string += "]";
  }
  return builder.string;
};
ji.getProperty_0 = function getProperty_0(map_0, key) {
  return map_0[key];
};
ji.isUndefined = function isUndefined(value_0) {
  return value_0 === undefined;
};
ji.setProperty = function setProperty(map_0, key, value_0) {
  map_0[key] = value_0;
};
ji.uncheckedCast = function uncheckedCast(o) {
  return o;
};
ji.unsafeCastToBoolean = function unsafeCastToBoolean(bool) {
  return bool;
};
ji.unsafeCastToDouble = function unsafeCastToDouble(number) {
  return number;
};
defineClass(4682, 1, {});
ji.getHashCode_1 = function getHashCode_1(o) {
  return o.$H || (o.$H = ji.getNextHashId());
};
ji.getNextHashId = function getNextHashId() {
  return ++ji.nextHashId;
};
ji.nextHashId = 0;
ji.$clinit_StringHashCache = function $clinit_StringHashCache() {
  ji.$clinit_StringHashCache = emptyMethod;
  ji.back_0 = new Object_0();
  ji.front = new Object_0();
};
ji.compute = function compute(str) {
  var hashCode, i, n, nBatch;
  hashCode = 0;
  n = ji.uncheckedCast(str).length;
  nBatch = n - 4;
  i = 0;
  while (i < nBatch) {
    hashCode =
      (ji.checkCriticalStringElementIndex(i + 3, ji.uncheckedCast(str).length),
      ji.uncheckedCast(str).charCodeAt(i + 3) +
        (ji.checkCriticalStringElementIndex(
          i + 2,
          ji.uncheckedCast(str).length
        ),
        31 *
          (ji.uncheckedCast(str).charCodeAt(i + 2) +
            (ji.checkCriticalStringElementIndex(
              i + 1,
              ji.uncheckedCast(str).length
            ),
            31 *
              (ji.uncheckedCast(str).charCodeAt(i + 1) +
                (ji.checkCriticalStringElementIndex(
                  i,
                  ji.uncheckedCast(str).length
                ),
                31 *
                  (ji.uncheckedCast(str).charCodeAt(i) + 31 * hashCode)))))));
    hashCode = hashCode | 0;
    i += 4;
  }
  while (i < n) {
    hashCode = hashCode * 31 + jl.$charAt_0(str, i++);
  }
  hashCode = hashCode | 0;
  return hashCode;
};
ji.getHashCode_2 = function getHashCode_2(str) {
  ji.$clinit_StringHashCache();
  var hashCode, key, result;
  key = ":" + str;
  result = ji.getProperty_0(ji.front, key);
  if (result != null) {
    return round_int(
      ji.unsafeCastToDouble((ji.checkCriticalNotNull(result), result))
    );
  }
  result = ji.getProperty_0(ji.back_0, key);
  hashCode =
    result == null
      ? ji.compute(str)
      : round_int(
          ji.unsafeCastToDouble((ji.checkCriticalNotNull(result), result))
        );
  ji.increment();
  ji.setProperty(ji.front, key, ji.uncheckedCast(hashCode));
  return hashCode;
};
ji.increment = function increment() {
  if (ji.count_0 == 256) {
    ji.back_0 = ji.front;
    ji.front = new Object_0();
    ji.count_0 = 0;
  }
  ++ji.count_0;
};
ji.count_0 = 0;
cggl.Ljava_lang_Object_2_classLit = createForClass("java.lang", "Object", 1);
cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass(
  "com.google.gwt.core.client",
  "JavaScriptObject$",
  0
);
cggl.Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit =
  createForClass(
    "com.google.gwt.core.client.impl",
    "StackTraceCreator/Collector",
    929
  );
cggl.Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorLegacy_2_classLit =
  createForClass(
    "com.google.gwt.core.client.impl",
    "StackTraceCreator/CollectorLegacy",
    708
  );
cggl.Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModern_2_classLit =
  createForClass(
    "com.google.gwt.core.client.impl",
    "StackTraceCreator/CollectorModern",
    930
  );
cggl.Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModernNoSourceMap_2_classLit =
  createForClass(
    "com.google.gwt.core.client.impl",
    "StackTraceCreator/CollectorModernNoSourceMap",
    709
  );
cggl.Ljava_lang_Throwable_2_classLit = createForClass(
  "java.lang",
  "Throwable",
  25
);
cggl.Ljava_lang_Exception_2_classLit = createForClass(
  "java.lang",
  "Exception",
  41
);
cggl.Ljava_lang_RuntimeException_2_classLit = createForClass(
  "java.lang",
  "RuntimeException",
  26
);
cggl.Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass(
  "java.lang",
  "IndexOutOfBoundsException",
  109
);
cggl.Ljava_lang_ArrayIndexOutOfBoundsException_2_classLit = createForClass(
  "java.lang",
  "ArrayIndexOutOfBoundsException",
  335
);
cggl.Ljava_lang_ArrayStoreException_2_classLit = createForClass(
  "java.lang",
  "ArrayStoreException",
  365
);
cggl.Ljava_lang_Boolean_2_classLit = createForClass(
  "java.lang",
  "Boolean",
  337
);
cggl.Ljava_lang_Class_2_classLit = createForClass("java.lang", "Class", 331);
cggl.Ljava_lang_ClassCastException_2_classLit = createForClass(
  "java.lang",
  "ClassCastException",
  350
);
cggl.Ljava_lang_Number_2_classLit = createForClass("java.lang", "Number", 114);
cggl.Ljava_lang_Double_2_classLit = createForClass("java.lang", "Double", 392);
cggl.Ljava_lang_Enum_2_classLit = createForClass("java.lang", "Enum", 37);
cggl.Ljava_lang_IllegalArgumentException_2_classLit = createForClass(
  "java.lang",
  "IllegalArgumentException",
  19
);
cggl.Ljava_lang_IllegalStateException_2_classLit = createForClass(
  "java.lang",
  "IllegalStateException",
  45
);
cggl.Ljava_lang_Integer_2_classLit = createForClass("java.lang", "Integer", 98);
cggl.Ljava_lang_JsException_2_classLit = createForClass(
  "java.lang",
  "JsException",
  195
);
cggl.Ljava_lang_NullPointerException_2_classLit = createForClass(
  "java.lang",
  "NullPointerException",
  194
);
cggl.Ljava_lang_String_2_classLit = createForClass("java.lang", "String", 2);
cggl.Ljava_lang_StringIndexOutOfBoundsException_2_classLit = createForClass(
  "java.lang",
  "StringIndexOutOfBoundsException",
  357
);
cggl.Ljava_lang_Throwable$lambda$0$Type_2_classLit = createForClass(
  "java.lang",
  "Throwable/lambda$0$Type",
  377
);
cggl.Ljava_lang_UnsupportedOperationException_2_classLit = createForClass(
  "java.lang",
  "UnsupportedOperationException",
  46
);
cggl.Ljava_util_AbstractCollection_2_classLit = createForClass(
  "java.util",
  "AbstractCollection",
  908
);
cggl.Ljava_util_AbstractList_2_classLit = createForClass(
  "java.util",
  "AbstractList",
  920
);
cggl.Ljava_util_Iterator_2_classLit = createForInterface(
  "java.util",
  "Iterator"
);
cggl.Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass(
  "java.util",
  "AbstractList/IteratorImpl",
  72
);
cggl.Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass(
  "java.util",
  "AbstractList/ListIteratorImpl",
  293
);
cggl.Ljava_util_AbstractList$SubList_2_classLit = createForClass(
  "java.util",
  "AbstractList/SubList",
  348
);
cggl.Ljava_util_AbstractMap_2_classLit = createForClass(
  "java.util",
  "AbstractMap",
  931
);
cggl.Ljava_util_AbstractSet_2_classLit = createForClass(
  "java.util",
  "AbstractSet",
  909
);
cggl.Ljava_util_AbstractMap$1_2_classLit = createForClass(
  "java.util",
  "AbstractMap/1",
  92
);
cggl.Ljava_util_AbstractMap$1$1_2_classLit = createForClass(
  "java.util",
  "AbstractMap/1/1",
  101
);
cggl.Ljava_util_AbstractMap$2_2_classLit = createForClass(
  "java.util",
  "AbstractMap/2",
  88
);
cggl.Ljava_util_AbstractMap$2$1_2_classLit = createForClass(
  "java.util",
  "AbstractMap/2/1",
  297
);
cggl.Ljava_util_AbstractMap$AbstractEntry_2_classLit = createForClass(
  "java.util",
  "AbstractMap/AbstractEntry",
  214
);
cggl.Ljava_util_AbstractMap$SimpleEntry_2_classLit = createForClass(
  "java.util",
  "AbstractMap/SimpleEntry",
  160
);
cggl.Ljava_util_ArrayList_2_classLit = createForClass(
  "java.util",
  "ArrayList",
  10
);
cggl.Ljava_util_ArrayList$1_2_classLit = createForClass(
  "java.util",
  "ArrayList/1",
  85
);
cggl.Ljava_util_Collections$EmptyList_2_classLit = createForClass(
  "java.util",
  "Collections/EmptyList",
  745
);
cggl.Ljava_util_Collections$EmptyListIterator_2_classLit = createForClass(
  "java.util",
  "Collections/EmptyListIterator",
  746
);
cggl.Ljava_util_Collections$EmptyMap_2_classLit = createForClass(
  "java.util",
  "Collections/EmptyMap",
  748
);
cggl.Ljava_util_Collections$EmptySet_2_classLit = createForClass(
  "java.util",
  "Collections/EmptySet",
  747
);
cggl.Ljava_util_NoSuchElementException_2_classLit = createForClass(
  "java.util",
  "NoSuchElementException",
  119
);
cggl.Ljava_util_Spliterators$BaseSpliterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/BaseSpliterator",
  279
);
cggl.Ljava_util_Spliterators$AbstractSpliterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/AbstractSpliterator",
  145
);
cggl.Ljava_util_Spliterators$BaseArraySpliterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/BaseArraySpliterator",
  336
);
cggl.Ljava_util_Spliterators$ArraySpliterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/ArraySpliterator",
  386
);
cggl.Ljava_util_function_Consumer_2_classLit = createForInterface(
  "java.util.function",
  "Consumer"
);
cggl.Ljava_util_function_Function$lambda$0$Type_2_classLit = createForClass(
  "java.util.function",
  "Function/lambda$0$Type",
  143
);
cggl.Ljava_util_stream_Collector$Characteristics_2_classLit = createForEnum(
  "java.util.stream",
  "Collector/Characteristics",
  48,
  jus.values_12
);
cggl.Ljava_util_stream_CollectorImpl_2_classLit = createForClass(
  "java.util.stream",
  "CollectorImpl",
  362
);
cggl.Ljava_util_stream_Collectors$20methodref$add$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/20methodref$add$Type", 133);
cggl.Ljava_util_stream_Collectors$21methodref$ctor$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/21methodref$ctor$Type", 135);
cggl.Ljava_util_stream_Collectors$lambda$42$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$42$Type",
  134
);
cggl.Ljava_util_stream_TerminatableStream_2_classLit = createForClass(
  "java.util.stream",
  "TerminatableStream",
  187
);
cggl.Ljava_util_stream_Stream_2_classLit = createForInterface(
  "java.util.stream",
  "Stream"
);
cggl.Ljava_util_stream_StreamImpl_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl",
  20
);
cggl.Ljava_util_stream_StreamImpl$0methodref$lambda$2$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "StreamImpl/0methodref$lambda$2$Type",
    276
  );
cggl.Ljava_util_stream_StreamImpl$MapToObjSpliterator_2_classLit =
  createForClass("java.util.stream", "StreamImpl/MapToObjSpliterator", 267);
cggl.Ljava_util_stream_StreamImpl$MapToObjSpliterator$lambda$0$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "StreamImpl/MapToObjSpliterator/lambda$0$Type",
    777
  );
cggl.Ljava_util_stream_StreamImpl$ValueConsumer_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/ValueConsumer",
  300
);
cggl.Ljava_util_stream_StreamImpl$lambda$0$Type_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/lambda$0$Type",
  781
);
cggl.Ljava_util_stream_StreamImpl$lambda$4$Type_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/lambda$4$Type",
  782
);
cggl.Ljava_util_stream_StreamImpl$lambda$5$Type_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/lambda$5$Type",
  783
);
function reportUncaughtException(e) {
  cggcci.$clinit_Impl();
  cggcci.reportToBrowser(instanceOf(e, 141) ? castTo(e, 141).getThrown() : e);
}

cggcci.JavaScriptExceptionBase = function JavaScriptExceptionBase(e) {
  jl.JsException_0.call(this, e);
};
defineClass(773, 195, $intern_6);
cggl.Lcom_google_gwt_core_client_impl_JavaScriptExceptionBase_2_classLit =
  createForClass(
    "com.google.gwt.core.client.impl",
    "JavaScriptExceptionBase",
    773
  );
cggcc.$clinit_JavaScriptException = function $clinit_JavaScriptException() {
  cggcc.$clinit_JavaScriptException = emptyMethod;
  cggcc.NOT_SET = new Object_0();
};
cggcc.$$init_0 = function $$init_0(this$static) {
  this$static.description_0 = "";
};
cggcc.$ensureInit = function $ensureInit(this$static) {
  var exception;
  if (this$static.message_0 == null) {
    exception =
      maskUndefined(this$static.e) === maskUndefined(cggcc.NOT_SET)
        ? null
        : this$static.e;
    this$static.name_0 =
      exception == null
        ? "null"
        : instanceOfJso(exception)
        ? cggcc.getExceptionName0(castToJso(exception))
        : instanceOfString(exception)
        ? "String"
        : jl.$getName_0(jl.getClass__Ljava_lang_Class___devirtual$(exception));
    this$static.description_0 =
      this$static.description_0 +
      ": " +
      (instanceOfJso(exception)
        ? cggcc.getExceptionDescription0(castToJso(exception))
        : exception + "");
    this$static.message_0 =
      "(" + this$static.name_0 + ") " + this$static.description_0;
  }
};
cggcc.$getThrown = function $getThrown(this$static) {
  return maskUndefined(this$static.e) === maskUndefined(cggcc.NOT_SET)
    ? null
    : this$static.e;
};
cggcc.JavaScriptException = function JavaScriptException(e) {
  cggcc.$clinit_JavaScriptException();
  cggcc.JavaScriptException_0.call(this, e);
};
cggcc.JavaScriptException_0 = function JavaScriptException_0(e) {
  cggcci.JavaScriptExceptionBase.call(this, e);
  cggcc.$$init_0(this);
  this.e = e;
  this.description_0 = "";
};
cggcc.getExceptionDescription0 = function getExceptionDescription0(e) {
  return e == null ? null : e.message;
};
cggcc.getExceptionName0 = function getExceptionName0(e) {
  return e == null ? null : e.name;
};
defineClass(
  141,
  773,
  { 141: 1, 3: 1, 41: 1, 26: 1, 25: 1 },
  cggcc.JavaScriptException
);
_.getMessage_0 = function getMessage_0() {
  cggcc.$ensureInit(this);
  return this.message_0;
};
_.getThrown = function getThrown() {
  return cggcc.$getThrown(this);
};
cggl.Lcom_google_gwt_core_client_JavaScriptException_2_classLit =
  createForClass("com.google.gwt.core.client", "JavaScriptException", 141);
cggcc.$get = function $get(this$static, index_0) {
  return this$static[index_0];
};
cggcc.$length = function $length(this$static) {
  return this$static.length;
};
cggcc.$push = function $push(this$static, value_0) {
  this$static[this$static.length] = value_0;
};
cggcc.$get_0 = function $get_0(this$static, index_0) {
  return this$static[index_0];
};
cggcc.$length_0 = function $length_0(this$static) {
  return this$static.length;
};
cggcc.$get_1 = function $get_1(this$static, index_0) {
  return this$static[index_0];
};
cggcc.$length_1 = function $length_1(this$static) {
  return this$static.length;
};
cggcc.now_1 = function now_1() {
  if (Date.now) {
    return Date.now();
  }
  return new Date().getTime();
};
cggcc.safeEval = function safeEval(json) {
  try {
    return JSON.parse(json);
  } catch (e) {
    return cggcc.throwIllegalArgumentException(
      "Error parsing JSON: " + e,
      json
    );
  }
};
cggcc.throwIllegalArgumentException = function throwIllegalArgumentException(
  message,
  data_0
) {
  throw toJs(new jl.IllegalArgumentException_0(message + "\n" + data_0));
};
defineClass(892, 1, {});
cggl.Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass(
  "com.google.gwt.core.client",
  "Scheduler",
  892
);
cggcci.$clinit_Impl = function $clinit_Impl() {
  cggcci.$clinit_Impl = emptyMethod;
  !!(cggcci.$clinit_StackTraceCreator(), cggcci.collector_1);
};
cggcci.apply_0 = function apply_0(jsFunction, thisObj, args) {
  return jsFunction.apply(thisObj, args);
  var __0;
};
cggcci.enter = function enter() {
  var now_0;
  if (entryDepth < 0) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Negative entryDepth value at entry " + entryDepth
      )
    );
  }
  if (entryDepth != 0) {
    now_0 = cggcc.now_1();
    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {
      watchdogEntryDepthLastScheduled = now_0;
      watchdogEntryDepthTimerId = cggcci.watchdogEntryDepthSchedule();
    }
  }
  if (entryDepth++ == 0) {
    cggcci.$flushEntryCommands(
      (cggcci.$clinit_SchedulerImpl(), cggcci.INSTANCE)
    );
    return true;
  }
  return false;
};
function entry_0(jsFunction) {
  cggcci.$clinit_Impl();
  return function () {
    return cggcci.entry0(jsFunction, this, arguments);
    var __0;
  };
}

cggcci.entry0 = function entry0(jsFunction, thisObj, args) {
  var initialEntry;
  initialEntry = cggcci.enter();
  try {
    return cggcci.apply_0(jsFunction, thisObj, args);
  } finally {
    cggcci.exit(initialEntry);
  }
};
cggcci.exit = function exit(initialEntry) {
  initialEntry &&
    cggcci.$flushFinallyCommands(
      (cggcci.$clinit_SchedulerImpl(), cggcci.INSTANCE)
    );
  --entryDepth;
  if (entryDepth < 0) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Negative entryDepth value at exit " + entryDepth)
    );
  }
  if (initialEntry) {
    if (entryDepth != 0) {
      debugger;
      throw toJs(new jl.AssertionError_0("Depth not 0" + entryDepth));
    }
    if (watchdogEntryDepthTimerId != -1) {
      cggcci.watchdogEntryDepthCancel(watchdogEntryDepthTimerId);
      watchdogEntryDepthTimerId = -1;
    }
  }
};
cggcci.reportToBrowser = function reportToBrowser(e) {
  cggcci.$clinit_Impl();
  $wnd.setTimeout(function () {
    throw e;
  }, 0);
};
cggcci.watchdogEntryDepthCancel = function watchdogEntryDepthCancel(timerId) {
  $wnd.clearTimeout(timerId);
};
cggcci.watchdogEntryDepthRun = function watchdogEntryDepthRun() {
  entryDepth != 0 && (entryDepth = 0);
  watchdogEntryDepthTimerId = -1;
};
cggcci.watchdogEntryDepthSchedule = function watchdogEntryDepthSchedule() {
  return $wnd.setTimeout(cggcci.watchdogEntryDepthRun, 10);
};
var entryDepth = 0;
var watchdogEntryDepthLastScheduled = 0;
var watchdogEntryDepthTimerId = -1;
cggcci.$clinit_SchedulerImpl = function $clinit_SchedulerImpl() {
  cggcci.$clinit_SchedulerImpl = emptyMethod;
  cggcci.INSTANCE = new cggcci.SchedulerImpl();
};
cggcci.$flushEntryCommands = function $flushEntryCommands(this$static) {
  var oldQueue, rescheduled;
  if (this$static.entryCommands) {
    rescheduled = null;
    do {
      oldQueue = this$static.entryCommands;
      this$static.entryCommands = null;
      rescheduled = cggcci.runScheduledTasks(oldQueue, rescheduled);
    } while (this$static.entryCommands);
    this$static.entryCommands = rescheduled;
  }
};
cggcci.$flushFinallyCommands = function $flushFinallyCommands(this$static) {
  var oldQueue, rescheduled;
  if (this$static.finallyCommands) {
    rescheduled = null;
    do {
      oldQueue = this$static.finallyCommands;
      this$static.finallyCommands = null;
      rescheduled = cggcci.runScheduledTasks(oldQueue, rescheduled);
    } while (this$static.finallyCommands);
    this$static.finallyCommands = rescheduled;
  }
};
cggcci.SchedulerImpl = function SchedulerImpl() {};
cggcci.push_0 = function push_0(queue, task) {
  !queue && (queue = cggcc.createArray());
  cggcc.$push(queue, task);
  return queue;
};
cggcci.runScheduledTasks = function runScheduledTasks(tasks, rescheduled) {
  var e, i, j, t;
  if (!tasks) {
    debugger;
    throw toJs(new jl.AssertionError_0("tasks"));
  }
  for (i = 0, j = cggcc.$length(tasks); i < j; i++) {
    if (cggcc.$length(tasks) != j) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "Working array length changed " + cggcc.$length(tasks) + " != " + j
        )
      );
    }
    t = cggcc.$get(tasks, i);
    try {
      cggcci.$isRepeating(t)
        ? cggcci.$getRepeating(t).$_nullMethod() &&
          (rescheduled = cggcci.push_0(rescheduled, t))
        : cggcci.$getScheduled(t).$_nullMethod();
    } catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        cggcci.$clinit_Impl();
        cggcci.reportToBrowser(
          instanceOf(e, 141) ? castTo(e, 141).getThrown() : e
        );
      } else throw toJs($e0);
    }
  }
  return rescheduled;
};
defineClass(836, 892, {}, cggcci.SchedulerImpl);
cggl.Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass(
  "com.google.gwt.core.client.impl",
  "SchedulerImpl",
  836
);
cggcci.$getRepeating = function $getRepeating(this$static) {
  return this$static[0];
};
cggcci.$getScheduled = function $getScheduled(this$static) {
  return this$static[0];
};
cggcci.$isRepeating = function $isRepeating(this$static) {
  return this$static[1];
};
cggic.$getDefaultNative = function $getDefaultNative() {
  return ["USD", "US$", 2, "US$", "$"];
};
defineClass(934, 1, {});
cggl.Lcom_google_gwt_i18n_shared_DefaultDateTimeFormatInfo_2_classLit =
  createForClass(
    "com.google.gwt.i18n.shared",
    "DefaultDateTimeFormatInfo",
    934
  );
defineClass(935, 934, {});
cggl.Lcom_google_gwt_i18n_client_DefaultDateTimeFormatInfo_2_classLit =
  createForClass(
    "com.google.gwt.i18n.client",
    "DefaultDateTimeFormatInfo",
    935
  );
cggic.$clinit_LocaleInfo = function $clinit_LocaleInfo() {
  cggic.$clinit_LocaleInfo = emptyMethod;
  cggic.instance_0 = new cggic.LocaleInfo();
};
cggic.$getDateTimeFormatInfo = function $getDateTimeFormatInfo(this$static) {
  !this$static.dateTimeFormatInfo &&
    (this$static.dateTimeFormatInfo = new cggicic.DateTimeFormatInfoImpl());
  return this$static.dateTimeFormatInfo;
};
cggic.$getNumberConstants = function $getNumberConstants(this$static) {
  !this$static.numberConstants &&
    (this$static.numberConstants = new cggicc.NumberConstantsImpl_());
  return this$static.numberConstants;
};
cggic.LocaleInfo = function LocaleInfo() {};
defineClass(820, 1, {}, cggic.LocaleInfo);
cggl.Lcom_google_gwt_i18n_client_LocaleInfo_2_classLit = createForClass(
  "com.google.gwt.i18n.client",
  "LocaleInfo",
  820
);
cggic.$clinit_NumberFormat = function $clinit_NumberFormat() {
  cggic.$clinit_NumberFormat = emptyMethod;
  cggic.$getNumberConstants(
    (cggic.$clinit_LocaleInfo(), cggic.$clinit_LocaleInfo(), cggic.instance_0)
  );
};
cggic.$$init_1 = function $$init_1(this$static) {};
cggic.$addExponent = function $addExponent(this$static, digits) {
  var exponentDigits, i;
  digits.string += "E";
  if (this$static.exponent < 0) {
    this$static.exponent = -this$static.exponent;
    digits.string += "-";
  }
  exponentDigits = "" + this$static.exponent;
  for (
    i = ji.uncheckedCast(exponentDigits).length;
    i < this$static.minExponentDigits;
    ++i
  ) {
    digits.string += "0";
  }
  digits.string += exponentDigits;
};
cggic.$addZeroAndDecimal = function $addZeroAndDecimal(
  this$static,
  digits,
  decimalSeparator
) {
  if (this$static.digitsLength == 0) {
    jl.$insert(digits, 0, String.fromCharCode(48));
    ++this$static.decimalPosition;
    ++this$static.digitsLength;
  }
  if (
    this$static.decimalPosition < this$static.digitsLength ||
    this$static.decimalSeparatorAlwaysShown
  ) {
    jl.$insert(
      digits,
      this$static.decimalPosition,
      String.fromCharCode(decimalSeparator)
    );
    ++this$static.digitsLength;
  }
};
cggic.$adjustFractionDigits = function $adjustFractionDigits(
  this$static,
  digits
) {
  var requiredDigits, toRemove;
  requiredDigits =
    this$static.decimalPosition + this$static.minimumFractionDigits;
  if (this$static.digitsLength < requiredDigits) {
    while (this$static.digitsLength < requiredDigits) {
      digits.string += "0";
      ++this$static.digitsLength;
    }
  } else {
    toRemove = this$static.decimalPosition + this$static.maximumFractionDigits;
    toRemove > this$static.digitsLength &&
      (toRemove = this$static.digitsLength);
    while (
      toRemove > requiredDigits &&
      jl.$charAt_0(digits.string, toRemove - 1) == 48
    ) {
      --toRemove;
    }
    if (toRemove < this$static.digitsLength) {
      jl.$delete(digits, toRemove, this$static.digitsLength);
      this$static.digitsLength = toRemove;
    }
  }
};
cggic.$computeExponent = function $computeExponent(this$static, digits) {
  var remainder, strip;
  strip = 0;
  while (
    strip < this$static.digitsLength - 1 &&
    jl.$charAt_0(digits.string, strip) == 48
  ) {
    ++strip;
  }
  if (strip > 0) {
    digits.string =
      jl.$substring_0(digits.string, 0, 0) +
      "" +
      jl.$substring(digits.string, strip);
    this$static.digitsLength -= strip;
    this$static.exponent -= strip;
  }
  if (
    this$static.maximumIntegerDigits > this$static.minimumIntegerDigits &&
    this$static.maximumIntegerDigits > 0
  ) {
    this$static.exponent += this$static.decimalPosition - 1;
    remainder = this$static.exponent % this$static.maximumIntegerDigits;
    remainder < 0 && (remainder += this$static.maximumIntegerDigits);
    this$static.decimalPosition = remainder + 1;
    this$static.exponent -= remainder;
  } else {
    this$static.exponent +=
      this$static.decimalPosition - this$static.minimumIntegerDigits;
    this$static.decimalPosition = this$static.minimumIntegerDigits;
  }
  if (this$static.digitsLength == 1 && jl.$charAt_0(digits.string, 0) == 48) {
    this$static.exponent = 0;
    this$static.decimalPosition = this$static.minimumIntegerDigits;
  }
};
cggic.$format = function $format(this$static, number) {
  var buf, isNegative, preRound, scale;
  if (isNaN(number)) {
    return "NaN";
  }
  isNegative = number < 0 || (number == 0 && 1 / number < 0);
  isNegative && (number = -number);
  buf = new jl.StringBuilder();
  if (!isNaN(number) && !isFinite(number)) {
    jl.$append_9(
      buf,
      isNegative ? this$static.negativePrefix : this$static.positivePrefix
    );
    buf.string += "\u221E";
    jl.$append_9(
      buf,
      isNegative ? this$static.negativeSuffix : this$static.positiveSuffix
    );
    return buf.string;
  }
  number *= this$static.multiplier;
  scale = cggic.toScaledString(buf, number);
  preRound =
    ji.uncheckedCast(buf.string).length +
    scale +
    this$static.maximumFractionDigits +
    3;
  if (
    preRound > 0 &&
    preRound < ji.uncheckedCast(buf.string).length &&
    jl.$charAt_0(buf.string, preRound) == 57
  ) {
    cggic.$propagateCarry(this$static, buf, preRound - 1);
    scale += ji.uncheckedCast(buf.string).length - preRound;
    jl.$delete(buf, preRound, ji.uncheckedCast(buf.string).length);
  }
  cggic.$format_2(this$static, isNegative, buf, scale);
  return buf.string;
};
cggic.$format_0 = function $format_0(this$static, value_0) {
  var buf, isNegative;
  isNegative = compare_1(value_0, 0) < 0;
  isNegative && (value_0 = neg_0(value_0));
  value_0 = mul_0(value_0, fromInt(this$static.multiplier));
  buf = new jl.StringBuilder();
  buf.string += "" + toString_6(value_0);
  cggic.$format_2(this$static, isNegative, buf, 0);
  return buf.string;
};
cggic.$format_1 = function $format_1(this$static, number) {
  var bigDec, bigInt, buf, isNegative;
  if (instanceOf(number, 50)) {
    bigDec = castTo(number, 50);
    isNegative = jm.$signum(bigDec) < 0;
    isNegative && (bigDec = jm.$negate(bigDec));
    bigDec = jm.$multiply(
      bigDec,
      jm.valueOf_34(fromInt(this$static.multiplier))
    );
    buf = new jl.StringBuilder();
    jl.$append_9(
      buf,
      jm.toDecimalScaledString_0(
        (!bigDec.intVal && (bigDec.intVal = jm.valueOf_36(bigDec.smallValue)),
        bigDec.intVal),
        0
      )
    );
    cggic.$format_2(this$static, isNegative, buf, -round_int(bigDec.scale_0));
    return buf.string;
  } else if (instanceOf(number, 28)) {
    bigInt = castTo(number, 28);
    isNegative = bigInt.sign < 0;
    isNegative &&
      (bigInt =
        bigInt.sign == 0
          ? bigInt
          : new jm.BigInteger_1(
              -bigInt.sign,
              bigInt.numberLength,
              bigInt.digits
            ));
    bigInt = jm.$multiply_0(
      bigInt,
      jm.valueOf_37(fromInt(this$static.multiplier))
    );
    buf = new jl.StringBuilder();
    jl.$append_9(buf, jm.toDecimalScaledString_0(bigInt, 0));
    cggic.$format_2(this$static, isNegative, buf, 0);
    return buf.string;
  } else
    return instanceOf(number, 66)
      ? cggic.$format_0(this$static, jl.longValue__J__devirtual$(number))
      : cggic.$format(this$static, jl.doubleValue__D__devirtual$(number));
};
cggic.$format_2 = function $format_2(this$static, isNegative, digits, scale) {
  var currentGroupingSize,
    decimalSeparator,
    groupingSeparator,
    useExponent,
    zeroChar;
  if (this$static.isCurrencyFormat) {
    decimalSeparator =
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(".").length),
      ji.uncheckedCast(".").charCodeAt(0));
    groupingSeparator =
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(",").length),
      ji.uncheckedCast(",").charCodeAt(0));
  } else {
    decimalSeparator =
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(".").length),
      ji.uncheckedCast(".").charCodeAt(0));
    groupingSeparator =
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(",").length),
      ji.uncheckedCast(",").charCodeAt(0));
  }
  this$static.exponent = 0;
  this$static.digitsLength = ji.uncheckedCast(digits.string).length;
  this$static.decimalPosition = this$static.digitsLength + scale;
  useExponent = this$static.useExponentialNotation;
  currentGroupingSize = this$static.groupingSize;
  this$static.decimalPosition > 1024 && (useExponent = true);
  useExponent && cggic.$computeExponent(this$static, digits);
  cggic.$processLeadingZeros(this$static, digits);
  cggic.$roundValue(this$static, digits);
  cggic.$insertGroupingSeparators(
    this$static,
    digits,
    groupingSeparator,
    currentGroupingSize
  );
  cggic.$adjustFractionDigits(this$static, digits);
  cggic.$addZeroAndDecimal(this$static, digits, decimalSeparator);
  useExponent && cggic.$addExponent(this$static, digits);
  zeroChar =
    (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast("0").length),
    ji.uncheckedCast("0").charCodeAt(0));
  zeroChar != 48 && cggic.$localizeDigits(digits, zeroChar);
  jl.$insert(
    digits,
    0,
    isNegative ? this$static.negativePrefix : this$static.positivePrefix
  );
  jl.$append_9(
    digits,
    isNegative ? this$static.negativeSuffix : this$static.positiveSuffix
  );
};
cggic.$getDigit = function $getDigit(ch_0) {
  var zeroChar;
  if (48 <= ch_0 && ch_0 <= 57) {
    return ch_0 - 48;
  } else {
    zeroChar =
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast("0").length),
      ji.uncheckedCast("0").charCodeAt(0));
    return zeroChar <= ch_0 && ch_0 <= zeroChar + 9 ? ch_0 - zeroChar : -1;
  }
};
cggic.$insertGroupingSeparators = function $insertGroupingSeparators(
  this$static,
  digits,
  groupingSeparator,
  g
) {
  var i;
  if (g > 0) {
    for (i = g; i < this$static.decimalPosition; i += g + 1) {
      jl.$insert(
        digits,
        this$static.decimalPosition - i,
        String.fromCharCode(groupingSeparator)
      );
      ++this$static.decimalPosition;
      ++this$static.digitsLength;
    }
  }
};
cggic.$localizeDigits = function $localizeDigits(digits, zero) {
  var ch_0, i, n;
  n = ji.uncheckedCast(digits.string).length;
  for (i = 0; i < n; ++i) {
    ch_0 = jl.$charAt_0(digits.string, i);
    ch_0 >= 48 &&
      ch_0 <= 57 &&
      jl.$setCharAt(digits, i, (ch_0 - 48 + zero) & $intern_10);
  }
};
cggic.$parse_0 = function $parse_0(this$static, text_0) {
  var pos, result;
  pos = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.I_classLit, 1),
    $intern_20,
    18,
    15,
    [0]
  );
  result = cggic.$parse_1(this$static, text_0, pos);
  if (pos[0] == 0 || pos[0] != ji.uncheckedCast(text_0).length) {
    throw toJs(new jl.NumberFormatException(text_0));
  }
  return result;
};
cggic.$parse_1 = function $parse_1(this$static, text_0, inOutPos) {
  var gotNegative,
    gotNegativePrefix,
    gotNegativeSuffix,
    gotPositive,
    gotPositivePrefix,
    gotPositiveSuffix,
    ret,
    tempPos,
    valueOnly;
  ret = 0;
  gotPositivePrefix = jl.$startsWith_1(
    text_0,
    this$static.positivePrefix,
    inOutPos[0]
  );
  gotNegativePrefix = jl.$startsWith_1(
    text_0,
    this$static.negativePrefix,
    inOutPos[0]
  );
  gotPositiveSuffix = jl.$endsWith(text_0, this$static.positiveSuffix);
  gotNegativeSuffix = jl.$endsWith(text_0, this$static.negativeSuffix);
  gotPositive = gotPositivePrefix && gotPositiveSuffix;
  gotNegative = gotNegativePrefix && gotNegativeSuffix;
  if (gotPositive && gotNegative) {
    ji.uncheckedCast(this$static.positivePrefix).length >
    ji.uncheckedCast(this$static.negativePrefix).length
      ? (gotNegative = false)
      : ji.uncheckedCast(this$static.positivePrefix).length <
        ji.uncheckedCast(this$static.negativePrefix).length
      ? (gotPositive = false)
      : ji.uncheckedCast(this$static.positiveSuffix).length >
        ji.uncheckedCast(this$static.negativeSuffix).length
      ? (gotNegative = false)
      : ji.uncheckedCast(this$static.positiveSuffix).length <
        ji.uncheckedCast(this$static.negativeSuffix).length
      ? (gotPositive = false)
      : (gotNegative = false);
  } else if (!gotPositive && !gotNegative) {
    throw toJs(
      new jl.NumberFormatException(
        text_0 + " does not have either positive or negative affixes"
      )
    );
  }
  valueOnly = null;
  if (gotPositive) {
    inOutPos[0] += ji.uncheckedCast(this$static.positivePrefix).length;
    valueOnly = jl.$substring_0(
      text_0,
      inOutPos[0],
      ji.uncheckedCast(text_0).length -
        ji.uncheckedCast(this$static.positiveSuffix).length
    );
  } else {
    inOutPos[0] += ji.uncheckedCast(this$static.negativePrefix).length;
    valueOnly = jl.$substring_0(
      text_0,
      inOutPos[0],
      ji.uncheckedCast(text_0).length -
        ji.uncheckedCast(this$static.negativeSuffix).length
    );
  }
  if (jl.$equals_12(valueOnly, "\u221E")) {
    inOutPos[0] += ji.uncheckedCast("\u221E").length;
    ret = Infinity;
  } else if (jl.$equals_12(valueOnly, "NaN")) {
    inOutPos[0] += ji.uncheckedCast("NaN").length;
    ret = NaN;
  } else {
    tempPos = stampJavaTypeInfo(
      getClassLiteralForArray(cggl.I_classLit, 1),
      $intern_20,
      18,
      15,
      [0]
    );
    ret = cggic.$parseNumber(this$static, valueOnly, tempPos);
    inOutPos[0] += tempPos[0];
  }
  gotPositive
    ? (inOutPos[0] += ji.uncheckedCast(this$static.positiveSuffix).length)
    : gotNegative &&
      (inOutPos[0] += ji.uncheckedCast(this$static.negativeSuffix).length);
  gotNegative && (ret = -ret);
  return ret;
};
cggic.$parseAffix = function $parseAffix(
  this$static,
  pattern,
  start_0,
  affix,
  inNegativePattern
) {
  var ch_0, inQuote, len, pos;
  jl.$delete(affix, 0, ji.uncheckedCast(affix.string).length);
  inQuote = false;
  len = ji.uncheckedCast(pattern).length;
  for (pos = start_0; pos < len; ++pos) {
    ch_0 =
      (ji.checkCriticalStringElementIndex(
        pos,
        ji.uncheckedCast(pattern).length
      ),
      ji.uncheckedCast(pattern).charCodeAt(pos));
    if (ch_0 == 39) {
      if (
        pos + 1 < len &&
        (ji.checkCriticalStringElementIndex(
          pos + 1,
          ji.uncheckedCast(pattern).length
        ),
        ji.uncheckedCast(pattern).charCodeAt(pos + 1) == 39)
      ) {
        ++pos;
        affix.string += "'";
      } else {
        inQuote = !inQuote;
      }
      continue;
    }
    if (inQuote) {
      affix.string += String.fromCharCode(ch_0);
    } else {
      switch (ch_0) {
        case 35:
        case 48:
        case 44:
        case 46:
        case 59:
          return pos - start_0;
        case 164:
          this$static.isCurrencyFormat = true;
          if (
            pos + 1 < len &&
            (ji.checkCriticalStringElementIndex(
              pos + 1,
              ji.uncheckedCast(pattern).length
            ),
            ji.uncheckedCast(pattern).charCodeAt(pos + 1) == 164)
          ) {
            ++pos;
            if (
              pos < len - 2 &&
              (ji.checkCriticalStringElementIndex(
                pos + 1,
                ji.uncheckedCast(pattern).length
              ),
              ji.uncheckedCast(pattern).charCodeAt(pos + 1) == 164) &&
              (ji.checkCriticalStringElementIndex(
                pos + 2,
                ji.uncheckedCast(pattern).length
              ),
              ji.uncheckedCast(pattern).charCodeAt(pos + 2) == 164)
            ) {
              pos += 2;
              jl.$append_9(
                affix,
                cggici.$getSimpleCurrencySymbol(this$static.currencyData)
              );
            } else {
              jl.$append_9(
                affix,
                cggici.$getCurrencyCode(this$static.currencyData)
              );
            }
          } else {
            jl.$append_9(
              affix,
              cggici.$getCurrencySymbol(this$static.currencyData)
            );
          }

          break;
        case 37:
          if (!inNegativePattern) {
            if (this$static.multiplier != 1) {
              throw toJs(
                new jl.IllegalArgumentException_0(
                  'Too many percent/per mille characters in pattern "' +
                    pattern +
                    '"'
                )
              );
            }
            this$static.multiplier = 100;
          }

          affix.string += "%";
          break;
        case 8240:
          if (!inNegativePattern) {
            if (this$static.multiplier != 1) {
              throw toJs(
                new jl.IllegalArgumentException_0(
                  'Too many percent/per mille characters in pattern "' +
                    pattern +
                    '"'
                )
              );
            }
            this$static.multiplier = $intern_21;
          }

          affix.string += "\u2030";
          break;
        case 45:
          affix.string += "-";
          break;
        default:
          affix.string += String.fromCharCode(ch_0);
      }
    }
  }
  return len - start_0;
};
cggic.$parseNumber = function $parseNumber(this$static, text_0, pos) {
  var ch_0,
    decimal,
    digit,
    grouping,
    normalizedText,
    ret,
    sawDecimal,
    sawDigit,
    sawExponent,
    scale;
  sawDecimal = false;
  sawExponent = false;
  sawDigit = false;
  scale = 1;
  decimal = this$static.isCurrencyFormat ? "." : ".";
  grouping = this$static.isCurrencyFormat ? "," : ",";
  normalizedText = new jl.StringBuilder();
  for (; pos[0] < ji.uncheckedCast(text_0).length; ++pos[0]) {
    ch_0 = jl.$charAt_0(text_0, pos[0]);
    digit = cggic.$getDigit(ch_0);
    if (digit >= 0 && digit <= 9) {
      jl.$append_4(normalizedText, (digit + 48) & $intern_10);
      sawDigit = true;
    } else if (
      ch_0 ==
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(decimal).length),
      ji.uncheckedCast(decimal).charCodeAt(0))
    ) {
      if (sawDecimal || sawExponent) {
        break;
      }
      normalizedText.string += ".";
      sawDecimal = true;
    } else if (
      ch_0 ==
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(grouping).length),
      ji.uncheckedCast(grouping).charCodeAt(0))
    ) {
      if (sawDecimal || sawExponent) {
        break;
      }
      continue;
    } else if (
      ch_0 ==
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast("E").length),
      ji.uncheckedCast("E").charCodeAt(0))
    ) {
      if (sawExponent) {
        break;
      }
      normalizedText.string += "E";
      sawExponent = true;
    } else if (ch_0 == 43 || ch_0 == 45) {
      normalizedText.string += String.fromCharCode(ch_0);
    } else if (
      ch_0 ==
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast("%").length),
      ji.uncheckedCast("%").charCodeAt(0))
    ) {
      if (scale != 1) {
        break;
      }
      scale = 100;
      if (sawDigit) {
        ++pos[0];
        break;
      }
    } else if (
      ch_0 ==
      (ji.checkCriticalStringElementIndex(0, ji.uncheckedCast("\u2030").length),
      ji.uncheckedCast("\u2030").charCodeAt(0))
    ) {
      if (scale != 1) {
        break;
      }
      scale = $intern_21;
      if (sawDigit) {
        ++pos[0];
        break;
      }
    } else {
      break;
    }
  }
  try {
    ret = jl.__parseAndValidateDouble(normalizedText.string);
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 63)) {
      throw toJs(new jl.NumberFormatException(text_0));
    } else throw toJs($e0);
  }
  ret = ret / scale;
  return ret;
};
cggic.$parsePattern = function $parsePattern(this$static, pattern) {
  var affix, pos;
  pos = 0;
  affix = new jl.StringBuilder();
  pos += cggic.$parseAffix(this$static, pattern, pos, affix, false);
  this$static.positivePrefix = affix.string;
  pos += cggic.$parseTrunk(this$static, pattern, pos, false);
  pos += cggic.$parseAffix(this$static, pattern, pos, affix, false);
  this$static.positiveSuffix = affix.string;
  if (
    pos < ji.uncheckedCast(pattern).length &&
    (ji.checkCriticalStringElementIndex(pos, ji.uncheckedCast(pattern).length),
    ji.uncheckedCast(pattern).charCodeAt(pos) == 59)
  ) {
    ++pos;
    pos += cggic.$parseAffix(this$static, pattern, pos, affix, true);
    this$static.negativePrefix = affix.string;
    pos += cggic.$parseTrunk(this$static, pattern, pos, true);
    pos += cggic.$parseAffix(this$static, pattern, pos, affix, true);
    this$static.negativeSuffix = affix.string;
  } else {
    this$static.negativePrefix = "-" + this$static.positivePrefix;
    this$static.negativeSuffix = this$static.positiveSuffix;
  }
};
cggic.$parseTrunk = function $parseTrunk(
  this$static,
  pattern,
  start_0,
  ignorePattern
) {
  var ch_0,
    decimalPos,
    digitLeftCount,
    digitRightCount,
    effectiveDecimalPos,
    groupingCount,
    len,
    loop,
    n,
    pos,
    totalDigits,
    zeroDigitCount;
  decimalPos = -1;
  digitLeftCount = 0;
  zeroDigitCount = 0;
  digitRightCount = 0;
  groupingCount = -1;
  len = ji.uncheckedCast(pattern).length;
  pos = start_0;
  loop = true;
  for (; pos < len && loop; ++pos) {
    ch_0 =
      (ji.checkCriticalStringElementIndex(
        pos,
        ji.uncheckedCast(pattern).length
      ),
      ji.uncheckedCast(pattern).charCodeAt(pos));
    switch (ch_0) {
      case 35:
        zeroDigitCount > 0 ? ++digitRightCount : ++digitLeftCount;
        groupingCount >= 0 && decimalPos < 0 && ++groupingCount;
        break;
      case 48:
        if (digitRightCount > 0) {
          throw toJs(
            new jl.IllegalArgumentException_0(
              "Unexpected '0' in pattern \"" + pattern + '"'
            )
          );
        }

        ++zeroDigitCount;
        groupingCount >= 0 && decimalPos < 0 && ++groupingCount;
        break;
      case 44:
        groupingCount = 0;
        break;
      case 46:
        if (decimalPos >= 0) {
          throw toJs(
            new jl.IllegalArgumentException_0(
              'Multiple decimal separators in pattern "' + pattern + '"'
            )
          );
        }

        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;
        break;
      case 69:
        if (!ignorePattern) {
          if (this$static.useExponentialNotation) {
            throw toJs(
              new jl.IllegalArgumentException_0(
                'Multiple exponential symbols in pattern "' + pattern + '"'
              )
            );
          }
          this$static.useExponentialNotation = true;
          this$static.minExponentDigits = 0;
        }

        while (
          pos + 1 < len &&
          (ji.checkCriticalStringElementIndex(
            pos + 1,
            ji.uncheckedCast(pattern).length
          ),
          ji.uncheckedCast(pattern).charCodeAt(pos + 1) == 48)
        ) {
          ++pos;
          ignorePattern || ++this$static.minExponentDigits;
        }

        if (
          (!ignorePattern && digitLeftCount + zeroDigitCount < 1) ||
          this$static.minExponentDigits < 1
        ) {
          throw toJs(
            new jl.IllegalArgumentException_0(
              'Malformed exponential pattern "' + pattern + '"'
            )
          );
        }

        loop = false;
        break;
      default:
        --pos;
        loop = false;
    }
  }
  if (zeroDigitCount == 0 && digitLeftCount > 0 && decimalPos >= 0) {
    n = decimalPos;
    n == 0 && ++n;
    digitRightCount = digitLeftCount - n;
    digitLeftCount = n - 1;
    zeroDigitCount = 1;
  }
  if (
    (decimalPos < 0 && digitRightCount > 0) ||
    (decimalPos >= 0 &&
      (decimalPos < digitLeftCount ||
        decimalPos > digitLeftCount + zeroDigitCount)) ||
    groupingCount == 0
  ) {
    throw toJs(
      new jl.IllegalArgumentException_0('Malformed pattern "' + pattern + '"')
    );
  }
  if (ignorePattern) {
    return pos - start_0;
  }
  totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;
  this$static.maximumFractionDigits =
    decimalPos >= 0 ? totalDigits - decimalPos : 0;
  if (decimalPos >= 0) {
    this$static.minimumFractionDigits =
      digitLeftCount + zeroDigitCount - decimalPos;
    this$static.minimumFractionDigits < 0 &&
      (this$static.minimumFractionDigits = 0);
  }
  effectiveDecimalPos = decimalPos >= 0 ? decimalPos : totalDigits;
  this$static.minimumIntegerDigits = effectiveDecimalPos - digitLeftCount;
  if (this$static.useExponentialNotation) {
    this$static.maximumIntegerDigits =
      digitLeftCount + this$static.minimumIntegerDigits;
    this$static.maximumFractionDigits == 0 &&
      this$static.minimumIntegerDigits == 0 &&
      (this$static.minimumIntegerDigits = 1);
  }
  this$static.groupingSize = groupingCount > 0 ? groupingCount : 0;
  this$static.decimalSeparatorAlwaysShown =
    decimalPos == 0 || decimalPos == totalDigits;
  return pos - start_0;
};
cggic.$processLeadingZeros = function $processLeadingZeros(
  this$static,
  digits
) {
  var i, prefix, strip;
  if (this$static.decimalPosition > this$static.digitsLength) {
    while (this$static.digitsLength < this$static.decimalPosition) {
      digits.string += "0";
      ++this$static.digitsLength;
    }
  }
  if (!this$static.useExponentialNotation) {
    if (this$static.decimalPosition < this$static.minimumIntegerDigits) {
      prefix = new jl.StringBuilder();
      while (this$static.decimalPosition < this$static.minimumIntegerDigits) {
        prefix.string += "0";
        ++this$static.decimalPosition;
        ++this$static.digitsLength;
      }
      jl.$insert(digits, 0, prefix.string);
    } else if (this$static.decimalPosition > this$static.minimumIntegerDigits) {
      strip = this$static.decimalPosition - this$static.minimumIntegerDigits;
      for (i = 0; i < strip; ++i) {
        if (jl.$charAt_0(digits.string, i) != 48) {
          strip = i;
          break;
        }
      }
      if (strip > 0) {
        digits.string =
          jl.$substring_0(digits.string, 0, 0) +
          "" +
          jl.$substring(digits.string, strip);
        this$static.digitsLength -= strip;
        this$static.decimalPosition -= strip;
      }
    }
  }
};
cggic.$propagateCarry = function $propagateCarry(this$static, digits, i) {
  var carry, digit;
  carry = true;
  while (carry && i >= 0) {
    digit = jl.$charAt_0(digits.string, i);
    if (digit == 57) {
      jl.$setCharAt(digits, i--, 48);
    } else {
      jl.$setCharAt(digits, i, (digit + 1) & $intern_10);
      carry = false;
    }
  }
  if (carry) {
    jl.$insert(digits, 0, String.fromCharCode(49));
    ++this$static.decimalPosition;
    ++this$static.digitsLength;
  }
};
cggic.$roundValue = function $roundValue(this$static, digits) {
  var i;
  if (
    this$static.digitsLength >
      this$static.decimalPosition + this$static.maximumFractionDigits &&
    jl.$charAt(
      digits,
      this$static.decimalPosition + this$static.maximumFractionDigits
    ) >= 53
  ) {
    i = this$static.decimalPosition + this$static.maximumFractionDigits - 1;
    cggic.$propagateCarry(this$static, digits, i);
  }
};
cggic.NumberFormat = function NumberFormat(
  pattern,
  cdata,
  userSuppliedPattern
) {
  cggic.$$init_1(this);
  if (!cdata) {
    throw toJs(new jl.IllegalArgumentException_0("Unknown currency code"));
  }
  this.pattern = pattern;
  this.currencyData = cdata;
  cggic.$parsePattern(this, this.pattern);
  if (!userSuppliedPattern && this.isCurrencyFormat) {
    this.minimumFractionDigits =
      cggici.$getFlagsAndPrecision(this.currencyData) & 7;
    this.maximumFractionDigits = this.minimumFractionDigits;
  }
};
cggic.NumberFormat_0 = function NumberFormat_0(pattern, cdata) {
  cggic.$clinit_NumberFormat();
  cggic.NumberFormat.call(this, pattern, cdata, true);
};
cggic.toPrecision = function toPrecision(d, digits) {
  return d.toPrecision(digits);
};
cggic.toScaledString = function toScaledString(buf, val) {
  var dot, expDigits, expIdx, scale, startLen;
  startLen = ji.uncheckedCast(buf.string).length;
  jl.$append_9(buf, cggic.toPrecision(val, 20));
  scale = 0;
  expIdx = jl.$indexOf_0(buf.string, "e", startLen);
  expIdx < 0 && (expIdx = jl.$indexOf_0(buf.string, "E", startLen));
  if (expIdx >= 0) {
    expDigits = expIdx + 1;
    expDigits < ji.uncheckedCast(buf.string).length &&
      jl.$charAt_0(buf.string, expDigits) == 43 &&
      ++expDigits;
    expDigits < ji.uncheckedCast(buf.string).length &&
      (scale = jl.__parseAndValidateInt(
        jl.$substring(buf.string, expDigits),
        $intern_22,
        $intern_1
      ));
    jl.$delete(buf, expIdx, ji.uncheckedCast(buf.string).length);
  }
  dot = jl.$indexOf_0(buf.string, ".", startLen);
  if (dot >= 0) {
    buf.string =
      jl.$substring_0(buf.string, 0, dot) +
      "" +
      jl.$substring(buf.string, dot + 1);
    scale -= ji.uncheckedCast(buf.string).length - dot;
  }
  return scale;
};
defineClass(178, 1, {}, cggic.NumberFormat_0);
_.decimalPosition = 0;
_.decimalSeparatorAlwaysShown = false;
_.digitsLength = 0;
_.exponent = 0;
_.groupingSize = 3;
_.isCurrencyFormat = false;
_.maximumFractionDigits = 3;
_.maximumIntegerDigits = 40;
_.minExponentDigits = 0;
_.minimumFractionDigits = 0;
_.minimumIntegerDigits = 1;
_.multiplier = 1;
_.negativePrefix = "-";
_.negativeSuffix = "";
_.positivePrefix = "";
_.positiveSuffix = "";
_.useExponentialNotation = false;
cggl.Lcom_google_gwt_i18n_client_NumberFormat_2_classLit = createForClass(
  "com.google.gwt.i18n.client",
  "NumberFormat",
  178
);
cggic.$getDaylightAdjustment = function $getDaylightAdjustment(
  this$static,
  date
) {
  var index_0, timeInHours;
  if (this$static.transitionPoints == null) {
    return 0;
  }
  timeInHours = div(div(fromDouble_0(date.jsdate.getTime()), $intern_21), 3600);
  index_0 = 0;
  while (
    index_0 < this$static.transitionPoints.length &&
    gte_0(timeInHours, fromInt(this$static.transitionPoints[index_0]))
  ) {
    ++index_0;
  }
  return index_0 == 0 ? 0 : this$static.adjustments[index_0 - 1];
};
cggic.$getISOTimeZoneString = function $getISOTimeZoneString(
  this$static,
  date
) {
  var data_0, offset;
  offset = -(
    this$static.standardOffset_0 -
    cggic.$getDaylightAdjustment(this$static, date)
  );
  data_0 = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.C_classLit, 1),
    $intern_23,
    18,
    15,
    [43, 48, 48, 58, 48, 48]
  );
  if (offset < 0) {
    data_0[0] = 45;
    offset = -offset;
  }
  data_0[1] = (data_0[1] + ((((offset / 60) | 0) / 10) | 0)) & $intern_10;
  data_0[2] = (data_0[2] + (((offset / 60) | 0) % 10)) & $intern_10;
  data_0[4] = (data_0[4] + (((offset % 60) / 10) | 0)) & $intern_10;
  data_0[5] = (data_0[5] + (offset % 10)) & $intern_10;
  return jl.valueOf_33(data_0, 0, data_0.length);
};
cggic.$getRFCTimeZoneString = function $getRFCTimeZoneString(
  this$static,
  date
) {
  var data_0, offset;
  offset = -(
    this$static.standardOffset_0 -
    cggic.$getDaylightAdjustment(this$static, date)
  );
  data_0 = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.C_classLit, 1),
    $intern_23,
    18,
    15,
    [43, 48, 48, 48, 48]
  );
  if (offset < 0) {
    data_0[0] = 45;
    offset = -offset;
  }
  data_0[1] = (data_0[1] + ((((offset / 60) | 0) / 10) | 0)) & $intern_10;
  data_0[2] = (data_0[2] + (((offset / 60) | 0) % 10)) & $intern_10;
  data_0[3] = (data_0[3] + (((offset % 60) / 10) | 0)) & $intern_10;
  data_0[4] = (data_0[4] + (offset % 10)) & $intern_10;
  return jl.valueOf_33(data_0, 0, data_0.length);
};
cggic.TimeZone = function TimeZone() {};
cggic.composeGMTString = function composeGMTString(offset) {
  var data_0;
  data_0 = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.C_classLit, 1),
    $intern_23,
    18,
    15,
    [71, 77, 84, 45, 48, 48, 58, 48, 48]
  );
  if (offset <= 0) {
    data_0[3] = 43;
    offset = -offset;
  }
  data_0[4] = (data_0[4] + ((((offset / 60) | 0) / 10) | 0)) & $intern_10;
  data_0[5] = (data_0[5] + (((offset / 60) | 0) % 10)) & $intern_10;
  data_0[7] = (data_0[7] + (((offset % 60) / 10) | 0)) & $intern_10;
  data_0[8] = (data_0[8] + (offset % 10)) & $intern_10;
  return jl.valueOf_33(data_0, 0, data_0.length);
};
cggic.composePOSIXTimeZoneID = function composePOSIXTimeZoneID(offset) {
  var str;
  if (offset == 0) {
    return "Etc/GMT";
  }
  if (offset < 0) {
    offset = -offset;
    str = "Etc/GMT-";
  } else {
    str = "Etc/GMT+";
  }
  return str + cggic.offsetDisplay(offset);
};
cggic.composeUTCString = function composeUTCString(offset) {
  var str;
  if (offset == 0) {
    return "UTC";
  }
  if (offset < 0) {
    offset = -offset;
    str = "UTC+";
  } else {
    str = "UTC-";
  }
  return str + cggic.offsetDisplay(offset);
};
cggic.createTimeZone = function createTimeZone(timeZoneOffsetInMinutes) {
  var tz;
  tz = new cggic.TimeZone();
  tz.standardOffset_0 = timeZoneOffsetInMinutes;
  tz.timezoneID = cggic.composePOSIXTimeZoneID(timeZoneOffsetInMinutes);
  tz.tzNames = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    2,
    6,
    1
  );
  tz.tzNames[0] = cggic.composeUTCString(timeZoneOffsetInMinutes);
  tz.tzNames[1] = cggic.composeUTCString(timeZoneOffsetInMinutes);
  tz.transitionPoints = null;
  tz.adjustments = null;
  return tz;
};
cggic.createTimeZone_0 = function createTimeZone_0(timezoneData) {
  var i, i0, jsTimezoneNames, transitionNum, transitions, tz;
  tz = new cggic.TimeZone();
  tz.timezoneID = cggic.$getID(timezoneData);
  tz.standardOffset_0 = -cggic.$getStandardOffset(timezoneData);
  jsTimezoneNames = cggic.$getNames(timezoneData);
  tz.tzNames = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    cggcc.$length_1(jsTimezoneNames),
    6,
    1
  );
  for (i0 = 0; i0 < cggcc.$length_1(jsTimezoneNames); i0++) {
    tz.tzNames[i0] = cggcc.$get_1(jsTimezoneNames, i0);
  }
  transitions = cggic.$getTransitions(timezoneData);
  if (!transitions || cggcc.$length_0(transitions) == 0) {
    tz.transitionPoints = null;
    tz.adjustments = null;
  } else {
    transitionNum = (cggcc.$length_0(transitions) / 2) | 0;
    tz.transitionPoints = initUnidimensionalArray(
      cggl.I_classLit,
      $intern_20,
      18,
      transitionNum,
      15,
      1
    );
    tz.adjustments = initUnidimensionalArray(
      cggl.I_classLit,
      $intern_20,
      18,
      transitionNum,
      15,
      1
    );
    for (i = 0; i < transitionNum; ++i) {
      tz.transitionPoints[i] = cggcc.$get_0(transitions, i * 2);
      tz.adjustments[i] = cggcc.$get_0(transitions, i * 2 + 1);
    }
  }
  return tz;
};
cggic.offsetDisplay = function offsetDisplay(offset) {
  var hour, mins;
  hour = (offset / 60) | 0;
  mins = offset % 60;
  if (mins == 0) {
    return "" + hour;
  }
  return "" + hour + ":" + ("" + mins);
};
defineClass(347, 1, {}, cggic.TimeZone);
_.standardOffset_0 = 0;
cggl.Lcom_google_gwt_i18n_client_TimeZone_2_classLit = createForClass(
  "com.google.gwt.i18n.client",
  "TimeZone",
  347
);
cggic.$getID = function $getID(this$static) {
  return this$static.id;
};
cggic.$getNames = function $getNames(this$static) {
  return this$static.names;
};
cggic.$getStandardOffset = function $getStandardOffset(this$static) {
  return this$static.std_offset;
};
cggic.$getTransitions = function $getTransitions(this$static) {
  return this$static.transitions;
};
cggicc.NumberConstantsImpl_ = function NumberConstantsImpl_() {};
defineClass(850, 1, {}, cggicc.NumberConstantsImpl_);
cggl.Lcom_google_gwt_i18n_client_constants_NumberConstantsImpl_1_2_classLit =
  createForClass(
    "com.google.gwt.i18n.client.constants",
    "NumberConstantsImpl_",
    850
  );
cggici.$getCurrencyCode = function $getCurrencyCode(this$static) {
  return this$static[0];
};
cggici.$getCurrencySymbol = function $getCurrencySymbol(this$static) {
  return this$static[1];
};
cggici.$getFlagsAndPrecision = function $getFlagsAndPrecision(this$static) {
  return this$static[2];
};
cggici.$getSimpleCurrencySymbol = function $getSimpleCurrencySymbol(
  this$static
) {
  return this$static[4] || this$static[1];
};
cggicic.DateTimeFormatInfoImpl = function DateTimeFormatInfoImpl() {};
defineClass(849, 935, {}, cggicic.DateTimeFormatInfoImpl);
cggl.Lcom_google_gwt_i18n_client_impl_cldr_DateTimeFormatInfoImpl_2_classLit =
  createForClass(
    "com.google.gwt.i18n.client.impl.cldr",
    "DateTimeFormatInfoImpl",
    849
  );
cggis.$clinit_DateTimeFormat = function $clinit_DateTimeFormat() {
  cggis.$clinit_DateTimeFormat = emptyMethod;
  cggis.cache = new ju.HashMap();
};
cggis.$$init_2 = function $$init_2(this$static) {
  this$static.patternParts = new ju.ArrayList();
};
cggis.$addPart = function $addPart(this$static, buf, count) {
  var oldLength;
  if (ji.uncheckedCast(buf.string).length > 0) {
    ju.$add(
      this$static.patternParts,
      new cggis.DateTimeFormat$PatternPart(buf.string, count)
    );
    oldLength = ji.uncheckedCast(buf.string).length;
    0 < oldLength
      ? (buf.string = jl.$substring_0(buf.string, 0, 0))
      : 0 > oldLength &&
        (buf.string += jl.valueOf_32(
          initUnidimensionalArray(
            cggl.C_classLit,
            $intern_23,
            18,
            -oldLength,
            15,
            1
          )
        ));
  }
};
cggis.$format_3 = function $format_3(this$static, date, timeZone) {
  var ch_0, diff, i, j, keepDate, keepTime, n, toAppendTo, trailQuote;
  !timeZone &&
    (timeZone = cggic.createTimeZone(date.jsdate.getTimezoneOffset()));
  diff =
    (date.jsdate.getTimezoneOffset() -
      (timeZone.standardOffset_0 -
        cggic.$getDaylightAdjustment(timeZone, date))) *
    60000;
  keepDate = new ju.Date_3(
    add_1(fromDouble_0(date.jsdate.getTime()), cggl.createSmallLongEmul0(diff))
  );
  keepTime = keepDate;
  if (keepDate.jsdate.getTimezoneOffset() != date.jsdate.getTimezoneOffset()) {
    diff > 0 ? (diff -= 86400000) : (diff += 86400000);
    keepTime = new ju.Date_3(
      add_1(
        fromDouble_0(date.jsdate.getTime()),
        cggl.createSmallLongEmul0(diff)
      )
    );
  }
  toAppendTo = new jl.StringBuilder_0();
  n = ji.uncheckedCast(this$static.pattern).length;
  for (i = 0; i < n; ) {
    ch_0 = jl.$charAt_0(this$static.pattern, i);
    if ((ch_0 >= 97 && ch_0 <= 122) || (ch_0 >= 65 && ch_0 <= 90)) {
      for (
        j = i + 1;
        j < n && jl.$charAt_0(this$static.pattern, j) == ch_0;
        ++j
      );
      cggis.$subFormat(
        toAppendTo,
        ch_0,
        j - i,
        date,
        keepDate,
        keepTime,
        timeZone
      );
      i = j;
    } else if (ch_0 == 39) {
      ++i;
      if (i < n && jl.$charAt_0(this$static.pattern, i) == 39) {
        toAppendTo.string += "'";
        ++i;
        continue;
      }
      trailQuote = false;
      while (!trailQuote) {
        j = i;
        while (j < n && jl.$charAt_0(this$static.pattern, j) != 39) {
          ++j;
        }
        if (j >= n) {
          throw toJs(new jl.IllegalArgumentException_0("Missing trailing '"));
        }
        j + 1 < n && jl.$charAt_0(this$static.pattern, j + 1) == 39
          ? ++j
          : (trailQuote = true);
        jl.$append_9(toAppendTo, jl.$substring_0(this$static.pattern, i, j));
        i = j + 1;
      }
    } else {
      toAppendTo.string += String.fromCharCode(ch_0);
      ++i;
    }
  }
  return toAppendTo.string;
};
cggis.$formatFractionalSeconds = function $formatFractionalSeconds(
  buf,
  count,
  date
) {
  var time, value_0;
  time = fromDouble_0(date.jsdate.getTime());
  if (compare_1(time, 0) < 0) {
    value_0 = $intern_21 - toInt_0(mod(neg_0(time), $intern_21));
    value_0 == $intern_21 && (value_0 = 0);
  } else {
    value_0 = toInt_0(mod(time, $intern_21));
  }
  if (count == 1) {
    value_0 = $wnd.Math.min(((value_0 + 50) / 100) | 0, 9);
    jl.$append_4(buf, (48 + value_0) & $intern_10);
  } else if (count == 2) {
    value_0 = $wnd.Math.min(((value_0 + 5) / 10) | 0, 99);
    cggis.$zeroPaddingNumber(buf, value_0, 2);
  } else {
    cggis.$zeroPaddingNumber(buf, value_0, 3);
    count > 3 && cggis.$zeroPaddingNumber(buf, 0, count - 3);
  }
};
cggis.$formatMonth = function $formatMonth(buf, count, date) {
  var value_0;
  value_0 = date.jsdate.getMonth();
  switch (count) {
    case 5:
      jl.$append_9(
        buf,
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
          $intern_8,
          2,
          6,
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"]
        )[value_0]
      );
      break;
    case 4:
      jl.$append_9(
        buf,
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
          $intern_8,
          2,
          6,
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ]
        )[value_0]
      );
      break;
    case 3:
      jl.$append_9(
        buf,
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
          $intern_8,
          2,
          6,
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ]
        )[value_0]
      );
      break;
    default:
      cggis.$zeroPaddingNumber(buf, value_0 + 1, count);
  }
};
cggis.$formatYear = function $formatYear(buf, count, date) {
  var value_0;
  value_0 = date.jsdate.getFullYear() - $intern_24 + $intern_24;
  value_0 < 0 && (value_0 = -value_0);
  switch (count) {
    case 1:
      buf.string += value_0;
      break;
    case 2:
      cggis.$zeroPaddingNumber(buf, value_0 % 100, 2);
      break;
    default:
      cggis.$zeroPaddingNumber(buf, value_0, count);
  }
};
cggis.$getNextCharCountInPattern = function $getNextCharCountInPattern(
  pattern,
  start_0
) {
  var ch_0, next;
  ch_0 =
    (ji.checkCriticalStringElementIndex(
      start_0,
      ji.uncheckedCast(pattern).length
    ),
    ji.uncheckedCast(pattern).charCodeAt(start_0));
  next = start_0 + 1;
  while (
    next < ji.uncheckedCast(pattern).length &&
    (ji.checkCriticalStringElementIndex(next, ji.uncheckedCast(pattern).length),
    ji.uncheckedCast(pattern).charCodeAt(next) == ch_0)
  ) {
    ++next;
  }
  return next - start_0;
};
cggis.$identifyAbutStart = function $identifyAbutStart(this$static) {
  var abut, i, len;
  abut = false;
  len = this$static.patternParts.array.length;
  for (i = 0; i < len; i++) {
    if (
      cggis.$isNumeric(castTo(ju.$get_18(this$static.patternParts, i), 177))
    ) {
      if (
        !abut &&
        i + 1 < len &&
        cggis.$isNumeric(
          castTo(ju.$get_18(this$static.patternParts, i + 1), 177)
        )
      ) {
        abut = true;
        castTo(ju.$get_18(this$static.patternParts, i), 177).abutStart = true;
      }
    } else {
      abut = false;
    }
  }
};
cggis.$isNumeric = function $isNumeric(part) {
  var i;
  if (part.count_0 <= 0) {
    return false;
  }
  i = jl.$indexOf("MLydhHmsSDkK", fromCodePoint(jl.$charAt_0(part.text_0, 0)));
  return i > 1 || (i >= 0 && part.count_0 < 3);
};
cggis.$matchString = function $matchString(text_0, start_0, data_0, pos) {
  var bestMatch, bestMatchLength, count, i, length_0, textInLowerCase;
  count = data_0.length;
  bestMatchLength = 0;
  bestMatch = -1;
  textInLowerCase = jl.$toLowerCase(
    ji.uncheckedCast(text_0).substr(start_0),
    (ju.$clinit_Locale(), ju.ROOT)
  );
  for (i = 0; i < count; ++i) {
    length_0 = ji.uncheckedCast(data_0[i]).length;
    if (
      length_0 > bestMatchLength &&
      jl.$startsWith_0(textInLowerCase, jl.$toLowerCase(data_0[i], ju.ROOT))
    ) {
      bestMatch = i;
      bestMatchLength = length_0;
    }
  }
  bestMatch >= 0 && (pos[0] = start_0 + bestMatchLength);
  return bestMatch;
};
cggis.$parse_2 = function $parse_2(this$static, text_0, start_0, date) {
  var abutPass, abutPat, abutStart, cal, count, i, parsePos, part, s;
  cal = new cggisi.DateRecord();
  parsePos = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.I_classLit, 1),
    $intern_20,
    18,
    15,
    [start_0]
  );
  abutPat = -1;
  abutStart = 0;
  abutPass = 0;
  for (i = 0; i < this$static.patternParts.array.length; ++i) {
    part = castTo(ju.$get_18(this$static.patternParts, i), 177);
    if (part.count_0 > 0) {
      if (abutPat < 0 && part.abutStart) {
        abutPat = i;
        abutStart = parsePos[0];
        abutPass = 0;
      }
      if (abutPat >= 0) {
        count = part.count_0;
        if (i == abutPat) {
          count -= abutPass++;
          if (count == 0) {
            return 0;
          }
        }
        if (!cggis.$subParse(text_0, parsePos, part, count, cal)) {
          i = abutPat - 1;
          parsePos[0] = abutStart;
          continue;
        }
      } else {
        abutPat = -1;
        if (!cggis.$subParse(text_0, parsePos, part, 0, cal)) {
          return 0;
        }
      }
    } else {
      abutPat = -1;
      if (jl.$charAt_0(part.text_0, 0) == 32) {
        s = parsePos[0];
        cggis.$skipSpace(text_0, parsePos);
        if (parsePos[0] > s) {
          continue;
        }
      } else if (jl.$startsWith_1(text_0, part.text_0, parsePos[0])) {
        parsePos[0] += ji.uncheckedCast(part.text_0).length;
        continue;
      }
      return 0;
    }
  }
  if (!cggisi.$calcDate(cal, date)) {
    return 0;
  }
  return parsePos[0] - start_0;
};
cggis.$parseInt = function $parseInt(text_0, pos) {
  var ch_0, ind, ret;
  ret = 0;
  ind = pos[0];
  if (ind >= ji.uncheckedCast(text_0).length) {
    return -1;
  }
  ch_0 =
    (ji.checkCriticalStringElementIndex(ind, ji.uncheckedCast(text_0).length),
    ji.uncheckedCast(text_0).charCodeAt(ind));
  while (ch_0 >= 48 && ch_0 <= 57) {
    ret = ret * 10 + (ch_0 - 48);
    ++ind;
    if (ind >= ji.uncheckedCast(text_0).length) {
      break;
    }
    ch_0 =
      (ji.checkCriticalStringElementIndex(ind, ji.uncheckedCast(text_0).length),
      ji.uncheckedCast(text_0).charCodeAt(ind));
  }
  ind > pos[0] ? (pos[0] = ind) : (ret = -1);
  return ret;
};
cggis.$parsePattern_0 = function $parsePattern_0(this$static, pattern) {
  var buf, ch_0, count, i, inQuote;
  buf = new jl.StringBuilder_0();
  inQuote = false;
  for (i = 0; i < ji.uncheckedCast(pattern).length; i++) {
    ch_0 =
      (ji.checkCriticalStringElementIndex(i, ji.uncheckedCast(pattern).length),
      ji.uncheckedCast(pattern).charCodeAt(i));
    if (ch_0 == 32) {
      cggis.$addPart(this$static, buf, 0);
      buf.string += " ";
      cggis.$addPart(this$static, buf, 0);
      while (
        i + 1 < ji.uncheckedCast(pattern).length &&
        (ji.checkCriticalStringElementIndex(
          i + 1,
          ji.uncheckedCast(pattern).length
        ),
        ji.uncheckedCast(pattern).charCodeAt(i + 1) == 32)
      ) {
        ++i;
      }
      continue;
    }
    if (inQuote) {
      if (ch_0 == 39) {
        if (
          i + 1 < ji.uncheckedCast(pattern).length &&
          (ji.checkCriticalStringElementIndex(
            i + 1,
            ji.uncheckedCast(pattern).length
          ),
          ji.uncheckedCast(pattern).charCodeAt(i + 1) == 39)
        ) {
          buf.string += String.fromCharCode(ch_0);
          ++i;
        } else {
          inQuote = false;
        }
      } else {
        buf.string += String.fromCharCode(ch_0);
      }
      continue;
    }
    if (jl.$indexOf("GyMLdkHmsSEcDahKzZv", fromCodePoint(ch_0)) > 0) {
      cggis.$addPart(this$static, buf, 0);
      buf.string += String.fromCharCode(ch_0);
      count = cggis.$getNextCharCountInPattern(pattern, i);
      cggis.$addPart(this$static, buf, count);
      i += count - 1;
      continue;
    }
    if (ch_0 == 39) {
      if (
        i + 1 < ji.uncheckedCast(pattern).length &&
        (ji.checkCriticalStringElementIndex(
          i + 1,
          ji.uncheckedCast(pattern).length
        ),
        ji.uncheckedCast(pattern).charCodeAt(i + 1) == 39)
      ) {
        buf.string += "'";
        ++i;
      } else {
        inQuote = true;
      }
    } else {
      buf.string += String.fromCharCode(ch_0);
    }
  }
  cggis.$addPart(this$static, buf, 0);
  cggis.$identifyAbutStart(this$static);
};
cggis.$parseTimeZoneOffset = function $parseTimeZoneOffset(text_0, pos, cal) {
  var offset, sign, st, value_0;
  if (pos[0] >= ji.uncheckedCast(text_0).length) {
    cal.tzOffset = 0;
    return true;
  }
  switch (jl.$charAt_0(text_0, pos[0])) {
    case 43:
      sign = 1;
      break;
    case 45:
      sign = -1;
      break;
    default:
      cal.tzOffset = 0;
      return true;
  }
  ++pos[0];
  st = pos[0];
  value_0 = cggis.$parseInt(text_0, pos);
  if (value_0 == 0 && pos[0] == st) {
    return false;
  }
  if (
    pos[0] < ji.uncheckedCast(text_0).length &&
    jl.$charAt_0(text_0, pos[0]) == 58
  ) {
    offset = value_0 * 60;
    ++pos[0];
    st = pos[0];
    value_0 = cggis.$parseInt(text_0, pos);
    if (value_0 == 0 && pos[0] == st) {
      return false;
    }
    offset += value_0;
  } else {
    offset = value_0;
    offset < 24 && pos[0] - st <= 2
      ? (offset *= 60)
      : (offset = (offset % 100) + ((offset / 100) | 0) * 60);
  }
  offset *= sign;
  cal.tzOffset = -offset;
  return true;
};
cggis.$skipSpace = function $skipSpace(text_0, pos) {
  while (
    pos[0] < ji.uncheckedCast(text_0).length &&
    jl.$indexOf(" \t\r\n", fromCodePoint(jl.$charAt_0(text_0, pos[0]))) >= 0
  ) {
    ++pos[0];
  }
};
cggis.$subFormat = function $subFormat(
  buf,
  ch_0,
  count,
  date,
  adjustedDate,
  adjustedTime,
  timezone
) {
  var value_0,
    value0,
    value1,
    value10,
    value2,
    value3,
    value4,
    value5,
    value6,
    value7,
    value8,
    value9;
  switch (ch_0) {
    case 71:
      value0 = adjustedDate.jsdate.getFullYear() - $intern_24 >= -1900 ? 1 : 0;
      count >= 4
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["Before Christ", "Anno Domini"]
            )[value0]
          )
        : jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["BC", "AD"]
            )[value0]
          );
      break;
    case 121:
      cggis.$formatYear(buf, count, adjustedDate);
      break;
    case 77:
      cggis.$formatMonth(buf, count, adjustedDate);
      break;
    case 107:
      value1 = adjustedTime.jsdate.getHours();
      value1 == 0
        ? cggis.$zeroPaddingNumber(buf, 24, count)
        : cggis.$zeroPaddingNumber(buf, value1, count);
      break;
    case 83:
      cggis.$formatFractionalSeconds(buf, count, adjustedTime);
      break;
    case 69:
      value2 = adjustedDate.jsdate.getDay();
      count == 5
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["S", "M", "T", "W", "T", "F", "S"]
            )[value2]
          )
        : count == 4
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
              ]
            )[value2]
          )
        : jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
            )[value2]
          );
      break;
    case 97:
      adjustedTime.jsdate.getHours() >= 12 &&
      adjustedTime.jsdate.getHours() < 24
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["AM", "PM"]
            )[1]
          )
        : jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["AM", "PM"]
            )[0]
          );
      break;
    case 104:
      value3 = adjustedTime.jsdate.getHours() % 12;
      value3 == 0
        ? cggis.$zeroPaddingNumber(buf, 12, count)
        : cggis.$zeroPaddingNumber(buf, value3, count);
      break;
    case 75:
      value4 = adjustedTime.jsdate.getHours() % 12;
      cggis.$zeroPaddingNumber(buf, value4, count);
      break;
    case 72:
      value5 = adjustedTime.jsdate.getHours();
      cggis.$zeroPaddingNumber(buf, value5, count);
      break;
    case 99:
      value6 = adjustedDate.jsdate.getDay();
      count == 5
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["S", "M", "T", "W", "T", "F", "S"]
            )[value6]
          )
        : count == 4
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
              ]
            )[value6]
          )
        : count == 3
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
            )[value6]
          )
        : cggis.$zeroPaddingNumber(buf, value6, 1);
      break;
    case 76:
      value7 = adjustedDate.jsdate.getMonth();
      count == 5
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"]
            )[value7]
          )
        : count == 4
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
              ]
            )[value7]
          )
        : count == 3
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
              ]
            )[value7]
          )
        : cggis.$zeroPaddingNumber(buf, value7 + 1, count);
      break;
    case 81:
      value8 = (adjustedDate.jsdate.getMonth() / 3) | 0;
      count < 4
        ? jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["Q1", "Q2", "Q3", "Q4"]
            )[value8]
          )
        : jl.$append_9(
            buf,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
              $intern_8,
              2,
              6,
              ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
            )[value8]
          );
      break;
    case 100:
      value9 = adjustedDate.jsdate.getDate();
      cggis.$zeroPaddingNumber(buf, value9, count);
      break;
    case 109:
      value10 = adjustedTime.jsdate.getMinutes();
      cggis.$zeroPaddingNumber(buf, value10, count);
      break;
    case 115:
      value_0 = adjustedTime.jsdate.getSeconds();
      cggis.$zeroPaddingNumber(buf, value_0, count);
      break;
    case 122:
      count < 4
        ? jl.$append_9(
            buf,
            timezone.tzNames[
              cggic.$getDaylightAdjustment(timezone, date) > 0 ? 2 : 0
            ]
          )
        : jl.$append_9(
            buf,
            timezone.tzNames[
              cggic.$getDaylightAdjustment(timezone, date) > 0 ? 3 : 1
            ]
          );
      break;
    case 118:
      jl.$append_9(buf, timezone.timezoneID);
      break;
    case 90:
      count < 3
        ? jl.$append_9(buf, cggic.$getRFCTimeZoneString(timezone, date))
        : count == 3
        ? jl.$append_9(buf, cggic.$getISOTimeZoneString(timezone, date))
        : jl.$append_9(
            buf,
            cggic.composeGMTString(
              timezone.standardOffset_0 -
                cggic.$getDaylightAdjustment(timezone, date)
            )
          );
      break;
    default:
      return false;
  }
  return true;
};
cggis.$subParse = function $subParse(text_0, pos, part, digitCount, cal) {
  var ch_0, start_0, value_0;
  cggis.$skipSpace(text_0, pos);
  start_0 = pos[0];
  ch_0 = jl.$charAt_0(part.text_0, 0);
  value_0 = -1;
  if (cggis.$isNumeric(part)) {
    if (digitCount > 0) {
      if (start_0 + digitCount > ji.uncheckedCast(text_0).length) {
        return false;
      }
      value_0 = cggis.$parseInt(
        ji.uncheckedCast(text_0).substr(0, start_0 + digitCount),
        pos
      );
    } else {
      value_0 = cggis.$parseInt(text_0, pos);
    }
  }
  switch (ch_0) {
    case 71:
      value_0 = cggis.$matchString(
        text_0,
        start_0,
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
          $intern_8,
          2,
          6,
          ["Before Christ", "Anno Domini"]
        ),
        pos
      );
      cal.era = value_0;
      return true;
    case 77:
      return cggis.$subParseMonth(text_0, pos, cal, value_0, start_0);
    case 76:
      return cggis.$subParseStandaloneMonth(text_0, pos, cal, value_0, start_0);
    case 69:
      return cggis.$subParseDayOfWeek(text_0, pos, start_0, cal);
    case 99:
      return cggis.$subParseStandaloneDay(text_0, pos, start_0, cal);
    case 97:
      value_0 = cggis.$matchString(
        text_0,
        start_0,
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
          $intern_8,
          2,
          6,
          ["AM", "PM"]
        ),
        pos
      );
      cal.ampm = value_0;
      return true;
    case 121:
      return cggis.$subParseYear(text_0, pos, start_0, value_0, part, cal);
    case 100:
      if (value_0 <= 0) {
        return false;
      }

      cal.dayOfMonth = value_0;
      return true;
    case 83:
      if (value_0 < 0) {
        return false;
      }

      return cggis.$subParseFractionalSeconds(value_0, start_0, pos[0], cal);
    case 104:
      value_0 == 12 && (value_0 = 0);
    case 75:
    case 72:
      if (value_0 < 0) {
        return false;
      }

      cal.hours = value_0;
      cal.midnightIs24 = false;
      return true;
    case 107:
      if (value_0 < 0) {
        return false;
      }

      cal.hours = value_0;
      cal.midnightIs24 = true;
      return true;
    case 109:
      if (value_0 < 0) {
        return false;
      }

      cal.minutes = value_0;
      return true;
    case 115:
      if (value_0 < 0) {
        return false;
      }

      cal.seconds = value_0;
      return true;
    case 90:
      if (
        start_0 < ji.uncheckedCast(text_0).length &&
        (ji.checkCriticalStringElementIndex(
          start_0,
          ji.uncheckedCast(text_0).length
        ),
        ji.uncheckedCast(text_0).charCodeAt(start_0) == 90)
      ) {
        ++pos[0];
        cal.tzOffset = 0;
        return true;
      }

    case 122:
    case 118:
      return cggis.$subParseTimeZoneInGMT(text_0, start_0, pos, cal);
    default:
      return false;
  }
};
cggis.$subParseDayOfWeek = function $subParseDayOfWeek(
  text_0,
  pos,
  start_0,
  cal
) {
  var value_0;
  value_0 = cggis.$matchString(
    text_0,
    start_0,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ]
    ),
    pos
  );
  value_0 < 0 &&
    (value_0 = cggis.$matchString(
      text_0,
      start_0,
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
        $intern_8,
        2,
        6,
        ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
      ),
      pos
    ));
  if (value_0 < 0) {
    return false;
  }
  cal.dayOfWeek = value_0;
  return true;
};
cggis.$subParseFractionalSeconds = function $subParseFractionalSeconds(
  value_0,
  start_0,
  end,
  cal
) {
  var a, i;
  i = end - start_0;
  if (i < 3) {
    while (i < 3) {
      value_0 *= 10;
      ++i;
    }
  } else {
    a = 1;
    while (i > 3) {
      a *= 10;
      --i;
    }
    value_0 = ((value_0 + (a >> 1)) / a) | 0;
  }
  cal.milliseconds = value_0;
  return true;
};
cggis.$subParseMonth = function $subParseMonth(
  text_0,
  pos,
  cal,
  value_0,
  start_0
) {
  if (value_0 < 0) {
    value_0 = cggis.$matchString(
      text_0,
      start_0,
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
        $intern_8,
        2,
        6,
        [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ]
      ),
      pos
    );
    value_0 < 0 &&
      (value_0 = cggis.$matchString(
        text_0,
        start_0,
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
          $intern_8,
          2,
          6,
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ]
        ),
        pos
      ));
    if (value_0 < 0) {
      return false;
    }
    cal.month_0 = value_0;
    return true;
  } else if (value_0 > 0) {
    cal.month_0 = value_0 - 1;
    return true;
  }
  return false;
};
cggis.$subParseStandaloneDay = function $subParseStandaloneDay(
  text_0,
  pos,
  start_0,
  cal
) {
  var value_0;
  value_0 = cggis.$matchString(
    text_0,
    start_0,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ]
    ),
    pos
  );
  value_0 < 0 &&
    (value_0 = cggis.$matchString(
      text_0,
      start_0,
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
        $intern_8,
        2,
        6,
        ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
      ),
      pos
    ));
  if (value_0 < 0) {
    return false;
  }
  cal.dayOfWeek = value_0;
  return true;
};
cggis.$subParseStandaloneMonth = function $subParseStandaloneMonth(
  text_0,
  pos,
  cal,
  value_0,
  start_0
) {
  if (value_0 < 0) {
    value_0 = cggis.$matchString(
      text_0,
      start_0,
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
        $intern_8,
        2,
        6,
        [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ]
      ),
      pos
    );
    value_0 < 0 &&
      (value_0 = cggis.$matchString(
        text_0,
        start_0,
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
          $intern_8,
          2,
          6,
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ]
        ),
        pos
      ));
    if (value_0 < 0) {
      return false;
    }
    cal.month_0 = value_0;
    return true;
  } else if (value_0 > 0) {
    cal.month_0 = value_0 - 1;
    return true;
  }
  return false;
};
cggis.$subParseTimeZoneInGMT = function $subParseTimeZoneInGMT(
  text_0,
  start_0,
  pos,
  cal
) {
  if (
    start_0 >= 0 &&
    jl.$equals_12(
      ji.uncheckedCast(text_0).substr(start_0, ji.uncheckedCast("GMT").length),
      "GMT"
    )
  ) {
    pos[0] = start_0 + 3;
    return cggis.$parseTimeZoneOffset(text_0, pos, cal);
  }
  if (
    start_0 >= 0 &&
    jl.$equals_12(
      ji.uncheckedCast(text_0).substr(start_0, ji.uncheckedCast("UTC").length),
      "UTC"
    )
  ) {
    pos[0] = start_0 + 3;
    return cggis.$parseTimeZoneOffset(text_0, pos, cal);
  }
  return cggis.$parseTimeZoneOffset(text_0, pos, cal);
};
cggis.$subParseYear = function $subParseYear(
  text_0,
  pos,
  start_0,
  value_0,
  part,
  cal
) {
  var ambiguousTwoDigitYear, ch_0, date, defaultCenturyStartYear;
  ch_0 = 32;
  if (value_0 < 0) {
    if (pos[0] >= ji.uncheckedCast(text_0).length) {
      return false;
    }
    ch_0 = jl.$charAt_0(text_0, pos[0]);
    if (ch_0 != 43 && ch_0 != 45) {
      return false;
    }
    ++pos[0];
    value_0 = cggis.$parseInt(text_0, pos);
    if (value_0 < 0) {
      return false;
    }
    ch_0 == 45 && (value_0 = -value_0);
  }
  if (ch_0 == 32 && pos[0] - start_0 == 2 && part.count_0 == 2) {
    date = new ju.Date_0();
    defaultCenturyStartYear =
      date.jsdate.getFullYear() - $intern_24 + $intern_24 - 80;
    ambiguousTwoDigitYear = defaultCenturyStartYear % 100;
    cal.ambiguousYear = value_0 == ambiguousTwoDigitYear;
    value_0 +=
      ((defaultCenturyStartYear / 100) | 0) * 100 +
      (value_0 < ambiguousTwoDigitYear ? 100 : 0);
  }
  cal.year_0 = value_0;
  return true;
};
cggis.$zeroPaddingNumber = function $zeroPaddingNumber(buf, value_0, minWidth) {
  var b, i;
  b = 10;
  for (i = 0; i < minWidth - 1; i++) {
    value_0 < b && ((buf.string += "0"), buf);
    b *= 10;
  }
  buf.string += value_0;
};
cggis.DateTimeFormat = function DateTimeFormat(pattern) {
  cggis.$$init_2(this);
  this.pattern = pattern;
  cggis.$parsePattern_0(this, pattern);
};
cggis.getFormat = function getFormat(pattern, dtfi) {
  cggis.$clinit_DateTimeFormat();
  var defaultDtfi, dtf;
  defaultDtfi = cggic.$getDateTimeFormatInfo(
    (cggic.$clinit_LocaleInfo(), cggic.$clinit_LocaleInfo(), cggic.instance_0)
  );
  dtf = null;
  dtfi == defaultDtfi &&
    (dtf = castTo(ju.$getStringValue(cggis.cache, pattern), 291));
  if (!dtf) {
    dtf = new cggis.DateTimeFormat(pattern);
    dtfi == defaultDtfi && ju.$putStringValue(cggis.cache, pattern, dtf);
  }
  return dtf;
};
defineClass(291, 1, { 291: 1 }, cggis.DateTimeFormat);
cggl.Lcom_google_gwt_i18n_shared_DateTimeFormat_2_classLit = createForClass(
  "com.google.gwt.i18n.shared",
  "DateTimeFormat",
  291
);
cggis.DateTimeFormat$PatternPart = function DateTimeFormat$PatternPart(
  txt,
  cnt
) {
  this.text_0 = txt;
  this.count_0 = cnt;
  this.abutStart = false;
};
defineClass(177, 1, { 177: 1 }, cggis.DateTimeFormat$PatternPart);
_.abutStart = false;
_.count_0 = 0;
cggl.Lcom_google_gwt_i18n_shared_DateTimeFormat$PatternPart_2_classLit =
  createForClass(
    "com.google.gwt.i18n.shared",
    "DateTimeFormat/PatternPart",
    177
  );
ju.$compareTo = function $compareTo(this$static, other) {
  return compare_6(
    fromDouble_0(this$static.jsdate.getTime()),
    fromDouble_0(other.jsdate.getTime())
  );
};
ju.$fixDaylightSavings = function $fixDaylightSavings(
  this$static,
  requestedHours
) {
  var badHours,
    copy,
    day,
    newTime,
    originalTimeInMillis,
    timeDiff,
    timeDiffHours,
    timeDiffMinutes;
  requestedHours %= 24;
  if (this$static.jsdate.getHours() != requestedHours) {
    copy = new $wnd.Date(this$static.jsdate.getTime());
    copy.setDate(copy.getDate() + 1);
    timeDiff =
      this$static.jsdate.getTimezoneOffset() - copy.getTimezoneOffset();
    if (timeDiff > 0) {
      timeDiffHours = (timeDiff / 60) | 0;
      timeDiffMinutes = timeDiff % 60;
      day = this$static.jsdate.getDate();
      badHours = this$static.jsdate.getHours();
      badHours + timeDiffHours >= 24 && ++day;
      newTime = new $wnd.Date(
        this$static.jsdate.getFullYear(),
        this$static.jsdate.getMonth(),
        day,
        requestedHours + timeDiffHours,
        this$static.jsdate.getMinutes() + timeDiffMinutes,
        this$static.jsdate.getSeconds(),
        this$static.jsdate.getMilliseconds()
      );
      this$static.jsdate.setTime(newTime.getTime());
    }
  }
  originalTimeInMillis = this$static.jsdate.getTime();
  this$static.jsdate.setTime(originalTimeInMillis + 3600000);
  this$static.jsdate.getHours() != requestedHours &&
    this$static.jsdate.setTime(originalTimeInMillis);
};
ju.$setDate = function $setDate(this$static, date) {
  var hours;
  hours = this$static.jsdate.getHours();
  this$static.jsdate.setDate(date);
  ju.$fixDaylightSavings(this$static, hours);
};
ju.$setHours = function $setHours(this$static, hours) {
  this$static.jsdate.setHours(hours);
  ju.$fixDaylightSavings(this$static, hours);
};
ju.$setMinutes = function $setMinutes(this$static, minutes) {
  var hours;
  hours = this$static.jsdate.getHours() + ((minutes / 60) | 0);
  this$static.jsdate.setMinutes(minutes);
  ju.$fixDaylightSavings(this$static, hours);
};
ju.$setMonth = function $setMonth(this$static, month) {
  var hours;
  hours = this$static.jsdate.getHours();
  this$static.jsdate.setMonth(month);
  ju.$fixDaylightSavings(this$static, hours);
};
ju.$setSeconds = function $setSeconds(this$static, seconds) {
  var hours;
  hours = this$static.jsdate.getHours() + ((seconds / 3600) | 0);
  this$static.jsdate.setSeconds(seconds);
  ju.$fixDaylightSavings(this$static, hours);
};
ju.$setTime = function $setTime(this$static, time) {
  this$static.jsdate.setTime(toDouble_0(time));
};
ju.$setYear = function $setYear(this$static, year) {
  var hours;
  hours = this$static.jsdate.getHours();
  this$static.jsdate.setFullYear(year + $intern_24);
  ju.$fixDaylightSavings(this$static, hours);
};
ju.Date_0 = function Date_0() {
  this.jsdate = new $wnd.Date();
};
ju.Date_1 = function Date_1(year, month, date) {
  ju.Date_2.call(this, year, month, date);
};
ju.Date_2 = function Date_2(year, month, date) {
  this.jsdate = new $wnd.Date();
  this.jsdate.setFullYear(year + $intern_24, month, date);
  this.jsdate.setHours(0, 0, 0, 0);
  ju.$fixDaylightSavings(this, 0);
};
ju.Date_3 = function Date_3(date) {
  this.jsdate = new $wnd.Date(toDouble_0(date));
};
ju.padTwo = function padTwo(number) {
  return number < 10 ? "0" + number : "" + number;
};
defineClass(78, 1, $intern_25, ju.Date_0, ju.Date_1, ju.Date_3);
_.compareTo_0 = function compareTo(other) {
  return ju.$compareTo(this, castTo(other, 78));
};
_.equals_0 = function equals_0(obj) {
  return (
    instanceOf(obj, 78) &&
    eq(
      fromDouble_0(this.jsdate.getTime()),
      fromDouble_0(castTo(obj, 78).jsdate.getTime())
    )
  );
};
_.hashCode_1 = function hashCode_1() {
  var time;
  time = fromDouble_0(this.jsdate.getTime());
  return toInt_0(xor_0(time, shru_0(time, 32)));
};
_.toString_0 = function toString_4() {
  var hourOffset, minuteOffset, offset;
  offset = -this.jsdate.getTimezoneOffset();
  hourOffset = (offset >= 0 ? "+" : "") + ((offset / 60) | 0);
  minuteOffset = ju.padTwo($wnd.Math.abs(offset) % 60);
  return (
    (ju.$clinit_Date$StringData(), ju.DAYS)[this.jsdate.getDay()] +
    " " +
    ju.MONTHS[this.jsdate.getMonth()] +
    " " +
    ju.padTwo(this.jsdate.getDate()) +
    " " +
    ju.padTwo(this.jsdate.getHours()) +
    ":" +
    ju.padTwo(this.jsdate.getMinutes()) +
    ":" +
    ju.padTwo(this.jsdate.getSeconds()) +
    " GMT" +
    hourOffset +
    minuteOffset +
    " " +
    this.jsdate.getFullYear()
  );
};
cggl.Ljava_util_Date_2_classLit = createForClass("java.util", "Date", 78);
cggisi.$calcDate = function $calcDate(this$static, date) {
  var adjustment,
    daysInCurrentMonth,
    defaultCenturyStart,
    offset,
    orgDayOfMonth,
    orgMonth,
    tmp;
  this$static.era == 0 &&
    this$static.year_0 > 0 &&
    (this$static.year_0 = -(this$static.year_0 - 1));
  this$static.year_0 > $intern_22 &&
    ju.$setYear(date, this$static.year_0 - $intern_24);
  orgDayOfMonth = date.jsdate.getDate();
  ju.$setDate(date, 1);
  this$static.month_0 >= 0 && ju.$setMonth(date, this$static.month_0);
  if (this$static.dayOfMonth >= 0) {
    ju.$setDate(date, this$static.dayOfMonth);
  } else if (this$static.month_0 >= 0) {
    tmp = new ju.Date_1(
      date.jsdate.getFullYear() - $intern_24,
      date.jsdate.getMonth(),
      35
    );
    daysInCurrentMonth = 35 - tmp.jsdate.getDate();
    ju.$setDate(date, $wnd.Math.min(daysInCurrentMonth, orgDayOfMonth));
  } else {
    ju.$setDate(date, orgDayOfMonth);
  }
  this$static.hours < 0 && (this$static.hours = date.jsdate.getHours());
  this$static.ampm > 0 && this$static.hours < 12 && (this$static.hours += 12);
  ju.$setHours(
    date,
    this$static.hours == 24 && this$static.midnightIs24 ? 0 : this$static.hours
  );
  this$static.minutes >= 0 && ju.$setMinutes(date, this$static.minutes);
  this$static.seconds >= 0 && ju.$setSeconds(date, this$static.seconds);
  this$static.milliseconds >= 0 &&
    ju.$setTime(
      date,
      add_1(
        mul_0(div(fromDouble_0(date.jsdate.getTime()), $intern_21), $intern_21),
        fromInt(this$static.milliseconds)
      )
    );
  if (this$static.ambiguousYear) {
    defaultCenturyStart = new ju.Date_0();
    ju.$setYear(
      defaultCenturyStart,
      defaultCenturyStart.jsdate.getFullYear() - $intern_24 - 80
    );
    lt(
      fromDouble_0(date.jsdate.getTime()),
      fromDouble_0(defaultCenturyStart.jsdate.getTime())
    ) &&
      ju.$setYear(
        date,
        defaultCenturyStart.jsdate.getFullYear() - $intern_24 + 100
      );
  }
  if (this$static.dayOfWeek >= 0) {
    if (this$static.dayOfMonth == -1) {
      adjustment = (7 + this$static.dayOfWeek - date.jsdate.getDay()) % 7;
      adjustment > 3 && (adjustment -= 7);
      orgMonth = date.jsdate.getMonth();
      ju.$setDate(date, date.jsdate.getDate() + adjustment);
      date.jsdate.getMonth() != orgMonth &&
        ju.$setDate(date, date.jsdate.getDate() + (adjustment > 0 ? -7 : 7));
    } else {
      if (date.jsdate.getDay() != this$static.dayOfWeek) {
        return false;
      }
    }
  }
  if (this$static.tzOffset > $intern_22) {
    offset = date.jsdate.getTimezoneOffset();
    ju.$setTime(
      date,
      add_1(
        fromDouble_0(date.jsdate.getTime()),
        fromInt((this$static.tzOffset - offset) * 60 * $intern_21)
      )
    );
  }
  return true;
};
cggisi.DateRecord = function DateRecord() {
  ju.Date_0.call(this);
  this.era = -1;
  this.ambiguousYear = false;
  this.year_0 = $intern_22;
  this.month_0 = -1;
  this.dayOfMonth = -1;
  this.ampm = -1;
  this.midnightIs24 = false;
  this.hours = -1;
  this.minutes = -1;
  this.seconds = -1;
  this.milliseconds = -1;
  this.dayOfWeek = -1;
  this.tzOffset = $intern_22;
};
defineClass(824, 78, $intern_25, cggisi.DateRecord);
_.ambiguousYear = false;
_.ampm = 0;
_.dayOfMonth = 0;
_.dayOfWeek = 0;
_.era = 0;
_.hours = 0;
_.midnightIs24 = false;
_.milliseconds = 0;
_.minutes = 0;
_.month_0 = 0;
_.seconds = 0;
_.tzOffset = 0;
_.year_0 = 0;
cggl.Lcom_google_gwt_i18n_shared_impl_DateRecord_2_classLit = createForClass(
  "com.google.gwt.i18n.shared.impl",
  "DateRecord",
  824
);
cggl.create_0 = function create_0(value_0) {
  var a0, a1, a2;
  a0 = value_0 & $intern_26;
  a1 = (value_0 >> 22) & $intern_26;
  a2 = value_0 < 0 ? $intern_5 : 0;
  return cggl.create0(a0, a1, a2);
};
cggl.create_1 = function create_1(a) {
  return cggl.create0(
    cggl.getLNative(a),
    cggl.getMNative(a),
    cggl.getHNative(a)
  );
};
cggl.create0 = function create0(l, m, h) {
  return { l: l, m: m, h: h };
};
cggl.divMod = function divMod(a, b, computeRemainder) {
  var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;
  if (
    cggl.getLNative(b) == 0 &&
    cggl.getMNative(b) == 0 &&
    cggl.getHNative(b) == 0
  ) {
    throw toJs(new jl.ArithmeticException("divide by zero"));
  }
  if (
    cggl.getLNative(a) == 0 &&
    cggl.getMNative(a) == 0 &&
    cggl.getHNative(a) == 0
  ) {
    computeRemainder && (cggl.remainder_0 = cggl.create0(0, 0, 0));
    return cggl.create0(0, 0, 0);
  }
  if (
    cggl.getHNative(b) == $intern_27 &&
    cggl.getMNative(b) == 0 &&
    cggl.getLNative(b) == 0
  ) {
    return cggl.divModByMinValue(a, computeRemainder);
  }
  negative = false;
  if (cggl.getHNative(b) >> 19 != 0) {
    b = cggl.neg(b);
    negative = !negative;
  }
  bpower = cggl.powerOfTwo(b);
  aIsNegative = false;
  aIsMinValue = false;
  aIsCopy = false;
  if (
    cggl.getHNative(a) == $intern_27 &&
    cggl.getMNative(a) == 0 &&
    cggl.getLNative(a) == 0
  ) {
    aIsMinValue = true;
    aIsNegative = true;
    if (bpower == -1) {
      a = cggl.create_1((cggl.$clinit_BigLongLib$Const(), cggl.MAX_VALUE));
      aIsCopy = true;
      negative = !negative;
    } else {
      c = cggl.shr(a, bpower);
      negative && cggl.negate_0(c);
      computeRemainder && (cggl.remainder_0 = cggl.create0(0, 0, 0));
      return c;
    }
  } else if (cggl.getHNative(a) >> 19 != 0) {
    aIsNegative = true;
    a = cggl.neg(a);
    aIsCopy = true;
    negative = !negative;
  }
  if (bpower != -1) {
    return cggl.divModByShift(
      a,
      bpower,
      negative,
      aIsNegative,
      computeRemainder
    );
  }
  if (cggl.compare_0(a, b) < 0) {
    computeRemainder &&
      (aIsNegative
        ? (cggl.remainder_0 = cggl.neg(a))
        : (cggl.remainder_0 = cggl.create0(
            cggl.getLNative(a),
            cggl.getMNative(a),
            cggl.getHNative(a)
          )));
    return cggl.create0(0, 0, 0);
  }
  return cggl.divModHelper(
    aIsCopy
      ? a
      : cggl.create0(
          cggl.getLNative(a),
          cggl.getMNative(a),
          cggl.getHNative(a)
        ),
    b,
    negative,
    aIsNegative,
    aIsMinValue,
    computeRemainder
  );
};
cggl.divModByMinValue = function divModByMinValue(a, computeRemainder) {
  if (
    cggl.getHNative(a) == $intern_27 &&
    cggl.getMNative(a) == 0 &&
    cggl.getLNative(a) == 0
  ) {
    computeRemainder && (cggl.remainder_0 = cggl.create0(0, 0, 0));
    return cggl.create_1((cggl.$clinit_BigLongLib$Const(), cggl.ONE));
  }
  computeRemainder &&
    (cggl.remainder_0 = cggl.create0(
      cggl.getLNative(a),
      cggl.getMNative(a),
      cggl.getHNative(a)
    ));
  return cggl.create0(0, 0, 0);
};
cggl.divModByShift = function divModByShift(
  a,
  bpower,
  negative,
  aIsNegative,
  computeRemainder
) {
  var c;
  c = cggl.shr(a, bpower);
  negative && cggl.negate_0(c);
  if (computeRemainder) {
    a = cggl.maskRight(a, bpower);
    aIsNegative
      ? (cggl.remainder_0 = cggl.neg(a))
      : (cggl.remainder_0 = cggl.create0(
          cggl.getLNative(a),
          cggl.getMNative(a),
          cggl.getHNative(a)
        ));
  }
  return c;
};
cggl.divModHelper = function divModHelper(
  a,
  b,
  negative,
  aIsNegative,
  aIsMinValue,
  computeRemainder
) {
  var bshift, gte, quotient, shift_0;
  shift_0 = cggl.numberOfLeadingZeros(b) - cggl.numberOfLeadingZeros(a);
  bshift = cggl.shl(b, shift_0);
  quotient = cggl.create0(0, 0, 0);
  while (shift_0 >= 0) {
    gte = cggl.trialSubtract(a, bshift);
    if (gte) {
      shift_0 < 22
        ? cggl.setBitL(quotient, shift_0)
        : shift_0 < 44
        ? cggl.setBitM(quotient, shift_0 - 22)
        : cggl.setBitH(quotient, shift_0 - 44);
      if (
        cggl.getLNative(a) == 0 &&
        cggl.getMNative(a) == 0 &&
        cggl.getHNative(a) == 0
      ) {
        break;
      }
    }
    cggl.toShru1(bshift);
    --shift_0;
  }
  negative && cggl.negate_0(quotient);
  if (computeRemainder) {
    if (aIsNegative) {
      cggl.remainder_0 = cggl.neg(a);
      aIsMinValue &&
        (cggl.remainder_0 = cggl.sub_2(
          cggl.remainder_0,
          (cggl.$clinit_BigLongLib$Const(), cggl.ONE)
        ));
    } else {
      cggl.remainder_0 = cggl.create0(
        cggl.getLNative(a),
        cggl.getMNative(a),
        cggl.getHNative(a)
      );
    }
  }
  return quotient;
};
cggl.getHNative = function getHNative(a) {
  return a.h;
};
cggl.getLNative = function getLNative(a) {
  return a.l;
};
cggl.getMNative = function getMNative(a) {
  return a.m;
};
cggl.maskRight = function maskRight(a, bits) {
  var b0, b1, b2;
  if (bits <= 22) {
    b0 = cggl.getLNative(a) & ((1 << bits) - 1);
    b1 = b2 = 0;
  } else if (bits <= 44) {
    b0 = cggl.getLNative(a);
    b1 = cggl.getMNative(a) & ((1 << (bits - 22)) - 1);
    b2 = 0;
  } else {
    b0 = cggl.getLNative(a);
    b1 = cggl.getMNative(a);
    b2 = cggl.getHNative(a) & ((1 << (bits - 44)) - 1);
  }
  return cggl.create0(b0, b1, b2);
};
cggl.negate_0 = function negate_0(a) {
  var neg0, neg1, neg2;
  neg0 = (~cggl.getLNative(a) + 1) & $intern_26;
  neg1 = (~cggl.getMNative(a) + (neg0 == 0 ? 1 : 0)) & $intern_26;
  neg2 = (~cggl.getHNative(a) + (neg0 == 0 && neg1 == 0 ? 1 : 0)) & $intern_5;
  cggl.setL(a, neg0);
  cggl.setM(a, neg1);
  cggl.setH(a, neg2);
};
cggl.numberOfLeadingZeros = function numberOfLeadingZeros(a) {
  var b1, b2;
  b2 = numberOfLeadingZeros_0(cggl.getHNative(a));
  if (b2 == 32) {
    b1 = numberOfLeadingZeros_0(cggl.getMNative(a));
    return b1 == 32
      ? numberOfLeadingZeros_0(cggl.getLNative(a)) + 32
      : b1 + 20 - 10;
  } else {
    return b2 - 12;
  }
};
cggl.powerOfTwo = function powerOfTwo(a) {
  var h, l, m;
  l = cggl.getLNative(a);
  if ((l & (l - 1)) != 0) {
    return -1;
  }
  m = cggl.getMNative(a);
  if ((m & (m - 1)) != 0) {
    return -1;
  }
  h = cggl.getHNative(a);
  if ((h & (h - 1)) != 0) {
    return -1;
  }
  if (h == 0 && m == 0 && l == 0) {
    return -1;
  }
  if (h == 0 && m == 0 && l != 0) {
    return numberOfTrailingZeros(l);
  }
  if (h == 0 && m != 0 && l == 0) {
    return numberOfTrailingZeros(m) + 22;
  }
  if (h != 0 && m == 0 && l == 0) {
    return numberOfTrailingZeros(h) + 44;
  }
  return -1;
};
cggl.setBitH = function setBitH(a, bit) {
  a.h |= 1 << bit;
};
cggl.setBitL = function setBitL(a, bit) {
  a.l |= 1 << bit;
};
cggl.setBitM = function setBitM(a, bit) {
  a.m |= 1 << bit;
};
cggl.setH = function setH(a, x_0) {
  a.h = x_0;
};
cggl.setL = function setL(a, x_0) {
  a.l = x_0;
};
cggl.setM = function setM(a, x_0) {
  a.m = x_0;
};
cggl.toDoubleHelper = function toDoubleHelper(a) {
  return (
    cggl.getLNative(a) +
    cggl.getMNative(a) * $intern_4 +
    cggl.getHNative(a) * $intern_3
  );
};
cggl.toShru1 = function toShru1(a) {
  var a0, a1, a2;
  a1 = cggl.getMNative(a);
  a2 = cggl.getHNative(a);
  a0 = cggl.getLNative(a);
  cggl.setH(a, a2 >>> 1);
  cggl.setM(a, (a1 >>> 1) | ((a2 & 1) << 21));
  cggl.setL(a, (a0 >>> 1) | ((a1 & 1) << 21));
};
cggl.trialSubtract = function trialSubtract(a, b) {
  var sum0, sum1, sum2;
  sum2 = cggl.getHNative(a) - cggl.getHNative(b);
  if (sum2 < 0) {
    return false;
  }
  sum0 = cggl.getLNative(a) - cggl.getLNative(b);
  sum1 = cggl.getMNative(a) - cggl.getMNative(b) + (sum0 >> 22);
  sum2 += sum1 >> 22;
  if (sum2 < 0) {
    return false;
  }
  cggl.setL(a, sum0 & $intern_26);
  cggl.setM(a, sum1 & $intern_26);
  cggl.setH(a, sum2 & $intern_5);
  return true;
};
cggl.add_0 = function add_0(a, b) {
  var sum0, sum1, sum2;
  sum0 = cggl.getLNative(a) + cggl.getLNative(b);
  sum1 = cggl.getMNative(a) + cggl.getMNative(b) + (sum0 >> 22);
  sum2 = cggl.getHNative(a) + cggl.getHNative(b) + (sum1 >> 22);
  return cggl.create0(sum0 & $intern_26, sum1 & $intern_26, sum2 & $intern_5);
};
cggl.and_0 = function and_0(a, b) {
  return cggl.create0(
    cggl.getLNative(a) & cggl.getLNative(b),
    cggl.getMNative(a) & cggl.getMNative(b),
    cggl.getHNative(a) & cggl.getHNative(b)
  );
};
cggl.compare_0 = function compare_0(a, b) {
  var a0, a1, a2, b0, b1, b2, signA, signB;
  signA = cggl.getHNative(a) >> 19;
  signB = cggl.getHNative(b) >> 19;
  if (signA != signB) {
    return signB - signA;
  }
  a2 = cggl.getHNative(a);
  b2 = cggl.getHNative(b);
  if (a2 != b2) {
    return a2 - b2;
  }
  a1 = cggl.getMNative(a);
  b1 = cggl.getMNative(b);
  if (a1 != b1) {
    return a1 - b1;
  }
  a0 = cggl.getLNative(a);
  b0 = cggl.getLNative(b);
  return a0 - b0;
};
cggl.fromDouble = function fromDouble(value_0) {
  var a0, a1, a2, negative, result;
  if (isNaN(value_0)) {
    return cggl.$clinit_BigLongLib$Const(), cggl.ZERO;
  }
  if (value_0 < $intern_28) {
    return cggl.$clinit_BigLongLib$Const(), cggl.MIN_VALUE;
  }
  if (value_0 >= 9223372036854775807) {
    return cggl.$clinit_BigLongLib$Const(), cggl.MAX_VALUE;
  }
  negative = false;
  if (value_0 < 0) {
    negative = true;
    value_0 = -value_0;
  }
  a2 = 0;
  if (value_0 >= $intern_3) {
    a2 = round_int(value_0 / $intern_3);
    value_0 -= a2 * $intern_3;
  }
  a1 = 0;
  if (value_0 >= $intern_4) {
    a1 = round_int(value_0 / $intern_4);
    value_0 -= a1 * $intern_4;
  }
  a0 = round_int(value_0);
  result = cggl.create0(a0, a1, a2);
  negative && cggl.negate_0(result);
  return result;
};
cggl.mul = function mul(a, b) {
  var a0,
    a1,
    a2,
    a3,
    a4,
    b0,
    b1,
    b2,
    b3,
    b4,
    c0,
    c00,
    c01,
    c1,
    c10,
    c11,
    c12,
    c13,
    c2,
    c22,
    c23,
    c24,
    p0,
    p1,
    p2,
    p3,
    p4;
  a0 = cggl.getLNative(a) & 8191;
  a1 = (cggl.getLNative(a) >> 13) | ((cggl.getMNative(a) & 15) << 9);
  a2 = (cggl.getMNative(a) >> 4) & 8191;
  a3 = (cggl.getMNative(a) >> 17) | ((cggl.getHNative(a) & 255) << 5);
  a4 = (cggl.getHNative(a) & 1048320) >> 8;
  b0 = cggl.getLNative(b) & 8191;
  b1 = (cggl.getLNative(b) >> 13) | ((cggl.getMNative(b) & 15) << 9);
  b2 = (cggl.getMNative(b) >> 4) & 8191;
  b3 = (cggl.getMNative(b) >> 17) | ((cggl.getHNative(b) & 255) << 5);
  b4 = (cggl.getHNative(b) & 1048320) >> 8;
  p0 = a0 * b0;
  p1 = a1 * b0;
  p2 = a2 * b0;
  p3 = a3 * b0;
  p4 = a4 * b0;
  if (b1 != 0) {
    p1 += a0 * b1;
    p2 += a1 * b1;
    p3 += a2 * b1;
    p4 += a3 * b1;
  }
  if (b2 != 0) {
    p2 += a0 * b2;
    p3 += a1 * b2;
    p4 += a2 * b2;
  }
  if (b3 != 0) {
    p3 += a0 * b3;
    p4 += a1 * b3;
  }
  b4 != 0 && (p4 += a0 * b4);
  c00 = p0 & $intern_26;
  c01 = (p1 & 511) << 13;
  c0 = c00 + c01;
  c10 = p0 >> 22;
  c11 = p1 >> 9;
  c12 = (p2 & 262143) << 4;
  c13 = (p3 & 31) << 17;
  c1 = c10 + c11 + c12 + c13;
  c22 = p2 >> 18;
  c23 = p3 >> 5;
  c24 = (p4 & 4095) << 8;
  c2 = c22 + c23 + c24;
  c1 += c0 >> 22;
  c0 &= $intern_26;
  c2 += c1 >> 22;
  c1 &= $intern_26;
  c2 &= $intern_5;
  return cggl.create0(c0, c1, c2);
};
cggl.neg = function neg(a) {
  var neg0, neg1, neg2;
  neg0 = (~cggl.getLNative(a) + 1) & $intern_26;
  neg1 = (~cggl.getMNative(a) + (neg0 == 0 ? 1 : 0)) & $intern_26;
  neg2 = (~cggl.getHNative(a) + (neg0 == 0 && neg1 == 0 ? 1 : 0)) & $intern_5;
  return cggl.create0(neg0, neg1, neg2);
};
cggl.not_0 = function not_0(a) {
  return cggl.create0(
    ~cggl.getLNative(a) & $intern_26,
    ~cggl.getMNative(a) & $intern_26,
    ~cggl.getHNative(a) & $intern_5
  );
};
cggl.or_0 = function or_0(a, b) {
  return cggl.create0(
    cggl.getLNative(a) | cggl.getLNative(b),
    cggl.getMNative(a) | cggl.getMNative(b),
    cggl.getHNative(a) | cggl.getHNative(b)
  );
};
cggl.shl = function shl(a, n) {
  var res0, res1, res2;
  n &= 63;
  if (n < 22) {
    res0 = cggl.getLNative(a) << n;
    res1 = (cggl.getMNative(a) << n) | (cggl.getLNative(a) >> (22 - n));
    res2 = (cggl.getHNative(a) << n) | (cggl.getMNative(a) >> (22 - n));
  } else if (n < 44) {
    res0 = 0;
    res1 = cggl.getLNative(a) << (n - 22);
    res2 = (cggl.getMNative(a) << (n - 22)) | (cggl.getLNative(a) >> (44 - n));
  } else {
    res0 = 0;
    res1 = 0;
    res2 = cggl.getLNative(a) << (n - 44);
  }
  return cggl.create0(res0 & $intern_26, res1 & $intern_26, res2 & $intern_5);
};
cggl.shr = function shr(a, n) {
  var a2, negative, res0, res1, res2;
  n &= 63;
  a2 = cggl.getHNative(a);
  negative = (a2 & $intern_27) != 0;
  negative && (a2 |= -1048576);
  if (n < 22) {
    res2 = a2 >> n;
    res1 = (cggl.getMNative(a) >> n) | (a2 << (22 - n));
    res0 = (cggl.getLNative(a) >> n) | (cggl.getMNative(a) << (22 - n));
  } else if (n < 44) {
    res2 = negative ? $intern_5 : 0;
    res1 = a2 >> (n - 22);
    res0 = (cggl.getMNative(a) >> (n - 22)) | (a2 << (44 - n));
  } else {
    res2 = negative ? $intern_5 : 0;
    res1 = negative ? $intern_26 : 0;
    res0 = a2 >> (n - 44);
  }
  return cggl.create0(res0 & $intern_26, res1 & $intern_26, res2 & $intern_5);
};
cggl.shru = function shru(a, n) {
  var a2, res0, res1, res2;
  n &= 63;
  a2 = cggl.getHNative(a) & $intern_5;
  if (n < 22) {
    res2 = a2 >>> n;
    res1 = (cggl.getMNative(a) >> n) | (a2 << (22 - n));
    res0 = (cggl.getLNative(a) >> n) | (cggl.getMNative(a) << (22 - n));
  } else if (n < 44) {
    res2 = 0;
    res1 = a2 >>> (n - 22);
    res0 = (cggl.getMNative(a) >> (n - 22)) | (cggl.getHNative(a) << (44 - n));
  } else {
    res2 = 0;
    res1 = 0;
    res0 = a2 >>> (n - 44);
  }
  return cggl.create0(res0 & $intern_26, res1 & $intern_26, res2 & $intern_5);
};
cggl.sub_2 = function sub_2(a, b) {
  var sum0, sum1, sum2;
  sum0 = cggl.getLNative(a) - cggl.getLNative(b);
  sum1 = cggl.getMNative(a) - cggl.getMNative(b) + (sum0 >> 22);
  sum2 = cggl.getHNative(a) - cggl.getHNative(b) + (sum1 >> 22);
  return cggl.create0(sum0 & $intern_26, sum1 & $intern_26, sum2 & $intern_5);
};
cggl.toDouble = function toDouble(a) {
  if (cggl.compare_0(a, (cggl.$clinit_BigLongLib$Const(), cggl.ZERO)) < 0) {
    return -cggl.toDoubleHelper(cggl.neg(a));
  }
  return (
    cggl.getLNative(a) +
    cggl.getMNative(a) * $intern_4 +
    cggl.getHNative(a) * $intern_3
  );
};
cggl.toInt = function toInt(a) {
  return cggl.getLNative(a) | (cggl.getMNative(a) << 22);
};
cggl.toString_5 = function toString_5(a) {
  var digits, rem, res, tenPowerLong, zeroesNeeded;
  if (
    cggl.getLNative(a) == 0 &&
    cggl.getMNative(a) == 0 &&
    cggl.getHNative(a) == 0
  ) {
    return "0";
  }
  if (
    cggl.getHNative(a) == $intern_27 &&
    cggl.getMNative(a) == 0 &&
    cggl.getLNative(a) == 0
  ) {
    return "-9223372036854775808";
  }
  if (cggl.getHNative(a) >> 19 != 0) {
    return "-" + cggl.toString_5(cggl.neg(a));
  }
  rem = a;
  res = "";
  while (
    !(
      cggl.getLNative(rem) == 0 &&
      cggl.getMNative(rem) == 0 &&
      cggl.getHNative(rem) == 0
    )
  ) {
    tenPowerLong = cggl.create_0($intern_29);
    rem = cggl.divMod(rem, tenPowerLong, true);
    digits = "" + cggl.toInt(cggl.remainder_0);
    if (
      !(
        cggl.getLNative(rem) == 0 &&
        cggl.getMNative(rem) == 0 &&
        cggl.getHNative(rem) == 0
      )
    ) {
      zeroesNeeded = 9 - ji.uncheckedCast(digits).length;
      for (; zeroesNeeded > 0; zeroesNeeded--) {
        digits = "0" + digits;
      }
    }
    res = digits + res;
  }
  return res;
};
cggl.xor = function xor(a, b) {
  return cggl.create0(
    cggl.getLNative(a) ^ cggl.getLNative(b),
    cggl.getMNative(a) ^ cggl.getMNative(b),
    cggl.getHNative(a) ^ cggl.getHNative(b)
  );
};
cggl.$clinit_BigLongLib$Const = function $clinit_BigLongLib$Const() {
  cggl.$clinit_BigLongLib$Const = emptyMethod;
  cggl.MAX_VALUE = cggl.create0($intern_26, $intern_26, 524287);
  cggl.MIN_VALUE = cggl.create0(0, 0, $intern_27);
  cggl.ONE = cggl.create_0(1);
  cggl.create_0(2);
  cggl.ZERO = cggl.create_0(0);
};
function init_0() {}

cgguc.$$init_6 = function $$init_6(this$static) {};
cgguc.$cancel = function $cancel(this$static) {
  if (!this$static.timerId) {
    return;
  }
  ++this$static.cancelCounter;
  this$static.isRepeating
    ? cgguc.clearInterval_0(this$static.timerId.value_0)
    : cgguc.clearTimeout_0(this$static.timerId.value_0);
  this$static.timerId = null;
};
cgguc.$schedule = function $schedule(this$static) {
  !!this$static.timerId && cgguc.$cancel(this$static);
  this$static.isRepeating = false;
  this$static.timerId = jl.valueOf_29(
    cgguc.setTimeout_0(
      cgguc.createCallback(this$static, this$static.cancelCounter),
      30000
    )
  );
};
cgguc.Timer = function Timer() {
  cgguc.$$init_6(this);
};
cgguc.clearInterval_0 = function clearInterval_0(timerId) {
  $wnd.clearInterval(timerId);
};
cgguc.clearTimeout_0 = function clearTimeout_0(timerId) {
  $wnd.clearTimeout(timerId);
};
cgguc.createCallback = function createCallback(timer, cancelCounter) {
  return $entry(function () {
    timer.fire(cancelCounter);
  });
};
cgguc.setTimeout_0 = function setTimeout_0(func, time) {
  return $wnd.setTimeout(func, time);
};
defineClass(695, 1, {});
_.fire = function fire(scheduleCancelCounter) {
  if (scheduleCancelCounter != this.cancelCounter) {
    return;
  }
  this.isRepeating || (this.timerId = null);
  idwci.$run_2(this);
};
_.cancelCounter = 0;
_.isRepeating = false;
_.timerId = null;
cggl.Lcom_google_gwt_user_client_Timer_2_classLit = createForClass(
  "com.google.gwt.user.client",
  "Timer",
  695
);
jb.$asList = function $asList(this$static) {
  var asArray;
  asArray = this$static;
  return new ju.Arrays$ArrayList(asArray);
};
jb.$getAt = function $getAt(this$static, index_0) {
  return jb.getAt(this$static, index_0);
};
jb.$getAtAsAny = function $getAtAsAny(this$static, index_0) {
  return jb.getAt(this$static, index_0);
};
jb.$getLength = function $getLength(this$static) {
  return jb.getLength(this$static);
};
jb.$setAt = function $setAt(this$static, index_0, value_0) {
  jb.setAt(this$static, index_0, value_0);
};
ec.$clinit_Float32Array = function $clinit_Float32Array() {
  ec.$clinit_Float32Array = emptyMethod;
  ec.BYTES_PER_ELEMENT = $wnd.Float32Array.BYTES_PER_ELEMENT;
};
ec.BYTES_PER_ELEMENT = 0;
ec.$clinit_Float64Array = function $clinit_Float64Array() {
  ec.$clinit_Float64Array = emptyMethod;
  ec.BYTES_PER_ELEMENT_0 = $wnd.Float64Array.BYTES_PER_ELEMENT;
};
ec.BYTES_PER_ELEMENT_0 = 0;
ec.$clinit_Int16Array = function $clinit_Int16Array() {
  ec.$clinit_Int16Array = emptyMethod;
  ec.BYTES_PER_ELEMENT_1 = $wnd.Int16Array.BYTES_PER_ELEMENT;
};
ec.BYTES_PER_ELEMENT_1 = 0;
ec.$clinit_Int32Array = function $clinit_Int32Array() {
  ec.$clinit_Int32Array = emptyMethod;
  ec.BYTES_PER_ELEMENT_2 = $wnd.Int32Array.BYTES_PER_ELEMENT;
};
ec.BYTES_PER_ELEMENT_2 = 0;
ec.$clinit_Int8Array = function $clinit_Int8Array() {
  ec.$clinit_Int8Array = emptyMethod;
  ec.BYTES_PER_ELEMENT_3 = $wnd.Int8Array.BYTES_PER_ELEMENT;
};
ec.BYTES_PER_ELEMENT_3 = 0;
ec.$clinit_Uint16Array = function $clinit_Uint16Array() {
  ec.$clinit_Uint16Array = emptyMethod;
  ec.BYTES_PER_ELEMENT_4 = $wnd.Uint16Array.BYTES_PER_ELEMENT;
};
ec.BYTES_PER_ELEMENT_4 = 0;
jb.$delete_2 = function $delete_2(this$static, propertyName) {
  jb.delete_0(this$static, propertyName);
};
jb.$forEach_7 = function $forEach_7(this$static, cb) {
  jb.forEach_12(this$static, cb);
};
jb.$get_23 = function $get_23(this$static, propertyName) {
  return jb.get_44(this$static, propertyName);
};
jb.$getAsAny = function $getAsAny(this$static, propertyName) {
  return jb.get_44(this$static, propertyName);
};
jb.$has = function $has(this$static, propertyName) {
  return jb.has(this$static, propertyName);
};
jb.$set_0 = function $set_0(this$static, propertyName, value_0) {
  jb.set_6(this$static, propertyName, value_0);
};
jb.of_6 = function of_6(v) {
  var map_0;
  map_0 = jb.emptyObjectLiteral();
  jb.$set_0(map_0, "debug", v);
  return map_0;
};
jb.of_7 = function of_7(k1, v1, k2, v2) {
  var map_0;
  map_0 = jb.emptyObjectLiteral();
  jb.$set_0(map_0, k1, v1);
  jb.$set_0(map_0, k2, v2);
  return map_0;
};
jb.of_8 = function of_8(k1, v1, k2, v2, k3, v3) {
  var map_0;
  map_0 = jb.emptyObjectLiteral();
  jb.$set_0(map_0, k1, v1);
  jb.$set_0(map_0, k2, v2);
  jb.$set_0(map_0, k3, v3);
  return map_0;
};
ed.$clinit_WebSocket = function $clinit_WebSocket() {
  ed.$clinit_WebSocket = emptyMethod;
  ed.CONNECTING = $wnd.WebSocket.CONNECTING;
};
ed.CONNECTING = 0;
idjpdaffsoaaf.$asString = function $asString(this$static) {
  return jb.checkCriticalType_0(typeof this$static == "string"), this$static;
};
idjpdaffsoaaf.$asString_0 = function $asString_0(this$static) {
  return jb.checkCriticalType_0(typeof this$static == "string"), this$static;
};
idjpdaffsoaaf.$asString_1 = function $asString_1(this$static) {
  return jb.checkCriticalType_0(typeof this$static == "string"), this$static;
};
idwca.$toString_2 = function $toString_2(this$static) {
  return jm.$toString_14(this$static.value_0);
};
idwca.BigDecimalWrapper = function BigDecimalWrapper(value_0) {
  this.value_0 = value_0;
};
idwca.ofString = function ofString(value_0) {
  return new idwca.BigDecimalWrapper(new jm.BigDecimal_1(value_0));
};
defineClass(146, 1, { 146: 1 }, idwca.BigDecimalWrapper);
_.asNumber = function asNumber() {
  return jl.__parseAndValidateDouble(jm.$toString_14(this.value_0));
};
_.toString = function toString_8() {
  return idwca.$toString_2(this);
};
_.toString_0 = function () {
  return this.toString();
};
_.valueOf = function valueOf() {
  return jm.$toString_14(this.value_0);
};
cggl.Lio_deephaven_web_client_api_BigDecimalWrapper_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "BigDecimalWrapper",
  146
);
idwca.$toString_3 = function $toString_3(this$static) {
  return jm.toDecimalScaledString_0(this$static.value_0, 0);
};
idwca.BigIntegerWrapper = function BigIntegerWrapper(value_0) {
  this.value_0 = value_0;
};
idwca.ofString_0 = function ofString_0(str) {
  return new idwca.BigIntegerWrapper(new jm.BigInteger_4(str));
};
defineClass(147, 1, { 147: 1 }, idwca.BigIntegerWrapper);
_.asNumber = function asNumber_0() {
  return jl.__parseAndValidateDouble(
    jm.toDecimalScaledString_0(this.value_0, 0)
  );
};
_.toString = function toString_9() {
  return idwca.$toString_3(this);
};
_.toString_0 = function () {
  return this.toString();
};
_.valueOf = function valueOf_0() {
  return jm.toDecimalScaledString_0(this.value_0, 0);
};
cggl.Lio_deephaven_web_client_api_BigIntegerWrapper_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "BigIntegerWrapper",
  147
);
idwca.lambda$0 = function lambda$0(t_0, failHandler_1, resolve_2, reject_3) {
  t_0.accept(new idwca.Callbacks$3(failHandler_1, t_0, reject_3, resolve_2));
};
idwca.lambda$1 = function lambda$1(failHandler_0, realCallback_1, f_2) {
  failHandler_0
    ? idwca.$failureHandled(
        failHandler_0,
        f_2 == null ? null : f_2 == null ? "null" : toString_7(f_2)
      )
    : $wnd.goog.global.console.error(
        "Request ",
        realCallback_1,
        " failed with reason ",
        f_2
      );
};
idwca.lambda$2 = function lambda$2(
  failHandler_0,
  realCallback_1,
  reject_2,
  f_3
) {
  failHandler_0
    ? idwca.$failureHandled(
        failHandler_0,
        f_3 == null ? null : f_3 == null ? "null" : toString_7(f_3)
      )
    : $wnd.goog.global.console.error(
        "Request ",
        realCallback_1,
        " failed with reason ",
        f_3
      );
  reject_2(f_3);
};
idwca.lambda$5 = function lambda$5(resolve_0, reject_1, fail_2, success_3) {
  fail_2 == null ? resolve_0(success_3) : reject_1(fail_2);
};
idwca.notNull = function notNull(failHandler, realCallback, reject) {
  if (reject == null) {
    return makeLambdaFunction(
      idwca.Callbacks$lambda$1$Type.prototype.onInvoke_3,
      idwca.Callbacks$lambda$1$Type,
      [failHandler, realCallback]
    );
  }
  return makeLambdaFunction(
    idwca.Callbacks$lambda$2$Type.prototype.onInvoke_3,
    idwca.Callbacks$lambda$2$Type,
    [failHandler, realCallback, reject]
  );
};
idwca.promise_2 = function promise_2(failHandler, t) {
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$0$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$0$Type,
      [t, failHandler]
    )
  );
};
idwca.Callbacks$3 = function Callbacks$3(
  val$failHandler,
  val$t,
  val$reject,
  val$resolve
) {
  this.val$failHandler1 = val$failHandler;
  this.val$t2 = val$t;
  this.val$reject3 = val$reject;
  this.val$resolve4 = val$resolve;
};
defineClass(710, 1, { 227: 1 }, idwca.Callbacks$3);
_.onFailure = function onFailure(reason) {
  idwca.notNull(this.val$failHandler1, this.val$t2, this.val$reject3)(reason);
};
_.onSuccess = function onSuccess(result) {
  this.val$resolve4.call(null, result);
};
cggl.Lio_deephaven_web_client_api_Callbacks$3_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "Callbacks/3",
  710
);
idwca.Callbacks$4 = function Callbacks$4(val$from) {
  this.val$from1 = val$from;
};
defineClass(711, 1, { 227: 1 }, idwca.Callbacks$4);
_.onFailure = function onFailure_0(reason) {
  this.fail = reason;
  idwca.$accept(this.val$from1, null, reason);
};
_.onSuccess = function onSuccess_0(result) {
  idwca.$accept(this.val$from1, result, this.fail);
};
cggl.Lio_deephaven_web_client_api_Callbacks$4_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "Callbacks/4",
  711
);
idwca.$getClass_1 = function $getClass_1() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.Callbacks$lambda$0$Type = function Callbacks$lambda$0$Type(
  t_0,
  failHandler_1
) {
  this.t_0 = t_0;
  this.failHandler_1 = failHandler_1;
};
defineClass(1540, $wnd.Function, {}, idwca.Callbacks$lambda$0$Type);
_.onInvoke_6 = function onInvoke(arg0, arg1) {
  idwca.lambda$0(this.t_0, this.failHandler_1, arg0, arg1);
};
idwca.$getClass_2 = function $getClass_2() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.Callbacks$lambda$1$Type = function Callbacks$lambda$1$Type(
  failHandler_0,
  realCallback_1
) {
  this.failHandler_0 = failHandler_0;
  this.realCallback_1 = realCallback_1;
};
defineClass(1541, $wnd.Function, {}, idwca.Callbacks$lambda$1$Type);
_.onInvoke_3 = function onInvoke_0(arg0) {
  idwca.lambda$1(this.failHandler_0, this.realCallback_1, arg0);
};
idwca.$getClass_3 = function $getClass_3() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.Callbacks$lambda$2$Type = function Callbacks$lambda$2$Type(
  failHandler_0,
  realCallback_1,
  reject_2
) {
  this.failHandler_0 = failHandler_0;
  this.realCallback_1 = realCallback_1;
  this.reject_2 = reject_2;
};
defineClass(1542, $wnd.Function, {}, idwca.Callbacks$lambda$2$Type);
_.onInvoke_3 = function onInvoke_1(arg0) {
  idwca.lambda$2(this.failHandler_0, this.realCallback_1, this.reject_2, arg0);
};
idwca.$getClass_4 = function $getClass_4() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.Callbacks$lambda$4$Type = function Callbacks$lambda$4$Type(t_0) {
  this.t_0 = t_0;
};
defineClass(52, $wnd.Function, {}, idwca.Callbacks$lambda$4$Type);
_.onInvoke_6 = function onInvoke_2(arg0, arg1) {
  this.t_0.accept(
    makeLambdaFunction(
      idwca.Callbacks$lambda$5$Type.prototype.apply_0,
      idwca.Callbacks$lambda$5$Type,
      [arg0, arg1]
    )
  );
};
idwca.$getClass_5 = function $getClass_5() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.Callbacks$lambda$5$Type = function Callbacks$lambda$5$Type(
  resolve_0,
  reject_1
) {
  this.resolve_0 = resolve_0;
  this.reject_1 = reject_1;
};
defineClass(1543, $wnd.Function, $intern_30, idwca.Callbacks$lambda$5$Type);
_.apply_0 = function apply_1(arg0, arg1) {
  idwca.lambda$5(this.resolve_0, this.reject_1, arg0, arg1);
};
idwca.$$init_7 = function $$init_7(this$static) {};
idwca.$newTicket = function $newTicket(this$static) {
  var ticket;
  ticket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket();
  ticket.setTicket(idwca.$newTicketRaw(this$static));
  return ticket;
};
idwca.$newTicketRaw = function $newTicketRaw(this$static) {
  var bytes, dest, exportId;
  if (this$static.next_0 == $intern_1) {
    throw toJs(new jl.IllegalStateException_0("Ran out of tickets!"));
  }
  exportId = this$static.next_0++;
  dest = initUnidimensionalArray(cggl.D_classLit, $intern_31, 18, 5, 15, 1);
  dest[0] = 101;
  dest[1] = (exportId << 24) >> 24;
  dest[2] = ((exportId >>> 8) << 24) >> 24;
  dest[3] = ((exportId >>> 16) << 24) >> 24;
  dest[4] = ((exportId >>> 24) << 24) >> 24;
  bytes = new $wnd.Uint8Array(5);
  bytes.set(dest);
  return bytes;
};
idwca.ClientConfiguration = function ClientConfiguration() {
  idwca.$$init_7(this);
};
defineClass(743, 1, {}, idwca.ClientConfiguration);
_.next_0 = 1;
cggl.Lio_deephaven_web_client_api_ClientConfiguration_2_classLit =
  createForClass("io.deephaven.web.client.api", "ClientConfiguration", 743);
idwca.ClientLegacyNamespace = function ClientLegacyNamespace() {};
defineClass(906, 1, {}, idwca.ClientLegacyNamespace);
idwca.EVENT_REQUEST_FAILED = "requestfailed";
idwca.EVENT_REQUEST_STARTED = "requeststarted";
idwca.EVENT_REQUEST_SUCCEEDED = "requestsucceeded";
cggl.Lio_deephaven_web_client_api_ClientLegacyNamespace_2_classLit =
  createForClass("io.deephaven.web.client.api", "ClientLegacyNamespace", 906);
idwca.$get_2 = function $get_2(this$static, row) {
  return row.get(this$static);
};
idwca.$getClass_6 = function $getClass_6() {
  return cggl.Lio_deephaven_web_client_api_Column_2_classLit;
};
idwca.$getDescription = function $getDescription(this$static) {
  return this$static.description_0;
};
idwca.$getName = function $getName(this$static) {
  return this$static.name_0;
};
idwca.$getRequiredColumns = function $getRequiredColumns(this$static) {
  var builder;
  builder = new jus.IntStream$1();
  jus.$accept_4(builder, this$static.index_0);
  !!this$static.formatStringColumnIndex &&
    jus.$accept_4(builder, this$static.formatStringColumnIndex.value_0);
  !!this$static.styleColumnIndex &&
    jus.$accept_4(builder, this$static.styleColumnIndex.value_0);
  return jus.$build_0(builder);
};
idwca.$getType = function $getType(this$static) {
  return this$static.type_0;
};
idwca.$setConstituentType = function $setConstituentType(
  this$static,
  constituentType
) {
  this$static.constituentType_0 = constituentType;
};
idwca.$withFormatStringColumnIndex = function $withFormatStringColumnIndex(
  this$static,
  formatStringColumnIndex
) {
  return new idwca.Column(
    this$static.jsIndex,
    this$static.index_0,
    this$static.formatColumnIndex,
    this$static.styleColumnIndex,
    this$static.type_0,
    this$static.name_0,
    this$static.isPartitionColumn_0,
    jl.valueOf_29(formatStringColumnIndex),
    this$static.description_0,
    this$static.isInputTableKeyColumn,
    this$static.isSortable_0
  );
};
idwca.$withStyleColumnIndex = function $withStyleColumnIndex(
  this$static,
  styleColumnIndex
) {
  return new idwca.Column(
    this$static.jsIndex,
    this$static.index_0,
    this$static.formatColumnIndex,
    jl.valueOf_29(styleColumnIndex),
    this$static.type_0,
    this$static.name_0,
    this$static.isPartitionColumn_0,
    this$static.formatStringColumnIndex,
    this$static.description_0,
    this$static.isInputTableKeyColumn,
    this$static.isSortable_0
  );
};
idwca.Column = function Column(
  jsIndex,
  index_0,
  formatColumnIndex,
  styleColumnIndex,
  type_0,
  name_0,
  isPartitionColumn,
  formatStringColumnIndex,
  description,
  inputTableKeyColumn,
  isSortable
) {
  this.jsIndex = jsIndex;
  this.index_0 = index_0;
  this.formatColumnIndex = formatColumnIndex;
  this.styleColumnIndex = styleColumnIndex;
  this.type_0 = type_0;
  this.name_0 = name_0;
  this.isPartitionColumn_0 = isPartitionColumn;
  this.formatStringColumnIndex = formatStringColumnIndex;
  this.description_0 = description;
  this.isInputTableKeyColumn = inputTableKeyColumn;
  this.isSortable_0 = isSortable;
};
idwca.createCustomColumn = function createCustomColumn(name_0, expression) {
  return new idwca.CustomColumn_0(name_0, "NEW", expression);
};
idwca.formatRowColor = function formatRowColor(expression) {
  return new idwca.CustomColumn_0("__ROW", "FORMAT_COLOR", expression);
};
defineClass(21, 1, { 21: 1 }, idwca.Column);
_.equals_0 = function equals_1(o) {
  var column;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_client_api_Column_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  column = castTo(o, 21);
  if (this.index_0 != column.index_0) return false;
  if (
    this.formatColumnIndex
      ? !jl.$equals_10(this.formatColumnIndex, column.formatColumnIndex)
      : !!column.formatColumnIndex
  )
    return false;
  if (
    this.styleColumnIndex
      ? !jl.$equals_10(this.styleColumnIndex, column.styleColumnIndex)
      : !!column.styleColumnIndex
  )
    return false;
  if (
    this.formatStringColumnIndex
      ? !jl.$equals_10(
          this.formatStringColumnIndex,
          column.formatStringColumnIndex
        )
      : !!column.formatStringColumnIndex
  )
    return false;
  if (!jl.$equals_12(this.type_0, column.type_0)) return false;
  return jl.$equals_12(this.name_0, column.name_0);
};
_.filter = function filter_2() {
  return new idwcaf.FilterValue_0(this);
};
_.formatColor = function formatColor(expression) {
  return new idwca.CustomColumn_0(this.name_0, "FORMAT_COLOR", expression);
};
_.formatDate = function formatDate(expression) {
  return new idwca.CustomColumn_0(this.name_0, "FORMAT_DATE", expression);
};
_.formatNumber = function formatNumber(expression) {
  return new idwca.CustomColumn_0(this.name_0, "FORMAT_NUMBER", expression);
};
_.get = function get_0(row) {
  return idwca.$get_2(this, row);
};
defineProperties(_, {
  constituentType: {
    get: function getConstituentType() {
      return this.constituentType_0;
    },
  },
});
defineProperties(_, {
  description: {
    get: function getDescription() {
      return idwca.$getDescription(this);
    },
  },
});
_.getFormat = function getFormat_0(row) {
  return row.getFormat(this);
};
defineProperties(_, {
  isPartitionColumn: {
    get: function getIsPartitionColumn() {
      return this.isPartitionColumn_0;
    },
  },
});
defineProperties(_, {
  isSortable: {
    get: function getIsSortable() {
      return this.isSortable_0;
    },
  },
});
defineProperties(_, {
  index: {
    get: function getJsIndex() {
      return this.jsIndex;
    },
  },
});
defineProperties(_, {
  name: {
    get: function getName() {
      return idwca.$getName(this);
    },
  },
});
defineProperties(_, {
  type: {
    get: function getType() {
      return idwca.$getType(this);
    },
  },
});
_.hashCode_1 = function hashCode_2() {
  var result;
  result = this.index_0;
  result =
    31 * result + (this.formatColumnIndex ? this.formatColumnIndex.value_0 : 0);
  result =
    31 * result + (this.styleColumnIndex ? this.styleColumnIndex.value_0 : 0);
  result =
    31 * result +
    (this.formatStringColumnIndex ? this.formatStringColumnIndex.value_0 : 0);
  result = 31 * result + ji.getHashCode_2(this.type_0);
  result = 31 * result + ji.getHashCode_2(this.name_0);
  return result;
};
_.sort = function sort_1() {
  return new idwca.Sort(this);
};
_.toString = function toString_10() {
  return (
    "Column{index=" +
    this.index_0 +
    ", formatColumnIndex=" +
    this.formatColumnIndex +
    ", styleColumnIndex=" +
    this.styleColumnIndex +
    ", formatStringColumnIndex=" +
    this.formatStringColumnIndex +
    ", type='" +
    this.type_0 +
    "'" +
    ", name='" +
    this.name_0 +
    "'" +
    "}"
  );
};
_.toString_0 = function () {
  return this.toString();
};
_.index_0 = 0;
_.isInputTableKeyColumn = false;
_.isPartitionColumn_0 = false;
_.isSortable_0 = false;
_.jsIndex = 0;
cggl.Lio_deephaven_web_client_api_Column_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "Column",
  21
);
idwca.$$init_8 = function $$init_8(this$static) {
  this$static.headers = jb.emptyObjectLiteral();
};
idwca.ConnectOptions = function ConnectOptions() {
  idwca.$$init_8(this);
};
idwca.ConnectOptions_0 = function ConnectOptions_0(connectOptions) {
  var map_0;
  idwca.ConnectOptions.call(this);
  map_0 = connectOptions;
  this.headers = jb.$getAsAny(map_0, "headers");
};
defineClass(170, 1, { 170: 1 }, idwca.ConnectOptions, idwca.ConnectOptions_0);
cggl.Lio_deephaven_web_client_api_ConnectOptions_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "ConnectOptions",
  170
);
idwca.$$init_9 = function $$init_9(this$static) {
  this$static.map_0 = $wnd.Object.create(null);
};
idwca.$addEventListener = function $addEventListener(
  this$static,
  name_0,
  callback
) {
  var listeners, listeners0;
  listeners0 = castToJsArray(jb.$get_23(this$static.map_0, name_0));
  if (listeners0 == null) {
    listeners0 = new $wnd.Array(callback);
    jb.$set_0(this$static.map_0, name_0, listeners0);
  } else {
    listeners = castToJsArray(jb.$get_23(this$static.map_0, name_0));
    if (
      listeners != null &&
      listeners.length > 0 &&
      castToJsArray(jb.$get_23(this$static.map_0, name_0)).indexOf(callback) !=
        -1
    ) {
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          [
            this$static.logPrefix() +
              "You are double-adding the callback " +
              name_0 +
              " : ",
            callback + ", removing old instance.",
          ]
        )
      );
      idwca.$removeEventListener(this$static, name_0, callback);
    }
    listeners0.push(callback);
  }
  return makeLambdaFunction(
    idwca.HasEventHandling$lambda$0$Type.prototype.remove_0,
    idwca.HasEventHandling$lambda$0$Type,
    [this$static, name_0, callback]
  );
};
idwca.$addEventListenerOneShot = function $addEventListenerOneShot(
  this$static,
  name_0,
  callback
) {
  var fn;
  fn = makeLambdaFunction(
    idwca.HasEventHandling$1WrappedCallback.prototype.onEvent,
    idwca.HasEventHandling$1WrappedCallback,
    [this$static, name_0, callback]
  );
  fn.self_0 = fn;
  idwca.$addEventListener(this$static, name_0, fn);
};
idwca.$addEventListenerOneShot_0 = function $addEventListenerOneShot_0(
  this$static,
  pairs
) {
  var pair, pair$array, pair$index, pair$max, seen;
  seen = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Z_classLit, 1),
    $intern_32,
    18,
    16,
    [false]
  );
  for (
    pair$array = pairs, pair$index = 0, pair$max = pair$array.length;
    pair$index < pair$max;
    ++pair$index
  ) {
    pair = pair$array[pair$index];
    idwca.$addEventListenerOneShot(
      this$static,
      pair.name_0,
      makeLambdaFunction(
        idwca.HasEventHandling$lambda$1$Type.prototype.onEvent,
        idwca.HasEventHandling$lambda$1$Type,
        [seen, pair]
      )
    );
  }
};
idwca.$failureHandled = function $failureHandled(this$static, failure) {
  var event_0, listeners;
  if (failure != null) {
    listeners = castToJsArray(jb.$get_23(this$static.map_0, "requestfailed"));
    if (listeners != null && listeners.length > 0) {
      event_0 = jb.emptyObjectLiteral();
      event_0.detail = failure;
      this$static.fireEvent_0("requestfailed", event_0);
    } else {
      $wnd.goog.global.console.error(this$static.logPrefix() + failure);
    }
    return true;
  }
  return false;
};
idwca.$fireEvent = function $fireEvent(this$static, type_0) {
  this$static.fireEvent_0(type_0, jb.emptyObjectLiteral());
};
idwca.$fireEvent_0 = function $fireEvent_0(this$static, type_0, e) {
  var callbacks;
  if (this$static.suppress) {
    return;
  }
  if (jb.$has(this$static.map_0, e.type)) {
    callbacks = $wnd.Array.from(jb.$get_23(this$static.map_0, e.type));
    callbacks.forEach(
      makeLambdaFunction(
        idwca.HasEventHandling$lambda$3$Type.prototype.onInvoke,
        idwca.HasEventHandling$lambda$3$Type,
        [this$static, e, type_0]
      )
    );
  }
};
idwca.$fireEvent_1 = function $fireEvent_1(this$static, type_0, init) {
  idwca.$fireEvent_0(this$static, type_0, new $wnd.CustomEvent(type_0, init));
};
idwca.$fireEventWithDetail = function $fireEventWithDetail(
  this$static,
  detail
) {
  var evt;
  evt = jb.emptyObjectLiteral();
  evt.detail = detail;
  this$static.fireEvent_0("released-internal", evt);
};
idwca.$hasListeners = function $hasListeners(this$static, name_0) {
  var listeners;
  listeners = castToJsArray(jb.$get_23(this$static.map_0, name_0));
  return listeners != null && listeners.length > 0;
};
idwca.$lambda$3 = function $lambda$3(this$static, e_1, type_2, item_2) {
  var t;
  try {
    item_2(e_1);
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      t = $e0;
      $wnd.goog.global.console.error(
        this$static.logPrefix() + "User callback (",
        item_2,
        ") of type ",
        type_2,
        " failed: ",
        t
      );
      jl.$printStackTraceImpl(t, (jl.$clinit_System(), jl.err), "");
    } else throw toJs($e0);
  }
  return jl.$clinit_Boolean(), ji.uncheckedCast(true);
};
idwca.$nextEvent = function $nextEvent(
  this$static,
  eventName,
  timeoutInMillis
) {
  var promise;
  promise = new idwcf.LazyPromise();
  idwca.$addEventListenerOneShot(
    this$static,
    eventName,
    makeLambdaFunction(
      idwca.HasEventHandling$0methodref$succeed$Type.prototype.onEvent,
      idwca.HasEventHandling$0methodref$succeed$Type,
      [promise]
    )
  );
  if (timeoutInMillis != null) {
    return idwcf.$asPromise(
      promise,
      round_int(
        ji.unsafeCastToDouble(
          (ji.checkCriticalNotNull(timeoutInMillis), timeoutInMillis)
        )
      )
    );
  }
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [promise]
    )
  );
};
idwca.$removeEventListener = function $removeEventListener(
  this$static,
  name_0,
  callback
) {
  var index_0, listeners;
  listeners = castToJsArray(jb.$get_23(this$static.map_0, name_0));
  if (listeners == null) {
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          this$static.logPrefix() +
            "Asked to remove an event listener which wasn't present, ignoring.",
        ]
      )
    );
    return false;
  }
  index_0 = listeners.indexOf(callback);
  if (index_0 == -1) {
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          this$static.logPrefix() +
            "Asked to remove an event listener which wasn't present, ignoring. Present listeners for that event: ",
          listeners,
        ]
      )
    );
    return false;
  }
  listeners.splice(index_0, 1);
  listeners.length == 0 && jb.$delete_2(this$static.map_0, name_0);
  return true;
};
idwca.HasEventHandling = function HasEventHandling() {
  idwca.$$init_9(this);
};
idwca.lambda$1_0 = function lambda$1_0(seen_0, pair_1, e_2) {
  if (seen_0[0]) {
    return;
  }
  seen_0[0] = true;
  pair_1.callback.call(null, e_2);
};
defineClass(57, 1, { 57: 1 });
_.addEventListener = function addEventListener_0(name_0, callback) {
  return idwca.$addEventListener(this, name_0, callback);
};
_.fireEvent = function fireEvent(type_0) {
  idwca.$fireEvent(this, type_0);
};
_.fireEvent_0 = function fireEvent_0(type_0, init) {
  idwca.$fireEvent_1(this, type_0, init);
};
_.hasListeners = function hasListeners(name_0) {
  return idwca.$hasListeners(this, name_0);
};
_.logPrefix = function logPrefix() {
  return "";
};
_.nextEvent = function nextEvent(eventName, timeoutInMillis) {
  return idwca.$nextEvent(this, eventName, timeoutInMillis);
};
_.removeEventListener = function removeEventListener_0(name_0, callback) {
  return idwca.$removeEventListener(this, name_0, callback);
};
_.suppress = false;
cggl.Lio_deephaven_web_client_api_HasEventHandling_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "HasEventHandling",
  57
);
idwca.$getConfigs = function $getConfigs(rpcCall, getConfigValues) {
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [rpcCall]
    )
  ).then(
    makeLambdaFunction(
      idwca.CoreClient$lambda$1$Type.prototype.onInvoke_5,
      idwca.CoreClient$lambda$1$Type,
      [getConfigValues]
    )
  );
};
idwca.$getServerConfigValues = function $getServerConfigValues(this$static) {
  return idwca.$getConfigs(
    new idwca.CoreClient$lambda$13$Type(this$static),
    makeLambdaFunction(
      idwca.CoreClient$4methodref$getConfigValuesMap$Type.prototype.apply_1,
      idwca.CoreClient$4methodref$getConfigValuesMap$Type,
      []
    )
  );
};
idwca.$getServerUrl = function $getServerUrl(this$static) {
  return this$static.ideConnection.serverUrl;
};
idwca.$lambda$13 = function $lambda$13(this$static, c_0) {
  return castTo(
    this$static.ideConnection.connection.supplier.valueOf_0(),
    58
  ).configServiceClient.getConfigurationConstants(
    new $wnd.dhinternal.io.deephaven.proto.config_pb.ConfigurationConstantsRequest(),
    castTo(this$static.ideConnection.connection.supplier.valueOf_0(), 58)
      .metadata_0,
    makeLambdaFunction(
      idwca.CoreClient$3methodref$apply$Type.prototype.onInvoke_15,
      idwca.CoreClient$3methodref$apply$Type,
      [c_0]
    )
  );
};
idwca.$lambda$3_0 = function $lambda$3_0(this$static, options_0) {
  var metadata;
  metadata = new $wnd.dhinternal.browserHeaders.BrowserHeaders();
  $wnd.Object.keys(options_0.headers).forEach(
    makeLambdaFunction(
      idwca.CoreClient$lambda$4$Type.prototype.onInvoke,
      idwca.CoreClient$lambda$4$Type,
      [metadata, options_0]
    )
  );
  return idwca.$getConfigs(
    new idwca.CoreClient$lambda$5$Type(this$static, metadata),
    makeLambdaFunction(
      idwca.CoreClient$1methodref$getConfigValuesMap$Type.prototype.apply_1,
      idwca.CoreClient$1methodref$getConfigValuesMap$Type,
      []
    )
  );
};
idwca.$lambda$5 = function $lambda$5(this$static, metadata_1, c_1) {
  return new $wnd.dhinternal.io.deephaven.proto.config_pb_service.ConfigServiceClient(
    this$static.ideConnection.serverUrl,
    (idwcab.$clinit_WebGrpcUtils(), idwcab.CLIENT_OPTIONS)
  ).getAuthenticationConstants(
    new $wnd.dhinternal.io.deephaven.proto.config_pb.AuthenticationConstantsRequest(),
    metadata_1,
    makeLambdaFunction(
      idwca.CoreClient$0methodref$apply$Type.prototype.onInvoke_14,
      idwca.CoreClient$0methodref$apply$Type,
      [c_1]
    )
  );
};
idwca.$login = function $login(this$static, credentials) {
  var alreadyRunning,
    creds,
    lastArg,
    login,
    loginPromise,
    token,
    workerConnection;
  instanceOf(credentials, 210)
    ? (creds = castTo(credentials, 210))
    : (creds = new idwca.LoginCredentials_0(credentials));
  ju.requireNonNull_0(creds.type_0, "type must be specified");
  token = this$static.ideConnection.token_0;
  if (jl.$equals_12("password", creds.type_0)) {
    ju.requireNonNull_0(
      creds.username_0,
      "username must be specified for password login"
    );
    ju.requireNonNull_0(
      creds.token_0,
      "token must be specified for password login"
    );
    token.type_0 = "Basic";
    idwsd.$setValue(
      token,
      idwsd.bytesToBase64(
        ji.$getBytes_0(
          ((lastArg = creds.username_0 + ":" + creds.token_0),
          jnc.$clinit_StandardCharsets(),
          lastArg)
        )
      )
    );
  } else if (jl.$equals_12("anonymous", creds.type_0)) {
    token.type_0 = "Anonymous";
    token.value_0 = "";
  } else {
    idwsd.$setType_1(token, creds.type_0);
    idwsd.$setValue(token, creds.token_0);
    creds.username_0 != null &&
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          ["username ignored for login type " + creds.type_0]
        )
      );
  }
  alreadyRunning = instanceOf(
    this$static.ideConnection.connection.supplier,
    82
  );
  workerConnection = castTo(
    this$static.ideConnection.connection.supplier.valueOf_0(),
    58
  );
  loginPromise = new idwcf.LazyPromise();
  idwca.$addEventListenerOneShot_0(
    this$static.ideConnection,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_HasEventHandling$EventPair_2_classLit,
        1
      ),
      $intern_7,
      171,
      0,
      [
        idwca.of_0(
          "connect",
          makeLambdaFunction(
            idwca.CoreClient$lambda$8$Type.prototype.onEvent,
            idwca.CoreClient$lambda$8$Type,
            [loginPromise]
          )
        ),
        idwca.of_0(
          "reconnectauthfailed",
          makeLambdaFunction(
            idwca.CoreClient$2methodref$fail$Type.prototype.onEvent,
            idwca.CoreClient$2methodref$fail$Type,
            [loginPromise]
          )
        ),
      ]
    )
  );
  login = new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [loginPromise]
    )
  );
  login
    .then(
      makeLambdaFunction(
        idwca.CoreClient$lambda$10$Type.prototype.onInvoke_5,
        idwca.CoreClient$lambda$10$Type,
        [this$static]
      )
    )
    .then(
      makeLambdaFunction(
        idwca.CoreClient$lambda$11$Type.prototype.onInvoke_5,
        idwca.CoreClient$lambda$11$Type,
        [workerConnection]
      )
    )
    .catch(
      makeLambdaFunction(
        idwca.CoreClient$lambda$12$Type.prototype.onInvoke_5,
        idwca.CoreClient$lambda$12$Type,
        []
      )
    );
  alreadyRunning &&
    idwca.$forceReconnect(
      castTo(this$static.ideConnection.connection.supplier.valueOf_0(), 58)
    );
  return login;
};
idwca.CoreClient = function CoreClient(serverUrl, connectOptions) {
  idwca.HasEventHandling.call(this);
  this.ideConnection = new idwci.IdeConnection(
    serverUrl,
    connectOptions,
    (jl.$clinit_Boolean(), ji.uncheckedCast(true))
  );
  idwca.$addEventListener(
    this.ideConnection,
    "refreshtokenupdated",
    makeLambdaFunction(
      idwca.CoreClient$lambda$0$Type.prototype.onEvent,
      idwca.CoreClient$lambda$0$Type,
      [this]
    )
  );
};
idwca.lambda$1_1 = function lambda$1_1(getConfigValues_0, response_1) {
  var result;
  result = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_33,
    12,
    0,
    0,
    2
  );
  castToNative(getConfigValues_0(response_1), $wnd.dhinternal.jspb.Map).forEach(
    makeLambdaFunction(
      idwca.CoreClient$lambda$2$Type.prototype.onInvoke_60,
      idwca.CoreClient$lambda$2$Type,
      [result]
    )
  );
  return $wnd.Promise.resolve(result);
};
idwca.lambda$11 = function lambda$11(workerConnection_0, configs_1) {
  var config, config$array, config$index, config$max;
  for (
    config$array = configs_1,
      config$index = 0,
      config$max = config$array.length;
    config$index < config$max;
    ++config$index
  ) {
    config = config$array[config$index];
    jl.$equals_12(config[0], "http.session.durationMs") &&
      idwca.$setSessionTimeoutMs(
        workerConnection_0,
        jl.__parseAndValidateDouble(config[1])
      );
  }
  return null;
};
idwca.lambda$2_0 = function lambda$2_0(result_0, item_1, key_2) {
  result_0[result_0.length] = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
    $intern_8,
    2,
    6,
    [key_2, item_1.getStringValue()]
  );
};
idwca.lambda$4 = function lambda$4(metadata_0, options_1, key_2) {
  metadata_0.set(key_2, castToString(jb.$get_23(options_1.headers, key_2)));
  return null;
};
defineClass(907, 57, { 57: 1 }, idwca.CoreClient);
_.disconnect = function disconnect() {
  idwca.$close_1(this.ideConnection);
  idwsf.$clinit_RunnableHelper();
};
_.getAsIdeConnection = function getAsIdeConnection() {
  return $wnd.Promise.resolve(this.ideConnection);
};
_.getAuthConfigValues = function getAuthConfigValues() {
  return $wnd.Promise.resolve(this.ideConnection.options_0).then(
    makeLambdaFunction(
      idwca.CoreClient$lambda$3$Type.prototype.onInvoke_5,
      idwca.CoreClient$lambda$3$Type,
      [this]
    )
  );
};
_.getServerConfigValues = function getServerConfigValues() {
  return idwca.$getServerConfigValues(this);
};
_.getServerUrl = function getServerUrl() {
  return idwca.$getServerUrl(this);
};
_.getStorageService = function getStorageService() {
  return new idwcas2.JsStorageService(
    castTo(this.ideConnection.connection.supplier.valueOf_0(), 58)
  );
};
_.login = function login_0(credentials) {
  return idwca.$login(this, credentials);
};
_.onConnected = function onConnected(timeoutInMillis) {
  return idwca.$onConnected(this.ideConnection);
};
_.relogin = function relogin(token) {
  return idwca.$login(this, idwca.reconnect_0(idwca.fromObject(token).bytes_0));
};
_.running = function running() {
  return !instanceOf(this.ideConnection.connection.supplier, 82) ||
    idwca.$isUsable(
      castTo(this.ideConnection.connection.supplier.valueOf_0(), 58)
    )
    ? $wnd.Promise.resolve(this)
    : $wnd.Promise.reject("Cannot connect, session is dead.");
};
idwca.EVENT_CONNECT = "connect";
idwca.EVENT_DISCONNECT = "disconnect";
idwca.EVENT_RECONNECT = "reconnect";
idwca.EVENT_RECONNECT_AUTH_FAILED = "reconnectauthfailed";
idwca.EVENT_REFRESH_TOKEN_UPDATED = "refreshtokenupdated";
idwca.EVENT_REQUEST_FAILED_0 = "requestfailed";
idwca.EVENT_REQUEST_STARTED_0 = "requeststarted";
idwca.EVENT_REQUEST_SUCCEEDED_0 = "requestsucceeded";
idwca.LOGIN_TYPE_ANONYMOUS = "anonymous";
idwca.LOGIN_TYPE_PASSWORD = "password";
cggl.Lio_deephaven_web_client_api_CoreClient_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "CoreClient",
  907
);
idwca.$getClass_7 = function $getClass_7() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$0methodref$apply$Type =
  function CoreClient$0methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1016, $wnd.Function, {}, idwca.CoreClient$0methodref$apply$Type);
_.onInvoke_14 = function onInvoke_3(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_8 = function $getClass_8() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$1methodref$getConfigValuesMap$Type =
  function CoreClient$1methodref$getConfigValuesMap$Type() {};
defineClass(
  1014,
  $wnd.Function,
  $intern_34,
  idwca.CoreClient$1methodref$getConfigValuesMap$Type
);
_.apply_1 = function apply_2(arg0) {
  return castToNative(
    arg0,
    $wnd.dhinternal.io.deephaven.proto.config_pb.AuthenticationConstantsResponse
  ).getConfigValuesMap();
};
idwca.$getClass_9 = function $getClass_9() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$2methodref$fail$Type =
  function CoreClient$2methodref$fail$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1008,
  $wnd.Function,
  $intern_35,
  idwca.CoreClient$2methodref$fail$Type
);
_.onEvent = function onEvent(arg0) {
  idwcf.$fail(this.$$outer_0, arg0);
};
idwca.$getClass_10 = function $getClass_10() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$3methodref$apply$Type =
  function CoreClient$3methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1018, $wnd.Function, {}, idwca.CoreClient$3methodref$apply$Type);
_.onInvoke_15 = function onInvoke_4(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_11 = function $getClass_11() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$4methodref$getConfigValuesMap$Type =
  function CoreClient$4methodref$getConfigValuesMap$Type() {};
defineClass(
  940,
  $wnd.Function,
  $intern_34,
  idwca.CoreClient$4methodref$getConfigValuesMap$Type
);
_.apply_1 = function apply_3(arg0) {
  return castToNative(
    arg0,
    $wnd.dhinternal.io.deephaven.proto.config_pb.ConfigurationConstantsResponse
  ).getConfigValuesMap();
};
idwca.$getClass_12 = function $getClass_12() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$0$Type = function CoreClient$lambda$0$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1004, $wnd.Function, $intern_35, idwca.CoreClient$lambda$0$Type);
_.onEvent = function onEvent_0(arg0) {
  idwca.$fireEvent_0(this.$$outer_0, "refreshtokenupdated", arg0);
};
idwca.$getClass_13 = function $getClass_13() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$1$Type = function CoreClient$lambda$1$Type(
  getConfigValues_0
) {
  this.getConfigValues_0 = getConfigValues_0;
};
defineClass(1005, $wnd.Function, $intern_36, idwca.CoreClient$lambda$1$Type);
_.onInvoke_5 = function onInvoke_5(arg0) {
  return idwca.lambda$1_1(this.getConfigValues_0, arg0);
};
idwca.$getClass_14 = function $getClass_14() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$10$Type = function CoreClient$lambda$10$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1009, $wnd.Function, $intern_36, idwca.CoreClient$lambda$10$Type);
_.onInvoke_5 = function onInvoke_6(arg0) {
  return (
    throwClassCastExceptionUnlessNull(arg0),
    idwca.$getConfigs(
      new idwca.CoreClient$lambda$13$Type(this.$$outer_0),
      makeLambdaFunction(
        idwca.CoreClient$4methodref$getConfigValuesMap$Type.prototype.apply_1,
        idwca.CoreClient$4methodref$getConfigValuesMap$Type,
        []
      )
    )
  );
};
idwca.$getClass_15 = function $getClass_15() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$11$Type = function CoreClient$lambda$11$Type(
  workerConnection_0
) {
  this.workerConnection_0 = workerConnection_0;
};
defineClass(1010, $wnd.Function, $intern_36, idwca.CoreClient$lambda$11$Type);
_.onInvoke_5 = function onInvoke_7(arg0) {
  return idwca.lambda$11(this.workerConnection_0, castTo(arg0, 322));
};
idwca.$getClass_16 = function $getClass_16() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$12$Type = function CoreClient$lambda$12$Type() {};
defineClass(1011, $wnd.Function, {}, idwca.CoreClient$lambda$12$Type);
_.onInvoke_5 = function onInvoke_8(arg0) {
  return $wnd.Promise.resolve(null);
};
idwca.CoreClient$lambda$13$Type = function CoreClient$lambda$13$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(338, 1, $intern_19, idwca.CoreClient$lambda$13$Type);
_.accept = function accept(arg0) {
  idwca.$lambda$13(this.$$outer_0, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_CoreClient$lambda$13$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "CoreClient/lambda$13$Type",
    338
  );
idwca.$getClass_17 = function $getClass_17() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$2$Type = function CoreClient$lambda$2$Type(result_0) {
  this.result_0 = result_0;
};
defineClass(1012, $wnd.Function, {}, idwca.CoreClient$lambda$2$Type);
_.onInvoke_60 = function onInvoke_9(arg0, arg1) {
  idwca.lambda$2_0(
    this.result_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.config_pb.ConfigValue
    ),
    castToString(arg1)
  );
};
idwca.$getClass_18 = function $getClass_18() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$3$Type = function CoreClient$lambda$3$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1006, $wnd.Function, $intern_36, idwca.CoreClient$lambda$3$Type);
_.onInvoke_5 = function onInvoke_10(arg0) {
  return idwca.$lambda$3_0(this.$$outer_0, castTo(arg0, 170));
};
idwca.$getClass_19 = function $getClass_19() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$4$Type = function CoreClient$lambda$4$Type(
  metadata_0,
  options_1
) {
  this.metadata_0 = metadata_0;
  this.options_1 = options_1;
};
defineClass(1013, $wnd.Function, {}, idwca.CoreClient$lambda$4$Type);
_.onInvoke = function onInvoke_11(arg0, arg1, arg2) {
  return idwca.lambda$4(this.metadata_0, this.options_1, castToString(arg0));
};
idwca.CoreClient$lambda$5$Type = function CoreClient$lambda$5$Type(
  $$outer_0,
  metadata_1
) {
  this.$$outer_0 = $$outer_0;
  this.metadata_1 = metadata_1;
};
defineClass(405, 1, $intern_19, idwca.CoreClient$lambda$5$Type);
_.accept = function accept_0(arg0) {
  idwca.$lambda$5(this.$$outer_0, this.metadata_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_CoreClient$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "CoreClient/lambda$5$Type",
    405
  );
idwca.$getClass_20 = function $getClass_20() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.CoreClient$lambda$8$Type = function CoreClient$lambda$8$Type(
  loginPromise_0
) {
  this.loginPromise_0 = loginPromise_0;
};
defineClass(1007, $wnd.Function, $intern_35, idwca.CoreClient$lambda$8$Type);
_.onEvent = function onEvent_1(arg0) {
  idwcf.$succeed(this.loginPromise_0, null);
};
idwca.$toString_4 = function $toString_4(this$static) {
  return (
    "" +
    this$static.name_0 +
    idwca.getNameSuffix(this$static.type_0) +
    "=" +
    this$static.expression_0
  );
};
idwca.CustomColumn = function CustomColumn(descriptor) {
  var descriptorExpression,
    descriptorName,
    suffixlength,
    suffixlength0,
    suffixlength1;
  descriptorExpression = descriptor.expression_0;
  descriptorName =
    (descriptor.name_0 == null &&
      (descriptor.name_0 = idwsd.extractColumnName(descriptor.expression_0)),
    descriptor.name_0);
  suffixlength0 = ji.uncheckedCast("__TABLE_STYLE_FORMAT").length;
  if (
    jl.$equals_12(
      ji
        .uncheckedCast(descriptorName)
        .substr(
          ji.uncheckedCast(descriptorName).length - suffixlength0,
          suffixlength0
        ),
      "__TABLE_STYLE_FORMAT"
    )
  ) {
    this.name_0 = jl.$substring_0(
      descriptorName,
      0,
      ji.uncheckedCast(descriptorName).length - 20
    );
    this.type_0 = "FORMAT_COLOR";
  } else {
    suffixlength1 = ji.uncheckedCast("__TABLE_NUMBER_FORMAT").length;
    if (
      jl.$equals_12(
        ji
          .uncheckedCast(descriptorName)
          .substr(
            ji.uncheckedCast(descriptorName).length - suffixlength1,
            suffixlength1
          ),
        "__TABLE_NUMBER_FORMAT"
      )
    ) {
      this.name_0 = jl.$substring_0(
        descriptorName,
        0,
        ji.uncheckedCast(descriptorName).length - 21
      );
      this.type_0 = "FORMAT_NUMBER";
    } else {
      suffixlength = ji.uncheckedCast("__TABLE_DATE_FORMAT").length;
      if (
        jl.$equals_12(
          ji
            .uncheckedCast(descriptorName)
            .substr(
              ji.uncheckedCast(descriptorName).length - suffixlength,
              suffixlength
            ),
          "__TABLE_DATE_FORMAT"
        )
      ) {
        this.name_0 = jl.$substring_0(
          descriptorName,
          0,
          ji.uncheckedCast(descriptorName).length - 19
        );
        this.type_0 = "FORMAT_DATE";
      } else {
        this.name_0 = descriptorName;
        this.type_0 = "NEW";
      }
    }
  }
  this.expression_0 = jl.$substring(
    descriptorExpression,
    ji.uncheckedCast(descriptorName).length + 1
  );
};
idwca.CustomColumn_0 = function CustomColumn_0(name_0, type_0, expression) {
  this.name_0 = name_0;
  this.type_0 = type_0;
  this.expression_0 = expression;
};
idwca.CustomColumn_1 = function CustomColumn_1(source) {
  if (
    !jb.$has(source, "name") ||
    !jb.$has(source, "type") ||
    !jb.$has(source, "expression")
  ) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Unrecognized CustomColumn format: " + source
      )
    );
  }
  this.name_0 = jb.$asString_2(jb.$getAsAny(source, "name"));
  this.type_0 = jb.$asString_2(jb.$getAsAny(source, "type"));
  this.expression_0 = jb.$asString_2(jb.$getAsAny(source, "expression"));
};
idwca.getNameSuffix = function getNameSuffix(type_0) {
  if (jl.$equals_12(type_0, "FORMAT_COLOR")) {
    return "__TABLE_STYLE_FORMAT";
  }
  if (jl.$equals_12(type_0, "FORMAT_NUMBER")) {
    return "__TABLE_NUMBER_FORMAT";
  }
  if (jl.$equals_12(type_0, "FORMAT_DATE")) {
    return "__TABLE_DATE_FORMAT";
  }
  if (jl.$equals_12(type_0, "NEW")) {
    return "";
  }
  throw toJs(new jl.IllegalArgumentException_0("Unrecognized type: " + type_0));
};
defineClass(
  115,
  1,
  { 115: 1 },
  idwca.CustomColumn,
  idwca.CustomColumn_0,
  idwca.CustomColumn_1
);
defineProperties(_, {
  expression: {
    get: function getExpression() {
      return this.expression_0;
    },
  },
});
defineProperties(_, {
  name: {
    get: function getName_0() {
      return this.name_0;
    },
  },
});
defineProperties(_, {
  type: {
    get: function getType_0() {
      return this.type_0;
    },
  },
});
_.toString = function toString_11() {
  return idwca.$toString_4(this);
};
_.toString_0 = function () {
  return this.toString();
};
_.valueOf = function valueOf_1() {
  return (
    "" +
    this.name_0 +
    idwca.getNameSuffix(this.type_0) +
    "=" +
    this.expression_0
  );
};
idwca.TYPE_FORMAT_COLOR = "FORMAT_COLOR";
idwca.TYPE_FORMAT_DATE = "FORMAT_DATE";
idwca.TYPE_FORMAT_NUMBER = "FORMAT_NUMBER";
idwca.TYPE_NEW = "NEW";
cggl.Lio_deephaven_web_client_api_CustomColumn_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "CustomColumn",
  115
);
idwca.$asNumber = function $asNumber(this$static) {
  return toDouble_0(this$static.value_0);
};
idwca.$toString_5 = function $toString_5(this$static) {
  return "" + toString_6(this$static.value_0);
};
idwca.$valueOf = function $valueOf(this$static) {
  return "" + toString_6(this$static.value_0);
};
idwca.LongWrapper = function LongWrapper(value_0) {
  this.value_0 = value_0;
};
idwca.ofString_1 = function ofString_1(str) {
  return new idwca.LongWrapper(jl.__parseAndValidateLong(str));
};
defineClass(39, 1, { 39: 1 }, idwca.LongWrapper);
_.asNumber = function asNumber_1() {
  return idwca.$asNumber(this);
};
_.equals_0 = function equals_2(obj) {
  return instanceOf(obj, 39) && eq(castTo(obj, 39).value_0, this.value_0);
};
_.hashCode_1 = function hashCode_3() {
  return toInt_0(this.value_0);
};
_.toString = function toString_12() {
  return idwca.$toString_5(this);
};
_.toString_0 = function () {
  return this.toString();
};
_.valueOf = function valueOf_2() {
  return idwca.$valueOf(this);
};
_.value_0 = 0;
cggl.Lio_deephaven_web_client_api_LongWrapper_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "LongWrapper",
  39
);
idwca.DateWrapper = function DateWrapper(valueInNanos) {
  idwca.LongWrapper.call(this, valueInNanos);
};
idwca.ofJsDate = function ofJsDate(date) {
  var valueInNanos;
  valueInNanos = mul_0($intern_37, fromDouble_0(date.getTime()));
  return new idwca.DateWrapper(valueInNanos);
};
defineClass(91, 39, { 91: 1, 39: 1 }, idwca.DateWrapper);
_.asDate = function asDate() {
  var date;
  date = new $wnd.Date();
  date.setTime(toDouble_0(div(this.value_0, $intern_37)));
  return date;
};
cggl.Lio_deephaven_web_client_api_DateWrapper_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "DateWrapper",
  91
);
idwca.Format = function Format(
  cellColors,
  rowColors,
  numberFormat,
  formatString
) {
  this.cellColors = cellColors;
  this.rowColors = rowColors;
  this.numberFormat_0 = numberFormat;
  this.formatString_0 = formatString;
};
defineClass(283, 1, {}, idwca.Format);
defineProperties(_, {
  backgroundColor: {
    get: function getBackgroundColor() {
      var color_0;
      color_0 = toInt_0(shru_0(this.cellColors, 32));
      if ((color_0 & $intern_38) == 0) {
        color_0 = toInt_0(shru_0(this.rowColors, 32));
        if ((color_0 & $intern_38) == 0) {
          return null;
        }
      }
      return (
        "#" +
        new $wnd.String(
          "00000" +
            new $wnd.Number(jl.valueOf_29(color_0 & 16777215)).toString(16)
        ).substr(-6)
      );
    },
  },
});
defineProperties(_, {
  color: {
    get: function getColor() {
      var color_0;
      color_0 = toInt_0(this.cellColors);
      if ((color_0 & $intern_38) == 0) {
        color_0 = toInt_0(this.rowColors);
        if ((color_0 & $intern_38) == 0) {
          return null;
        }
      }
      return (
        "#" +
        new $wnd.String(
          "00000" +
            new $wnd.Number(jl.valueOf_29(color_0 & 16777215)).toString(16)
        ).substr(-6)
      );
    },
  },
});
defineProperties(_, {
  formatString: {
    get: function getFormatString() {
      return this.formatString_0;
    },
  },
});
defineProperties(_, {
  numberFormat: {
    get: function getNumberFormat() {
      return this.numberFormat_0;
    },
  },
});
_.cellColors = 0;
_.rowColors = 0;
cggl.Lio_deephaven_web_client_api_Format_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "Format",
  283
);
idwca.$getClass_21 = function $getClass_21() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.HasEventHandling$0methodref$succeed$Type =
  function HasEventHandling$0methodref$succeed$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1022,
  $wnd.Function,
  $intern_35,
  idwca.HasEventHandling$0methodref$succeed$Type
);
_.onEvent = function onEvent_2(arg0) {
  idwcf.$succeed(this.$$outer_0, arg0);
};
idwca.$getClass_22 = function $getClass_22() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.HasEventHandling$1WrappedCallback =
  function HasEventHandling$1WrappedCallback(this$0, val$name, val$callback) {
    this.this$01 = this$0;
    this.val$name2 = val$name;
    this.val$callback3 = val$callback;
  };
defineClass(
  1020,
  $wnd.Function,
  $intern_35,
  idwca.HasEventHandling$1WrappedCallback
);
_.onEvent = function onEvent_3(e) {
  idwca.$removeEventListener(this.this$01, this.val$name2, this.self_0);
  this.val$callback3.call(null, e);
};
idwca.HasEventHandling$EventPair = function HasEventHandling$EventPair() {};
idwca.of_0 = function of_0(name_0, callback) {
  var pair;
  pair = new idwca.HasEventHandling$EventPair();
  pair.name_0 = name_0;
  pair.callback = callback;
  return pair;
};
defineClass(171, 1, { 171: 1 }, idwca.HasEventHandling$EventPair);
cggl.Lio_deephaven_web_client_api_HasEventHandling$EventPair_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "HasEventHandling/EventPair",
    171
  );
idwca.$getClass_23 = function $getClass_23() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.$remove = function $remove(this$static) {
  idwca.$removeEventListener(
    this$static.$$outer_0,
    this$static.name_1,
    this$static.callback_2
  );
};
idwca.HasEventHandling$lambda$0$Type = function HasEventHandling$lambda$0$Type(
  $$outer_0,
  name_1,
  callback_2
) {
  this.$$outer_0 = $$outer_0;
  this.name_1 = name_1;
  this.callback_2 = callback_2;
};
defineClass(
  1019,
  $wnd.Function,
  { 1024: 1 },
  idwca.HasEventHandling$lambda$0$Type
);
_.remove_0 = function remove_0() {
  idwca.$remove(this);
};
idwca.$getClass_24 = function $getClass_24() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.HasEventHandling$lambda$1$Type = function HasEventHandling$lambda$1$Type(
  seen_0,
  pair_1
) {
  this.seen_0 = seen_0;
  this.pair_1 = pair_1;
};
defineClass(
  1021,
  $wnd.Function,
  $intern_35,
  idwca.HasEventHandling$lambda$1$Type
);
_.onEvent = function onEvent_4(arg0) {
  idwca.lambda$1_0(this.seen_0, this.pair_1, arg0);
};
idwca.$getClass_25 = function $getClass_25() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.HasEventHandling$lambda$3$Type = function HasEventHandling$lambda$3$Type(
  $$outer_0,
  e_1,
  type_2
) {
  this.$$outer_0 = $$outer_0;
  this.e_1 = e_1;
  this.type_2 = type_2;
};
defineClass(1023, $wnd.Function, {}, idwca.HasEventHandling$lambda$3$Type);
_.onInvoke = function onInvoke_12(arg0, arg1, arg2) {
  return idwca.$lambda$3(
    this.$$outer_0,
    this.e_1,
    this.type_2,
    castToFunction(arg0)
  );
};
idwca.$clinit_JsColumnStatistics = function $clinit_JsColumnStatistics() {
  idwca.$clinit_JsColumnStatistics = emptyMethod;
  idwca.STAT_TYPE_MAP = new ju.HashMap();
  jus.$forEach_6(
    ju.stream_4(idwca.values_0()),
    new idwca.JsColumnStatistics$lambda$0$Type()
  );
};
idwca.JsColumnStatistics = function JsColumnStatistics(data_0) {
  idwca.$clinit_JsColumnStatistics();
  var column,
    column$iterator,
    counts,
    i,
    keys_0,
    r,
    type_0,
    uniqueCounts,
    uniqueKeys;
  this.statisticsMap_0 = new $wnd.Map();
  r = data_0.get_1(0);
  uniqueKeys = null;
  uniqueCounts = null;
  for (
    column$iterator = new ju.AbstractList$IteratorImpl(
      jb.$asList(data_0.columns)
    );
    column$iterator.i < column$iterator.this$01_0.size();

  ) {
    column =
      (ji.checkCriticalElement(
        column$iterator.i < column$iterator.this$01_0.size()
      ),
      castTo(
        column$iterator.this$01_0.getAtIndex(
          (column$iterator.last_0 = column$iterator.i++)
        ),
        21
      ));
    if (jl.$equals_12(column.name_0, "UNIQUE_KEYS")) {
      uniqueKeys = column;
      continue;
    } else if (jl.$equals_12(column.name_0, "UNIQUE_COUNTS")) {
      uniqueCounts = column;
      continue;
    }
    try {
      type_0 = idwca.valueOf_4(column.name_0);
      this.statisticsMap_0.set(type_0.displayName, r.get(column));
    } catch ($e0) {
      $e0 = toJava($e0);
      if (!instanceOf($e0, 19)) throw toJs($e0);
    }
  }
  this.uniqueValues_0 = new $wnd.Map();
  if (!uniqueCounts || !uniqueKeys) {
    return;
  }
  keys_0 = castToJsArray(r.get(uniqueKeys));
  counts = castToJsArray(r.get(uniqueCounts));
  for (i = 0; i < keys_0.length; i++) {
    this.uniqueValues_0.set(
      castToString(jb.$getAt(keys_0, i)),
      ji.uncheckedCast(toDouble_0(castTo(jb.$getAt(counts, i), 39).value_0))
    );
  }
};
idwca.lambda$0_0 = function lambda$0_0(type_0) {
  idwca.$clinit_JsColumnStatistics();
  return ju.$putStringValue(
    idwca.STAT_TYPE_MAP,
    type_0.displayName,
    type_0.formatType_0
  );
};
defineClass(765, 1, {}, idwca.JsColumnStatistics);
defineProperties(_, {
  statisticsMap: {
    get: function getStatisticsMap() {
      return this.statisticsMap_0;
    },
  },
});
_.getType = function getType_1(name_0) {
  return castToString(ju.$getStringValue(idwca.STAT_TYPE_MAP, name_0));
};
defineProperties(_, {
  uniqueValues: {
    get: function getUniqueValues() {
      return this.uniqueValues_0;
    },
  },
});
cggl.Lio_deephaven_web_client_api_JsColumnStatistics_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsColumnStatistics", 765);
idwca.$clinit_JsColumnStatistics$StatType =
  function $clinit_JsColumnStatistics$StatType() {
    idwca.$clinit_JsColumnStatistics$StatType = emptyMethod;
    idwca.COUNT = new idwca.JsColumnStatistics$StatType(
      "COUNT",
      0,
      "COUNT",
      "long"
    );
    idwca.SIZE = new idwca.JsColumnStatistics$StatType(
      "SIZE",
      1,
      "SIZE",
      "long"
    );
    idwca.UNIQUE_VALUES = new idwca.JsColumnStatistics$StatType(
      "UNIQUE_VALUES",
      2,
      "UNIQUE VALUES",
      "long"
    );
    idwca.SUM = new idwca.JsColumnStatistics$StatType("SUM", 3, "SUM", null);
    idwca.SUM_ABS = new idwca.JsColumnStatistics$StatType(
      "SUM_ABS",
      4,
      "SUM (ABS)",
      null
    );
    idwca.AVG = new idwca.JsColumnStatistics$StatType(
      "AVG",
      5,
      "AVG",
      "double"
    );
    idwca.AVG_ABS = new idwca.JsColumnStatistics$StatType(
      "AVG_ABS",
      6,
      "AVG (ABS)",
      "double"
    );
    idwca.MIN = new idwca.JsColumnStatistics$StatType("MIN", 7, "MIN", null);
    idwca.MIN_ABS = new idwca.JsColumnStatistics$StatType(
      "MIN_ABS",
      8,
      "MIN (ABS)",
      null
    );
    idwca.MAX = new idwca.JsColumnStatistics$StatType("MAX", 9, "MAX", null);
    idwca.MAX_ABS = new idwca.JsColumnStatistics$StatType(
      "MAX_ABS",
      10,
      "MAX (ABS)",
      null
    );
    idwca.STD_DEV = new idwca.JsColumnStatistics$StatType(
      "STD_DEV",
      11,
      "STD DEV",
      "double"
    );
    idwca.SUM_SQRD = new idwca.JsColumnStatistics$StatType(
      "SUM_SQRD",
      12,
      "SUM (SQRD)",
      null
    );
  };
idwca.JsColumnStatistics$StatType = function JsColumnStatistics$StatType(
  enum$name,
  enum$ordinal,
  displayName,
  formatType
) {
  Enum.call(this, enum$name, enum$ordinal);
  this.displayName = displayName;
  this.formatType_0 = formatType;
};
idwca.valueOf_4 = function valueOf_4(name_0) {
  idwca.$clinit_JsColumnStatistics$StatType();
  return valueOf_3(
    (idwca.$clinit_JsColumnStatistics$StatType$Map(), idwca.$MAP),
    name_0
  );
};
idwca.values_0 = function values_0() {
  idwca.$clinit_JsColumnStatistics$StatType();
  return stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lio_deephaven_web_client_api_JsColumnStatistics$StatType_2_classLit,
      1
    ),
    $intern_17,
    77,
    0,
    [
      idwca.COUNT,
      idwca.SIZE,
      idwca.UNIQUE_VALUES,
      idwca.SUM,
      idwca.SUM_ABS,
      idwca.AVG,
      idwca.AVG_ABS,
      idwca.MIN,
      idwca.MIN_ABS,
      idwca.MAX,
      idwca.MAX_ABS,
      idwca.STD_DEV,
      idwca.SUM_SQRD,
    ]
  );
};
defineClass(
  77,
  37,
  { 77: 1, 3: 1, 33: 1, 37: 1 },
  idwca.JsColumnStatistics$StatType
);
cggl.Lio_deephaven_web_client_api_JsColumnStatistics$StatType_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api",
    "JsColumnStatistics/StatType",
    77,
    idwca.values_0
  );
idwca.$clinit_JsColumnStatistics$StatType$Map =
  function $clinit_JsColumnStatistics$StatType$Map() {
    idwca.$clinit_JsColumnStatistics$StatType$Map = emptyMethod;
    idwca.$MAP = createValueOfMap(idwca.values_0());
  };
idwca.JsColumnStatistics$lambda$0$Type =
  function JsColumnStatistics$lambda$0$Type() {};
defineClass(766, 1, $intern_19, idwca.JsColumnStatistics$lambda$0$Type);
_.accept = function accept_1(arg0) {
  idwca.lambda$0_0(castTo(arg0, 77));
};
cggl.Lio_deephaven_web_client_api_JsColumnStatistics$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsColumnStatistics/lambda$0$Type",
    766
  );
idwca.$$init_10 = function $$init_10(this$static) {};
idwca.$parse_3 = function $parse_3(this$static, hints) {
  var endStr,
    freezeStr,
    frontStr,
    groups,
    groupsStr,
    hideStr,
    options,
    searchableStr;
  if (hints == null || ji.uncheckedCast(hints).length == 0) {
    return this$static;
  }
  options = castTo(
    jus.$collect_1(
      jus.$map_0(
        ju.stream_4(jl.$split(hints, ";")),
        new idwca.JsLayoutHints$lambda$0$Type()
      ),
      jus.toMap(
        new idwca.JsLayoutHints$lambda$1$Type(),
        new idwca.JsLayoutHints$lambda$2$Type(),
        new jus.Collectors$lambda$44$Type(),
        new jus.Collectors$22methodref$ctor$Type()
      )
    ),
    30
  );
  options.containsKey("noSavedLayouts") &&
    (this$static.savedLayoutsAllowed = false);
  frontStr = castToString(options.get("front"));
  frontStr != null &&
    ji.uncheckedCast(frontStr).length != 0 &&
    (this$static.frontColumns_0 = castTo(
      $wnd.Object.freeze(jl.$split(frontStr, ",")),
      12
    ));
  endStr = castToString(options.get("back"));
  endStr != null &&
    ji.uncheckedCast(endStr).length != 0 &&
    (this$static.backColumns_0 = castTo(
      $wnd.Object.freeze(jl.$split(endStr, ",")),
      12
    ));
  hideStr = castToString(options.get("hide"));
  hideStr != null &&
    ji.uncheckedCast(hideStr).length != 0 &&
    (this$static.hiddenColumns_0 = castTo(
      $wnd.Object.freeze(jl.$split(hideStr, ",")),
      12
    ));
  freezeStr = castToString(options.get("freeze"));
  freezeStr != null &&
    ji.uncheckedCast(freezeStr).length != 0 &&
    (this$static.frozenColumns_0 = castTo(
      $wnd.Object.freeze(jl.$split(freezeStr, ",")),
      12
    ));
  searchableStr = castToString(options.get("searchable"));
  searchableStr != null &&
    ji.uncheckedCast(searchableStr).length != 0 &&
    (this$static.searchDisplayMode_0 = searchableStr);
  groupsStr = castToString(options.get("columnGroups"));
  if (groupsStr != null && ji.uncheckedCast(groupsStr).length != 0) {
    groups = castTo(
      jus.$toArray_6(
        jus.$map_0(
          jus.$map_0(
            ju.stream_4(jl.$split(groupsStr, "\\|")),
            new idwca.JsLayoutHints$0methodref$ctor$Type()
          ),
          new idwca.JsLayoutHints$1methodref$freeze$Type()
        ),
        new idwca.JsLayoutHints$2methodref$lambda$5$Type()
      ),
      889
    );
    this$static.columnGroups_0 = castTo($wnd.Object.freeze(groups), 889);
  }
  return this$static;
};
idwca.JsLayoutHints = function JsLayoutHints() {
  idwca.$$init_10(this);
};
idwca.lambda$2_1 = function lambda$2_1(parts_0) {
  return parts_0.length == 2 ? parts_0[1] : "";
};
defineClass(612, 1, {}, idwca.JsLayoutHints);
defineProperties(_, {
  areSavedLayoutsAllowed: {
    get: function getAreSavedLayoutsAllowed() {
      return this.savedLayoutsAllowed;
    },
  },
});
defineProperties(_, {
  backColumns: {
    get: function getBackColumns() {
      return this.backColumns_0;
    },
  },
});
defineProperties(_, {
  columnGroups: {
    get: function getColumnGroups() {
      return this.columnGroups_0;
    },
  },
});
defineProperties(_, {
  frontColumns: {
    get: function getFrontColumns() {
      return this.frontColumns_0;
    },
  },
});
defineProperties(_, {
  frozenColumns: {
    get: function getFrozenColumns() {
      return this.frozenColumns_0;
    },
  },
});
defineProperties(_, {
  hiddenColumns: {
    get: function getHiddenColumns() {
      return this.hiddenColumns_0;
    },
  },
});
defineProperties(_, {
  searchDisplayMode: {
    get: function getSearchDisplayMode() {
      return this.searchDisplayMode_0;
    },
  },
});
_.savedLayoutsAllowed = true;
_.searchDisplayMode_0 = "Default";
cggl.Lio_deephaven_web_client_api_JsLayoutHints_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "JsLayoutHints",
  612
);
idwca.JsLayoutHints$0methodref$ctor$Type =
  function JsLayoutHints$0methodref$ctor$Type() {};
defineClass(619, 1, {}, idwca.JsLayoutHints$0methodref$ctor$Type);
_.apply_1 = function apply_4(arg0) {
  return new idwca.JsLayoutHints$ColumnGroup(castToString(arg0));
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$0methodref$ctor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/0methodref$ctor$Type",
    619
  );
idwca.JsLayoutHints$1methodref$freeze$Type =
  function JsLayoutHints$1methodref$freeze$Type() {};
defineClass(620, 1, {}, idwca.JsLayoutHints$1methodref$freeze$Type);
_.apply_1 = function apply_5(arg0) {
  return $wnd.Object.freeze(castTo(arg0, 255));
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$1methodref$freeze$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/1methodref$freeze$Type",
    620
  );
idwca.JsLayoutHints$2methodref$lambda$5$Type =
  function JsLayoutHints$2methodref$lambda$5$Type() {};
defineClass(621, 1, {}, idwca.JsLayoutHints$2methodref$lambda$5$Type);
_.apply_2 = function apply_6(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_JsLayoutHints$ColumnGroup_2_classLit,
    { 889: 1, 3: 1, 5: 1 },
    255,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$2methodref$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/2methodref$lambda$5$Type",
    621
  );
idwca.JsLayoutHints$ColumnGroup = function JsLayoutHints$ColumnGroup(groupStr) {
  var childrenStr, colorStr, nameStr, options;
  if (groupStr == null || ji.uncheckedCast(groupStr).length == 0) {
    this.name = null;
    this.children = null;
    this.color = null;
    return;
  }
  options = castTo(
    jus.$collect_1(
      jus.$map_0(
        ju.stream_4(jl.$split(groupStr, "::")),
        new idwca.JsLayoutHints$ColumnGroup$lambda$0$Type()
      ),
      jus.toMap(
        new idwca.JsLayoutHints$ColumnGroup$lambda$1$Type(),
        new idwca.JsLayoutHints$ColumnGroup$lambda$2$Type(),
        new jus.Collectors$lambda$44$Type(),
        new jus.Collectors$22methodref$ctor$Type()
      )
    ),
    30
  );
  nameStr = castToString(options.get("name"));
  nameStr != null && ji.uncheckedCast(nameStr).length != 0
    ? (this.name = nameStr)
    : (this.name = null);
  childrenStr = castToString(options.get("children"));
  childrenStr != null && ji.uncheckedCast(childrenStr).length != 0
    ? (this.children = castTo(
        $wnd.Object.freeze(jl.$split(childrenStr, ",")),
        12
      ))
    : (this.children = null);
  colorStr = castToString(options.get("color"));
  colorStr != null && ji.uncheckedCast(colorStr).length != 0
    ? (this.color = colorStr)
    : (this.color = null);
};
idwca.lambda$2_2 = function lambda$2_2(parts_0) {
  return parts_0.length == 2 ? parts_0[1] : "";
};
defineClass(255, 1, { 255: 1 }, idwca.JsLayoutHints$ColumnGroup);
cggl.Lio_deephaven_web_client_api_JsLayoutHints$ColumnGroup_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/ColumnGroup",
    255
  );
idwca.JsLayoutHints$ColumnGroup$lambda$0$Type =
  function JsLayoutHints$ColumnGroup$lambda$0$Type() {};
defineClass(613, 1, {}, idwca.JsLayoutHints$ColumnGroup$lambda$0$Type);
_.apply_1 = function apply_7(arg0) {
  return jl.$split(castToString(arg0), ":");
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$ColumnGroup$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/ColumnGroup/lambda$0$Type",
    613
  );
idwca.JsLayoutHints$ColumnGroup$lambda$1$Type =
  function JsLayoutHints$ColumnGroup$lambda$1$Type() {};
defineClass(614, 1, {}, idwca.JsLayoutHints$ColumnGroup$lambda$1$Type);
_.apply_1 = function apply_8(arg0) {
  return castTo(arg0, 12)[0];
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$ColumnGroup$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/ColumnGroup/lambda$1$Type",
    614
  );
idwca.JsLayoutHints$ColumnGroup$lambda$2$Type =
  function JsLayoutHints$ColumnGroup$lambda$2$Type() {};
defineClass(615, 1, {}, idwca.JsLayoutHints$ColumnGroup$lambda$2$Type);
_.apply_1 = function apply_9(arg0) {
  return idwca.lambda$2_2(castTo(arg0, 12));
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$ColumnGroup$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/ColumnGroup/lambda$2$Type",
    615
  );
idwca.JsLayoutHints$lambda$0$Type = function JsLayoutHints$lambda$0$Type() {};
defineClass(616, 1, {}, idwca.JsLayoutHints$lambda$0$Type);
_.apply_1 = function apply_10(arg0) {
  return jl.$split(castToString(arg0), "=");
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/lambda$0$Type",
    616
  );
idwca.JsLayoutHints$lambda$1$Type = function JsLayoutHints$lambda$1$Type() {};
defineClass(617, 1, {}, idwca.JsLayoutHints$lambda$1$Type);
_.apply_1 = function apply_11(arg0) {
  return castTo(arg0, 12)[0];
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/lambda$1$Type",
    617
  );
idwca.JsLayoutHints$lambda$2$Type = function JsLayoutHints$lambda$2$Type() {};
defineClass(618, 1, {}, idwca.JsLayoutHints$lambda$2$Type);
_.apply_1 = function apply_12(arg0) {
  return idwca.lambda$2_1(castTo(arg0, 12));
};
cggl.Lio_deephaven_web_client_api_JsLayoutHints$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsLayoutHints/lambda$2$Type",
    618
  );
idwca.$clinit_JsLazy = function $clinit_JsLazy() {
  idwca.$clinit_JsLazy = emptyMethod;
  idwca.NO_REENTRY = new idwca.JsLazy$lambda$0$Type();
};
idwca.$lambda$1 = function $lambda$1(this$static, val_1) {
  var resolved;
  this$static.supplier = idwca.NO_REENTRY;
  resolved = val_1.valueOf_0();
  this$static.supplier = new idwca.JsLazy$ImmutableProvider(resolved);
  return resolved;
};
idwca.JsLazy = function JsLazy(val) {
  idwca.$clinit_JsLazy();
  this.supplier = new idwca.JsLazy$lambda$1$Type(this, val);
};
idwca.lambda$0_1 = function lambda$0_1() {
  idwca.$clinit_JsLazy();
  throw toJs(new jl.IllegalStateException_0("no reentry"));
};
defineClass(156, 1, {}, idwca.JsLazy);
cggl.Lio_deephaven_web_client_api_JsLazy_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "JsLazy",
  156
);
idwca.JsLazy$ImmutableProvider = function JsLazy$ImmutableProvider(value_0) {
  this.value_0 = value_0;
};
defineClass(82, 1, { 82: 1 }, idwca.JsLazy$ImmutableProvider);
_.valueOf_0 = function valueOf_5() {
  return this.value_0;
};
cggl.Lio_deephaven_web_client_api_JsLazy$ImmutableProvider_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsLazy/ImmutableProvider", 82);
idwca.JsLazy$lambda$0$Type = function JsLazy$lambda$0$Type() {};
defineClass(550, 1, {}, idwca.JsLazy$lambda$0$Type);
_.valueOf_0 = function valueOf_6() {
  return idwca.lambda$0_1();
};
cggl.Lio_deephaven_web_client_api_JsLazy$lambda$0$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsLazy/lambda$0$Type", 550);
idwca.JsLazy$lambda$1$Type = function JsLazy$lambda$1$Type($$outer_0, val_1) {
  this.$$outer_0 = $$outer_0;
  this.val_1 = val_1;
};
defineClass(551, 1, {}, idwca.JsLazy$lambda$1$Type);
_.valueOf_0 = function valueOf_7() {
  return idwca.$lambda$1(this.$$outer_0, this.val_1);
};
cggl.Lio_deephaven_web_client_api_JsLazy$lambda$1$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsLazy/lambda$1$Type", 551);
idwca.JsLazy$lambda$3$Type = function JsLazy$lambda$3$Type(factory_0, arg1_1) {
  this.factory_0 = factory_0;
  this.arg1_1 = arg1_1;
};
defineClass(552, 1, {}, idwca.JsLazy$lambda$3$Type);
_.valueOf_0 = function valueOf_8() {
  return idwca.$clinit_JsLazy(), idwca.$apply(this.arg1_1);
};
cggl.Lio_deephaven_web_client_api_JsLazy$lambda$3$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsLazy/lambda$3$Type", 552);
idwcal.$$init_11 = function $$init_11(this$static) {};
idwcal.$die = function $die(this$static, error) {
  var init;
  init = jb.emptyObjectLiteral();
  init.detail = error;
  this$static.suppress = false;
  this$static.fireEvent_0("reconnectfailed", init);
  this$static.suppress = true;
};
idwcal.$disconnected = function $disconnected(this$static) {
  this$static.connected = false;
  this$static.fireEvent("disconnect");
  this$static.suppress = true;
};
idwcal.$lambda$0 = function $lambda$0(this$static, resolve_0, reject_1) {
  idwca.$addEventListenerOneShot_0(
    this$static,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_HasEventHandling$EventPair_2_classLit,
        1
      ),
      $intern_7,
      171,
      0,
      [
        idwca.of_0(
          "reconnect",
          makeLambdaFunction(
            idwcal.HasLifecycle$lambda$1$Type.prototype.onEvent,
            idwcal.HasLifecycle$lambda$1$Type,
            [resolve_0]
          )
        ),
        idwca.of_0(
          "disconnect",
          makeLambdaFunction(
            idwcal.HasLifecycle$lambda$2$Type.prototype.onEvent,
            idwcal.HasLifecycle$lambda$2$Type,
            [reject_1]
          )
        ),
        idwca.of_0(
          "reconnectfailed",
          makeLambdaFunction(
            idwcal.HasLifecycle$lambda$3$Type.prototype.onEvent,
            idwcal.HasLifecycle$lambda$3$Type,
            [reject_1]
          )
        ),
      ]
    )
  );
};
idwcal.$nextReconnect = function $nextReconnect(this$static) {
  if (this$static.connected) {
    return $wnd.Promise.resolve(null);
  }
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcal.HasLifecycle$lambda$0$Type.prototype.onInvoke_6,
      idwcal.HasLifecycle$lambda$0$Type,
      [this$static]
    )
  );
};
idwcal.HasLifecycle = function HasLifecycle() {
  idwca.HasEventHandling.call(this);
  idwcal.$$init_11(this);
};
defineClass(51, 57, $intern_39);
_.reconnect = function reconnect() {
  this.connected = true;
  this.suppress = false;
  this.fireEvent("reconnect");
};
_.refetch = function refetch() {
  this.reconnect();
  return $wnd.Promise.resolve(this);
};
_.connected = true;
cggl.Lio_deephaven_web_client_api_lifecycle_HasLifecycle_2_classLit =
  createForClass("io.deephaven.web.client.api.lifecycle", "HasLifecycle", 51);
idwca.$$init_12 = function $$init_12(this$static) {
  this$static.knownKeys = new ju.HashSet();
};
idwca.$close = function $close(this$static) {
  !!this$static.keys_0 && idwca.$close_0(this$static.keys_0);
  !!this$static.subscription &&
    this$static.subscription.copy_0.then(
      makeLambdaFunction(
        idwcas3.TableSubscription$lambda$4$Type.prototype.onInvoke_5,
        idwcas3.TableSubscription$lambda$4$Type,
        []
      )
    );
  idwcaw.$close_3(this$static.widget);
};
idwca.$getKeys = function $getKeys(this$static) {
  if (this$static.subscription.columns_0.length == 1) {
    return new $wnd.Set(
      jus.$toArray_6(
        jus.$map_0(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(this$static.knownKeys, 1)
          ),
          new idwca.JsPartitionedTable$lambda$20$Type()
        ),
        new jus.StreamImpl$0methodref$lambda$2$Type()
      )
    );
  }
  return new $wnd.Set(
    jus.$toArray_6(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(this$static.knownKeys, 1)
        ),
        new idwca.JsPartitionedTable$3methodref$toArray$Type()
      ),
      new jus.StreamImpl$0methodref$lambda$2$Type()
    )
  );
};
idwca.$getMergedTable = function $getMergedTable(this$static) {
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this$static.connection,
        new idwca.JsPartitionedTable$lambda$17$Type(this$static),
        "partitioned table merged table"
      ),
      this$static.connection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsPartitionedTable$lambda$19$Type.prototype.onInvoke_5,
        idwca.JsPartitionedTable$lambda$19$Type,
        []
      )
    );
};
idwca.$getTable = function $getTable(this$static, key) {
  var columnNames, columnTypes, entry, keyList, keysData;
  $wnd.Array.isArray(key) || (key = $wnd.Array.of(key));
  keyList = jb.$asList(key);
  if (!ju.$contains_4(this$static.knownKeys, keyList)) {
    return $wnd.Promise.resolve(null);
  }
  columnNames = castTo(
    ji.stampJavaTypeInfo_1(
      this$static.descriptor.getKeyColumnNamesList(),
      initUnidimensionalArray(
        cggl.Ljava_lang_String_2_classLit,
        $intern_8,
        2,
        0,
        6,
        1
      )
    ),
    12
  );
  columnTypes = castTo(
    ju.$toArray_2(
      this$static.keyColumnTypes,
      initUnidimensionalArray(
        cggl.Ljava_lang_String_2_classLit,
        $intern_8,
        2,
        0,
        6,
        1
      )
    ),
    12
  );
  keysData = castTo(
    jus.$toArray_6(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(keyList, 16)
        ),
        new idwca.JsPartitionedTable$lambda$11$Type()
      ),
      new idwca.JsPartitionedTable$1methodref$lambda$12$Type()
    ),
    80
  );
  entry = idwca.$newState_0(
    this$static.connection,
    new idwca.JsPartitionedTable$lambda$13$Type(
      this$static,
      columnNames,
      columnTypes,
      keysData
    ),
    "partitioned table key " + key
  );
  return idwcs
    .$refetch_2(entry, this$static.connection.metadata_0)
    .then(
      makeLambdaFunction(
        idwca.JsPartitionedTable$lambda$16$Type.prototype.onInvoke_5,
        idwca.JsPartitionedTable$lambda$16$Type,
        []
      )
    );
};
idwca.$handleKeys = function $handleKeys(this$static, update) {
  var added, event_0, eventData;
  event_0 = update;
  eventData = castTo(event_0.detail, 247);
  added = eventData.added_0.range_0;
  ju.$forEachRemaining_4(
    jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(added.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    ),
    new idwca.JsPartitionedTable$lambda$9$Type(this$static, eventData)
  );
};
idwca.$lambda$0_0 = function $lambda$0_0(this$static, w_0) {
  var column,
    columnDefinition,
    columnDefinitions,
    columns,
    i,
    i0,
    keyColumnNames,
    keyColumns,
    name_0,
    tableDefinition;
  this$static.descriptor =
    $wnd.dhinternal.io.deephaven.proto.partitionedtable_pb.PartitionedTableDescriptor.deserializeBinary(
      w_0.response.getData().getPayload_asU8()
    );
  this$static.keyColumnTypes = new ju.ArrayList();
  tableDefinition = idwcab.readTableDefinition(
    idwcab.readSchemaMessage(
      this$static.descriptor.getConstituentDefinitionSchema_asU8()
    )
  );
  columnDefinitions = tableDefinition.columns_0;
  columns = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_Column_2_classLit,
    $intern_40,
    21,
    0,
    0,
    1
  );
  for (i0 = 0; i0 < columnDefinitions.length; i0++) {
    columnDefinition = columnDefinitions[i0];
    column = idwcabd.$makeJsColumn(
      columnDefinition,
      columns.length,
      castTo(
        jus.$collect_1(
          ju.stream_4(tableDefinition.columns_0),
          jus.partitioningBy(
            new idwcabd.InitialTableDefinition$0methodref$isRollupConstituentNodeColumn$Type(),
            jus.toMap(
              new idwcabd.InitialTableDefinition$1methodref$getName$Type(),
              new juf.Function$lambda$0$Type(),
              new idwcabd.InitialTableDefinition$lambda$4$Type(),
              new idwcabd.InitialTableDefinition$3methodref$ctor$Type()
            )
          )
        ),
        30
      )
    );
    columns[columns.length] = column;
  }
  keyColumns = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_Column_2_classLit,
    $intern_40,
    21,
    0,
    0,
    1
  );
  keyColumnNames = this$static.descriptor.getKeyColumnNamesList();
  for (i = 0; i < keyColumnNames.length; i++) {
    name_0 = castToString(jb.$getAt(keyColumnNames, i));
    columnDefinition = castTo(
      castTo(
        castTo(
          jus.$collect_1(
            ju.stream_4(tableDefinition.columns_0),
            jus.partitioningBy(
              new idwcabd.InitialTableDefinition$0methodref$isRollupConstituentNodeColumn$Type(),
              jus.toMap(
                new idwcabd.InitialTableDefinition$1methodref$getName$Type(),
                new juf.Function$lambda$0$Type(),
                new idwcabd.InitialTableDefinition$lambda$4$Type(),
                new idwcabd.InitialTableDefinition$3methodref$ctor$Type()
              )
            )
          ),
          30
        ).get((jl.$clinit_Boolean(), ji.uncheckedCast(false))),
        30
      ).get(name_0),
      83
    );
    ju.$add(this$static.keyColumnTypes, columnDefinition.type_0);
    keyColumns[keyColumns.length] = columns[columnDefinition.columnIndex];
  }
  this$static.columns_0 = castTo($wnd.Object.freeze(columns), 126);
  this$static.keyColumns_0 = castTo($wnd.Object.freeze(keyColumns), 126);
  return idwcaw.$fetch(w_0.exportedObjects_0[0]);
};
idwca.$lambda$1_0 = function $lambda$1_0(this$static, result_0) {
  this$static.keys_0 = castTo(result_0, 13);
  idwca.$addEventListener(
    this$static.keys_0,
    "disconnect",
    makeLambdaFunction(
      idwca.JsPartitionedTable$lambda$2$Type.prototype.onEvent,
      idwca.JsPartitionedTable$lambda$2$Type,
      [this$static]
    )
  );
  idwca.$addEventListener(
    this$static.keys_0,
    "reconnect",
    makeLambdaFunction(
      idwca.JsPartitionedTable$lambda$3$Type.prototype.onEvent,
      idwca.JsPartitionedTable$lambda$3$Type,
      [this$static]
    )
  );
  return idwca.$subscribeToKeys(this$static);
};
idwca.$lambda$13_0 = function $lambda$13_0(
  this$static,
  columnNames_1,
  columnTypes_2,
  keysData_3,
  c_3,
  cts_4
) {
  idwca
    .$newTable(
      this$static.connection,
      columnNames_1,
      columnTypes_2,
      keysData_3,
      null
    )
    .then(
      makeLambdaFunction(
        idwca.JsPartitionedTable$lambda$14$Type.prototype.onInvoke_5,
        idwca.JsPartitionedTable$lambda$14$Type,
        [this$static, cts_4, c_3]
      )
    );
};
idwca.$lambda$14 = function $lambda$14(this$static, cts_1, c_2, table_2) {
  var getTableRequest;
  getTableRequest =
    new $wnd.dhinternal.io.deephaven.proto.partitionedtable_pb.GetTableRequest();
  getTableRequest.setPartitionedTable(
    this$static.widget.typedTicket_0.getTicket()
  );
  getTableRequest.setKeyTableTicket(
    idwca.$makeTicket(idwca.$state(table_2).handle)
  );
  getTableRequest.setResultId(idwca.$makeTicket(cts_1.handle));
  this$static.connection.partitionedTableServiceClient.getTable(
    getTableRequest,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwca.JsPartitionedTable$lambda$15$Type.prototype.onInvoke_30,
      idwca.JsPartitionedTable$lambda$15$Type,
      [table_2, c_2]
    )
  );
  return null;
};
idwca.$lambda$17 = function $lambda$17(this$static, c_0, cts_1) {
  var requestMessage;
  requestMessage =
    new $wnd.dhinternal.io.deephaven.proto.partitionedtable_pb.MergeRequest();
  requestMessage.setPartitionedTable(
    this$static.widget.typedTicket_0.getTicket()
  );
  requestMessage.setResultId(idwca.$makeTicket(cts_1.handle));
  this$static.connection.partitionedTableServiceClient.merge(
    requestMessage,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwca.JsPartitionedTable$2methodref$apply$Type.prototype.onInvoke_31,
      idwca.JsPartitionedTable$2methodref$apply$Type,
      [c_0]
    )
  );
};
idwca.$lambda$22 = function $lambda$22(this$static, c_0, state_1, metadata_2) {
  var drop;
  drop = new $wnd.dhinternal.io.deephaven.proto.table_pb.DropColumnsRequest();
  drop.setColumnNamesList(
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      [this$static.descriptor.getConstituentColumnName()]
    )
  );
  drop.setSourceId(
    idwca.$makeTableReference(idwca.$state(this$static.keys_0).handle)
  );
  drop.setResultId(idwca.$makeTicket(state_1.handle));
  this$static.connection.tableServiceClient.dropColumns(
    drop,
    metadata_2,
    makeLambdaFunction(
      idwca.JsPartitionedTable$4methodref$apply$Type.prototype.onInvoke_46,
      idwca.JsPartitionedTable$4methodref$apply$Type,
      [c_0]
    )
  );
};
idwca.$lambda$24 = function $lambda$24(this$static, state_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.connection, state_0)
  );
};
idwca.$lambda$3_1 = function $lambda$3_1(this$static) {
  idwca
    .$subscribeToKeys(this$static)
    .then(
      makeLambdaFunction(
        idwca.JsPartitionedTable$lambda$4$Type.prototype.onInvoke_5,
        idwca.JsPartitionedTable$lambda$4$Type,
        [this$static]
      ),
      makeLambdaFunction(
        idwca.JsPartitionedTable$lambda$5$Type.prototype.onInvoke_5,
        idwca.JsPartitionedTable$lambda$5$Type,
        [this$static]
      )
    );
};
idwca.$lambda$4 = function $lambda$4(this$static) {
  this$static.suppress = false;
  idwca.$fireEvent_1(this$static, "reconnect", jb.emptyObjectLiteral());
  return null;
};
idwca.$lambda$5_0 = function $lambda$5_0(this$static, failure_0) {
  var init;
  init = jb.emptyObjectLiteral();
  init.detail = failure_0;
  this$static.suppress = false;
  idwca.$fireEvent_0(
    this$static,
    "reconnectfailed",
    new $wnd.CustomEvent("reconnectfailed", init)
  );
  this$static.suppress = true;
  return null;
};
idwca.$lambda$7 = function $lambda$7(this$static, promise_1) {
  idwcf.$succeed(promise_1, this$static);
};
idwca.$lambda$9 = function $lambda$9(this$static, eventData_1, index_1) {
  var init, key;
  key = eventData_1.this$01.columns_0.map(
    makeLambdaFunction(
      idwca.JsPartitionedTable$lambda$10$Type.prototype.onInvoke,
      idwca.JsPartitionedTable$lambda$10$Type,
      [eventData_1, index_1]
    )
  );
  ju.$add_0(this$static.knownKeys, jb.$asList(key));
  init = jb.emptyObjectLiteral();
  init.detail = key;
  idwca.$fireEvent_0(
    this$static,
    "keyadded",
    new $wnd.CustomEvent("keyadded", init)
  );
};
idwca.$refetch = function $refetch(this$static) {
  !!this$static.keys_0 && idwca.$close_0(this$static.keys_0);
  !!this$static.subscription &&
    this$static.subscription.copy_0.then(
      makeLambdaFunction(
        idwcas3.TableSubscription$lambda$4$Type.prototype.onInvoke_5,
        idwcas3.TableSubscription$lambda$4$Type,
        []
      )
    );
  return idwcaw
    .$refetch_0(this$static.widget)
    .then(
      makeLambdaFunction(
        idwca.JsPartitionedTable$lambda$0$Type.prototype.onInvoke_5,
        idwca.JsPartitionedTable$lambda$0$Type,
        [this$static]
      )
    )
    .then(
      makeLambdaFunction(
        idwca.JsPartitionedTable$lambda$1$Type.prototype.onInvoke_5,
        idwca.JsPartitionedTable$lambda$1$Type,
        [this$static]
      )
    );
};
idwca.$subscribeToKeys = function $subscribeToKeys(this$static) {
  var promise;
  this$static.subscription = idwca.$subscribe(
    this$static.keys_0,
    idwca.$findColumns(
      this$static.keys_0,
      castTo(
        ji.stampJavaTypeInfo_1(
          this$static.descriptor.getKeyColumnNamesList(),
          initUnidimensionalArray(
            cggl.Ljava_lang_String_2_classLit,
            $intern_8,
            2,
            0,
            6,
            1
          )
        ),
        12
      )
    )
  );
  idwca.$addEventListener(
    this$static.subscription,
    "updated",
    makeLambdaFunction(
      idwca.JsPartitionedTable$0methodref$handleKeys$Type.prototype.onEvent,
      idwca.JsPartitionedTable$0methodref$handleKeys$Type,
      [this$static]
    )
  );
  promise = new idwcf.LazyPromise();
  idwca.$addEventListenerOneShot(
    this$static.subscription,
    "updated",
    makeLambdaFunction(
      idwca.JsPartitionedTable$lambda$7$Type.prototype.onEvent,
      idwca.JsPartitionedTable$lambda$7$Type,
      [this$static, promise]
    )
  );
  idwca.$addEventListener(
    this$static.keys_0,
    "disconnect",
    makeLambdaFunction(
      idwca.JsPartitionedTable$lambda$8$Type.prototype.onEvent,
      idwca.JsPartitionedTable$lambda$8$Type,
      [promise]
    )
  );
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [promise]
    )
  );
};
idwca.JsPartitionedTable = function JsPartitionedTable(connection, widget) {
  idwcal.HasLifecycle.call(this);
  idwca.$$init_12(this);
  this.connection = connection;
  this.widget = widget;
};
idwca.lambda$15 = function lambda$15(table_0, c_1, error_2, success_3) {
  idwca.$close_0(table_0);
  c_1(error_2, success_3);
};
idwca.lambda$16 = function lambda$16(cts_0) {
  return $wnd.Promise.resolve(new idwca.JsTable_0(cts_0.connection, cts_0));
};
idwca.lambda$19 = function lambda$19(cts_0) {
  return $wnd.Promise.resolve(new idwca.JsTable_0(cts_0.connection, cts_0));
};
defineClass(99, 51, { 57: 1, 99: 1, 230: 1, 51: 1 }, idwca.JsPartitionedTable);
_.close = function close_0() {
  idwca.$close(this);
};
defineProperties(_, {
  columns: {
    get: function getColumns() {
      return this.columns_0;
    },
  },
});
defineProperties(_, {
  keyColumns: {
    get: function getKeyColumns() {
      return this.keyColumns_0;
    },
  },
});
_.getKeyTable = function getKeyTable() {
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this.connection,
        new idwca.JsPartitionedTable$lambda$22$Type(this),
        "drop constituent column"
      ),
      this.connection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsPartitionedTable$lambda$24$Type.prototype.onInvoke_5,
        idwca.JsPartitionedTable$lambda$24$Type,
        [this]
      )
    );
};
_.getKeys = function getKeys() {
  return idwca.$getKeys(this);
};
_.getMergedTable = function getMergedTable() {
  return idwca.$getMergedTable(this);
};
_.getTable = function getTable(key) {
  return idwca.$getTable(this, key);
};
_.refetch = function refetch_0() {
  return idwca.$refetch(this);
};
defineProperties(_, {
  size: {
    get: function size_2() {
      return this.knownKeys.map_0.size();
    },
  },
});
_.typedTicket = function typedTicket_0() {
  return idwcaw.$typedTicket(this.widget);
};
_.typedTicket_2 = function () {
  return this.typedTicket();
};
idwca.EVENT_DISCONNECT_0 = "disconnect";
idwca.EVENT_KEYADDED = "keyadded";
idwca.EVENT_RECONNECT_0 = "reconnect";
idwca.EVENT_RECONNECTFAILED = "reconnectfailed";
cggl.Lio_deephaven_web_client_api_JsPartitionedTable_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsPartitionedTable", 99);
idwca.$getClass_26 = function $getClass_26() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$0methodref$handleKeys$Type =
  function JsPartitionedTable$0methodref$handleKeys$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1309,
  $wnd.Function,
  $intern_35,
  idwca.JsPartitionedTable$0methodref$handleKeys$Type
);
_.onEvent = function onEvent_5(arg0) {
  idwca.$handleKeys(this.$$outer_0, arg0);
};
idwca.JsPartitionedTable$1methodref$lambda$12$Type =
  function JsPartitionedTable$1methodref$lambda$12$Type() {};
defineClass(555, 1, {}, idwca.JsPartitionedTable$1methodref$lambda$12$Type);
_.apply_2 = function apply_13(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_41,
    5,
    arg0,
    3,
    2
  );
};
cggl.Lio_deephaven_web_client_api_JsPartitionedTable$1methodref$lambda$12$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsPartitionedTable/1methodref$lambda$12$Type",
    555
  );
idwca.$getClass_27 = function $getClass_27() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$2methodref$apply$Type =
  function JsPartitionedTable$2methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1324,
  $wnd.Function,
  {},
  idwca.JsPartitionedTable$2methodref$apply$Type
);
_.onInvoke_31 = function onInvoke_13(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.JsPartitionedTable$3methodref$toArray$Type =
  function JsPartitionedTable$3methodref$toArray$Type() {};
defineClass(559, 1, {}, idwca.JsPartitionedTable$3methodref$toArray$Type);
_.apply_1 = function apply_14(arg0) {
  return castTo(arg0, 53).toArray();
};
cggl.Lio_deephaven_web_client_api_JsPartitionedTable$3methodref$toArray$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsPartitionedTable/3methodref$toArray$Type",
    559
  );
idwca.$getClass_28 = function $getClass_28() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$4methodref$apply$Type =
  function JsPartitionedTable$4methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1325,
  $wnd.Function,
  {},
  idwca.JsPartitionedTable$4methodref$apply$Type
);
_.onInvoke_46 = function onInvoke_14(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_29 = function $getClass_29() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$0$Type =
  function JsPartitionedTable$lambda$0$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1307,
  $wnd.Function,
  $intern_36,
  idwca.JsPartitionedTable$lambda$0$Type
);
_.onInvoke_5 = function onInvoke_15(arg0) {
  return idwca.$lambda$0_0(this.$$outer_0, castTo(arg0, 60));
};
idwca.$getClass_30 = function $getClass_30() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$1$Type =
  function JsPartitionedTable$lambda$1$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1308,
  $wnd.Function,
  $intern_36,
  idwca.JsPartitionedTable$lambda$1$Type
);
_.onInvoke_5 = function onInvoke_16(arg0) {
  return idwca.$lambda$1_0(this.$$outer_0, arg0);
};
idwca.$getClass_31 = function $getClass_31() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$10$Type =
  function JsPartitionedTable$lambda$10$Type(eventData_0, index_1) {
    this.eventData_0 = eventData_0;
    this.index_1 = index_1;
  };
defineClass(1319, $wnd.Function, {}, idwca.JsPartitionedTable$lambda$10$Type);
_.onInvoke = function onInvoke_17(arg0, arg1, arg2) {
  return idwcas3.$getData_0(this.eventData_0, this.index_1, castTo(arg0, 21));
};
_.index_1 = 0;
idwca.JsPartitionedTable$lambda$11$Type =
  function JsPartitionedTable$lambda$11$Type() {};
defineClass(554, 1, {}, idwca.JsPartitionedTable$lambda$11$Type);
_.apply_1 = function apply_15(arg0) {
  return stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [arg0]
  );
};
cggl.Lio_deephaven_web_client_api_JsPartitionedTable$lambda$11$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsPartitionedTable/lambda$11$Type",
    554
  );
idwca.JsPartitionedTable$lambda$13$Type =
  function JsPartitionedTable$lambda$13$Type(
    $$outer_0,
    columnNames_1,
    columnTypes_2,
    keysData_3
  ) {
    this.$$outer_0 = $$outer_0;
    this.columnNames_1 = columnNames_1;
    this.columnTypes_2 = columnTypes_2;
    this.keysData_3 = keysData_3;
  };
defineClass(556, 1, {}, idwca.JsPartitionedTable$lambda$13$Type);
_.fetch_1 = function fetch_1(arg0, arg1, arg2) {
  idwca.$lambda$13_0(
    this.$$outer_0,
    this.columnNames_1,
    this.columnTypes_2,
    this.keysData_3,
    arg0,
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_JsPartitionedTable$lambda$13$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsPartitionedTable/lambda$13$Type",
    556
  );
idwca.$getClass_32 = function $getClass_32() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$14$Type =
  function JsPartitionedTable$lambda$14$Type($$outer_0, cts_1, c_2) {
    this.$$outer_0 = $$outer_0;
    this.cts_1 = cts_1;
    this.c_2 = c_2;
  };
defineClass(
  1320,
  $wnd.Function,
  $intern_36,
  idwca.JsPartitionedTable$lambda$14$Type
);
_.onInvoke_5 = function onInvoke_18(arg0) {
  return idwca.$lambda$14(
    this.$$outer_0,
    this.cts_1,
    this.c_2,
    castTo(arg0, 13)
  );
};
idwca.$getClass_33 = function $getClass_33() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$15$Type =
  function JsPartitionedTable$lambda$15$Type(table_0, c_1) {
    this.table_0 = table_0;
    this.c_1 = c_1;
  };
defineClass(1322, $wnd.Function, {}, idwca.JsPartitionedTable$lambda$15$Type);
_.onInvoke_30 = function onInvoke_19(arg0, arg1) {
  idwca.lambda$15(this.table_0, this.c_1, arg0, arg1);
};
idwca.$getClass_34 = function $getClass_34() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$16$Type =
  function JsPartitionedTable$lambda$16$Type() {};
defineClass(
  1312,
  $wnd.Function,
  $intern_36,
  idwca.JsPartitionedTable$lambda$16$Type
);
_.onInvoke_5 = function onInvoke_20(arg0) {
  return idwca.lambda$16(castTo(arg0, 14));
};
idwca.JsPartitionedTable$lambda$17$Type =
  function JsPartitionedTable$lambda$17$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(557, 1, {}, idwca.JsPartitionedTable$lambda$17$Type);
_.fetch_1 = function fetch_2(arg0, arg1, arg2) {
  idwca.$lambda$17(this.$$outer_0, arg0, arg1);
};
cggl.Lio_deephaven_web_client_api_JsPartitionedTable$lambda$17$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsPartitionedTable/lambda$17$Type",
    557
  );
idwca.$getClass_35 = function $getClass_35() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$19$Type =
  function JsPartitionedTable$lambda$19$Type() {};
defineClass(
  1313,
  $wnd.Function,
  $intern_36,
  idwca.JsPartitionedTable$lambda$19$Type
);
_.onInvoke_5 = function onInvoke_21(arg0) {
  return idwca.lambda$19(castTo(arg0, 14));
};
idwca.$getClass_36 = function $getClass_36() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$2$Type =
  function JsPartitionedTable$lambda$2$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1315,
  $wnd.Function,
  $intern_35,
  idwca.JsPartitionedTable$lambda$2$Type
);
_.onEvent = function onEvent_6(arg0) {
  idwca.$fireEvent_1(this.$$outer_0, "disconnect", jb.emptyObjectLiteral());
};
idwca.JsPartitionedTable$lambda$20$Type =
  function JsPartitionedTable$lambda$20$Type() {};
defineClass(558, 1, {}, idwca.JsPartitionedTable$lambda$20$Type);
_.apply_1 = function apply_16(arg0) {
  return castTo(arg0, 79).getAtIndex(0);
};
cggl.Lio_deephaven_web_client_api_JsPartitionedTable$lambda$20$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsPartitionedTable/lambda$20$Type",
    558
  );
idwca.JsPartitionedTable$lambda$22$Type =
  function JsPartitionedTable$lambda$22$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(560, 1, {}, idwca.JsPartitionedTable$lambda$22$Type);
_.fetch_1 = function fetch_3(arg0, arg1, arg2) {
  idwca.$lambda$22(this.$$outer_0, arg0, arg1, arg2);
};
cggl.Lio_deephaven_web_client_api_JsPartitionedTable$lambda$22$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsPartitionedTable/lambda$22$Type",
    560
  );
idwca.$getClass_37 = function $getClass_37() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$24$Type =
  function JsPartitionedTable$lambda$24$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1314,
  $wnd.Function,
  $intern_36,
  idwca.JsPartitionedTable$lambda$24$Type
);
_.onInvoke_5 = function onInvoke_22(arg0) {
  return idwca.$lambda$24(this.$$outer_0, castTo(arg0, 14));
};
idwca.$getClass_38 = function $getClass_38() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$3$Type =
  function JsPartitionedTable$lambda$3$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1316,
  $wnd.Function,
  $intern_35,
  idwca.JsPartitionedTable$lambda$3$Type
);
_.onEvent = function onEvent_7(arg0) {
  idwca.$lambda$3_1(this.$$outer_0);
};
idwca.$getClass_39 = function $getClass_39() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$4$Type =
  function JsPartitionedTable$lambda$4$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1317,
  $wnd.Function,
  $intern_36,
  idwca.JsPartitionedTable$lambda$4$Type
);
_.onInvoke_5 = function onInvoke_23(arg0) {
  return castTo(arg0, 99), idwca.$lambda$4(this.$$outer_0);
};
idwca.$getClass_40 = function $getClass_40() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$5$Type =
  function JsPartitionedTable$lambda$5$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1318, $wnd.Function, {}, idwca.JsPartitionedTable$lambda$5$Type);
_.onInvoke_5 = function onInvoke_24(arg0) {
  return idwca.$lambda$5_0(this.$$outer_0, arg0);
};
idwca.$getClass_41 = function $getClass_41() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$7$Type =
  function JsPartitionedTable$lambda$7$Type($$outer_0, promise_1) {
    this.$$outer_0 = $$outer_0;
    this.promise_1 = promise_1;
  };
defineClass(
  1310,
  $wnd.Function,
  $intern_35,
  idwca.JsPartitionedTable$lambda$7$Type
);
_.onEvent = function onEvent_8(arg0) {
  idwca.$lambda$7(this.$$outer_0, this.promise_1);
};
idwca.$getClass_42 = function $getClass_42() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsPartitionedTable$lambda$8$Type =
  function JsPartitionedTable$lambda$8$Type(promise_0) {
    this.promise_0 = promise_0;
  };
defineClass(
  1311,
  $wnd.Function,
  $intern_35,
  idwca.JsPartitionedTable$lambda$8$Type
);
_.onEvent = function onEvent_9(arg0) {
  idwcf.$fail(this.promise_0, "Underlying table disconnected");
};
idwca.JsPartitionedTable$lambda$9$Type =
  function JsPartitionedTable$lambda$9$Type($$outer_0, eventData_1) {
    this.$$outer_0 = $$outer_0;
    this.eventData_1 = eventData_1;
  };
defineClass(553, 1, $intern_42, idwca.JsPartitionedTable$lambda$9$Type);
_.accept_0 = function accept_2(arg0) {
  idwca.$lambda$9(this.$$outer_0, this.eventData_1, arg0);
};
cggl.Lio_deephaven_web_client_api_JsPartitionedTable$lambda$9$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsPartitionedTable/lambda$9$Type",
    553
  );
idwca.JsRangeSet = function JsRangeSet(range) {
  this.range_0 = range;
};
idwca.ofItems = function ofItems(rows_0) {
  var i, longs;
  longs = initUnidimensionalArray(
    cggl.J_classLit,
    $intern_43,
    18,
    rows_0.length,
    14,
    1
  );
  for (i = 0; i < rows_0.length; i++) {
    longs[i] = fromDouble_0(rows_0[i]);
  }
  return new idwca.JsRangeSet(idwsd.ofItems_0(longs));
};
idwca.ofRange = function ofRange(first, last) {
  return new idwca.JsRangeSet(
    idwsd.ofRange_0(fromDouble_0(first), fromDouble_0(last))
  );
};
idwca.ofRanges = function ofRanges(ranges) {
  var i, result;
  result = new idwsd.RangeSet();
  for (i = 0; i < ranges.length; i++) {
    ju.$forEachRemaining_0(
      new ju.AbstractList$IteratorImpl(
        new ju.Arrays$ArrayList(ranges[i].range_0.sortedRanges)
      ),
      new idwca.JsRangeSet$0methodref$addRange$Type(result)
    );
  }
  return new idwca.JsRangeSet(result);
};
idwca.ofSortedRanges = function ofSortedRanges(ranges) {
  var rangeArray;
  rangeArray = castTo(
    jus.$toArray_6(
      jus.$flatMap(
        new jus.StreamImpl(null, ju.spliterator_5(ranges, ranges.length)),
        new idwca.JsRangeSet$lambda$1$Type()
      ),
      new idwca.JsRangeSet$1methodref$lambda$2$Type()
    ),
    86
  );
  return new idwca.JsRangeSet(idwsd.fromSortedRanges(rangeArray));
};
defineClass(108, 1, { 108: 1 }, idwca.JsRangeSet);
defineProperties(_, {
  size: {
    get: function getSize() {
      return toDouble_0(
        jus.$collect_0(
          jus.$mapToLong(
            ju.stream_4(this.range_0.sortedRanges),
            new idwsd.RangeSet$0methodref$size$Type()
          )
        ).sum_0
      );
    },
  },
});
_.iterator = function iterator_0() {
  return new idwcf.JsIterator(
    jus.$iterator_21(
      jus.$mapToObj(
        new jus.LongStreamImpl(
          null,
          new ju.Spliterators$LongIteratorSpliterator(
            jus.$iterator_19(
              jus.$flatMapToLong(
                ju.stream_4(this.range_0.sortedRanges),
                new idwsd.RangeSet$lambda$0$Type()
              )
            )
          )
        ),
        new idwca.JsRangeSet$2methodref$of$Type()
      )
    )
  );
};
cggl.Lio_deephaven_web_client_api_JsRangeSet_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "JsRangeSet",
  108
);
idwca.JsRangeSet$0methodref$addRange$Type =
  function JsRangeSet$0methodref$addRange$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(681, 1, $intern_19, idwca.JsRangeSet$0methodref$addRange$Type);
_.accept = function accept_3(arg0) {
  idwsd.$addRange(this.$$outer_0, castTo(arg0, 24));
};
cggl.Lio_deephaven_web_client_api_JsRangeSet$0methodref$addRange$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsRangeSet/0methodref$addRange$Type",
    681
  );
idwca.JsRangeSet$1methodref$lambda$2$Type =
  function JsRangeSet$1methodref$lambda$2$Type() {};
defineClass(683, 1, {}, idwca.JsRangeSet$1methodref$lambda$2$Type);
_.apply_2 = function apply_17(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
    $intern_44,
    24,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_JsRangeSet$1methodref$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsRangeSet/1methodref$lambda$2$Type",
    683
  );
idwca.JsRangeSet$2methodref$of$Type =
  function JsRangeSet$2methodref$of$Type() {};
defineClass(684, 1, {}, idwca.JsRangeSet$2methodref$of$Type);
cggl.Lio_deephaven_web_client_api_JsRangeSet$2methodref$of$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsRangeSet/2methodref$of$Type",
    684
  );
idwca.JsRangeSet$lambda$1$Type = function JsRangeSet$lambda$1$Type() {};
defineClass(682, 1, {}, idwca.JsRangeSet$lambda$1$Type);
_.apply_1 = function apply_18(arg0) {
  return new jus.StreamImpl(
    null,
    new ju.Spliterators$IteratorSpliterator_1(
      new ju.AbstractList$IteratorImpl(
        new ju.Arrays$ArrayList(castTo(arg0, 108).range_0.sortedRanges)
      )
    )
  );
};
cggl.Lio_deephaven_web_client_api_JsRangeSet$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsRangeSet/lambda$1$Type",
    682
  );
idwca.$getBytes = function $getBytes(this$static) {
  return this$static.bytes_0;
};
idwca.JsRefreshToken = function JsRefreshToken(token, tokenDuration) {
  this.bytes_0 = token;
  this.expiry_0 = $wnd.Date.now() + tokenDuration;
};
idwca.JsRefreshToken_0 = function JsRefreshToken_0(source) {
  jb.$has(source, "bytes") &&
    (this.bytes_0 = jb.$asString_2(jb.$getAsAny(source, "bytes")));
  jb.$has(source, "expiry") &&
    (this.expiry_0 = jb.$asDouble(jb.$getAsAny(source, "expiry")));
};
idwca.fromObject = function fromObject(token) {
  if (instanceOf(token, 212)) {
    return castTo(token, 212);
  }
  return new idwca.JsRefreshToken_0(token);
};
defineClass(212, 1, { 212: 1 }, idwca.JsRefreshToken, idwca.JsRefreshToken_0);
defineProperties(_, {
  bytes: {
    get: function getBytes() {
      return idwca.$getBytes(this);
    },
  },
});
defineProperties(_, {
  expiry: {
    get: function getExpiry() {
      return this.expiry_0;
    },
  },
});
_.expiry_0 = 0;
cggl.Lio_deephaven_web_client_api_JsRefreshToken_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "JsRefreshToken",
  212
);
idwca.$$init_13 = function $$init_13(this$static) {
  this$static.subscriptions = new ju.HashMap();
};
idwca.$applyCustomColumns = function $applyCustomColumns(
  this$static,
  customColumns
) {
  var current,
    currentCustomColumns,
    customColumnStrings,
    newCustomColumns,
    returnMe;
  customColumnStrings = castTo(
    ji.stampJavaTypeInfo_1(
      customColumns.map(
        makeLambdaFunction(
          idwca.JsTable$lambda$10$Type.prototype.onInvoke,
          idwca.JsTable$lambda$10$Type,
          []
        )
      ),
      initUnidimensionalArray(
        cggl.Ljava_lang_String_2_classLit,
        $intern_8,
        2,
        0,
        6,
        1
      )
    ),
    12
  );
  newCustomColumns = idwsd.from_3(customColumnStrings);
  current = idwca.$state(this$static);
  currentCustomColumns = new ju.ArrayList_1(current.customColumns_0);
  returnMe = castTo(
    jus.$collect_1(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(
            new ju.ArrayList_1(current.customColumns_0),
            16
          )
        ),
        new idwcs.ClientTableState$2methodref$ctor$Type()
      ),
      jus.of_4(
        new jus.Collectors$21methodref$ctor$Type(),
        new jus.Collectors$20methodref$add$Type(),
        new jus.Collectors$lambda$42$Type(),
        stampJavaTypeInfo(
          getClassLiteralForArray(
            cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
            1
          ),
          $intern_17,
          48,
          0,
          [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
        )
      )
    ),
    79
  );
  ju.$equals_15(currentCustomColumns, newCustomColumns) ||
    (this$static.batchDepth > 0
      ? idwcab2.$customColumns(
          idwca.$getBatcher(this$static.workerConnection, this$static),
          newCustomColumns
        )
      : idwca
          .$batch(
            this$static,
            makeLambdaFunction(
              idwca.JsTable$lambda$11$Type.prototype.apply_3,
              idwca.JsTable$lambda$11$Type,
              [newCustomColumns, current]
            )
          )
          .catch(
            makeLambdaFunction(
              idwcf.LazyPromise$lambda$20$Type.prototype.onInvoke_5,
              idwcf.LazyPromise$lambda$20$Type,
              [
                makeLambdaFunction(
                  idwca.JsTable$lambda$12$Type.prototype.valueOf_0,
                  idwca.JsTable$lambda$12$Type,
                  [customColumns]
                ),
              ]
            )
          ));
  return idwcf.$clinit_JsItr(), returnMe.toArray().slice();
};
idwca.$applyFilter = function $applyFilter(this$static, filter) {
  var current, currentFilter, newFilter;
  newFilter = new ju.Arrays$ArrayList(filter);
  current = idwca.$state(this$static);
  currentFilter = new ju.ArrayList_1(current.filters);
  ju.$equals_15(currentFilter, newFilter) ||
    (this$static.batchDepth > 0
      ? idwcab2.$filter(
          idwca.$getBatcher(this$static.workerConnection, this$static),
          newFilter
        )
      : idwca
          .$batch(
            this$static,
            makeLambdaFunction(
              idwca.JsTable$lambda$8$Type.prototype.apply_3,
              idwca.JsTable$lambda$8$Type,
              [current, newFilter]
            )
          )
          .catch(
            makeLambdaFunction(
              idwcf.LazyPromise$lambda$20$Type.prototype.onInvoke_5,
              idwcf.LazyPromise$lambda$20$Type,
              [
                makeLambdaFunction(
                  idwca.JsTable$lambda$9$Type.prototype.valueOf_0,
                  idwca.JsTable$lambda$9$Type,
                  [filter]
                ),
              ]
            )
          ));
  return (
    idwcf.$clinit_JsItr(),
    ji.clone(currentFilter.array, currentFilter.array.length).slice()
  );
};
idwca.$applySort = function $applySort(this$static, sort_0) {
  var current, currentSort, newSort;
  newSort = new ju.Arrays$ArrayList(sort_0);
  current = idwca.$state(this$static);
  currentSort = new ju.ArrayList_1(current.sorts);
  ju.$equals_15(currentSort, newSort) ||
    (this$static.batchDepth > 0
      ? idwcab2.$sort(
          idwca.$getBatcher(this$static.workerConnection, this$static),
          newSort
        )
      : idwca
          .$batch(
            this$static,
            makeLambdaFunction(
              idwca.JsTable$lambda$6$Type.prototype.apply_3,
              idwca.JsTable$lambda$6$Type,
              [current, newSort]
            )
          )
          .catch(
            makeLambdaFunction(
              idwcf.LazyPromise$lambda$20$Type.prototype.onInvoke_5,
              idwcf.LazyPromise$lambda$20$Type,
              [
                makeLambdaFunction(
                  idwca.JsTable$lambda$7$Type.prototype.valueOf_0,
                  idwca.JsTable$lambda$7$Type,
                  [sort_0]
                ),
              ]
            )
          ));
  return (
    idwcf.$clinit_JsItr(),
    ji.clone(currentSort.array, currentSort.array.length).slice()
  );
};
idwca.$asOfJoin = function $asOfJoin(
  this$static,
  rightTable,
  columnsToMatch,
  columnsToAdd,
  asOfMatchRule
) {
  if (rightTable.state_4().connection != this$static.workerConnection) {
    throw toJs(
      new jl.IllegalStateException_0(
        "Table argument passed to join is not from the same worker as current table"
      )
    );
  }
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this$static.workerConnection,
        new idwca.JsTable$lambda$56$Type(
          this$static,
          rightTable,
          columnsToMatch,
          columnsToAdd,
          asOfMatchRule
        ),
        "asOfJoin(" +
          rightTable +
          ", " +
          columnsToMatch +
          ", " +
          columnsToAdd +
          "," +
          asOfMatchRule +
          ")"
      ),
      this$static.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$58$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$58$Type,
        [this$static]
      )
    );
};
idwca.$batch = function $batch(this$static, userCode) {
  var batcher, rootBatch;
  rootBatch = this$static.batchDepth++ == 0;
  batcher = idwca.$getBatcher(this$static.workerConnection, this$static);
  rootBatch || idwcab2.$createOps(batcher);
  userCode(batcher);
  return --this$static.batchDepth == 0
    ? new $wnd.Promise(
        makeLambdaFunction(
          idwcab2.RequestBatcher$lambda$7$Type.prototype.onInvoke_6,
          idwcab2.RequestBatcher$lambda$7$Type,
          [batcher]
        )
      ).then(
        makeLambdaFunction(
          idwca.JsTable$lambda$0$Type.prototype.onInvoke_5,
          idwca.JsTable$lambda$0$Type,
          [this$static]
        )
      )
    : idwcab2.$nestedPromise(batcher, this$static);
};
idwca.$close_0 = function $close_0(this$static) {
  var s, s$iterator;
  if (!this$static.currentState) {
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        ["Table.close() called twice, second call being ignored", this$static]
      )
    );
    return;
  }
  ju.$forEach_3(this$static.onClosed, new idwca.JsTable$0methodref$run$Type());
  this$static.onClosed.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  idwcs.$pause(this$static.currentState, this$static);
  for (
    s$iterator = idwsf.$iterator_1(
      new idwsf.LinkedIterable_0(
        this$static.currentState,
        new idwcs.ClientTableState$8methodref$getPrevious$Type(),
        false
      )
    );
    idwsf.$hasNext_1(s$iterator);

  ) {
    s = castTo(idwsf.$next_0(s$iterator), 14);
    idwcs.$releaseTable(s, this$static);
  }
  this$static.currentState = null;
  jl.$forEach_2(
    new ju.AbstractMap$2(this$static.subscriptions),
    new idwca.JsTable$1methodref$internalClose$Type()
  );
  ju.$reset(this$static.subscriptions);
};
idwca.$copy = function $copy(this$static) {
  return $wnd.Promise.resolve(new idwca.JsTable(this$static));
};
idwca.$crossJoin = function $crossJoin(
  this$static,
  rightTable,
  columnsToMatch,
  columnsToAdd,
  reserve_bits
) {
  if (rightTable.state_4().connection != this$static.workerConnection) {
    throw toJs(
      new jl.IllegalStateException_0(
        "Table argument passed to join is not from the same worker as current table"
      )
    );
  }
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this$static.workerConnection,
        new idwca.JsTable$lambda$59$Type(
          this$static,
          rightTable,
          columnsToMatch,
          columnsToAdd,
          reserve_bits
        ),
        "join(" +
          rightTable +
          ", " +
          columnsToMatch +
          ", " +
          columnsToAdd +
          "," +
          reserve_bits +
          ")"
      ),
      this$static.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$61$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$61$Type,
        [this$static]
      )
    );
};
idwca.$downsample = function $downsample(
  this$static,
  zoomRange,
  pixelCount,
  xCol,
  yCols
) {
  var fetchSummary;
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    ["downsample", zoomRange, jl.valueOf_29(pixelCount), xCol, yCols]
  );
  fetchSummary =
    "downsample(" +
    ju.toString_62(zoomRange) +
    ", " +
    pixelCount +
    ", " +
    xCol +
    ", " +
    ju.toString_62(yCols) +
    ")";
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this$static.workerConnection,
        new idwca.JsTable$lambda$88$Type(
          this$static,
          pixelCount,
          zoomRange,
          xCol,
          yCols
        ),
        fetchSummary
      ),
      this$static.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$90$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$90$Type,
        [this$static]
      )
    );
};
idwca.$exactJoin = function $exactJoin(
  this$static,
  rightTable,
  columnsToMatch,
  columnsToAdd
) {
  if (rightTable.state_4().connection != this$static.workerConnection) {
    throw toJs(
      new jl.IllegalStateException_0(
        "Table argument passed to join is not from the same worker as current table"
      )
    );
  }
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this$static.workerConnection,
        new idwca.JsTable$lambda$62$Type(
          this$static,
          rightTable,
          columnsToMatch,
          columnsToAdd
        ),
        "exactJoin(" +
          rightTable +
          ", " +
          columnsToMatch +
          ", " +
          columnsToAdd +
          ")"
      ),
      this$static.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$64$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$64$Type,
        [this$static]
      )
    );
};
idwca.$fetchTotals = function $fetchTotals(this$static, config, state) {
  var directive, downsample, lastGood, result, summary, totals, totalsFactory;
  directive =
    config == null
      ? idwca.parse_0(
          castToString(
            ju.$getStringValue(
              idwca.$lastVisibleState(this$static).tableDef.attributes.map_0,
              "TotalsTable"
            )
          )
        )
      : instanceOf(config, 174)
      ? castTo(config, 174)
      : instanceOfString(config)
      ? idwca.parse_0(castToString(config))
      : new idwca.JsTotalsTableConfig_0(config);
  lastGood = stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lio_deephaven_web_client_state_ClientTableState_2_classLit,
      1
    ),
    $intern_45,
    14,
    0,
    [null]
  );
  totalsFactory = new idwca.JsTable$lambda$27$Type(
    this$static,
    lastGood,
    state,
    directive
  );
  summary = "totals table " + directive + ", " + directive.groupBy.join(",");
  totals = idwca.$newState_0(
    this$static.workerConnection,
    totalsFactory,
    summary
  );
  result = new idwcf.LazyPromise();
  downsample = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Z_classLit, 1),
    $intern_32,
    18,
    16,
    [true]
  );
  return idwcs
    .$refetch_2(totals, this$static.workerConnection.metadata_0)
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$33$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$33$Type,
        [
          this$static,
          downsample,
          totalsFactory,
          summary,
          result,
          lastGood,
          directive,
        ]
      )
    );
};
idwca.$findColumn = function $findColumn(this$static, key) {
  return idwcs.$findColumn_1(idwca.$lastVisibleState(this$static), key);
};
idwca.$findColumns = function $findColumns(this$static, keys_0) {
  var i, result;
  result = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_Column_2_classLit,
    $intern_40,
    21,
    keys_0.length,
    0,
    1
  );
  for (i = 0; i < keys_0.length; i++) {
    result[i] = idwca.$findColumn(this$static, keys_0[i]);
  }
  return result;
};
idwca.$fireEvent_2 = function $fireEvent_2(this$static, type_0) {
  idwca.$fireEvent_3(this$static, type_0, jb.emptyObjectLiteral());
};
idwca.$fireEvent_3 = function $fireEvent_3(this$static, type_0, init) {
  idwca.$fireEvent_0(this$static, type_0, new $wnd.CustomEvent(type_0, init));
};
idwca.$freeze = function $freeze(this$static) {
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this$static.workerConnection,
        new idwca.JsTable$lambda$49$Type(this$static),
        "freeze"
      ),
      this$static.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$51$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$51$Type,
        [this$static]
      )
    );
};
idwca.$getBinding = function $getBinding(this$static) {
  var existing;
  return (
    (existing = idwcs.$getBinding_0(this$static.currentState, this$static)),
    !existing
      ? null
      : existing.isActive()
      ? castTo(existing, 55)
      : castTo(existing, 67).active
  );
};
idwca.$getColumns = function $getColumns(this$static) {
  return idwca.$lastVisibleState(this$static).columns_0;
};
idwca.$getCustomColumns = function $getCustomColumns(this$static) {
  return (
    idwcf.$clinit_JsItr(),
    castTo(
      jus.$collect_1(
        jus.$map_0(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(
              new ju.ArrayList_1(idwca.$state(this$static).customColumns_0),
              16
            )
          ),
          new idwcs.ClientTableState$2methodref$ctor$Type()
        ),
        jus.of_4(
          new jus.Collectors$21methodref$ctor$Type(),
          new jus.Collectors$20methodref$add$Type(),
          new jus.Collectors$lambda$42$Type(),
          stampJavaTypeInfo(
            getClassLiteralForArray(
              cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
              1
            ),
            $intern_17,
            48,
            0,
            [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
          )
        )
      ),
      79
    )
      .toArray()
      .slice()
  );
};
idwca.$getFilter = function $getFilter(this$static) {
  return (
    idwcf.$clinit_JsItr(),
    ju.$toArray_1(new ju.ArrayList_1(idwca.$state(this$static).filters)).slice()
  );
};
idwca.$getGrandTotalsTable = function $getGrandTotalsTable(
  this$static,
  config
) {
  return idwca.$fetchTotals(
    this$static,
    config,
    makeLambdaFunction(
      idwca.JsTable$lambda$42$Type.prototype.valueOf_0,
      idwca.JsTable$lambda$42$Type,
      [this$static]
    )
  );
};
idwca.$getHeadState = function $getHeadState(this$static) {
  var head, s, s$iterator;
  head = this$static.currentState;
  for (
    s$iterator = idwsf.$iterator_1(
      new idwsf.LinkedIterable_0(
        this$static.currentState,
        new idwcs.ClientTableState$7methodref$getPrevious$Type(),
        true
      )
    );
    idwsf.$hasNext_1(s$iterator);

  ) {
    s = castTo(idwsf.$next_0(s$iterator), 14);
    head = s;
  }
  return head;
};
idwca.$getInternalViewportData = function $getInternalViewportData(
  this$static
) {
  var active, promise;
  promise = new idwcf.LazyPromise();
  active = idwca.$state(this$static);
  idwcs.$onRunning(
    active,
    makeLambdaFunction(
      idwca.JsTable$lambda$13$Type.prototype.apply_3,
      idwca.JsTable$lambda$13$Type,
      [this$static, promise]
    ),
    makeLambdaFunction(
      idwca.JsTable$3methodref$fail$Type.prototype.apply_3,
      idwca.JsTable$3methodref$fail$Type,
      [promise]
    ),
    makeLambdaFunction(
      idwca.JsTable$lambda$15$Type.prototype.run,
      idwca.JsTable$lambda$15$Type,
      [promise]
    )
  );
  return (
    idwcf.$timeout(promise, $intern_46),
    new $wnd.Promise(
      makeLambdaFunction(
        idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
        idwcf.LazyPromise$lambda$2$Type,
        [promise]
      )
    )
  );
};
idwca.$getSize = function $getSize(this$static) {
  var subscription;
  subscription = castTo(
    ju.$get_16(this$static.subscriptions, idwca.$state(this$static).handle),
    117
  );
  if (
    !!subscription &&
    idwcas3.$getStatus(subscription) ==
      (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.ACTIVE)
  ) {
    return idwcas3.$size(subscription);
  }
  if (this$static.size_0 == $intern_28) {
    return -2;
  }
  return this$static.size_0;
};
idwca.$getSort = function $getSort(this$static) {
  return (
    idwcf.$clinit_JsItr(),
    ju.$toArray_1(new ju.ArrayList_1(idwca.$state(this$static).sorts)).slice()
  );
};
idwca.$getTotalSize = function $getTotalSize(this$static) {
  var subscription;
  subscription = castTo(
    ju.$get_16(this$static.subscriptions, idwca.$state(this$static).handle),
    117
  );
  if (
    !!subscription &&
    idwcas3.$getStatus(subscription) ==
      (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.ACTIVE)
  ) {
    return idwcas3.$totalSize(subscription);
  }
  return toDouble_0(idwca.$getHeadState(this$static).size_0);
};
idwca.$getTotalsTable = function $getTotalsTable(this$static, config) {
  return idwca.$fetchTotals(
    this$static,
    config,
    makeLambdaFunction(
      idwca.JsTable$9methodref$lastVisibleState$Type.prototype.valueOf_0,
      idwca.JsTable$9methodref$lastVisibleState$Type,
      [this$static]
    )
  );
};
idwca.$getTotalsTableConfig = function $getTotalsTableConfig(this$static) {
  return idwcs.$getTotalsTableConfig_1(idwca.$lastVisibleState(this$static));
};
idwca.$getViewportData = function $getViewportData(this$static) {
  var subscription;
  subscription = castTo(
    ju.$get_16(this$static.subscriptions, idwca.$state(this$static).handle),
    117
  );
  if (!subscription) {
    return $wnd.Promise.reject("No viewport currently set");
  }
  return subscription.copy_0.then(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$7methodref$getInternalViewportData$Type
        .prototype.onInvoke_5,
      idwcas3.TableViewportSubscription$7methodref$getInternalViewportData$Type,
      []
    )
  );
};
idwca.$handleSnapshot = function $handleSnapshot(
  this$static,
  table,
  snapshotType,
  includedRows,
  dataColumns,
  columns,
  maxRows
) {
  var operation;
  if (!idwca.$equals_1(table, idwca.$state(this$static).handle)) {
    debugger;
    throw toJs(new jl.AssertionError_0("Table received incorrect snapshot"));
  }
  operation = new idwca.JsTable$Debounce(
    this$static,
    table,
    snapshotType,
    includedRows,
    columns,
    dataColumns,
    maxRows
  );
  if (!this$static.debounce) {
    this$static.debounce = operation;
    $wnd.goog.global.setTimeout(
      makeLambdaFunction(
        idwca.JsTable$lambda$91$Type.prototype.onInvoke_4,
        idwca.JsTable$lambda$91$Type,
        [this$static]
      ),
      20
    );
  } else if (idwca.$isEqual(this$static.debounce, operation));
  else {
    idwca.$processSnapshot(this$static);
    this$static.debounce = operation;
    $wnd.goog.global.setTimeout(
      makeLambdaFunction(
        idwca.JsTable$lambda$92$Type.prototype.onInvoke_4,
        idwca.JsTable$lambda$92$Type,
        [this$static]
      ),
      20
    );
  }
};
idwca.$handleSnapshot_0 = function $handleSnapshot_0(
  this$static,
  handle,
  snapshot
) {
  var actualViewport,
    col,
    columnData,
    data_0,
    dataColumn,
    dataColumns,
    dataIndex,
    def,
    existing,
    includedRows,
    includedRowsIterator,
    lastRow,
    possibleMatch,
    remappedData,
    viewport,
    viewportIndex,
    viewportIterator,
    viewportRows;
  if (!idwca.$equals_1(handle, idwca.$state(this$static).handle)) {
    return;
  }
  viewport = ((existing = idwcs.$getBinding_0(
    this$static.currentState,
    this$static
  )),
  !existing
    ? null
    : existing.isActive()
    ? castTo(existing, 55)
    : castTo(existing, 67).active).viewport_0;
  if (
    !viewport ||
    !viewport.rows_0 ||
    eq(
      jus.$collect_0(
        jus.$mapToLong(
          ju.stream_4(viewport.rows_0.sortedRanges),
          new idwsd.RangeSet$0methodref$size$Type()
        )
      ).sum_0,
      0
    )
  ) {
    !!this$static.nonViewportSub &&
      idwcas3.$handleSnapshot_2(this$static.nonViewportSub, snapshot);
    return;
  }
  viewportRows = viewport.rows_0;
  includedRows = snapshot.includedRows;
  dataColumns = snapshot.dataColumns;
  remappedData = newArray_0(dataColumns.length);
  lastRow = -1;
  for (
    col = ju.$nextSetBit(viewport.columns_0, 0);
    col >= 0;
    col = ju.$nextSetBit(viewport.columns_0, col + 1)
  ) {
    dataColumn = dataColumns[col];
    if (!dataColumn) {
      return;
    }
    columnData = dataColumn.getData_2();
    def = idwca.$state(this$static).tableDef.columns_0[col];
    setCheck(remappedData, col, idwcf.newArray_1(def.type_0));
    viewportIterator = jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(viewportRows.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    );
    includedRowsIterator = jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(includedRows.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    );
    dataIndex = 0;
    while (
      (viewportIterator.hasElement ||
        (viewportIterator.hasElement =
          viewportIterator.spliterator.tryAdvance_0(viewportIterator)),
      viewportIterator.hasElement)
    ) {
      viewportIndex = ju.$nextLong(viewportIterator);
      if (gte_0(viewportIndex, snapshot.tableSize)) {
        break;
      }
      includedRowsIterator.hasElement ||
        (includedRowsIterator.hasElement =
          includedRowsIterator.spliterator.tryAdvance_0(includedRowsIterator));
      if (!includedRowsIterator.hasElement) {
        return;
      }
      possibleMatch = ju.$nextLong(includedRowsIterator);
      while (
        (includedRowsIterator.hasElement ||
          (includedRowsIterator.hasElement =
            includedRowsIterator.spliterator.tryAdvance_0(
              includedRowsIterator
            )),
        includedRowsIterator.hasElement &&
          compare_1(possibleMatch, viewportIndex) < 0)
      ) {
        ++dataIndex;
        possibleMatch = ju.$nextLong(includedRowsIterator);
      }
      includedRowsIterator.hasElement ||
        (includedRowsIterator.hasElement =
          includedRowsIterator.spliterator.tryAdvance_0(includedRowsIterator));
      if (
        !includedRowsIterator.hasElement &&
        compare_1(possibleMatch, viewportIndex) < 0
      ) {
        return;
      }
      if (compare_1(possibleMatch, viewportIndex) > 0) {
        return;
      }
      data_0 = jb.$getAt(columnData, dataIndex);
      remappedData[col].push(data_0);
      ++dataIndex;
      lastRow = compare_1(lastRow, possibleMatch) > 0 ? lastRow : possibleMatch;
    }
  }
  actualViewport =
    compare_1(lastRow, -1) == 0
      ? new idwsd.RangeSet()
      : idwsd.ofRange_0(
          ju.$nextLong(
            jus.$iterator_19(
              jus.$flatMapToLong(
                ju.stream_4(viewportRows.sortedRanges),
                new idwsd.RangeSet$lambda$0$Type()
              )
            )
          ),
          lastRow
        );
  idwca.$handleSnapshot(
    this$static,
    handle,
    snapshot.snapshotType,
    actualViewport,
    remappedData,
    viewport.columns_0,
    jus.$collect_0(
      jus.$mapToLong(
        ju.stream_4(viewportRows.sortedRanges),
        new idwsd.RangeSet$0methodref$size$Type()
      )
    ).sum_0
  );
};
idwca.$hasHandle = function $hasHandle(this$static, tableHandle) {
  var state, state$iterator;
  for (
    state$iterator = idwsf.$iterator_1(
      new idwsf.LinkedIterable_0(
        idwca.$state(this$static),
        new idwcs.ClientTableState$8methodref$getPrevious$Type(),
        false
      )
    );
    idwsf.$hasNext_1(state$iterator);

  ) {
    state = castTo(idwsf.$next_0(state$iterator), 14);
    if (idwca.$equals_1(state.handle, tableHandle)) {
      return true;
    }
  }
  return false;
};
idwca.$hasRollbackHandle = function $hasRollbackHandle(
  this$static,
  tableHandle
) {
  var binding, existing, rollback, state, state$iterator;
  for (
    state$iterator = idwsf.$iterator_1(
      new idwsf.LinkedIterable_0(
        idwca.$state(this$static),
        new idwcs.ClientTableState$8methodref$getPrevious$Type(),
        false
      )
    );
    idwsf.$hasNext_1(state$iterator);

  ) {
    state = castTo(idwsf.$next_0(state$iterator), 14);
    binding =
      ((existing = idwcs.$getBinding_0(state, this$static)),
      !existing
        ? null
        : existing.isActive()
        ? castTo(existing, 55)
        : castTo(existing, 67).active);
    if (!binding) {
      continue;
    }
    rollback = idwcs.$getRollback(binding);
    if (!rollback) {
      continue;
    }
    if (idwca.$equals_1(rollback.state.handle, tableHandle)) {
      return true;
    }
  }
  return false;
};
idwca.$internalSubscribe = function $internalSubscribe(
  this$static,
  columns,
  sub_0
) {
  columns == null && (columns = idwca.$lastVisibleState(this$static).columns_0);
  this$static.nonViewportSub = sub_0;
  idwcs.$subscribe_3(idwca.$state(this$static), this$static, columns);
};
idwca.$isBlinkTable = function $isBlinkTable(this$static) {
  return this$static.isBlinkTable_0;
};
idwca.$isClosed = function $isClosed(this$static) {
  return !this$static.currentState;
};
idwca.$isRefreshing = function $isRefreshing(this$static) {
  return !idwca.$state(this$static).isStatic_0;
};
idwca.$isUncoalesced = function $isUncoalesced(this$static) {
  return this$static.size_0 == $intern_28;
};
idwca.$join = function $join(
  this$static,
  joinType,
  rightTable,
  columnsToMatch,
  columnsToAdd,
  asOfMatchRule
) {
  if (
    jl.equals_Ljava_lang_Object__Z__devirtual$(joinType, "AJ") ||
    jl.equals_Ljava_lang_Object__Z__devirtual$(joinType, "RAJ")
  ) {
    return idwca.$asOfJoin(
      this$static,
      rightTable,
      columnsToMatch,
      columnsToAdd,
      castToString(asOfMatchRule)
    );
  } else if (
    jl.equals_Ljava_lang_Object__Z__devirtual$(joinType, "CROSS_JOIN")
  ) {
    return idwca.$crossJoin(
      this$static,
      rightTable,
      columnsToMatch,
      columnsToAdd,
      null
    );
  } else if (
    jl.equals_Ljava_lang_Object__Z__devirtual$(joinType, "EXACT_JOIN")
  ) {
    return idwca.$exactJoin(
      this$static,
      rightTable,
      columnsToMatch,
      columnsToAdd
    );
  } else if (
    jl.equals_Ljava_lang_Object__Z__devirtual$(joinType, "NATURAL_JOIN")
  ) {
    return idwca.$naturalJoin(
      this$static,
      rightTable,
      columnsToMatch,
      columnsToAdd
    );
  } else {
    throw toJs(
      new jl.IllegalArgumentException_0("Unsupported join type " + joinType)
    );
  }
};
idwca.$lambda$102 = function $lambda$102(this$static, state_1, was_2) {
  var shouldRelease;
  if (!this$static.currentState) {
    return;
  }
  if (this$static.currentState != state_1) {
    return;
  }
  shouldRelease = !idwcs.$isAncestor(this$static.currentState, was_2);
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [
      "History changing state update failed; release? ",
      (jl.$clinit_Boolean(),
      shouldRelease ? ji.uncheckedCast(true) : ji.uncheckedCast(false)),
      " state: ",
      was_2,
      new idwca.LazyString(
        makeLambdaFunction(
          idwca.JsTable$33methodref$toStringMinimal$Type.prototype.valueOf_0,
          idwca.JsTable$33methodref$toStringMinimal$Type,
          [was_2]
        )
      ),
    ]
  );
  shouldRelease && idwcs.$releaseTable(was_2, this$static);
};
idwca.$lambda$13_1 = function $lambda$13_1(this$static, promise_1) {
  !this$static.currentViewportData
    ? idwca.$addEventListenerOneShot(
        this$static,
        "updated",
        makeLambdaFunction(
          idwca.JsTable$lambda$16$Type.prototype.onEvent,
          idwca.JsTable$lambda$16$Type,
          [this$static, promise_1]
        )
      )
    : idwcf.$succeed(promise_1, this$static.currentViewportData);
};
idwca.$lambda$16 = function $lambda$16(this$static, promise_1) {
  idwcf.$succeed(promise_1, this$static.currentViewportData);
};
idwca.$lambda$19 = function $lambda$19(
  this$static,
  state_1,
  columnNames_2,
  c_2,
  cts_3,
  metadata_4
) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.SelectDistinctRequest();
  request.setSourceId(idwca.$makeTableReference(state_1.handle));
  request.setResultId(idwca.$makeTicket(cts_3.handle));
  request.setColumnNamesList(columnNames_2);
  this$static.workerConnection.tableServiceClient.selectDistinct(
    request,
    metadata_4,
    makeLambdaFunction(
      idwca.JsTable$6methodref$apply$Type.prototype.onInvoke_55,
      idwca.JsTable$6methodref$apply$Type,
      [c_2]
    )
  );
};
idwca.$lambda$21 = function $lambda$21(this$static, cts_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, cts_0)
  );
};
idwca.$lambda$27 = function $lambda$27(
  this$static,
  lastGood_1,
  state_2,
  directive_3,
  callback_3,
  newState_4
) {
  var aggOp,
    batch,
    colsOp,
    columnExpr,
    drop,
    dropColumns,
    dropOp,
    requestMessage,
    stream,
    target,
    updateViewExprs;
  if (!this$static.currentState) {
    target = lastGood_1[0];
  } else {
    target = castTo(state_2(), 14);
    idwcs.$retain(target, directive_3);
    !!lastGood_1[0] &&
      lastGood_1[0] != target &&
      idwcs.$unretain(lastGood_1[0], directive_3);
    lastGood_1[0] = target;
  }
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [
      "Sending totals table fetch ",
      directive_3,
      " for ",
      target,
      "(",
      new idwca.LazyString(
        makeLambdaFunction(
          idwca.JsTable$10methodref$getHandle$Type.prototype.valueOf_0,
          idwca.JsTable$10methodref$getHandle$Type,
          [target]
        )
      ),
      "), into ",
      new idwca.LazyString(
        makeLambdaFunction(
          idwca.JsTable$11methodref$getHandle$Type.prototype.valueOf_0,
          idwca.JsTable$11methodref$getHandle$Type,
          [newState_4]
        )
      ),
      "(",
      newState_4,
      ")",
    ]
  );
  requestMessage = idwca.$buildRequest(
    directive_3,
    idwca.$lastVisibleState(this$static).columns_0
  );
  updateViewExprs = directive_3.customColumns_0;
  dropColumns = directive_3.dropColumns_0;
  requestMessage.setSourceId(idwca.$makeTableReference(target.handle));
  requestMessage.setResultId(idwca.$makeTicket(newState_4.handle));
  if (updateViewExprs.length != 0) {
    columnExpr =
      new $wnd.dhinternal.io.deephaven.proto.table_pb.SelectOrUpdateRequest();
    columnExpr.setResultId(requestMessage.getResultId());
    requestMessage.setResultId();
    columnExpr.setColumnSpecsList(updateViewExprs);
    columnExpr.setSourceId(
      new $wnd.dhinternal.io.deephaven.proto.table_pb.TableReference()
    );
    columnExpr.getSourceId().setBatchOffset(0);
    batch = new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest();
    aggOp =
      new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
    aggOp.setAggregate(requestMessage);
    colsOp =
      new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
    colsOp.setUpdateView(columnExpr);
    batch.addOps(aggOp);
    batch.addOps(colsOp);
    if (dropColumns.length != 0) {
      drop =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.DropColumnsRequest();
      drop.setColumnNamesList(dropColumns);
      drop.setResultId(columnExpr.getResultId());
      columnExpr.setResultId();
      drop.setSourceId(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.TableReference()
      );
      drop.getSourceId().setBatchOffset(1);
      dropOp =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
      dropOp.setDropColumns(drop);
      batch.addOps(dropOp);
    }
    stream = castToJsObject(
      this$static.workerConnection.tableServiceClient.batch(
        batch,
        this$static.workerConnection.metadata_0
      )
    );
    stream.on(
      "data",
      castToFunction(
        makeLambdaFunction(
          idwca.JsTable$lambda$30$Type.prototype.apply_3,
          idwca.JsTable$lambda$30$Type,
          [callback_3]
        )
      )
    );
    stream.on(
      "end",
      castToFunction(
        makeLambdaFunction(
          idwca.JsTable$lambda$31$Type.prototype.apply_3,
          idwca.JsTable$lambda$31$Type,
          [callback_3]
        )
      )
    );
  } else {
    this$static.workerConnection.tableServiceClient.aggregate(
      requestMessage,
      this$static.workerConnection.metadata_0,
      makeLambdaFunction(
        idwca.JsTable$12methodref$apply$Type.prototype.onInvoke_41,
        idwca.JsTable$12methodref$apply$Type,
        [callback_3]
      )
    );
  }
};
idwca.$lambda$33 = function $lambda$33(
  this$static,
  downsample_1,
  totalsFactory_2,
  summary_3,
  result_4,
  lastGood_5,
  directive_6,
  ready_6
) {
  var remover, totalsTable, wrapped;
  wrapped = new idwca.JsTable_0(this$static.workerConnection, ready_6);
  remover = idwca.$addEventListener(
    this$static,
    "statechanged-internal",
    makeLambdaFunction(
      idwca.JsTable$lambda$34$Type.prototype.onEvent,
      idwca.JsTable$lambda$34$Type,
      [
        this$static,
        downsample_1,
        wrapped,
        totalsFactory_2,
        summary_3,
        ready_6,
        result_4,
      ]
    )
  );
  ju.$add(
    wrapped.onClosed,
    makeLambdaFunction(
      idwca.JsTable$14methodref$remove$Type.prototype.run,
      idwca.JsTable$14methodref$remove$Type,
      [remover]
    )
  );
  ju.$add(
    wrapped.onClosed,
    makeLambdaFunction(
      idwca.JsTable$lambda$40$Type.prototype.run,
      idwca.JsTable$lambda$40$Type,
      [lastGood_5, directive_6]
    )
  );
  ju.$add(
    this$static.onClosed,
    makeLambdaFunction(
      idwca.JsTable$15methodref$remove$Type.prototype.run,
      idwca.JsTable$15methodref$remove$Type,
      [remover]
    )
  );
  totalsTable = new idwca.JsTotalsTable(
    wrapped,
    idwca.$serialize(directive_6),
    directive_6.groupBy
  );
  idwcf.$succeed(result_4, totalsTable);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [result_4]
    )
  );
};
idwca.$lambda$34 = function $lambda$34(
  this$static,
  downsample_1,
  wrapped_2,
  totalsFactory_3,
  summary_4,
  ready_5,
  result_6
) {
  if (downsample_1[0]) {
    downsample_1[0] = false;
    idwcf.runLater(
      makeLambdaFunction(
        idwca.JsTable$lambda$35$Type.prototype.run,
        idwca.JsTable$lambda$35$Type,
        [
          this$static,
          wrapped_2,
          downsample_1,
          totalsFactory_3,
          summary_4,
          ready_5,
          result_6,
        ]
      )
    );
  }
};
idwca.$lambda$35 = function $lambda$35(
  this$static,
  wrapped_1,
  downsample_2,
  totalsFactory_3,
  summary_4,
  ready_5,
  result_6
) {
  var existing, needsMutation, nextState, promise, restoreVp;
  if (!wrapped_1.currentState) {
    return;
  }
  downsample_2[0] = true;
  existing = idwca.$state(wrapped_1);
  nextState = idwca.$newState_0(
    this$static.workerConnection,
    totalsFactory_3,
    summary_4
  );
  idwca.$setState(wrapped_1, nextState);
  needsMutation = !idwcab2.$isEqual_0(existing, ready_5);
  restoreVp = makeLambdaFunction(
    idwca.JsTable$lambda$36$Type.prototype.onInvoke_5,
    idwca.JsTable$lambda$36$Type,
    [result_6]
  );
  promise = idwcs.$refetch_2(
    nextState,
    this$static.workerConnection.metadata_0
  );
  needsMutation
    ? idwca
        .$batch(
          wrapped_1,
          makeLambdaFunction(
            idwca.JsTable$lambda$38$Type.prototype.apply_3,
            idwca.JsTable$lambda$38$Type,
            [existing]
          )
        )
        .then(restoreVp)
    : promise.then(restoreVp);
};
idwca.$lambda$42 = function $lambda$42(this$static) {
  var unfiltered;
  unfiltered = idwca.$state(this$static);
  while (new ju.ArrayList_1(unfiltered.filters).array.length != 0) {
    unfiltered = unfiltered.source_0;
    if (!unfiltered) {
      debugger;
      throw toJs(
        new jl.AssertionError_0("no table is unfiltered, even base table!")
      );
    }
  }
  return unfiltered;
};
idwca.$lambda$43 = function $lambda$43(
  this$static,
  config_1,
  rollupTicket_2,
  c_2
) {
  var request;
  request = idwcat.$buildRequest_1(
    config_1,
    idwca.$lastVisibleState(this$static).columns_0
  );
  request.setSourceTableId(idwca.$makeTicket(idwca.$state(this$static).handle));
  request.setResultRollupTableId(rollupTicket_2);
  this$static.workerConnection.hierarchicalTableServiceClient.rollup(
    request,
    this$static.workerConnection.metadata_0,
    makeLambdaFunction(
      idwca.JsTable$16methodref$apply$Type.prototype.onInvoke_24,
      idwca.JsTable$16methodref$apply$Type,
      [c_2]
    )
  );
};
idwca.$lambda$45 = function $lambda$45(this$static, widget_1) {
  return $wnd.Promise.resolve(
    new idwcat.JsTreeTable(this$static.workerConnection, widget_1)
  );
};
idwca.$lambda$46 = function $lambda$46(
  this$static,
  treeTicket_1,
  config_2,
  c_2
) {
  var requestMessage;
  requestMessage =
    new $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb.TreeRequest();
  requestMessage.setSourceTableId(
    idwca.$makeTicket(idwca.$state(this$static).handle)
  );
  requestMessage.setResultTreeTableId(treeTicket_1);
  requestMessage.setIdentifierColumn(config_2.idColumn);
  requestMessage.setParentIdentifierColumn(config_2.parentColumn);
  requestMessage.setPromoteOrphans(config_2.promoteOrphansToRoot);
  this$static.workerConnection.hierarchicalTableServiceClient.tree(
    requestMessage,
    this$static.workerConnection.metadata_0,
    makeLambdaFunction(
      idwca.JsTable$17methodref$apply$Type.prototype.onInvoke_25,
      idwca.JsTable$17methodref$apply$Type,
      [c_2]
    )
  );
};
idwca.$lambda$48 = function $lambda$48(this$static, widget_1) {
  return $wnd.Promise.resolve(
    new idwcat.JsTreeTable(this$static.workerConnection, widget_1)
  );
};
idwca.$lambda$49 = function $lambda$49(this$static, c_0, state_1, metadata_2) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.SnapshotTableRequest();
  request.setSourceId(
    idwca.$makeTableReference(idwca.$state(this$static).handle)
  );
  request.setResultId(idwca.$makeTicket(state_1.handle));
  this$static.workerConnection.tableServiceClient.snapshot(
    request,
    metadata_2,
    makeLambdaFunction(
      idwca.JsTable$18methodref$apply$Type.prototype.onInvoke_56,
      idwca.JsTable$18methodref$apply$Type,
      [c_0]
    )
  );
};
idwca.$lambda$5_1 = function $lambda$5_1(this$static, cts_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, cts_0)
  );
};
idwca.$lambda$51 = function $lambda$51(this$static, state_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, state_0)
  );
};
idwca.$lambda$53 = function $lambda$53(
  this$static,
  baseTable_1,
  realDoInitialSnapshot_2,
  realStampColumns_3,
  c_3,
  state_4,
  metadata_5
) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.SnapshotWhenTableRequest();
  request.setBaseId(
    idwca.$makeTableReference(idwca.$state(baseTable_1).handle)
  );
  request.setTriggerId(
    idwca.$makeTableReference(idwca.$state(this$static).handle)
  );
  request.setResultId(idwca.$makeTicket(state_4.handle));
  request.setInitial(realDoInitialSnapshot_2);
  request.setStampColumnsList(realStampColumns_3);
  this$static.workerConnection.tableServiceClient.snapshotWhen(
    request,
    metadata_5,
    makeLambdaFunction(
      idwca.JsTable$20methodref$apply$Type.prototype.onInvoke_57,
      idwca.JsTable$20methodref$apply$Type,
      [c_3]
    )
  );
};
idwca.$lambda$55 = function $lambda$55(this$static, state_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, state_0)
  );
};
idwca.$lambda$56 = function $lambda$56(
  this$static,
  rightTable_1,
  columnsToMatch_2,
  columnsToAdd_3,
  asOfMatchRule_4,
  c_4,
  state_5,
  metadata_6
) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.AsOfJoinTablesRequest();
  request.setLeftId(
    idwca.$makeTableReference(idwca.$state(this$static).handle)
  );
  request.setRightId(idwca.$makeTableReference(rightTable_1.state_4().handle));
  request.setResultId(idwca.$makeTicket(state_5.handle));
  request.setColumnsToMatchList(columnsToMatch_2);
  request.setColumnsToAddList(columnsToAdd_3);
  asOfMatchRule_4 != null &&
    request.setAsOfMatchRule(
      jb.$asDouble(
        jb.$getAsAny(
          $wnd.dhinternal.io.deephaven.proto.table_pb.AsOfJoinTablesRequest
            .MatchRule,
          asOfMatchRule_4
        )
      )
    );
  this$static.workerConnection.tableServiceClient.asOfJoinTables(
    request,
    metadata_6,
    makeLambdaFunction(
      idwca.JsTable$21methodref$apply$Type.prototype.onInvoke_43,
      idwca.JsTable$21methodref$apply$Type,
      [c_4]
    )
  );
};
idwca.$lambda$58 = function $lambda$58(this$static, state_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, state_0)
  );
};
idwca.$lambda$59 = function $lambda$59(
  this$static,
  rightTable_1,
  columnsToMatch_2,
  columnsToAdd_3,
  reserve_bits_4,
  c_4,
  state_5,
  metadata_6
) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.CrossJoinTablesRequest();
  request.setLeftId(
    idwca.$makeTableReference(idwca.$state(this$static).handle)
  );
  request.setRightId(idwca.$makeTableReference(rightTable_1.state_4().handle));
  request.setResultId(idwca.$makeTicket(state_5.handle));
  request.setColumnsToMatchList(columnsToMatch_2);
  request.setColumnsToAddList(columnsToAdd_3);
  reserve_bits_4 != null &&
    request.setReserveBits(
      ji.unsafeCastToDouble(
        (ji.checkCriticalNotNull(reserve_bits_4), reserve_bits_4)
      )
    );
  this$static.workerConnection.tableServiceClient.crossJoinTables(
    request,
    metadata_6,
    makeLambdaFunction(
      idwca.JsTable$22methodref$apply$Type.prototype.onInvoke_45,
      idwca.JsTable$22methodref$apply$Type,
      [c_4]
    )
  );
};
idwca.$lambda$61 = function $lambda$61(this$static, state_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, state_0)
  );
};
idwca.$lambda$62 = function $lambda$62(
  this$static,
  rightTable_1,
  columnsToMatch_2,
  columnsToAdd_3,
  c_3,
  state_4,
  metadata_5
) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.ExactJoinTablesRequest();
  request.setLeftId(
    idwca.$makeTableReference(idwca.$state(this$static).handle)
  );
  request.setRightId(idwca.$makeTableReference(rightTable_1.state_4().handle));
  request.setResultId(idwca.$makeTicket(state_4.handle));
  request.setColumnsToMatchList(columnsToMatch_2);
  request.setColumnsToAddList(columnsToAdd_3);
  this$static.workerConnection.tableServiceClient.exactJoinTables(
    request,
    metadata_5,
    makeLambdaFunction(
      idwca.JsTable$23methodref$apply$Type.prototype.onInvoke_48,
      idwca.JsTable$23methodref$apply$Type,
      [c_3]
    )
  );
};
idwca.$lambda$64 = function $lambda$64(this$static, state_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, state_0)
  );
};
idwca.$lambda$65 = function $lambda$65(
  this$static,
  rightTable_1,
  columnsToMatch_2,
  columnsToAdd_3,
  c_3,
  state_4,
  metadata_5
) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.NaturalJoinTablesRequest();
  request.setLeftId(
    idwca.$makeTableReference(idwca.$state(this$static).handle)
  );
  request.setRightId(idwca.$makeTableReference(rightTable_1.state_4().handle));
  request.setResultId(idwca.$makeTicket(state_4.handle));
  request.setColumnsToMatchList(columnsToMatch_2);
  request.setColumnsToAddList(columnsToAdd_3);
  this$static.workerConnection.tableServiceClient.naturalJoinTables(
    request,
    metadata_5,
    makeLambdaFunction(
      idwca.JsTable$24methodref$apply$Type.prototype.onInvoke_52,
      idwca.JsTable$24methodref$apply$Type,
      [c_3]
    )
  );
};
idwca.$lambda$67 = function $lambda$67(this$static, state_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, state_0)
  );
};
idwca.$lambda$68 = function $lambda$68(
  this$static,
  partitionedTableTicket_1,
  actualKeys_2,
  dropKeys_3,
  c_3
) {
  var partitionBy;
  partitionBy =
    new $wnd.dhinternal.io.deephaven.proto.partitionedtable_pb.PartitionByRequest();
  partitionBy.setTableId(idwca.$makeTicket(idwca.$state(this$static).handle));
  partitionBy.setResultId(partitionedTableTicket_1);
  partitionBy.setKeyColumnNamesList(actualKeys_2);
  dropKeys_3 != null &&
    partitionBy.setDropKeys(
      ji.unsafeCastToBoolean((ji.checkCriticalNotNull(dropKeys_3), dropKeys_3))
    );
  this$static.workerConnection.partitionedTableServiceClient.partitionBy(
    partitionBy,
    this$static.workerConnection.metadata_0,
    makeLambdaFunction(
      idwca.JsTable$25methodref$apply$Type.prototype.onInvoke_32,
      idwca.JsTable$25methodref$apply$Type,
      [c_3]
    )
  );
};
idwca.$lambda$70 = function $lambda$70(this$static, widget_0) {
  return $wnd.Promise.resolve(
    new idwca.JsPartitionedTable(this$static.workerConnection, widget_0)
  );
};
idwca.$lambda$72 = function $lambda$72(
  this$static,
  column_1,
  c_1,
  state_2,
  metadata_3
) {
  var req;
  req =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.ColumnStatisticsRequest();
  req.setColumnName(column_1.name_0);
  req.setSourceId(idwca.$makeTableReference(idwca.$state(this$static).handle));
  req.setResultId(idwca.$makeTicket(state_2.handle));
  this$static.workerConnection.tableServiceClient.computeColumnStatistics(
    req,
    metadata_3,
    makeLambdaFunction(
      idwca.JsTable$26methodref$apply$Type.prototype.onInvoke_44,
      idwca.JsTable$26methodref$apply$Type,
      [c_1]
    )
  );
};
idwca.$lambda$74 = function $lambda$74(this$static, toRelease_1, state_1) {
  var dropCols, table;
  dropCols = new $wnd.Array();
  jus.$anyMatch_0(
    ju.stream_4(state_1.columns_0),
    new idwca.JsTable$lambda$75$Type()
  ) && dropCols.push("UNIQUE_KEYS");
  jus.$anyMatch_0(
    ju.stream_4(state_1.columns_0),
    new idwca.JsTable$lambda$76$Type()
  ) && dropCols.push("UNIQUE_COUNTS");
  if (dropCols.length > 0) {
    ju.$add(
      toRelease_1,
      new idwca.JsTable$lambda$77$Type(this$static, state_1)
    );
    return idwcs
      .$refetch_2(
        idwca.$newState_0(
          this$static.workerConnection,
          new idwca.JsTable$lambda$78$Type(this$static, dropCols, state_1),
          "drop unreadable stats columns"
        ),
        this$static.workerConnection.metadata_0
      )
      .then(
        makeLambdaFunction(
          idwca.JsTable$lambda$80$Type.prototype.onInvoke_5,
          idwca.JsTable$lambda$80$Type,
          [this$static, toRelease_1]
        )
      );
  }
  table = new idwca.JsTable_0(this$static.workerConnection, state_1);
  ju.$add(toRelease_1, new idwca.JsTable$29methodref$close$Type(table));
  idwca.$setViewport(table, 0, 0, null, null);
  return idwca.$getViewportData(table);
};
idwca.$lambda$77 = function $lambda$77(this$static, state_1) {
  idwca.$releaseTicket(
    this$static.workerConnection,
    idwca.$makeTicket(state_1.handle)
  );
};
idwca.$lambda$78 = function $lambda$78(
  this$static,
  dropCols_1,
  state_2,
  c2_2,
  state2_3,
  metadata2_4
) {
  var drop;
  drop = new $wnd.dhinternal.io.deephaven.proto.table_pb.DropColumnsRequest();
  drop.setColumnNamesList(dropCols_1);
  drop.setSourceId(idwca.$makeTableReference(state_2.handle));
  drop.setResultId(idwca.$makeTicket(state2_3.handle));
  this$static.workerConnection.tableServiceClient.dropColumns(
    drop,
    metadata2_4,
    makeLambdaFunction(
      idwca.JsTable$27methodref$apply$Type.prototype.onInvoke_46,
      idwca.JsTable$27methodref$apply$Type,
      [c2_2]
    )
  );
};
idwca.$lambda$80 = function $lambda$80(this$static, toRelease_1, state2_1) {
  var table;
  table = new idwca.JsTable_0(this$static.workerConnection, state2_1);
  ju.$add(toRelease_1, new idwca.JsTable$28methodref$close$Type(table));
  idwca.$setViewport(table, 0, 0, null, null);
  return idwca.$getViewportData(table);
};
idwca.$lambda$84 = function $lambda$84(this$static, seekRowRequest_1, c_1) {
  return this$static.workerConnection.tableServiceClient.seekRow(
    seekRowRequest_1,
    this$static.workerConnection.metadata_0,
    makeLambdaFunction(
      idwca.JsTable$30methodref$apply$Type.prototype.onInvoke_54,
      idwca.JsTable$30methodref$apply$Type,
      [c_1]
    )
  );
};
idwca.$lambda$87 = function $lambda$87(this$static) {
  var existing;
  idwca.$fireEvent_3(this$static, "reconnect", jb.emptyObjectLiteral());
  idwcs.$maybeReviveSubscription_0(
    ((existing = idwcs.$getBinding_0(this$static.currentState, this$static)),
    !existing
      ? null
      : existing.isActive()
      ? castTo(existing, 55)
      : castTo(existing, 67).active)
  );
};
idwca.$lambda$88 = function $lambda$88(
  this$static,
  pixelCount_1,
  zoomRange_2,
  xCol_3,
  yCols_4,
  c_4,
  state_5
) {
  var downsampleRequest, zoom;
  downsampleRequest =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.RunChartDownsampleRequest();
  downsampleRequest.setPixelCount(pixelCount_1);
  if (zoomRange_2 != null) {
    zoom =
      new $wnd.dhinternal.io.deephaven.proto.table_pb.RunChartDownsampleRequest.ZoomRange();
    zoom.setMinDateNanos("" + toString_6(zoomRange_2[0].value_0));
    zoom.setMaxDateNanos("" + toString_6(zoomRange_2[1].value_0));
    downsampleRequest.setZoomRange(zoom);
  }
  downsampleRequest.setXColumnName(xCol_3);
  downsampleRequest.setYColumnNamesList(yCols_4);
  downsampleRequest.setSourceId(
    idwca.$makeTableReference(idwca.$state(this$static).handle)
  );
  downsampleRequest.setResultId(idwca.$makeTicket(state_5.handle));
  this$static.workerConnection.tableServiceClient.runChartDownsample(
    downsampleRequest,
    this$static.workerConnection.metadata_0,
    makeLambdaFunction(
      idwca.JsTable$31methodref$apply$Type.prototype.onInvoke_53,
      idwca.JsTable$31methodref$apply$Type,
      [c_4]
    )
  );
};
idwca.$lambda$90 = function $lambda$90(this$static, state_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.workerConnection, state_0)
  );
};
idwca.$lambda$93 = function $lambda$93(this$static, item_0) {
  return (
    jl.$clinit_Boolean(),
    ju.$get_20(this$static.debounce.columns_0, item_0.index_0)
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
idwca.$lambda$94 = function $lambda$94(this$static, current_1, updates_2) {
  var addedEvent,
    entry,
    event_0,
    index_0,
    index$iterator,
    index$iterator0,
    index$iterator1,
    mergeResults,
    outerIter,
    outerIter0,
    outerIter1,
    vpd;
  if (current_1 != idwca.$state(this$static)) {
    return;
  }
  if (this$static.nonViewportSub) {
    idwcas3.$handleDelta_0(this$static.nonViewportSub, updates_2);
    return;
  }
  vpd = this$static.currentViewportData;
  if (!vpd) {
    return;
  }
  mergeResults = idwcas3.$merge(vpd, updates_2);
  if (
    mergeResults.added_0.map_0.size() == 0 &&
    mergeResults.modified_0.map_0.size() == 0 &&
    mergeResults.removed_0.map_0.size() == 0
  ) {
    return;
  }
  event_0 = jb.emptyObjectLiteral();
  event_0.detail = vpd;
  idwca.$fireEvent_0(
    this$static,
    "updated",
    new $wnd.CustomEvent("updated", event_0)
  );
  for (
    index$iterator0 =
      ((outerIter0 = new ju.AbstractMap$1(mergeResults.added_0.map_0).this$01
        .entrySet_0()
        .iterator_0()),
      new ju.AbstractMap$1$1(outerIter0));
    index$iterator0.val$outerIter2.hasNext_1();

  ) {
    index_0 =
      ((entry = castTo(index$iterator0.val$outerIter2.next_1(), 27)),
      castTo(entry.getKey(), 98));
    addedEvent = jb.emptyObjectLiteral();
    addedEvent.detail = jb.of_7(
      "row",
      castTo(jb.$getAt(idwcas3.$getRows_0(vpd), index_0.value_0), 89),
      "index",
      index_0.value_0
    );
    idwca.$fireEvent_0(
      this$static,
      "rowadded",
      new $wnd.CustomEvent("rowadded", addedEvent)
    );
  }
  for (
    index$iterator1 =
      ((outerIter1 = new ju.AbstractMap$1(mergeResults.modified_0.map_0).this$01
        .entrySet_0()
        .iterator_0()),
      new ju.AbstractMap$1$1(outerIter1));
    index$iterator1.val$outerIter2.hasNext_1();

  ) {
    index_0 =
      ((entry = castTo(index$iterator1.val$outerIter2.next_1(), 27)),
      castTo(entry.getKey(), 98));
    addedEvent = jb.emptyObjectLiteral();
    addedEvent.detail = jb.of_7(
      "row",
      castTo(jb.$getAt(idwcas3.$getRows_0(vpd), index_0.value_0), 89),
      "index",
      index_0.value_0
    );
    idwca.$fireEvent_0(
      this$static,
      "rowupdated",
      new $wnd.CustomEvent("rowupdated", addedEvent)
    );
  }
  for (
    index$iterator =
      ((outerIter = new ju.AbstractMap$1(mergeResults.removed_0.map_0).this$01
        .entrySet_0()
        .iterator_0()),
      new ju.AbstractMap$1$1(outerIter));
    index$iterator.val$outerIter2.hasNext_1();

  ) {
    index_0 =
      ((entry = castTo(index$iterator.val$outerIter2.next_1(), 27)),
      castTo(entry.getKey(), 98));
    addedEvent = jb.emptyObjectLiteral();
    addedEvent.detail = jb.of_7(
      "row",
      castTo(jb.$getAt(idwcas3.$getRows_0(vpd), index_0.value_0), 89),
      "index",
      index_0.value_0
    );
    idwca.$fireEvent_0(
      this$static,
      "rowremoved",
      new $wnd.CustomEvent("rowremoved", addedEvent)
    );
  }
};
idwca.$lambda$95 = function $lambda$95(this$static, state_1) {
  var allColumns, c, columns, data_0, dataColumns, existing, i, updatedEvent;
  if (state_1 != idwca.$state(this$static)) {
    return;
  }
  columns = ((existing = idwcs.$getBinding_0(
    this$static.currentState,
    this$static
  )),
  !existing
    ? null
    : existing.isActive()
    ? castTo(existing, 55)
    : castTo(existing, 67).active).columns_0;
  allColumns = state_1.columns_0;
  columns == null && (columns = allColumns);
  dataColumns = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    allColumns.length,
    5,
    1
  );
  for (i = 0; i < columns.length; i++) {
    c = castTo(jb.$getAt(columns, i), 21);
    dataColumns[c.index_0] = idwcf.newArray_1(c.type_0);
    !!c.formatStringColumnIndex &&
      (dataColumns[c.formatStringColumnIndex.value_0] =
        idwcf.newArray_1("java.lang.String"));
    !!c.styleColumnIndex &&
      (dataColumns[c.styleColumnIndex.value_0] = idwcf.newArray_1("long"));
  }
  !!this$static.currentState.rowFormatColumn &&
    (dataColumns[this$static.currentState.rowFormatColumn.index_0] =
      idwcf.newArray_1("long"));
  data_0 = new idwcas3.ViewportData(
    new idwsd.RangeSet(),
    dataColumns,
    columns,
    !this$static.currentState.rowFormatColumn
      ? -1
      : this$static.currentState.rowFormatColumn.index_0,
    0
  );
  this$static.currentViewportData = data_0;
  updatedEvent = jb.emptyObjectLiteral();
  updatedEvent.detail = data_0;
  idwca.$fireEvent_0(
    this$static,
    "updated",
    new $wnd.CustomEvent("updated", updatedEvent)
  );
};
idwca.$lambda$96 = function $lambda$96(this$static, state_1, s_1) {
  if (state_1 == this$static.currentState) {
    this$static.lastVisibleState = state_1;
    this$static.hasInputTable_0 = ju.$contains_0(
      s_1.tableDef.attributes.remainingAttributeKeys,
      "InputTable"
    );
    this$static.isBlinkTable_0 = jl.$equals_12(
      "true",
      ju.$getStringValue(s_1.tableDef.attributes.map_0, "BlinkTable")
    );
    idwcf.runLater(
      makeLambdaFunction(
        idwca.JsTable$lambda$97$Type.prototype.run,
        idwca.JsTable$lambda$97$Type,
        [this$static, state_1]
      )
    );
  }
};
idwca.$lambda$97 = function $lambda$97(this$static, state_1) {
  state_1 == idwca.$state(this$static) &&
    idwca.$setSize(this$static, toDouble_0(state_1.size_0));
};
idwca.$lambda$98 = function $lambda$98(this$static, was_1) {
  var existingSubscription;
  if (
    !!this$static.currentState &&
    !!was_1 &&
    was_1 != idwca.$state(this$static)
  ) {
    existingSubscription = castTo(
      ju.$remove_0(this$static.subscriptions, was_1.handle),
      117
    );
    if (
      !!existingSubscription &&
      idwcas3.$getStatus(existingSubscription) !=
        (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.DONE)
    ) {
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "closing old viewport",
          idwca.$state(this$static),
          existingSubscription.originalState,
        ]
      );
      idwcas3.$internalClose(existingSubscription);
    }
  }
};
idwca.$lambda$99 = function $lambda$99(this$static, state_1, was_2) {
  var shouldRelease;
  if (!this$static.currentState) {
    return;
  }
  if (this$static.currentState != state_1) {
    return;
  }
  shouldRelease = !idwcs.$isAncestor(idwca.$state(this$static), was_2);
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [
      "History changing state update complete; release? ",
      (jl.$clinit_Boolean(),
      shouldRelease ? ji.uncheckedCast(true) : ji.uncheckedCast(false)),
      " state: ",
      was_2,
      new idwca.LazyString(
        makeLambdaFunction(
          idwca.JsTable$32methodref$toStringMinimal$Type.prototype.valueOf_0,
          idwca.JsTable$32methodref$toStringMinimal$Type,
          [was_2]
        )
      ),
    ]
  );
  shouldRelease && idwcs.$releaseTable(was_2, this$static);
};
idwca.$lastVisibleState = function $lastVisibleState(this$static) {
  var binding, existing;
  binding =
    ((existing = idwcs.$getBinding_0(idwca.$state(this$static), this$static)),
    !existing
      ? null
      : existing.isActive()
      ? castTo(existing, 55)
      : castTo(existing, 67).active);
  while (binding) {
    if (idwcs.$isRunning(binding.state)) {
      return binding.state;
    }
    binding = idwcs.$getRollback(binding);
  }
  if (!this$static.lastVisibleState) {
    debugger;
    throw toJs(new jl.AssertionError_0("Table used before running"));
  }
  return this$static.lastVisibleState;
};
idwca.$maybeReviveSubscription = function $maybeReviveSubscription(
  this$static
) {
  var existing;
  idwcs.$maybeReviveSubscription_0(
    ((existing = idwcs.$getBinding_0(this$static.currentState, this$static)),
    !existing
      ? null
      : existing.isActive()
      ? castTo(existing, 55)
      : castTo(existing, 67).active)
  );
};
idwca.$naturalJoin = function $naturalJoin(
  this$static,
  rightTable,
  columnsToMatch,
  columnsToAdd
) {
  if (rightTable.state_4().connection != this$static.workerConnection) {
    throw toJs(
      new jl.IllegalStateException_0(
        "Table argument passed to join is not from the same worker as current table"
      )
    );
  }
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this$static.workerConnection,
        new idwca.JsTable$lambda$65$Type(
          this$static,
          rightTable,
          columnsToMatch,
          columnsToAdd
        ),
        "naturalJoin(" +
          rightTable +
          ", " +
          columnsToMatch +
          ", " +
          columnsToAdd +
          ")"
      ),
      this$static.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$67$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$67$Type,
        [this$static]
      )
    );
};
idwca.$objectToLiteral = function $objectToLiteral(valueType, value_0) {
  var literal;
  literal = new $wnd.dhinternal.io.deephaven.proto.table_pb.Literal();
  if (instanceOf(value_0, 91)) {
    literal.setNanoTimeValue("" + toString_6(castTo(value_0, 91).value_0));
  } else if (instanceOf(value_0, 39)) {
    literal.setLongValue("" + toString_6(castTo(value_0, 39).value_0));
  } else if (jl.$equals_12(typeof value_0, "number")) {
    literal.setDoubleValue(
      (jb.checkCriticalType_0(typeof value_0 == "number"), jb.asDouble(value_0))
    );
  } else if (jl.$equals_12(typeof value_0, "boolean")) {
    literal.setBoolValue(jl.$booleanValue(castToBoolean(value_0)));
  } else {
    switch (valueType) {
      case "String":
        literal.setStringValue(toString_7(value_0));
        break;
      case "Number":
        literal.setDoubleValue(
          jl.__parseAndValidateDouble(toString_7(value_0))
        );
        break;
      case "Long":
        literal.setLongValue(toString_7(value_0));
        break;
      case "Datetime":
        literal.setNanoTimeValue(toString_7(value_0));
        break;
      case "Boolean":
        literal.setBoolValue(
          (jl.$clinit_Boolean(),
          jl.$equalsIgnoreCase("true", toString_7(value_0)))
        );
        break;
      default:
        throw toJs(
          new jl.UnsupportedOperationException_0(
            "Invalid value type for seekRow: " + valueType
          )
        );
    }
  }
  return literal;
};
idwca.$partitionBy = function $partitionBy(this$static, keys_0, dropKeys) {
  var actualKeys,
    fetchPromise,
    partitionByPromise,
    partitionedTableTicket,
    typedTicket;
  if (instanceOfString(keys_0)) {
    actualKeys = stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      [castToString(keys_0)]
    );
  } else if ($wnd.Array.isArray(keys_0)) {
    actualKeys = castTo(
      ju.$toArray_3(
        (jb.checkCriticalType_0(keys_0 == null || jb.hasLength(keys_0)),
        jb.$asList(keys_0)),
        initUnidimensionalArray(
          cggl.Ljava_lang_String_2_classLit,
          $intern_8,
          2,
          0,
          6,
          1
        )
      ),
      12
    );
  } else {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Can't use keys argument as either a string or array of strings"
      )
    );
  }
  idwca.$findColumns(this$static, actualKeys);
  partitionedTableTicket = idwca.$newTicket(
    this$static.workerConnection.config
  );
  partitionByPromise = new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [
        new idwca.JsTable$lambda$68$Type(
          this$static,
          partitionedTableTicket,
          actualKeys,
          dropKeys
        ),
      ]
    )
  );
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setType("PartitionedTable");
  typedTicket.setTicket(partitionedTableTicket);
  fetchPromise = idwcaw
    .$refetch_0(new idwcaw.JsWidget(this$static.workerConnection, typedTicket))
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$70$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$70$Type,
        [this$static]
      )
    );
  return partitionByPromise.then(
    makeLambdaFunction(
      idwca.JsTable$lambda$71$Type.prototype.onInvoke_5,
      idwca.JsTable$lambda$71$Type,
      [fetchPromise]
    )
  );
};
idwca.$processSnapshot = function $processSnapshot(this$static) {
  var addedEvent, data_0, i, updatedEvent, viewportColumns;
  try {
    if (!this$static.debounce) {
      return;
    }
    if (this$static.debounce.state != this$static.currentState) {
      return;
    }
    if (!this$static.currentState) {
      return;
    }
    viewportColumns = idwca
      .$lastVisibleState(this$static)
      .columns_0.filter(
        makeLambdaFunction(
          idwca.JsTable$lambda$93$Type.prototype.onInvoke,
          idwca.JsTable$lambda$93$Type,
          [this$static]
        )
      );
    data_0 = new idwcas3.ViewportData(
      this$static.debounce.includedRows,
      this$static.debounce.dataColumns,
      viewportColumns,
      !this$static.currentState.rowFormatColumn
        ? -1
        : this$static.currentState.rowFormatColumn.index_0,
      this$static.debounce.maxRows
    );
    this$static.currentViewportData = data_0;
    updatedEvent = jb.emptyObjectLiteral();
    updatedEvent.detail = data_0;
    idwca.$fireEvent_0(
      this$static,
      "updated",
      new $wnd.CustomEvent("updated", updatedEvent)
    );
    for (i = 0; i < idwcas3.$getRows_0(data_0).length; i++) {
      addedEvent = jb.emptyObjectLiteral();
      addedEvent.detail = jb.of_7(
        "row",
        castTo(jb.$getAt(idwcas3.$getRows_0(data_0), i), 89),
        "index",
        i
      );
      idwca.$fireEvent_0(
        this$static,
        "rowadded",
        new $wnd.CustomEvent("rowadded", addedEvent)
      );
    }
  } finally {
    this$static.debounce = null;
  }
};
idwca.$refreshViewport = function $refreshViewport(this$static, state, vp) {
  if (idwca.$state(this$static) != state) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Called refreshViewport with wrong state (" +
          state +
          " instead of " +
          idwca.$state(this$static) +
          ")"
      )
    );
  }
  if (
    state.resolution !=
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RUNNING_0)
  ) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Do not call refreshViewport for a state that is not running! (" +
          state +
          ")"
      )
    );
  }
  this$static.currentViewportData = null;
  idwca.$scheduleCheck(this$static.workerConnection, state);
  neq(state.size_0, -1) &&
    lte(state.size_0, vp.rows_0.sortedRanges[0].first_0) &&
    idwcf.runLater(
      makeLambdaFunction(
        idwca.JsTable$lambda$95$Type.prototype.run,
        idwca.JsTable$lambda$95$Type,
        [this$static, state]
      )
    );
};
idwca.$revive = function $revive(this$static, state) {
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [
      "Revive!",
      (jl.$clinit_Boolean(),
      state == idwca.$state(this$static)
        ? ji.uncheckedCast(true)
        : ji.uncheckedCast(false)),
      this$static,
    ]
  );
  if (state == idwca.$state(this$static)) {
    this$static.suppress = false;
    idwcf.runLater(
      makeLambdaFunction(
        idwca.JsTable$lambda$87$Type.prototype.run,
        idwca.JsTable$lambda$87$Type,
        [this$static]
      )
    );
  }
};
idwca.$selectDistinct = function $selectDistinct(this$static, columns) {
  var columnNames, distinct, state;
  state = idwca.$state(this$static);
  columnNames = castTo(
    jus.$toArray_6(
      jus.$map_0(
        new jus.StreamImpl(null, ju.spliterator_5(columns, columns.length)),
        new idwca.JsTable$4methodref$getName$Type()
      ),
      new idwca.JsTable$5methodref$lambda$3$Type()
    ),
    12
  );
  distinct = idwca.$newState_0(
    this$static.workerConnection,
    new idwca.JsTable$lambda$19$Type(this$static, state, columnNames),
    "selectDistinct " + ju.toString_62(columnNames)
  );
  return idwcs
    .$refetch_2(distinct, this$static.workerConnection.metadata_0)
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$21$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$21$Type,
        [this$static]
      )
    );
};
idwca.$setInternalViewport = function $setInternalViewport(
  this$static,
  firstRow,
  lastRow,
  columns
) {
  if (firstRow > lastRow) {
    throw toJs(new jl.IllegalArgumentException_0(firstRow + " > " + lastRow));
  }
  if (firstRow < 0) {
    throw toJs(new jl.IllegalArgumentException_0(firstRow + " < " + 0));
  }
  this$static.currentViewportData = null;
  idwcs.$setDesiredViewport_0(
    idwca.$state(this$static),
    this$static,
    fromDouble_0(firstRow),
    fromDouble_0(lastRow),
    columns
  );
};
idwca.$setRollback = function $setRollback(this$static, rollbackTo) {
  var existing;
  if (idwcs.$isRunning(rollbackTo.state)) {
    idwcs.$setRollback_0(
      ((existing = idwcs.$getBinding_0(this$static.currentState, this$static)),
      !existing
        ? null
        : existing.isActive()
        ? castTo(existing, 55)
        : castTo(existing, 67).active),
      rollbackTo.paused
    );
  } else {
    if (!idwcs.$getRollback(rollbackTo)) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    idwca.$setRollback(this$static, idwcs.$getRollback(rollbackTo));
  }
};
idwca.$setSize = function $setSize(this$static, s) {
  var changed, event_0, subscription;
  changed = this$static.size_0 != s;
  changed &&
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
      $intern_7,
      1,
      5,
      [
        "Table ",
        this$static,
        " size changed from ",
        ji.uncheckedCast(this$static.size_0),
        " to ",
        ji.uncheckedCast(s),
      ]
    );
  this$static.size_0 = s;
  subscription = castTo(
    ju.$get_16(this$static.subscriptions, idwca.$state(this$static).handle),
    117
  );
  if (
    changed &&
    (!subscription ||
      idwcas3.$getStatus(subscription) ==
        (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.DONE))
  ) {
    event_0 = jb.emptyObjectLiteral();
    event_0.detail = ji.uncheckedCast(s);
    idwca.$fireEvent_0(
      this$static,
      "sizechanged",
      new $wnd.CustomEvent("sizechanged", event_0)
    );
  }
  idwca.$fireEvent_3(
    this$static,
    "sizelistener-internal",
    jb.emptyObjectLiteral()
  );
};
idwca.$setState = function $setState(this$static, state) {
  var active, existing, historyChanged, init, was;
  idwcs.$onRunning_0(
    state,
    makeLambdaFunction(
      idwca.JsTable$lambda$96$Type.prototype.apply_3,
      idwca.JsTable$lambda$96$Type,
      [this$static, state]
    ),
    (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0)
  );
  was = this$static.currentState;
  if (was != state) {
    idwcs.$onRunning_0(
      state,
      makeLambdaFunction(
        idwca.JsTable$lambda$98$Type.prototype.apply_3,
        idwca.JsTable$lambda$98$Type,
        [this$static, was]
      ),
      idwsf.DO_NOTHING_0
    );
    historyChanged = false;
    if (was) {
      historyChanged = !idwcs.$isAncestor(state, was);
      idwcs.$pause(was, this$static);
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "Table state change (new history? ",
          (jl.$clinit_Boolean(),
          historyChanged ? ji.uncheckedCast(true) : ji.uncheckedCast(false)),
          ") from ",
          idwca.$toString_8(was.handle),
          was,
          " to ",
          idwca.$toString_8(state.handle),
          state,
        ]
      );
    }
    this$static.currentState = state;
    active =
      ((existing = idwcs.$getBinding_0(state, this$static)),
      !existing
        ? null
        : existing.isActive()
        ? castTo(existing, 55)
        : castTo(existing, 67).active);
    !active
      ? idwcs.$createBinding(state, this$static)
      : idwcs.$changeState(active, state);
    historyChanged &&
      idwcs.$onRunning_0(
        state,
        makeLambdaFunction(
          idwca.JsTable$lambda$99$Type.prototype.apply_3,
          idwca.JsTable$lambda$99$Type,
          [this$static, state, was]
        ),
        makeLambdaFunction(
          idwca.JsTable$lambda$100$Type.prototype.run,
          idwca.JsTable$lambda$100$Type,
          [this$static, state, was]
        )
      );
    init = jb.emptyObjectLiteral();
    init.detail = state;
    idwca.$fireEvent_0(
      this$static,
      "statechanged-internal",
      new $wnd.CustomEvent("statechanged-internal", init)
    );
  }
};
idwca.$setViewport = function $setViewport(
  this$static,
  firstRow,
  lastRow,
  columns,
  updateIntervalMs
) {
  var activeSubscription, columnsCopy, currentState, replacement;
  columnsCopy = columns != null ? columns.slice() : null;
  currentState = idwca.$state(this$static);
  activeSubscription = castTo(
    ju.$get_16(this$static.subscriptions, idwca.$state(this$static).handle),
    117
  );
  if (
    !!activeSubscription &&
    idwcas3.$getStatus(activeSubscription) !=
      (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.DONE)
  ) {
    idwcas3.$setInternalViewport_0(
      activeSubscription,
      firstRow,
      lastRow,
      columnsCopy,
      updateIntervalMs
    );
    return activeSubscription;
  } else {
    replacement = new idwcas3.TableViewportSubscription(
      firstRow,
      lastRow,
      columnsCopy,
      updateIntervalMs,
      this$static
    );
    ju.$put_2(this$static.subscriptions, currentState.handle, replacement);
    return replacement;
  }
};
idwca.$snapshot = function $snapshot(
  this$static,
  baseTable,
  doInitialSnapshot,
  stampColumns
) {
  var fetchSummary, realDoInitialSnapshot, realStampColumns;
  ju.requireNonNull_0(baseTable, "Snapshot base table");
  doInitialSnapshot != null
    ? (realDoInitialSnapshot = ji.unsafeCastToBoolean(
        (ji.checkCriticalNotNull(doInitialSnapshot), doInitialSnapshot)
      ))
    : (realDoInitialSnapshot = true);
  stampColumns == null
    ? (realStampColumns = initUnidimensionalArray(
        cggl.Ljava_lang_String_2_classLit,
        $intern_8,
        2,
        0,
        6,
        1
      ))
    : (realStampColumns = castTo(
        jus.$toArray_6(
          new jus.StreamImpl(
            null,
            ju.spliterator_5(stampColumns, stampColumns.length)
          ),
          new idwca.JsTable$19methodref$lambda$3$Type()
        ),
        12
      ));
  fetchSummary =
    "snapshot(" +
    baseTable +
    ", " +
    doInitialSnapshot +
    ", " +
    ju.toString_62(stampColumns) +
    ")";
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this$static.workerConnection,
        new idwca.JsTable$lambda$53$Type(
          this$static,
          baseTable,
          realDoInitialSnapshot,
          realStampColumns
        ),
        fetchSummary
      ),
      this$static.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$55$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$55$Type,
        [this$static]
      )
    );
};
idwca.$state = function $state(this$static) {
  if (!this$static.currentState) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Table already closed, cannot be used again")
    );
  }
  return this$static.currentState;
};
idwca.$subscribe = function $subscribe(this$static, columns) {
  if (this$static.nonViewportSub) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Can't directly subscribe to the 'private' table instance"
      )
    );
  }
  return new idwcas3.TableSubscription(columns, this$static);
};
idwca.JsTable = function JsTable(table) {
  var existing;
  idwcal.HasLifecycle.call(this);
  idwca.$$init_13(this);
  this.subscriptionId = idwca.nextSubscriptionId++;
  this.workerConnection = table.workerConnection;
  this.hasInputTable_0 = table.hasInputTable_0;
  this.isBlinkTable_0 = table.isBlinkTable_0;
  this.currentState = table.currentState;
  this.lastVisibleState = table.lastVisibleState;
  this.size_0 = table.size_0;
  this.onClosed = new ju.ArrayList();
  idwcs.$copyBinding(
    ((existing = idwcs.$getBinding_0(table.currentState, table)),
    !existing
      ? null
      : existing.isActive()
      ? castTo(existing, 55)
      : castTo(existing, 67).active),
    this
  );
};
idwca.JsTable_0 = function JsTable_0(workerConnection, state) {
  idwcal.HasLifecycle.call(this);
  idwca.$$init_13(this);
  this.subscriptionId = idwca.nextSubscriptionId++;
  this.workerConnection = workerConnection;
  this.onClosed = new ju.ArrayList();
  idwca.$setState(this, state);
  idwca.$setSize(this, toDouble_0(state.size_0));
};
idwca.lambda$10 = function lambda$10(item_0) {
  if (instanceOfString(item_0) || instanceOf(item_0, 115)) {
    return toString_7(item_0);
  }
  return idwca.$toString_4(new idwca.CustomColumn_1(item_0));
};
idwca.lambda$11_0 = function lambda$11_0(
  newCustomColumns_0,
  current_1,
  batcher_2
) {
  idwcab2.$setCustomColumns(batcher_2.builder, newCustomColumns_0);
  idwcab2.$filter(batcher_2, new ju.ArrayList_1(current_1.filters));
  idwcab2.$sort(batcher_2, new ju.ArrayList_1(current_1.sorts));
};
idwca.lambda$30 = function lambda$30(callback_0, creationResponse_1) {
  creationResponse_1.getResultId().hasTicket() &&
    callback_0(null, creationResponse_1);
};
idwca.lambda$31 = function lambda$31(callback_0, status_1) {
  idwcabs.$isOk(status_1) || callback_0(status_1, null);
};
idwca.lambda$38 = function lambda$38(existing_0, b_1) {
  idwcab2.$setConfig(b_1, existing_0);
};
idwca.lambda$4_0 = function lambda$4_0() {
  throw toJs(new jl.UnsupportedOperationException_0("getAttribute"));
};
idwca.lambda$40 = function lambda$40(lastGood_0, directive_1) {
  idwcs.$unretain(lastGood_0[0], directive_1);
};
idwca.lambda$6 = function lambda$6(current_0, newSort_1, batcher_2) {
  idwcab2.$customColumns(
    batcher_2,
    new ju.ArrayList_1(current_0.customColumns_0)
  );
  idwcab2.$filter(batcher_2, new ju.ArrayList_1(current_0.filters));
  idwcab2.$setSort(batcher_2.builder, newSort_1);
};
idwca.lambda$8 = function lambda$8(current_0, newFilter_1, batcher_2) {
  idwcab2.$customColumns(
    batcher_2,
    new ju.ArrayList_1(current_0.customColumns_0)
  );
  idwcab2.$setFilter(batcher_2.builder, newFilter_1);
  idwcab2.$sort(batcher_2, new ju.ArrayList_1(current_0.sorts));
};
idwca.reverse_0 = function reverse_0() {
  return idwca.reverse_1();
};
defineClass(
  13,
  51,
  { 57: 1, 980: 1, 13: 1, 230: 1, 51: 1, 979: 1 },
  idwca.JsTable,
  idwca.JsTable_0
);
_.fireEvent = function fireEvent_1(type_0) {
  idwca.$fireEvent_2(this, type_0);
};
_.fireEvent_0 = function fireEvent_2(type_0, init) {
  idwca.$fireEvent_3(this, type_0, init);
};
_.applyCustomColumns = function applyCustomColumns(customColumns) {
  return idwca.$applyCustomColumns(this, customColumns);
};
_.applyFilter = function applyFilter_0(filter) {
  return idwca.$applyFilter(this, filter);
};
_.applySort = function applySort(sort_0) {
  return idwca.$applySort(this, sort_0);
};
_.asOfJoin = function asOfJoin(
  rightTable,
  columnsToMatch,
  columnsToAdd,
  asOfMatchRule
) {
  return idwca.$asOfJoin(
    this,
    rightTable,
    columnsToMatch,
    columnsToAdd,
    asOfMatchRule
  );
};
_.batch = function batch_0(userCode) {
  return idwca.$batch(this, userCode);
};
_.byExternal = function byExternal(keys_0, dropKeys) {
  return idwca.$partitionBy(this, keys_0, dropKeys);
};
_.close = function close_1() {
  idwca.$close_0(this);
};
_.copy = function copy_0() {
  return idwca.$copy(this);
};
_.crossJoin = function crossJoin(
  rightTable,
  columnsToMatch,
  columnsToAdd,
  reserve_bits
) {
  return idwca.$crossJoin(
    this,
    rightTable,
    columnsToMatch,
    columnsToAdd,
    reserve_bits
  );
};
_.exactJoin = function exactJoin(rightTable, columnsToMatch, columnsToAdd) {
  return idwca.$exactJoin(this, rightTable, columnsToMatch, columnsToAdd);
};
_.findColumn = function findColumn(key) {
  return idwca.$findColumn(this, key);
};
_.findColumns = function findColumns(keys_0) {
  return idwca.$findColumns(this, keys_0);
};
_.freeze = function freeze() {
  return idwca.$freeze(this);
};
_.getAttribute = function getAttribute(attributeName) {
  var attrs, value_0;
  attrs = idwca.$lastVisibleState(this).tableDef.attributes;
  value_0 = castToString(ju.$getStringValue(attrs.map_0, attributeName));
  if (value_0 != null) {
    return value_0;
  }
  if (!ju.$contains_0(attrs.remainingAttributeKeys, attributeName)) {
    return null;
  }
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this.workerConnection,
        new idwca.JsTable$lambda$4$Type(),
        "reading table from attribute with name " + attributeName
      ),
      this.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$5$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$5$Type,
        [this]
      )
    );
};
_.getAttributes = function getAttributes() {
  var attrs;
  attrs = idwca.$lastVisibleState(this).tableDef.attributes;
  return castTo(
    jus
      .concat(
        ju.stream_4(
          castTo(
            ju.$toArray_0(
              new ju.AbstractMap$1(attrs.map_0),
              initUnidimensionalArray(
                cggl.Ljava_lang_String_2_classLit,
                $intern_8,
                2,
                0,
                6,
                1
              )
            ),
            12
          )
        ),
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(
            attrs.remainingAttributeKeys,
            1
          )
        )
      )
      .toArray_1(new idwca.JsTable$2methodref$lambda$3$Type()),
    12
  );
};
_.getColumnStatistics = function getColumnStatistics(column) {
  var toRelease;
  if (
    column.description_0 != null &&
    jl.$startsWith_0(column.description_0, "Preview of type")
  ) {
    return $wnd.Promise.reject(
      "Can't produce column statistics for preview column"
    );
  }
  toRelease = new ju.ArrayList();
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this.workerConnection,
        new idwca.JsTable$lambda$72$Type(this, column),
        "get column statistics"
      ),
      this.workerConnection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$74$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$74$Type,
        [this, toRelease]
      )
    )
    .then(
      makeLambdaFunction(
        idwca.JsTable$lambda$83$Type.prototype.onInvoke_5,
        idwca.JsTable$lambda$83$Type,
        []
      )
    );
};
defineProperties(_, {
  columns: {
    get: function getColumns_0() {
      return idwca.$getColumns(this);
    },
  },
});
defineProperties(_, {
  customColumns: {
    get: function getCustomColumns() {
      return idwca.$getCustomColumns(this);
    },
  },
});
defineProperties(_, {
  description: {
    get: function getDescription_0() {
      return castToString(
        ju.$getStringValue(
          idwca.$lastVisibleState(this).tableDef.attributes.map_0,
          "TableDescription"
        )
      );
    },
  },
});
defineProperties(_, {
  filter: {
    get: function getFilter() {
      return idwca.$getFilter(this);
    },
  },
});
_.getGrandTotalsTable = function getGrandTotalsTable(config) {
  return idwca.$getGrandTotalsTable(this, config);
};
defineProperties(_, {
  layoutHints: {
    get: function getLayoutHints() {
      return idwcs.$getLayoutHints(idwca.$lastVisibleState(this));
    },
  },
});
defineProperties(_, {
  pluginName: {
    get: function getPluginName() {
      return castToString(
        ju.$getStringValue(
          idwca.$lastVisibleState(this).tableDef.attributes.map_0,
          "PluginName"
        )
      );
    },
  },
});
defineProperties(_, {
  size: {
    get: function getSize_0() {
      return idwca.$getSize(this);
    },
  },
});
defineProperties(_, {
  sort: {
    get: function getSort() {
      return idwca.$getSort(this);
    },
  },
});
defineProperties(_, {
  totalSize: {
    get: function getTotalSize() {
      return idwca.$getTotalSize(this);
    },
  },
});
_.getTotalsTable = function getTotalsTable(config) {
  return idwca.$getTotalsTable(this, config);
};
defineProperties(_, {
  totalsTableConfig: {
    get: function getTotalsTableConfig() {
      return idwca.$getTotalsTableConfig(this);
    },
  },
});
_.getViewportData = function getViewportData() {
  return idwca.$getViewportData(this);
};
defineProperties(_, {
  hasInputTable: {
    get: function hasInputTable() {
      return this.hasInputTable_0;
    },
  },
});
_.inputTable = function inputTable() {
  var i, keyCols, valueCols;
  if (!this.hasInputTable_0) {
    return $wnd.Promise.reject("Table is not an InputTable");
  }
  keyCols = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    0,
    6,
    1
  );
  valueCols = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    0,
    6,
    1
  );
  for (i = 0; i < idwca.$lastVisibleState(this).columns_0.length; i++) {
    castTo(jb.$getAt(idwca.$lastVisibleState(this).columns_0, i), 21)
      .isInputTableKeyColumn
      ? (keyCols[keyCols.length] = castTo(
          jb.$getAt(idwca.$lastVisibleState(this).columns_0, i),
          21
        ).name_0)
      : (valueCols[valueCols.length] = castTo(
          jb.$getAt(idwca.$lastVisibleState(this).columns_0, i),
          21
        ).name_0);
  }
  return $wnd.Promise.resolve(
    new idwcai3.JsInputTable(this, keyCols, valueCols)
  );
};
_.isBlinkTable = function isBlinkTable() {
  return idwca.$isBlinkTable(this);
};
defineProperties(_, {
  isClosed: {
    get: function isClosed() {
      return idwca.$isClosed(this);
    },
  },
});
defineProperties(_, {
  isRefreshing: {
    get: function isRefreshing() {
      return idwca.$isRefreshing(this);
    },
  },
});
defineProperties(_, {
  isUncoalesced: {
    get: function isUncoalesced() {
      return idwca.$isUncoalesced(this);
    },
  },
});
_.join = function join_0(
  joinType,
  rightTable,
  columnsToMatch,
  columnsToAdd,
  asOfMatchRule
) {
  return idwca.$join(
    this,
    joinType,
    rightTable,
    columnsToMatch,
    columnsToAdd,
    asOfMatchRule
  );
};
_.naturalJoin = function naturalJoin(rightTable, columnsToMatch, columnsToAdd) {
  return idwca.$naturalJoin(this, rightTable, columnsToMatch, columnsToAdd);
};
_.partitionBy = function partitionBy_0(keys_0, dropKeys) {
  return idwca.$partitionBy(this, keys_0, dropKeys);
};
_.refetch = function refetch_1() {
  return $wnd.Promise.reject(
    "Cannot reconnect a Table with refetch(), see deephaven-core#3604"
  );
};
_.rollup = function rollup(configObject) {
  var config, rollupPromise, rollupTicket, typedTicket, widget;
  ju.requireNonNull_0(configObject, "Table.rollup configuration");
  instanceOf(configObject, 207)
    ? (config = castTo(configObject, 207))
    : (config = new idwcat.JsRollupConfig_0(configObject));
  rollupTicket = idwca.$newTicket(this.workerConnection.config);
  rollupPromise = new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwca.JsTable$lambda$43$Type(this, config, rollupTicket)]
    )
  );
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setType("HierarchicalTable");
  typedTicket.setTicket(rollupTicket);
  widget = new idwcaw.JsWidget(this.workerConnection, typedTicket);
  return $wnd.Promise.all([
    (idwcaw.$closeStream(widget),
    new $wnd.Promise(
      makeLambdaFunction(
        idwcaw.JsWidget$lambda$5$Type.prototype.onInvoke_6,
        idwcaw.JsWidget$lambda$5$Type,
        [widget]
      )
    )),
    rollupPromise,
  ]).then(
    makeLambdaFunction(
      idwca.JsTable$lambda$45$Type.prototype.onInvoke_5,
      idwca.JsTable$lambda$45$Type,
      [this, widget]
    )
  );
};
_.seekRow = function seekRow(
  startingRow,
  column,
  valueType,
  seekValue,
  insensitive,
  contains,
  isBackwards
) {
  var seekRowRequest;
  seekRowRequest =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.SeekRowRequest();
  seekRowRequest.setSourceId(idwca.$makeTicket(idwca.$state(this).handle));
  seekRowRequest.setStartingRow("" + startingRow);
  seekRowRequest.setColumnName(column.name_0);
  seekRowRequest.setSeekValue(idwca.$objectToLiteral(valueType, seekValue));
  insensitive != null &&
    seekRowRequest.setInsensitive(
      ji.unsafeCastToBoolean(
        (ji.checkCriticalNotNull(insensitive), insensitive)
      )
    );
  contains != null &&
    seekRowRequest.setContains(
      ji.unsafeCastToBoolean((ji.checkCriticalNotNull(contains), contains))
    );
  isBackwards != null &&
    seekRowRequest.setIsBackward(
      ji.unsafeCastToBoolean(
        (ji.checkCriticalNotNull(isBackwards), isBackwards)
      )
    );
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwca.JsTable$lambda$84$Type(this, seekRowRequest)]
    )
  ).then(
    makeLambdaFunction(
      idwca.JsTable$lambda$86$Type.prototype.onInvoke_5,
      idwca.JsTable$lambda$86$Type,
      []
    )
  );
};
_.selectDistinct = function selectDistinct(columns) {
  return idwca.$selectDistinct(this, columns);
};
_.setViewport = function setViewport(
  firstRow,
  lastRow,
  columns,
  updateIntervalMs
) {
  return idwca.$setViewport(this, firstRow, lastRow, columns, updateIntervalMs);
};
_.snapshot = function snapshot_3(baseTable, doInitialSnapshot, stampColumns) {
  return idwca.$snapshot(this, baseTable, doInitialSnapshot, stampColumns);
};
_.state_4 = function state_6() {
  return idwca.$state(this);
};
_.subscribe = function subscribe(columns, updateIntervalMs) {
  return idwca.$subscribe(this, columns);
};
_.toString = function toString_14() {
  if (this.currentState) {
    return (
      "Table { id=" +
      this.subscriptionId +
      " filters=[" +
      (idwcf.$clinit_JsItr(),
      ju.$toArray_1(new ju.ArrayList_1(idwca.$state(this).filters)).slice()) +
      "], sort=[" +
      ju.$toArray_1(new ju.ArrayList_1(idwca.$state(this).sorts)).slice() +
      "], customColumns=[" +
      castTo(
        jus.$collect_1(
          jus.$map_0(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(
                new ju.ArrayList_1(idwca.$state(this).customColumns_0),
                16
              )
            ),
            new idwcs.ClientTableState$2methodref$ctor$Type()
          ),
          jus.of_4(
            new jus.Collectors$21methodref$ctor$Type(),
            new jus.Collectors$20methodref$add$Type(),
            new jus.Collectors$lambda$42$Type(),
            stampJavaTypeInfo(
              getClassLiteralForArray(
                cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                1
              ),
              $intern_17,
              48,
              0,
              [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
            )
          )
        ),
        79
      )
        .toArray()
        .slice() +
      "] }"
    );
  }
  return "Table { id=" + this.subscriptionId + " CLOSED }";
};
_.toString_0 = function () {
  return this.toString();
};
_.treeTable = function treeTable(configObject) {
  var config, treePromise, treeTicket, typedTicket, widget;
  ju.requireNonNull_0(configObject, "Table.treeTable configuration");
  instanceOf(configObject, 208)
    ? (config = castTo(configObject, 208))
    : (config = new idwcat.JsTreeTableConfig_0(configObject));
  treeTicket = idwca.$newTicket(this.workerConnection.config);
  treePromise = new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwca.JsTable$lambda$46$Type(this, treeTicket, config)]
    )
  );
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setType("HierarchicalTable");
  typedTicket.setTicket(treeTicket);
  widget = new idwcaw.JsWidget(this.workerConnection, typedTicket);
  return $wnd.Promise.all([
    (idwcaw.$closeStream(widget),
    new $wnd.Promise(
      makeLambdaFunction(
        idwcaw.JsWidget$lambda$5$Type.prototype.onInvoke_6,
        idwcaw.JsWidget$lambda$5$Type,
        [widget]
      )
    )),
    treePromise,
  ]).then(
    makeLambdaFunction(
      idwca.JsTable$lambda$48$Type.prototype.onInvoke_5,
      idwca.JsTable$lambda$48$Type,
      [this, widget]
    )
  );
};
_.typedTicket_2 = function typedTicket_2() {
  var typedTicket;
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setTicket(idwca.$makeTicket(idwca.$state(this).handle));
  typedTicket.setType("Table");
  return typedTicket;
};
_.batchDepth = 0;
_.hasInputTable_0 = false;
_.isBlinkTable_0 = false;
_.size_0 = -1;
_.subscriptionId = 0;
idwca.EVENT_CUSTOMCOLUMNSCHANGED = "customcolumnschanged";
idwca.EVENT_DISCONNECT_1 = "disconnect";
idwca.EVENT_FILTERCHANGED = "filterchanged";
idwca.EVENT_RECONNECT_1 = "reconnect";
idwca.EVENT_RECONNECTFAILED_0 = "reconnectfailed";
idwca.EVENT_REQUEST_FAILED_1 = "requestfailed";
idwca.EVENT_REQUEST_SUCCEEDED_1 = "requestsucceeded";
idwca.EVENT_ROWADDED = "rowadded";
idwca.EVENT_ROWREMOVED = "rowremoved";
idwca.EVENT_ROWUPDATED = "rowupdated";
idwca.EVENT_SIZECHANGED = "sizechanged";
idwca.EVENT_SORTCHANGED = "sortchanged";
idwca.EVENT_UPDATED = "updated";
idwca.SIZE_UNCOALESCED = -2;
idwca.nextSubscriptionId = 0;
cggl.Lio_deephaven_web_client_api_JsTable_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "JsTable",
  13
);
idwca.JsTable$0methodref$run$Type = function JsTable$0methodref$run$Type() {};
defineClass(513, 1, $intern_19, idwca.JsTable$0methodref$run$Type);
_.accept = function accept_4(arg0) {
  castToFunction(arg0)();
};
cggl.Lio_deephaven_web_client_api_JsTable$0methodref$run$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTable/0methodref$run$Type",
    513
  );
idwca.$getClass_43 = function $getClass_43() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$10methodref$getHandle$Type =
  function JsTable$10methodref$getHandle$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1253,
  $wnd.Function,
  $intern_47,
  idwca.JsTable$10methodref$getHandle$Type
);
_.valueOf_0 = function valueOf_9() {
  return this.$$outer_0.handle;
};
idwca.$getClass_44 = function $getClass_44() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$11methodref$getHandle$Type =
  function JsTable$11methodref$getHandle$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1254,
  $wnd.Function,
  $intern_47,
  idwca.JsTable$11methodref$getHandle$Type
);
_.valueOf_0 = function valueOf_10() {
  return this.$$outer_0.handle;
};
idwca.$getClass_45 = function $getClass_45() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$12methodref$apply$Type = function JsTable$12methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1257, $wnd.Function, {}, idwca.JsTable$12methodref$apply$Type);
_.onInvoke_41 = function onInvoke_25(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_46 = function $getClass_46() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$13methodref$refreshViewport$Type =
  function JsTable$13methodref$refreshViewport$Type() {};
defineClass(
  1284,
  $wnd.Function,
  $intern_48,
  idwca.JsTable$13methodref$refreshViewport$Type
);
_.apply_3 = function apply_19(arg0) {
  idwca.$refreshViewport_0(castTo(arg0, 288));
};
idwsf.$andThen_0 = function $andThen_0(this$static, second) {
  var self_0;
  self_0 = this$static;
  return makeLambdaFunction(
    idwsf.JsRunnable$1.prototype.run,
    idwsf.JsRunnable$1,
    [self_0, second]
  );
};
idwsf.$asConsumer = function $asConsumer(this$static) {
  return makeLambdaFunction(
    idwsf.JsRunnable$lambda$0$Type.prototype.apply_3,
    idwsf.JsRunnable$lambda$0$Type,
    [this$static]
  );
};
idwca.$getClass_47 = function $getClass_47() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$14methodref$remove$Type =
  function JsTable$14methodref$remove$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1259,
  $wnd.Function,
  $intern_49,
  idwca.JsTable$14methodref$remove$Type
);
_.run = function run_0() {
  idwca.$remove(this.$$outer_0);
};
idwca.$getClass_48 = function $getClass_48() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$15methodref$remove$Type =
  function JsTable$15methodref$remove$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1261,
  $wnd.Function,
  $intern_49,
  idwca.JsTable$15methodref$remove$Type
);
_.run = function run_1() {
  idwca.$remove(this.$$outer_0);
};
idwca.$getClass_49 = function $getClass_49() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$16methodref$apply$Type = function JsTable$16methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1265, $wnd.Function, {}, idwca.JsTable$16methodref$apply$Type);
_.onInvoke_24 = function onInvoke_26(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_50 = function $getClass_50() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$17methodref$apply$Type = function JsTable$17methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1267, $wnd.Function, {}, idwca.JsTable$17methodref$apply$Type);
_.onInvoke_25 = function onInvoke_27(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_51 = function $getClass_51() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$18methodref$apply$Type = function JsTable$18methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1268, $wnd.Function, {}, idwca.JsTable$18methodref$apply$Type);
_.onInvoke_56 = function onInvoke_28(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.JsTable$19methodref$lambda$3$Type =
  function JsTable$19methodref$lambda$3$Type() {};
defineClass(524, 1, {}, idwca.JsTable$19methodref$lambda$3$Type);
_.apply_2 = function apply_20(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$19methodref$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTable/19methodref$lambda$3$Type",
    524
  );
idwca.JsTable$1methodref$internalClose$Type =
  function JsTable$1methodref$internalClose$Type() {};
defineClass(514, 1, $intern_19, idwca.JsTable$1methodref$internalClose$Type);
_.accept = function accept_5(arg0) {
  idwcas3.$internalClose(castTo(arg0, 117));
};
cggl.Lio_deephaven_web_client_api_JsTable$1methodref$internalClose$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTable/1methodref$internalClose$Type",
    514
  );
idwca.$getClass_52 = function $getClass_52() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$20methodref$apply$Type = function JsTable$20methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1269, $wnd.Function, {}, idwca.JsTable$20methodref$apply$Type);
_.onInvoke_57 = function onInvoke_29(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_53 = function $getClass_53() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$21methodref$apply$Type = function JsTable$21methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1270, $wnd.Function, {}, idwca.JsTable$21methodref$apply$Type);
_.onInvoke_43 = function onInvoke_30(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_54 = function $getClass_54() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$22methodref$apply$Type = function JsTable$22methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1271, $wnd.Function, {}, idwca.JsTable$22methodref$apply$Type);
_.onInvoke_45 = function onInvoke_31(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_55 = function $getClass_55() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$23methodref$apply$Type = function JsTable$23methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1272, $wnd.Function, {}, idwca.JsTable$23methodref$apply$Type);
_.onInvoke_48 = function onInvoke_32(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_56 = function $getClass_56() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$24methodref$apply$Type = function JsTable$24methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1273, $wnd.Function, {}, idwca.JsTable$24methodref$apply$Type);
_.onInvoke_52 = function onInvoke_33(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_57 = function $getClass_57() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$25methodref$apply$Type = function JsTable$25methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1275, $wnd.Function, {}, idwca.JsTable$25methodref$apply$Type);
_.onInvoke_32 = function onInvoke_34(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_58 = function $getClass_58() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$26methodref$apply$Type = function JsTable$26methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1276, $wnd.Function, {}, idwca.JsTable$26methodref$apply$Type);
_.onInvoke_44 = function onInvoke_35(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_59 = function $getClass_59() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$27methodref$apply$Type = function JsTable$27methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1278, $wnd.Function, {}, idwca.JsTable$27methodref$apply$Type);
_.onInvoke_46 = function onInvoke_36(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.JsTable$28methodref$close$Type = function JsTable$28methodref$close$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(536, 1, $intern_50, idwca.JsTable$28methodref$close$Type);
_.run = function run_2() {
  idwca.$close_0(this.$$outer_0);
};
cggl.Lio_deephaven_web_client_api_JsTable$28methodref$close$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTable/28methodref$close$Type",
    536
  );
idwca.JsTable$29methodref$close$Type = function JsTable$29methodref$close$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(537, 1, $intern_50, idwca.JsTable$29methodref$close$Type);
_.run = function run_3() {
  idwca.$close_0(this.$$outer_0);
};
cggl.Lio_deephaven_web_client_api_JsTable$29methodref$close$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTable/29methodref$close$Type",
    537
  );
idwca.JsTable$2methodref$lambda$3$Type =
  function JsTable$2methodref$lambda$3$Type() {};
defineClass(515, 1, {}, idwca.JsTable$2methodref$lambda$3$Type);
_.apply_2 = function apply_21(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$2methodref$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTable/2methodref$lambda$3$Type",
    515
  );
idwca.$getClass_60 = function $getClass_60() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$30methodref$apply$Type = function JsTable$30methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1279, $wnd.Function, {}, idwca.JsTable$30methodref$apply$Type);
_.onInvoke_54 = function onInvoke_37(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_61 = function $getClass_61() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$31methodref$apply$Type = function JsTable$31methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1280, $wnd.Function, {}, idwca.JsTable$31methodref$apply$Type);
_.onInvoke_53 = function onInvoke_38(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_62 = function $getClass_62() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$32methodref$toStringMinimal$Type =
  function JsTable$32methodref$toStringMinimal$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1282,
  $wnd.Function,
  $intern_47,
  idwca.JsTable$32methodref$toStringMinimal$Type
);
_.valueOf_0 = function valueOf_11() {
  return idwcs.$toStringMinimal(this.$$outer_0);
};
idwca.$getClass_63 = function $getClass_63() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$33methodref$toStringMinimal$Type =
  function JsTable$33methodref$toStringMinimal$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1283,
  $wnd.Function,
  $intern_47,
  idwca.JsTable$33methodref$toStringMinimal$Type
);
_.valueOf_0 = function valueOf_12() {
  return idwcs.$toStringMinimal(this.$$outer_0);
};
idwca.$getClass_64 = function $getClass_64() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$3methodref$fail$Type = function JsTable$3methodref$fail$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(
  1224,
  $wnd.Function,
  $intern_48,
  idwca.JsTable$3methodref$fail$Type
);
_.apply_3 = function apply_22(arg0) {
  idwcf.$fail(this.$$outer_0, arg0);
};
idwca.JsTable$4methodref$getName$Type =
  function JsTable$4methodref$getName$Type() {};
defineClass(517, 1, {}, idwca.JsTable$4methodref$getName$Type);
_.apply_1 = function apply_23(arg0) {
  return castTo(arg0, 21).name_0;
};
cggl.Lio_deephaven_web_client_api_JsTable$4methodref$getName$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTable/4methodref$getName$Type",
    517
  );
idwca.JsTable$5methodref$lambda$3$Type =
  function JsTable$5methodref$lambda$3$Type() {};
defineClass(518, 1, {}, idwca.JsTable$5methodref$lambda$3$Type);
_.apply_2 = function apply_24(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$5methodref$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTable/5methodref$lambda$3$Type",
    518
  );
idwca.$getClass_65 = function $getClass_65() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$6methodref$apply$Type = function JsTable$6methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1252, $wnd.Function, {}, idwca.JsTable$6methodref$apply$Type);
_.onInvoke_55 = function onInvoke_39(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_66 = function $getClass_66() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$9methodref$lastVisibleState$Type =
  function JsTable$9methodref$lastVisibleState$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  977,
  $wnd.Function,
  $intern_47,
  idwca.JsTable$9methodref$lastVisibleState$Type
);
_.valueOf_0 = function valueOf_13() {
  return idwca.$lastVisibleState(this.$$outer_0);
};
idwca.$isEqual = function $isEqual(this$static, o) {
  if (this$static.type_0 == o.type_0) {
    return false;
  }
  if (this$static.handle != o.handle) {
    if (idwca.$equals_1(this$static.handle, o.handle)) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    return false;
  }
  if (this$static.state != o.state) {
    if (this$static.state.handle == o.state.handle) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    return false;
  }
  if (!idwsd.$equals_5(this$static.includedRows, o.includedRows)) {
    return false;
  }
  if (!ju.$equals_16(this$static.columns_0, o.columns_0)) {
    return false;
  }
  if (neq(this$static.maxRows, o.maxRows)) {
    return false;
  }
  if (!ju.deepEquals(this$static.dataColumns, o.dataColumns)) {
    debugger;
    throw toJs(new jl.AssertionError_0("Debounce is broken, remove it."));
  }
  return true;
};
idwca.JsTable$Debounce = function JsTable$Debounce(
  this$0,
  table,
  snapshotType,
  includedRows,
  columns,
  dataColumns,
  maxRows
) {
  this.handle = table;
  this.type_0 = snapshotType;
  this.includedRows = includedRows;
  this.columns_0 = columns;
  this.dataColumns = dataColumns;
  this.state = this$0.currentState;
  this.maxRows = maxRows;
  jl.$clinit_System();
  fromDouble_0(Date.now());
};
defineClass(512, 1, {}, idwca.JsTable$Debounce);
_.maxRows = 0;
cggl.Lio_deephaven_web_client_api_JsTable$Debounce_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "JsTable/Debounce",
  512
);
idwca.$getClass_67 = function $getClass_67() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$0$Type = function JsTable$lambda$0$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1214, $wnd.Function, $intern_36, idwca.JsTable$lambda$0$Type);
_.onInvoke_5 = function onInvoke_40(arg0) {
  return (
    throwClassCastExceptionUnlessNull(arg0),
    $wnd.Promise.resolve(this.$$outer_0)
  );
};
idwca.$getClass_68 = function $getClass_68() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$10$Type = function JsTable$lambda$10$Type() {};
defineClass(1220, $wnd.Function, {}, idwca.JsTable$lambda$10$Type);
_.onInvoke = function onInvoke_41(arg0, arg1, arg2) {
  return idwca.lambda$10(arg0);
};
idwca.$getClass_69 = function $getClass_69() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$100$Type = function JsTable$lambda$100$Type(
  $$outer_0,
  state_1,
  was_2
) {
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
  this.was_2 = was_2;
};
defineClass(1250, $wnd.Function, $intern_49, idwca.JsTable$lambda$100$Type);
_.run = function run_4() {
  idwcf.runLater(
    makeLambdaFunction(
      idwca.JsTable$lambda$102$Type.prototype.run,
      idwca.JsTable$lambda$102$Type,
      [this.$$outer_0, this.state_1, this.was_2]
    )
  );
};
idwca.$getClass_70 = function $getClass_70() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$102$Type = function JsTable$lambda$102$Type(
  $$outer_0,
  state_1,
  was_2
) {
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
  this.was_2 = was_2;
};
defineClass(1286, $wnd.Function, $intern_49, idwca.JsTable$lambda$102$Type);
_.run = function run_5() {
  idwca.$lambda$102(this.$$outer_0, this.state_1, this.was_2);
};
idwca.$getClass_71 = function $getClass_71() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$11$Type = function JsTable$lambda$11$Type(
  newCustomColumns_0,
  current_1
) {
  this.newCustomColumns_0 = newCustomColumns_0;
  this.current_1 = current_1;
};
defineClass(1221, $wnd.Function, $intern_48, idwca.JsTable$lambda$11$Type);
_.apply_3 = function apply_25(arg0) {
  idwca.lambda$11_0(this.newCustomColumns_0, this.current_1, castTo(arg0, 129));
};
idwca.$getClass_72 = function $getClass_72() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$12$Type = function JsTable$lambda$12$Type(
  customColumns_0
) {
  this.customColumns_0 = customColumns_0;
};
defineClass(1222, $wnd.Function, $intern_47, idwca.JsTable$lambda$12$Type);
_.valueOf_0 = function valueOf_14() {
  return "Failed to apply custom columns: " + this.customColumns_0;
};
idwca.$getClass_73 = function $getClass_73() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$13$Type = function JsTable$lambda$13$Type(
  $$outer_0,
  promise_1
) {
  this.$$outer_0 = $$outer_0;
  this.promise_1 = promise_1;
};
defineClass(1223, $wnd.Function, $intern_48, idwca.JsTable$lambda$13$Type);
_.apply_3 = function apply_26(arg0) {
  var lastArg;
  idwca.$lambda$13_1(
    this.$$outer_0,
    ((lastArg = this.promise_1), castTo(arg0, 14), lastArg)
  );
};
idwca.$getClass_74 = function $getClass_74() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$15$Type = function JsTable$lambda$15$Type(promise_0) {
  this.promise_0 = promise_0;
};
defineClass(1225, $wnd.Function, $intern_49, idwca.JsTable$lambda$15$Type);
_.run = function run_6() {
  idwcf.$fail(this.promise_0, "Table closed before viewport data was read");
};
idwca.$getClass_75 = function $getClass_75() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$16$Type = function JsTable$lambda$16$Type(
  $$outer_0,
  promise_1
) {
  this.$$outer_0 = $$outer_0;
  this.promise_1 = promise_1;
};
defineClass(1251, $wnd.Function, $intern_35, idwca.JsTable$lambda$16$Type);
_.onEvent = function onEvent_10(arg0) {
  idwca.$lambda$16(this.$$outer_0, this.promise_1);
};
idwca.JsTable$lambda$19$Type = function JsTable$lambda$19$Type(
  $$outer_0,
  state_1,
  columnNames_2
) {
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
  this.columnNames_2 = columnNames_2;
};
defineClass(519, 1, {}, idwca.JsTable$lambda$19$Type);
_.fetch_1 = function fetch_4(arg0, arg1, arg2) {
  idwca.$lambda$19(
    this.$$outer_0,
    this.state_1,
    this.columnNames_2,
    arg0,
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$19$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$19$Type", 519);
idwca.$getClass_76 = function $getClass_76() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$21$Type = function JsTable$lambda$21$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1226, $wnd.Function, $intern_36, idwca.JsTable$lambda$21$Type);
_.onInvoke_5 = function onInvoke_42(arg0) {
  return idwca.$lambda$21(this.$$outer_0, castTo(arg0, 14));
};
idwca.JsTable$lambda$27$Type = function JsTable$lambda$27$Type(
  $$outer_0,
  lastGood_1,
  state_2,
  directive_3
) {
  this.$$outer_0 = $$outer_0;
  this.lastGood_1 = lastGood_1;
  this.state_2 = state_2;
  this.directive_3 = directive_3;
};
defineClass(520, 1, {}, idwca.JsTable$lambda$27$Type);
_.fetch_1 = function fetch_5(arg0, arg1, arg2) {
  idwca.$lambda$27(
    this.$$outer_0,
    this.lastGood_1,
    this.state_2,
    this.directive_3,
    arg0,
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$27$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$27$Type", 520);
idwca.$getClass_77 = function $getClass_77() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$30$Type = function JsTable$lambda$30$Type(callback_0) {
  this.callback_0 = callback_0;
};
defineClass(1255, $wnd.Function, $intern_48, idwca.JsTable$lambda$30$Type);
_.apply_3 = function apply_27(arg0) {
  idwca.lambda$30(
    this.callback_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableCreationResponse
    )
  );
};
idwca.$getClass_78 = function $getClass_78() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$31$Type = function JsTable$lambda$31$Type(callback_0) {
  this.callback_0 = callback_0;
};
defineClass(1256, $wnd.Function, $intern_48, idwca.JsTable$lambda$31$Type);
_.apply_3 = function apply_28(arg0) {
  idwca.lambda$31(this.callback_0, arg0);
};
idwca.$getClass_79 = function $getClass_79() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$33$Type = function JsTable$lambda$33$Type(
  $$outer_0,
  downsample_1,
  totalsFactory_2,
  summary_3,
  result_4,
  lastGood_5,
  directive_6
) {
  this.$$outer_0 = $$outer_0;
  this.downsample_1 = downsample_1;
  this.totalsFactory_2 = totalsFactory_2;
  this.summary_3 = summary_3;
  this.result_4 = result_4;
  this.lastGood_5 = lastGood_5;
  this.directive_6 = directive_6;
};
defineClass(1227, $wnd.Function, $intern_36, idwca.JsTable$lambda$33$Type);
_.onInvoke_5 = function onInvoke_43(arg0) {
  return idwca.$lambda$33(
    this.$$outer_0,
    this.downsample_1,
    this.totalsFactory_2,
    this.summary_3,
    this.result_4,
    this.lastGood_5,
    this.directive_6,
    castTo(arg0, 14)
  );
};
idwca.$getClass_80 = function $getClass_80() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$34$Type = function JsTable$lambda$34$Type(
  $$outer_0,
  downsample_1,
  wrapped_2,
  totalsFactory_3,
  summary_4,
  ready_5,
  result_6
) {
  this.$$outer_0 = $$outer_0;
  this.downsample_1 = downsample_1;
  this.wrapped_2 = wrapped_2;
  this.totalsFactory_3 = totalsFactory_3;
  this.summary_4 = summary_4;
  this.ready_5 = ready_5;
  this.result_6 = result_6;
};
defineClass(1258, $wnd.Function, $intern_35, idwca.JsTable$lambda$34$Type);
_.onEvent = function onEvent_11(arg0) {
  idwca.$lambda$34(
    this.$$outer_0,
    this.downsample_1,
    this.wrapped_2,
    this.totalsFactory_3,
    this.summary_4,
    this.ready_5,
    this.result_6
  );
};
idwca.$getClass_81 = function $getClass_81() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$35$Type = function JsTable$lambda$35$Type(
  $$outer_0,
  wrapped_1,
  downsample_2,
  totalsFactory_3,
  summary_4,
  ready_5,
  result_6
) {
  this.$$outer_0 = $$outer_0;
  this.wrapped_1 = wrapped_1;
  this.downsample_2 = downsample_2;
  this.totalsFactory_3 = totalsFactory_3;
  this.summary_4 = summary_4;
  this.ready_5 = ready_5;
  this.result_6 = result_6;
};
defineClass(1262, $wnd.Function, $intern_49, idwca.JsTable$lambda$35$Type);
_.run = function run_7() {
  idwca.$lambda$35(
    this.$$outer_0,
    this.wrapped_1,
    this.downsample_2,
    this.totalsFactory_3,
    this.summary_4,
    this.ready_5,
    this.result_6
  );
};
idwca.$getClass_82 = function $getClass_82() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$36$Type = function JsTable$lambda$36$Type(result_0) {
  this.result_0 = result_0;
};
defineClass(1263, $wnd.Function, $intern_36, idwca.JsTable$lambda$36$Type);
_.onInvoke_5 = function onInvoke_44(arg0) {
  return (
    idwcf.$onSuccess(
      this.result_0,
      makeLambdaFunction(
        idwca.JsTable$13methodref$refreshViewport$Type.prototype.apply_3,
        idwca.JsTable$13methodref$refreshViewport$Type,
        []
      )
    ),
    null
  );
};
idwca.$getClass_83 = function $getClass_83() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$38$Type = function JsTable$lambda$38$Type(existing_0) {
  this.existing_0 = existing_0;
};
defineClass(1264, $wnd.Function, $intern_48, idwca.JsTable$lambda$38$Type);
_.apply_3 = function apply_29(arg0) {
  idwca.lambda$38(this.existing_0, castTo(arg0, 129));
};
idwca.JsTable$lambda$4$Type = function JsTable$lambda$4$Type() {};
defineClass(516, 1, {}, idwca.JsTable$lambda$4$Type);
_.fetch_1 = function fetch_6(arg0, arg1, arg2) {
  idwca.lambda$4_0();
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$4$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$4$Type", 516);
idwca.$getClass_84 = function $getClass_84() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$40$Type = function JsTable$lambda$40$Type(
  lastGood_0,
  directive_1
) {
  this.lastGood_0 = lastGood_0;
  this.directive_1 = directive_1;
};
defineClass(1260, $wnd.Function, $intern_49, idwca.JsTable$lambda$40$Type);
_.run = function run_8() {
  idwca.lambda$40(this.lastGood_0, this.directive_1);
};
idwca.$getClass_85 = function $getClass_85() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$42$Type = function JsTable$lambda$42$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(978, $wnd.Function, $intern_47, idwca.JsTable$lambda$42$Type);
_.valueOf_0 = function valueOf_15() {
  return idwca.$lambda$42(this.$$outer_0);
};
idwca.JsTable$lambda$43$Type = function JsTable$lambda$43$Type(
  $$outer_0,
  config_1,
  rollupTicket_2
) {
  this.$$outer_0 = $$outer_0;
  this.config_1 = config_1;
  this.rollupTicket_2 = rollupTicket_2;
};
defineClass(521, 1, $intern_19, idwca.JsTable$lambda$43$Type);
_.accept = function accept_6(arg0) {
  idwca.$lambda$43(
    this.$$outer_0,
    this.config_1,
    this.rollupTicket_2,
    castToFunction(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$43$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$43$Type", 521);
idwca.$getClass_86 = function $getClass_86() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$45$Type = function JsTable$lambda$45$Type(
  $$outer_0,
  widget_1
) {
  this.$$outer_0 = $$outer_0;
  this.widget_1 = widget_1;
};
defineClass(1228, $wnd.Function, $intern_36, idwca.JsTable$lambda$45$Type);
_.onInvoke_5 = function onInvoke_45(arg0) {
  var lastArg;
  return idwca.$lambda$45(
    this.$$outer_0,
    ((lastArg = this.widget_1), castToArray(arg0), lastArg)
  );
};
idwca.JsTable$lambda$46$Type = function JsTable$lambda$46$Type(
  $$outer_0,
  treeTicket_1,
  config_2
) {
  this.$$outer_0 = $$outer_0;
  this.treeTicket_1 = treeTicket_1;
  this.config_2 = config_2;
};
defineClass(522, 1, $intern_19, idwca.JsTable$lambda$46$Type);
_.accept = function accept_7(arg0) {
  idwca.$lambda$46(
    this.$$outer_0,
    this.treeTicket_1,
    this.config_2,
    castToFunction(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$46$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$46$Type", 522);
idwca.$getClass_87 = function $getClass_87() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$48$Type = function JsTable$lambda$48$Type(
  $$outer_0,
  widget_1
) {
  this.$$outer_0 = $$outer_0;
  this.widget_1 = widget_1;
};
defineClass(1229, $wnd.Function, $intern_36, idwca.JsTable$lambda$48$Type);
_.onInvoke_5 = function onInvoke_46(arg0) {
  var lastArg;
  return idwca.$lambda$48(
    this.$$outer_0,
    ((lastArg = this.widget_1), castToArray(arg0), lastArg)
  );
};
idwca.JsTable$lambda$49$Type = function JsTable$lambda$49$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(523, 1, {}, idwca.JsTable$lambda$49$Type);
_.fetch_1 = function fetch_7(arg0, arg1, arg2) {
  idwca.$lambda$49(this.$$outer_0, arg0, arg1, arg2);
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$49$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$49$Type", 523);
idwca.$getClass_88 = function $getClass_88() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$5$Type = function JsTable$lambda$5$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1215, $wnd.Function, $intern_36, idwca.JsTable$lambda$5$Type);
_.onInvoke_5 = function onInvoke_47(arg0) {
  return idwca.$lambda$5_1(this.$$outer_0, castTo(arg0, 14));
};
idwca.$getClass_89 = function $getClass_89() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$51$Type = function JsTable$lambda$51$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1230, $wnd.Function, $intern_36, idwca.JsTable$lambda$51$Type);
_.onInvoke_5 = function onInvoke_48(arg0) {
  return idwca.$lambda$51(this.$$outer_0, castTo(arg0, 14));
};
idwca.JsTable$lambda$53$Type = function JsTable$lambda$53$Type(
  $$outer_0,
  baseTable_1,
  realDoInitialSnapshot_2,
  realStampColumns_3
) {
  this.$$outer_0 = $$outer_0;
  this.baseTable_1 = baseTable_1;
  this.realDoInitialSnapshot_2 = realDoInitialSnapshot_2;
  this.realStampColumns_3 = realStampColumns_3;
};
defineClass(525, 1, {}, idwca.JsTable$lambda$53$Type);
_.fetch_1 = function fetch_8(arg0, arg1, arg2) {
  idwca.$lambda$53(
    this.$$outer_0,
    this.baseTable_1,
    this.realDoInitialSnapshot_2,
    this.realStampColumns_3,
    arg0,
    arg1,
    arg2
  );
};
_.realDoInitialSnapshot_2 = false;
cggl.Lio_deephaven_web_client_api_JsTable$lambda$53$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$53$Type", 525);
idwca.$getClass_90 = function $getClass_90() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$55$Type = function JsTable$lambda$55$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1231, $wnd.Function, $intern_36, idwca.JsTable$lambda$55$Type);
_.onInvoke_5 = function onInvoke_49(arg0) {
  return idwca.$lambda$55(this.$$outer_0, castTo(arg0, 14));
};
idwca.JsTable$lambda$56$Type = function JsTable$lambda$56$Type(
  $$outer_0,
  rightTable_1,
  columnsToMatch_2,
  columnsToAdd_3,
  asOfMatchRule_4
) {
  this.$$outer_0 = $$outer_0;
  this.rightTable_1 = rightTable_1;
  this.columnsToMatch_2 = columnsToMatch_2;
  this.columnsToAdd_3 = columnsToAdd_3;
  this.asOfMatchRule_4 = asOfMatchRule_4;
};
defineClass(526, 1, {}, idwca.JsTable$lambda$56$Type);
_.fetch_1 = function fetch_9(arg0, arg1, arg2) {
  idwca.$lambda$56(
    this.$$outer_0,
    this.rightTable_1,
    this.columnsToMatch_2,
    this.columnsToAdd_3,
    this.asOfMatchRule_4,
    arg0,
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$56$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$56$Type", 526);
idwca.$getClass_91 = function $getClass_91() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$58$Type = function JsTable$lambda$58$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1232, $wnd.Function, $intern_36, idwca.JsTable$lambda$58$Type);
_.onInvoke_5 = function onInvoke_50(arg0) {
  return idwca.$lambda$58(this.$$outer_0, castTo(arg0, 14));
};
idwca.JsTable$lambda$59$Type = function JsTable$lambda$59$Type(
  $$outer_0,
  rightTable_1,
  columnsToMatch_2,
  columnsToAdd_3,
  reserve_bits_4
) {
  this.$$outer_0 = $$outer_0;
  this.rightTable_1 = rightTable_1;
  this.columnsToMatch_2 = columnsToMatch_2;
  this.columnsToAdd_3 = columnsToAdd_3;
  this.reserve_bits_4 = reserve_bits_4;
};
defineClass(527, 1, {}, idwca.JsTable$lambda$59$Type);
_.fetch_1 = function fetch_10(arg0, arg1, arg2) {
  idwca.$lambda$59(
    this.$$outer_0,
    this.rightTable_1,
    this.columnsToMatch_2,
    this.columnsToAdd_3,
    this.reserve_bits_4,
    arg0,
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$59$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$59$Type", 527);
idwca.$getClass_92 = function $getClass_92() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$6$Type = function JsTable$lambda$6$Type(
  current_0,
  newSort_1
) {
  this.current_0 = current_0;
  this.newSort_1 = newSort_1;
};
defineClass(1216, $wnd.Function, $intern_48, idwca.JsTable$lambda$6$Type);
_.apply_3 = function apply_30(arg0) {
  idwca.lambda$6(this.current_0, this.newSort_1, castTo(arg0, 129));
};
idwca.$getClass_93 = function $getClass_93() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$61$Type = function JsTable$lambda$61$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1233, $wnd.Function, $intern_36, idwca.JsTable$lambda$61$Type);
_.onInvoke_5 = function onInvoke_51(arg0) {
  return idwca.$lambda$61(this.$$outer_0, castTo(arg0, 14));
};
idwca.JsTable$lambda$62$Type = function JsTable$lambda$62$Type(
  $$outer_0,
  rightTable_1,
  columnsToMatch_2,
  columnsToAdd_3
) {
  this.$$outer_0 = $$outer_0;
  this.rightTable_1 = rightTable_1;
  this.columnsToMatch_2 = columnsToMatch_2;
  this.columnsToAdd_3 = columnsToAdd_3;
};
defineClass(528, 1, {}, idwca.JsTable$lambda$62$Type);
_.fetch_1 = function fetch_11(arg0, arg1, arg2) {
  idwca.$lambda$62(
    this.$$outer_0,
    this.rightTable_1,
    this.columnsToMatch_2,
    this.columnsToAdd_3,
    arg0,
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$62$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$62$Type", 528);
idwca.$getClass_94 = function $getClass_94() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$64$Type = function JsTable$lambda$64$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1234, $wnd.Function, $intern_36, idwca.JsTable$lambda$64$Type);
_.onInvoke_5 = function onInvoke_52(arg0) {
  return idwca.$lambda$64(this.$$outer_0, castTo(arg0, 14));
};
idwca.JsTable$lambda$65$Type = function JsTable$lambda$65$Type(
  $$outer_0,
  rightTable_1,
  columnsToMatch_2,
  columnsToAdd_3
) {
  this.$$outer_0 = $$outer_0;
  this.rightTable_1 = rightTable_1;
  this.columnsToMatch_2 = columnsToMatch_2;
  this.columnsToAdd_3 = columnsToAdd_3;
};
defineClass(529, 1, {}, idwca.JsTable$lambda$65$Type);
_.fetch_1 = function fetch_12(arg0, arg1, arg2) {
  idwca.$lambda$65(
    this.$$outer_0,
    this.rightTable_1,
    this.columnsToMatch_2,
    this.columnsToAdd_3,
    arg0,
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$65$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$65$Type", 529);
idwca.$getClass_95 = function $getClass_95() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$67$Type = function JsTable$lambda$67$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1235, $wnd.Function, $intern_36, idwca.JsTable$lambda$67$Type);
_.onInvoke_5 = function onInvoke_53(arg0) {
  return idwca.$lambda$67(this.$$outer_0, castTo(arg0, 14));
};
idwca.JsTable$lambda$68$Type = function JsTable$lambda$68$Type(
  $$outer_0,
  partitionedTableTicket_1,
  actualKeys_2,
  dropKeys_3
) {
  this.$$outer_0 = $$outer_0;
  this.partitionedTableTicket_1 = partitionedTableTicket_1;
  this.actualKeys_2 = actualKeys_2;
  this.dropKeys_3 = dropKeys_3;
};
defineClass(530, 1, $intern_19, idwca.JsTable$lambda$68$Type);
_.accept = function accept_8(arg0) {
  idwca.$lambda$68(
    this.$$outer_0,
    this.partitionedTableTicket_1,
    this.actualKeys_2,
    this.dropKeys_3,
    castToFunction(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$68$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$68$Type", 530);
idwca.$getClass_96 = function $getClass_96() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$7$Type = function JsTable$lambda$7$Type(sort_0) {
  this.sort_0 = sort_0;
};
defineClass(1217, $wnd.Function, $intern_47, idwca.JsTable$lambda$7$Type);
_.valueOf_0 = function valueOf_16() {
  return "Failed to apply sorts: " + ju.toString_62(this.sort_0);
};
idwca.$getClass_97 = function $getClass_97() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$70$Type = function JsTable$lambda$70$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1236, $wnd.Function, $intern_36, idwca.JsTable$lambda$70$Type);
_.onInvoke_5 = function onInvoke_54(arg0) {
  return idwca.$lambda$70(this.$$outer_0, castTo(arg0, 60));
};
idwca.$getClass_98 = function $getClass_98() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$71$Type = function JsTable$lambda$71$Type(fetchPromise_0) {
  this.fetchPromise_0 = fetchPromise_0;
};
defineClass(1237, $wnd.Function, $intern_36, idwca.JsTable$lambda$71$Type);
_.onInvoke_5 = function onInvoke_55(arg0) {
  var lastArg;
  return (
    (lastArg = this.fetchPromise_0),
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.partitionedtable_pb.PartitionByResponse
    ),
    lastArg
  );
};
idwca.JsTable$lambda$72$Type = function JsTable$lambda$72$Type(
  $$outer_0,
  column_1
) {
  this.$$outer_0 = $$outer_0;
  this.column_1 = column_1;
};
defineClass(531, 1, {}, idwca.JsTable$lambda$72$Type);
_.fetch_1 = function fetch_13(arg0, arg1, arg2) {
  idwca.$lambda$72(this.$$outer_0, this.column_1, arg0, arg1, arg2);
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$72$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$72$Type", 531);
idwca.$getClass_99 = function $getClass_99() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$74$Type = function JsTable$lambda$74$Type(
  $$outer_0,
  toRelease_1
) {
  this.$$outer_0 = $$outer_0;
  this.toRelease_1 = toRelease_1;
};
defineClass(1238, $wnd.Function, $intern_36, idwca.JsTable$lambda$74$Type);
_.onInvoke_5 = function onInvoke_56(arg0) {
  return idwca.$lambda$74(this.$$outer_0, this.toRelease_1, castTo(arg0, 14));
};
idwca.JsTable$lambda$75$Type = function JsTable$lambda$75$Type() {};
defineClass(532, 1, {}, idwca.JsTable$lambda$75$Type);
_.test_0 = function test_1(arg0) {
  return jl.$equals_12(castTo(arg0, 21).name_0, "UNIQUE_KEYS");
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$75$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$75$Type", 532);
idwca.JsTable$lambda$76$Type = function JsTable$lambda$76$Type() {};
defineClass(533, 1, {}, idwca.JsTable$lambda$76$Type);
_.test_0 = function test_2(arg0) {
  return jl.$equals_12(castTo(arg0, 21).name_0, "UNIQUE_COUNTS");
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$76$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$76$Type", 533);
idwca.JsTable$lambda$77$Type = function JsTable$lambda$77$Type(
  $$outer_0,
  state_1
) {
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
};
defineClass(534, 1, $intern_50, idwca.JsTable$lambda$77$Type);
_.run = function run_9() {
  idwca.$lambda$77(this.$$outer_0, this.state_1);
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$77$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$77$Type", 534);
idwca.JsTable$lambda$78$Type = function JsTable$lambda$78$Type(
  $$outer_0,
  dropCols_1,
  state_2
) {
  this.$$outer_0 = $$outer_0;
  this.dropCols_1 = dropCols_1;
  this.state_2 = state_2;
};
defineClass(535, 1, {}, idwca.JsTable$lambda$78$Type);
_.fetch_1 = function fetch_14(arg0, arg1, arg2) {
  idwca.$lambda$78(
    this.$$outer_0,
    this.dropCols_1,
    this.state_2,
    arg0,
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$78$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$78$Type", 535);
idwca.$getClass_100 = function $getClass_100() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$8$Type = function JsTable$lambda$8$Type(
  current_0,
  newFilter_1
) {
  this.current_0 = current_0;
  this.newFilter_1 = newFilter_1;
};
defineClass(1218, $wnd.Function, $intern_48, idwca.JsTable$lambda$8$Type);
_.apply_3 = function apply_31(arg0) {
  idwca.lambda$8(this.current_0, this.newFilter_1, castTo(arg0, 129));
};
idwca.$getClass_101 = function $getClass_101() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$80$Type = function JsTable$lambda$80$Type(
  $$outer_0,
  toRelease_1
) {
  this.$$outer_0 = $$outer_0;
  this.toRelease_1 = toRelease_1;
};
defineClass(1277, $wnd.Function, $intern_36, idwca.JsTable$lambda$80$Type);
_.onInvoke_5 = function onInvoke_57(arg0) {
  return idwca.$lambda$80(this.$$outer_0, this.toRelease_1, castTo(arg0, 14));
};
idwca.$getClass_102 = function $getClass_102() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$83$Type = function JsTable$lambda$83$Type() {};
defineClass(1239, $wnd.Function, $intern_36, idwca.JsTable$lambda$83$Type);
_.onInvoke_5 = function onInvoke_58(arg0) {
  return $wnd.Promise.resolve(new idwca.JsColumnStatistics(castTo(arg0, 368)));
};
idwca.JsTable$lambda$84$Type = function JsTable$lambda$84$Type(
  $$outer_0,
  seekRowRequest_1
) {
  this.$$outer_0 = $$outer_0;
  this.seekRowRequest_1 = seekRowRequest_1;
};
defineClass(538, 1, $intern_19, idwca.JsTable$lambda$84$Type);
_.accept = function accept_9(arg0) {
  idwca.$lambda$84(this.$$outer_0, this.seekRowRequest_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_JsTable$lambda$84$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$84$Type", 538);
idwca.$getClass_103 = function $getClass_103() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$86$Type = function JsTable$lambda$86$Type() {};
defineClass(1240, $wnd.Function, $intern_36, idwca.JsTable$lambda$86$Type);
_.onInvoke_5 = function onInvoke_59(arg0) {
  return $wnd.Promise.resolve(
    ji.uncheckedCast(
      toDouble_0(
        jl.__parseAndValidateLong(
          castToNative(
            arg0,
            $wnd.dhinternal.io.deephaven.proto.table_pb.SeekRowResponse
          ).getResultRow()
        )
      )
    )
  );
};
idwca.$getClass_104 = function $getClass_104() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$87$Type = function JsTable$lambda$87$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1241, $wnd.Function, $intern_49, idwca.JsTable$lambda$87$Type);
_.run = function run_10() {
  idwca.$lambda$87(this.$$outer_0);
};
idwca.JsTable$lambda$88$Type = function JsTable$lambda$88$Type(
  $$outer_0,
  pixelCount_1,
  zoomRange_2,
  xCol_3,
  yCols_4
) {
  this.$$outer_0 = $$outer_0;
  this.pixelCount_1 = pixelCount_1;
  this.zoomRange_2 = zoomRange_2;
  this.xCol_3 = xCol_3;
  this.yCols_4 = yCols_4;
};
defineClass(539, 1, {}, idwca.JsTable$lambda$88$Type);
_.fetch_1 = function fetch_15(arg0, arg1, arg2) {
  idwca.$lambda$88(
    this.$$outer_0,
    this.pixelCount_1,
    this.zoomRange_2,
    this.xCol_3,
    this.yCols_4,
    arg0,
    arg1
  );
};
_.pixelCount_1 = 0;
cggl.Lio_deephaven_web_client_api_JsTable$lambda$88$Type_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTable/lambda$88$Type", 539);
idwca.$getClass_105 = function $getClass_105() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$9$Type = function JsTable$lambda$9$Type(filter_0) {
  this.filter_0 = filter_0;
};
defineClass(1219, $wnd.Function, $intern_47, idwca.JsTable$lambda$9$Type);
_.valueOf_0 = function valueOf_17() {
  return "Failed to apply filters: " + ju.toString_62(this.filter_0);
};
idwca.$getClass_106 = function $getClass_106() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$90$Type = function JsTable$lambda$90$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1242, $wnd.Function, $intern_36, idwca.JsTable$lambda$90$Type);
_.onInvoke_5 = function onInvoke_60(arg0) {
  return idwca.$lambda$90(this.$$outer_0, castTo(arg0, 14));
};
idwca.$getClass_107 = function $getClass_107() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$91$Type = function JsTable$lambda$91$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1243, $wnd.Function, {}, idwca.JsTable$lambda$91$Type);
_.onInvoke_4 = function onInvoke_61(arg0) {
  idwca.$processSnapshot(this.$$outer_0);
};
idwca.$getClass_108 = function $getClass_108() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$92$Type = function JsTable$lambda$92$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1244, $wnd.Function, {}, idwca.JsTable$lambda$92$Type);
_.onInvoke_4 = function onInvoke_62(arg0) {
  idwca.$processSnapshot(this.$$outer_0);
};
idwca.$getClass_109 = function $getClass_109() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$93$Type = function JsTable$lambda$93$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1245, $wnd.Function, {}, idwca.JsTable$lambda$93$Type);
_.onInvoke = function onInvoke_63(arg0, arg1, arg2) {
  return idwca.$lambda$93(this.$$outer_0, castTo(arg0, 21));
};
idwca.$getClass_110 = function $getClass_110() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$94$Type = function JsTable$lambda$94$Type(
  $$outer_0,
  current_1,
  updates_2
) {
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.updates_2 = updates_2;
};
defineClass(1285, $wnd.Function, $intern_48, idwca.JsTable$lambda$94$Type);
_.apply_3 = function apply_32(arg0) {
  var lastArg;
  idwca.$lambda$94(
    this.$$outer_0,
    this.current_1,
    ((lastArg = this.updates_2), castTo(arg0, 14), lastArg)
  );
};
idwca.$getClass_111 = function $getClass_111() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$95$Type = function JsTable$lambda$95$Type(
  $$outer_0,
  state_1
) {
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
};
defineClass(1246, $wnd.Function, $intern_49, idwca.JsTable$lambda$95$Type);
_.run = function run_11() {
  idwca.$lambda$95(this.$$outer_0, this.state_1);
};
idwca.$getClass_112 = function $getClass_112() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$96$Type = function JsTable$lambda$96$Type(
  $$outer_0,
  state_1
) {
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
};
defineClass(1247, $wnd.Function, $intern_48, idwca.JsTable$lambda$96$Type);
_.apply_3 = function apply_33(arg0) {
  idwca.$lambda$96(this.$$outer_0, this.state_1, castTo(arg0, 14));
};
idwca.$getClass_113 = function $getClass_113() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$97$Type = function JsTable$lambda$97$Type(
  $$outer_0,
  state_1
) {
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
};
defineClass(1281, $wnd.Function, $intern_49, idwca.JsTable$lambda$97$Type);
_.run = function run_12() {
  idwca.$lambda$97(this.$$outer_0, this.state_1);
};
idwca.$getClass_114 = function $getClass_114() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$98$Type = function JsTable$lambda$98$Type(
  $$outer_0,
  was_1
) {
  this.$$outer_0 = $$outer_0;
  this.was_1 = was_1;
};
defineClass(1248, $wnd.Function, $intern_48, idwca.JsTable$lambda$98$Type);
_.apply_3 = function apply_34(arg0) {
  var lastArg;
  idwca.$lambda$98(
    this.$$outer_0,
    ((lastArg = this.was_1), castTo(arg0, 14), lastArg)
  );
};
idwca.$getClass_115 = function $getClass_115() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTable$lambda$99$Type = function JsTable$lambda$99$Type(
  $$outer_0,
  state_1,
  was_2
) {
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
  this.was_2 = was_2;
};
defineClass(1249, $wnd.Function, $intern_48, idwca.JsTable$lambda$99$Type);
_.apply_3 = function apply_35(arg0) {
  var lastArg;
  idwca.$lambda$99(
    this.$$outer_0,
    this.state_1,
    ((lastArg = this.was_2), castTo(arg0, 14), lastArg)
  );
};
idwca.$getTotalsTableConfig_0 = function $getTotalsTableConfig_0(this$static) {
  var parsed;
  parsed = idwca.parse_0(this$static.directive);
  parsed.groupBy = this$static.groupBy.slice();
  return parsed;
};
idwca.$refreshViewport_0 = function $refreshViewport_0(this$static) {
  this$static.firstRow != null &&
    this$static.lastRow != null &&
    idwca.$setViewport_0(
      this$static,
      jl.$doubleValue(this$static.firstRow),
      jl.$doubleValue(this$static.lastRow),
      this$static.columns_0,
      this$static.updateIntervalMs
    );
};
idwca.$setViewport_0 = function $setViewport_0(
  this$static,
  firstRow,
  lastRow,
  columns,
  updateIntervalMs
) {
  this$static.firstRow = ji.uncheckedCast(firstRow);
  this$static.lastRow = ji.uncheckedCast(lastRow);
  this$static.columns_0 = columns != null ? columns.slice() : null;
  this$static.updateIntervalMs = updateIntervalMs;
  idwca.$setViewport(
    this$static.wrappedTable,
    firstRow,
    lastRow,
    columns,
    updateIntervalMs
  );
};
idwca.$state_0 = function $state_0(this$static) {
  return idwca.$state(this$static.wrappedTable);
};
idwca.JsTotalsTable = function JsTotalsTable(wrappedTable, directive, groupBy) {
  this.wrappedTable = wrappedTable;
  this.directive = directive;
  this.groupBy = groupBy.slice();
};
defineClass(288, 1, { 980: 1, 288: 1, 230: 1 }, idwca.JsTotalsTable);
_.addEventListener = function addEventListener_1(name_0, callback) {
  return idwca.$addEventListener(this.wrappedTable, name_0, callback);
};
_.applyCustomColumns = function applyCustomColumns_0(customColumns) {
  return idwca.$applyCustomColumns(this.wrappedTable, customColumns);
};
_.applyFilter = function applyFilter_1(filter) {
  return idwca.$applyFilter(this.wrappedTable, filter);
};
_.applySort = function applySort_0(sort_0) {
  return idwca.$applySort(this.wrappedTable, sort_0);
};
_.asOfJoin = function asOfJoin_0(
  rightTable,
  columnsToMatch,
  columnsToAdd,
  asOfMatchRule
) {
  return idwca.$asOfJoin(
    this.wrappedTable,
    rightTable,
    columnsToMatch,
    columnsToAdd,
    asOfMatchRule
  );
};
_.close = function close_2() {
  idwca.$close_0(this.wrappedTable);
};
_.crossJoin = function crossJoin_0(
  rightTable,
  columnsToMatch,
  columnsToAdd,
  reserve_bits
) {
  return idwca.$crossJoin(
    this.wrappedTable,
    rightTable,
    columnsToMatch,
    columnsToAdd,
    reserve_bits
  );
};
_.exactJoin = function exactJoin_0(rightTable, columnsToMatch, columnsToAdd) {
  return idwca.$exactJoin(
    this.wrappedTable,
    rightTable,
    columnsToMatch,
    columnsToAdd
  );
};
_.findColumn = function findColumn_0(key) {
  return idwca.$findColumn(this.wrappedTable, key);
};
_.findColumns = function findColumns_0(keys_0) {
  return idwca.$findColumns(this.wrappedTable, keys_0);
};
_.freeze = function freeze_0() {
  return idwca.$freeze(this.wrappedTable);
};
defineProperties(_, {
  columns: {
    get: function getColumns_1() {
      return idwca.$lastVisibleState(this.wrappedTable).columns_0;
    },
  },
});
defineProperties(_, {
  customColumns: {
    get: function getCustomColumns_0() {
      return idwca.$getCustomColumns(this.wrappedTable);
    },
  },
});
defineProperties(_, {
  filter: {
    get: function getFilter_0() {
      return idwca.$getFilter(this.wrappedTable);
    },
  },
});
defineProperties(_, {
  size: {
    get: function getSize_1() {
      return idwca.$getSize(this.wrappedTable);
    },
  },
});
defineProperties(_, {
  sort: {
    get: function getSort_0() {
      return idwca.$getSort(this.wrappedTable);
    },
  },
});
defineProperties(_, {
  totalsTableConfig: {
    get: function getTotalsTableConfig_0() {
      return idwca.$getTotalsTableConfig_0(this);
    },
  },
});
_.getViewportData = function getViewportData_0() {
  return idwca.$getViewportData(this.wrappedTable);
};
_.hasListeners = function hasListeners_0(name_0) {
  return idwca.$hasListeners(this.wrappedTable, name_0);
};
defineProperties(_, {
  isClosed: {
    get: function isClosed_0() {
      return !this.wrappedTable.currentState;
    },
  },
});
defineProperties(_, {
  isRefreshing: {
    get: function isRefreshing_0() {
      return !idwca.$state(this.wrappedTable).isStatic_0;
    },
  },
});
_.join = function join_1(
  joinType,
  rightTable,
  columnsToMatch,
  columnsToAdd,
  asOfMatchRule
) {
  return idwca.$join(
    this.wrappedTable,
    joinType,
    rightTable,
    columnsToMatch,
    columnsToAdd,
    asOfMatchRule
  );
};
_.naturalJoin = function naturalJoin_0(
  rightTable,
  columnsToMatch,
  columnsToAdd
) {
  return idwca.$naturalJoin(
    this.wrappedTable,
    rightTable,
    columnsToMatch,
    columnsToAdd
  );
};
_.nextEvent = function nextEvent_0(eventName, timeoutInMillis) {
  return idwca.$nextEvent(this.wrappedTable, eventName, timeoutInMillis);
};
_.removeEventListener = function removeEventListener_1(name_0, callback) {
  return idwca.$removeEventListener(this.wrappedTable, name_0, callback);
};
_.setViewport = function setViewport_0(
  firstRow,
  lastRow,
  columns,
  updateIntervalMs
) {
  idwca.$setViewport_0(this, firstRow, lastRow, columns, updateIntervalMs);
};
_.snapshot = function snapshot_4(baseTable, doInitialSnapshot, stampColumns) {
  return idwca.$snapshot(
    this.wrappedTable,
    baseTable,
    doInitialSnapshot,
    stampColumns
  );
};
_.state_4 = function state_7() {
  return idwca.$state_0(this);
};
_.toString_0 = function toString_15() {
  return (
    "JsTotalsTable { totalsTableConfig=" +
    idwca.$getTotalsTableConfig_0(this) +
    " }"
  );
};
_.typedTicket_2 = function typedTicket_3() {
  var typedTicket;
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setTicket(
    idwca.$makeTicket(idwca.$state(this.wrappedTable).handle)
  );
  typedTicket.setType("Table");
  return typedTicket;
};
cggl.Lio_deephaven_web_client_api_JsTotalsTable_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "JsTotalsTable",
  288
);
idwca.$clinit_JsTotalsTableConfig = function $clinit_JsTotalsTableConfig() {
  idwca.$clinit_JsTotalsTableConfig = emptyMethod;
  idwca.knownAggTypes = new ju.Arrays$ArrayList(
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      [
        "Count",
        "Min",
        "Max",
        "Sum",
        "AbsSum",
        "Var",
        "Avg",
        "Std",
        "First",
        "Last",
        "CountDistinct",
        "Distinct",
        "Unique",
        "Skip",
      ]
    )
  );
};
idwca.$$init_14 = function $$init_14(this$static) {
  this$static.operationMap = $wnd.Object.create(null);
  this$static.groupBy = new $wnd.Array();
};
idwca.$buildRequest = function $buildRequest(this$static, allColumns) {
  var aggregations,
    aggs,
    colsNeedingCompoundNames,
    columnTypes,
    request,
    seenColNames,
    unusedColumns;
  request = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggregateRequest();
  this$static.customColumns_0 = new $wnd.Array();
  this$static.dropColumns_0 = new $wnd.Array();
  request.setGroupByColumnsList(this$static.groupBy);
  aggregations = new $wnd.Array();
  request.setAggregationsList(aggregations);
  columnTypes = castTo(
    jus.$collect_1(
      new jus.StreamImpl(null, ju.spliterator_5(allColumns, allColumns.length)),
      jus.toMap(
        new idwca.JsTotalsTableConfig$0methodref$getName$Type(),
        new idwca.JsTotalsTableConfig$1methodref$getType$Type(),
        new jus.Collectors$lambda$44$Type(),
        new jus.Collectors$22methodref$ctor$Type()
      )
    ),
    30
  );
  aggs = new ju.HashMap();
  colsNeedingCompoundNames = new ju.ArrayList();
  seenColNames = new ju.HashSet();
  this$static.groupBy.forEach(
    makeLambdaFunction(
      idwca.JsTotalsTableConfig$lambda$5$Type.prototype.onInvoke,
      idwca.JsTotalsTableConfig$lambda$5$Type,
      [seenColNames]
    )
  );
  jb.$forEach_7(
    this$static.operationMap,
    makeLambdaFunction(
      idwca.JsTotalsTableConfig$lambda$6$Type.prototype.onKey,
      idwca.JsTotalsTableConfig$lambda$6$Type,
      [this$static, columnTypes, aggs, seenColNames, colsNeedingCompoundNames]
    )
  );
  unusedColumns = new ju.HashSet_1(columnTypes.keySet());
  ju.$removeAll(unusedColumns, seenColNames);
  ju.$addAll(
    castTo(
      ju.$computeIfAbsent_0(
        aggs,
        this$static.defaultOperation,
        new idwca.JsTotalsTableConfig$lambda$9$Type()
      ),
      128
    ),
    castTo(
      jus.$collect_1(
        jus.$filter_1(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(unusedColumns, 1)
          ),
          new idwca.JsTotalsTableConfig$lambda$10$Type(this$static, columnTypes)
        ),
        jus.of_4(
          new jus.Collectors$21methodref$ctor$Type(),
          new jus.Collectors$20methodref$add$Type(),
          new jus.Collectors$lambda$42$Type(),
          stampJavaTypeInfo(
            getClassLiteralForArray(
              cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
              1
            ),
            $intern_17,
            48,
            0,
            [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
          )
        )
      ),
      53
    )
  );
  ju.$forEach_4(
    aggs,
    new idwca.JsTotalsTableConfig$lambda$11$Type(
      this$static,
      colsNeedingCompoundNames,
      aggregations
    )
  );
  aggregations.length != 0 && request.setAggregationsList(aggregations);
  return request;
};
idwca.$lambda$0_1 = function $lambda$0_1(this$static, key_0) {
  castToJsArray(jb.$get_23(this$static.operationMap, key_0)).forEach(
    makeLambdaFunction(
      idwca.JsTotalsTableConfig$lambda$1$Type.prototype.onInvoke,
      idwca.JsTotalsTableConfig$lambda$1$Type,
      []
    )
  );
};
idwca.$lambda$10 = function $lambda$10(this$static, columnTypes_1, colName_1) {
  return idwcate.canAggregateType(
    this$static.defaultOperation,
    castToString(columnTypes_1.get(colName_1))
  );
};
idwca.$lambda$11 = function $lambda$11(
  this$static,
  colsNeedingCompoundNames_1,
  aggregations_2,
  aggregationType_2,
  cols_3
) {
  var agg, aggColumns, columns, count, sentinel, spec, unique;
  agg = new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation();
  aggColumns = castToJsArray(
    jus.$collect_1(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(cols_3, 1)
        ),
        new idwca.JsTotalsTableConfig$lambda$14$Type(
          colsNeedingCompoundNames_1,
          aggregationType_2
        )
      ),
      jus.of_4(
        new idwca.JsTotalsTableConfig$2methodref$ctor$Type(),
        new idwca.JsTotalsTableConfig$3methodref$push$Type(),
        new idwca.JsTotalsTableConfig$lambda$17$Type(),
        stampJavaTypeInfo(
          getClassLiteralForArray(
            cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
            1
          ),
          $intern_17,
          48,
          0,
          []
        )
      )
    )
  );
  columns = null;
  switch (aggregationType_2) {
    case "Count": {
      count =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationCount();
      count.setColumnName("Count");
      agg.setCount(count);
      aggColumns.forEach(
        makeLambdaFunction(
          idwca.JsTotalsTableConfig$lambda$12$Type.prototype.onInvoke,
          idwca.JsTotalsTableConfig$lambda$12$Type,
          [this$static]
        )
      );
      this$static.dropColumns_0.push("Count");
      break;
    }

    case "CountDistinct": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setCountDistinct(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecCountDistinct()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Distinct": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setDistinct(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecDistinct()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      aggColumns.forEach(
        makeLambdaFunction(
          idwca.JsTotalsTableConfig$lambda$13$Type.prototype.onInvoke,
          idwca.JsTotalsTableConfig$lambda$13$Type,
          [this$static]
        )
      );
      break;
    }

    case "Min": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setMin(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecMin()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Max": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setMax(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecMax()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Sum": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setSum(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecSum()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "AbsSum": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setAbsSum(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecAbsSum()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Var": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setVar(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecVar()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Avg": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setAvg(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecAvg()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Std": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setStd(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecStd()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "First": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setFirst(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecFirst()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Last": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setLast(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecLast()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Unique": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      unique =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecUnique();
      sentinel =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecNonUniqueSentinel();
      sentinel.setNullValue(
        $wnd.dhinternal.io.deephaven.proto.table_pb.NullValue.NULL_VALUE
      );
      unique.setNonUniqueSentinel(sentinel);
      spec.setUnique(unique);
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      columns.setMatchPairsList(aggColumns);
      agg.setColumns(columns);
      break;
    }

    case "Skip": {
      return;
    }

    default:
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          ["Aggregation " + aggregationType_2 + " not supported, ignoring"]
        )
      );
  }
  (columns == null || columns.getMatchPairsList().length > 0) &&
    aggregations_2.push(agg);
};
idwca.$lambda$12 = function $lambda$12(this$static, p0_0) {
  var colName;
  colName = jl.$trim(jl.$split(p0_0, "=")[0]);
  this$static.customColumns_0.push(colName + " = Count");
  return null;
};
idwca.$lambda$13_2 = function $lambda$13_2(this$static, p0_0) {
  var colName;
  colName = jl.$trim(jl.$split(p0_0, "=")[0]);
  this$static.customColumns_0.push(colName + "= `` + " + colName);
  return null;
};
idwca.$lambda$2 = function $lambda$2(this$static, builder_1, key_1) {
  return jl.$append_9(
    jl.$append_9(
      jl.$append_9(((builder_1.string += "" + key_1), builder_1), "="),
      castToJsArray(jb.$get_23(this$static.operationMap, key_1)).join(":")
    ),
    ","
  );
};
idwca.$lambda$6 = function $lambda$6(
  this$static,
  columnTypes_1,
  aggs_2,
  seenColNames_3,
  colsNeedingCompoundNames_4,
  colName_4
) {
  castToJsArray(jb.$get_23(this$static.operationMap, colName_4)).forEach(
    makeLambdaFunction(
      idwca.JsTotalsTableConfig$lambda$7$Type.prototype.onInvoke,
      idwca.JsTotalsTableConfig$lambda$7$Type,
      [
        columnTypes_1,
        colName_4,
        aggs_2,
        seenColNames_3,
        colsNeedingCompoundNames_4,
      ]
    )
  );
};
idwca.$serialize = function $serialize(this$static) {
  var builder;
  builder = new jl.StringBuilder();
  jl.$append_9(
    jl.$append_9(
      jl.$append_9(
        jl.$append_10(
          jl.$append_9(
            jl.$append_10(builder, this$static.showTotalsByDefault),
            ","
          ),
          this$static.showGrandTotalsByDefault
        ),
        ","
      ),
      this$static.defaultOperation
    ),
    ";"
  );
  jb.$forEach_7(
    this$static.operationMap,
    makeLambdaFunction(
      idwca.JsTotalsTableConfig$lambda$2$Type.prototype.onKey,
      idwca.JsTotalsTableConfig$lambda$2$Type,
      [this$static, builder]
    )
  );
  return builder.string;
};
idwca.JsTotalsTableConfig = function JsTotalsTableConfig() {
  idwca.$clinit_JsTotalsTableConfig();
  idwca.$$init_14(this);
};
idwca.JsTotalsTableConfig_0 = function JsTotalsTableConfig_0(source) {
  idwca.$clinit_JsTotalsTableConfig();
  idwca.JsTotalsTableConfig.call(this);
  jb.$has(source, "showTotalsByTable") &&
    (this.showTotalsByDefault = !jb.isFalsy(
      jb.$getAsAny(source, "showTotalsByDefault")
    ));
  jb.$has(source, "showGrandTotalsByDefault") &&
    (this.showGrandTotalsByDefault = !jb.isFalsy(
      jb.$getAsAny(source, "showGrandTotalsByDefault")
    ));
  if (jb.$has(source, "defaultOperation")) {
    this.defaultOperation = jb.$asString_2(
      jb.$getAsAny(source, "defaultOperation")
    );
    idwca.checkOperation(this.defaultOperation);
  }
  if (jb.$has(source, "operationMap")) {
    this.operationMap = jb.$getAsAny(source, "operationMap");
    jb.$forEach_7(
      this.operationMap,
      makeLambdaFunction(
        idwca.JsTotalsTableConfig$lambda$0$Type.prototype.onKey,
        idwca.JsTotalsTableConfig$lambda$0$Type,
        [this]
      )
    );
  }
  jb.$has(source, "groupBy") &&
    (this.groupBy = castToJsArray(jb.$getAsAny(source, "groupBy")));
};
idwca.checkOperation = function checkOperation(op) {
  idwca.$clinit_JsTotalsTableConfig();
  if (ju.$indexOf_1(idwca.knownAggTypes, op) == -1) {
    throw toJs(
      new jl.IllegalArgumentException_0("Operation " + op + " is not supported")
    );
  }
};
idwca.lambda$14 = function lambda$14(
  colsNeedingCompoundNames_0,
  aggregationType_1,
  col_2
) {
  idwca.$clinit_JsTotalsTableConfig();
  if (ju.$indexOf_3(colsNeedingCompoundNames_0, col_2, 0) != -1) {
    return col_2 + "__" + aggregationType_1 + " = " + col_2;
  }
  return col_2;
};
idwca.lambda$5_0 = function lambda$5_0(seenColNames_0, col_1) {
  idwca.$clinit_JsTotalsTableConfig();
  var old;
  return (
    jl.$clinit_Boolean(),
    (old = seenColNames_0.map_0.put(col_1, seenColNames_0)),
    old == null ? ji.uncheckedCast(true) : ji.uncheckedCast(false)
  );
};
idwca.lambda$7 = function lambda$7(
  columnTypes_0,
  colName_1,
  aggs_2,
  seenColNames_3,
  colsNeedingCompoundNames_4,
  agg_5
) {
  idwca.$clinit_JsTotalsTableConfig();
  var old;
  if (
    !idwcate.canAggregateType(agg_5, castToString(columnTypes_0.get(colName_1)))
  ) {
    return null;
  }
  ju.$add_0(
    castTo(
      ju.$computeIfAbsent_0(
        aggs_2,
        agg_5,
        new idwca.JsTotalsTableConfig$lambda$8$Type()
      ),
      128
    ),
    colName_1
  );
  seenColNames_3.map_0.containsKey(colName_1)
    ? ((colsNeedingCompoundNames_4.array[
        colsNeedingCompoundNames_4.array.length
      ] = colName_1),
      true)
    : ((old = seenColNames_3.map_0.put(colName_1, seenColNames_3)),
      old == null);
  return null;
};
idwca.parse_0 = function parse_0(configString) {
  idwca.$clinit_JsTotalsTableConfig();
  var builder,
    columnDirective,
    columnDirective$array,
    columnDirective$index,
    columnDirective$max,
    columnDirectives,
    frontMatter,
    kv,
    op,
    op$array,
    op$index,
    op$max,
    operations,
    splitSemi;
  builder = new idwca.JsTotalsTableConfig();
  if (configString == null || ji.uncheckedCast(configString).length == 0) {
    return builder;
  }
  splitSemi = jl.$split(configString, ";");
  frontMatter = jl.$split(splitSemi[0], ",");
  if (frontMatter.length < 3) {
    throw toJs(
      new jl.IllegalArgumentException_0("Invalid Totals Table: " + configString)
    );
  }
  builder.showTotalsByDefault =
    (jl.$clinit_Boolean(), jl.$equalsIgnoreCase("true", frontMatter[0]));
  builder.showGrandTotalsByDefault = jl.$equalsIgnoreCase(
    "true",
    frontMatter[1]
  );
  builder.defaultOperation = frontMatter[2];
  idwca.checkOperation(builder.defaultOperation);
  if (splitSemi.length > 1) {
    columnDirectives = jl.$split(splitSemi[1], ",");
    for (
      columnDirective$array = columnDirectives,
        columnDirective$index = 0,
        columnDirective$max = columnDirective$array.length;
      columnDirective$index < columnDirective$max;
      ++columnDirective$index
    ) {
      columnDirective = columnDirective$array[columnDirective$index];
      if (ji.uncheckedCast(jl.$trim(columnDirective)).length == 0) continue;
      kv = jl.$split(columnDirective, "=");
      if (kv.length != 2) {
        throw toJs(
          new jl.IllegalArgumentException_0(
            "Invalid Totals Table: " +
              configString +
              ", bad column " +
              columnDirective
          )
        );
      }
      operations = jl.$split(kv[1], ":");
      jb.$set_0(builder.operationMap, kv[0], new $wnd.Array());
      for (
        op$array = operations, op$index = 0, op$max = op$array.length;
        op$index < op$max;
        ++op$index
      ) {
        op = op$array[op$index];
        idwca.checkOperation(op);
        castToJsArray(jb.$get_23(builder.operationMap, kv[0])).push(op);
      }
    }
  }
  return builder;
};
defineClass(
  174,
  1,
  { 174: 1 },
  idwca.JsTotalsTableConfig,
  idwca.JsTotalsTableConfig_0
);
_.toString = function toString_16() {
  return (
    "TotalsTableConfig{showTotalsByDefault=" +
    this.showTotalsByDefault +
    ", showGrandTotalsByDefault=" +
    this.showGrandTotalsByDefault +
    ", defaultOperation='" +
    this.defaultOperation +
    "'" +
    ", operationMap=" +
    $wnd.goog.global.JSON.stringify(this.operationMap) +
    ", groupBy=" +
    this.groupBy +
    "}"
  );
};
_.toString_0 = function () {
  return this.toString();
};
_.defaultOperation = "Sum";
_.showGrandTotalsByDefault = false;
_.showTotalsByDefault = false;
idwca.ABS_SUM = "AbsSum";
idwca.AVG_0 = "Avg";
idwca.COUNT_0 = "Count";
idwca.FIRST = "First";
idwca.LAST = "Last";
idwca.MAX_0 = "Max";
idwca.MIN_0 = "Min";
idwca.SKIP = "Skip";
idwca.STD = "Std";
idwca.SUM_0 = "Sum";
idwca.VAR = "Var";
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig_2_classLit =
  createForClass("io.deephaven.web.client.api", "JsTotalsTableConfig", 174);
idwca.JsTotalsTableConfig$0methodref$getName$Type =
  function JsTotalsTableConfig$0methodref$getName$Type() {};
defineClass(628, 1, {}, idwca.JsTotalsTableConfig$0methodref$getName$Type);
_.apply_1 = function apply_36(arg0) {
  return castTo(arg0, 21).name_0;
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$0methodref$getName$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/0methodref$getName$Type",
    628
  );
idwca.JsTotalsTableConfig$1methodref$getType$Type =
  function JsTotalsTableConfig$1methodref$getType$Type() {};
defineClass(629, 1, {}, idwca.JsTotalsTableConfig$1methodref$getType$Type);
_.apply_1 = function apply_37(arg0) {
  return castTo(arg0, 21).type_0;
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$1methodref$getType$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/1methodref$getType$Type",
    629
  );
idwca.JsTotalsTableConfig$2methodref$ctor$Type =
  function JsTotalsTableConfig$2methodref$ctor$Type() {};
defineClass(635, 1, {}, idwca.JsTotalsTableConfig$2methodref$ctor$Type);
_.get_0 = function get_1() {
  return new $wnd.Array();
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$2methodref$ctor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/2methodref$ctor$Type",
    635
  );
idwca.JsTotalsTableConfig$3methodref$push$Type =
  function JsTotalsTableConfig$3methodref$push$Type() {};
defineClass(636, 1, {}, idwca.JsTotalsTableConfig$3methodref$push$Type);
_.accept_1 = function accept_10(arg0, arg1) {
  castToJsArray(arg0).push(castToString(arg1));
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$3methodref$push$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/3methodref$push$Type",
    636
  );
idwca.$getClass_116 = function $getClass_116() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTotalsTableConfig$lambda$0$Type =
  function JsTotalsTableConfig$lambda$0$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1423, $wnd.Function, {}, idwca.JsTotalsTableConfig$lambda$0$Type);
_.onKey = function onKey(arg0) {
  idwca.$lambda$0_1(this.$$outer_0, arg0);
};
idwca.$getClass_117 = function $getClass_117() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTotalsTableConfig$lambda$1$Type =
  function JsTotalsTableConfig$lambda$1$Type() {};
defineClass(1427, $wnd.Function, {}, idwca.JsTotalsTableConfig$lambda$1$Type);
_.onInvoke = function onInvoke_64(arg0, arg1, arg2) {
  return (
    idwca.$clinit_JsTotalsTableConfig(),
    idwca.checkOperation(castToString(arg0)),
    null
  );
};
idwca.JsTotalsTableConfig$lambda$10$Type =
  function JsTotalsTableConfig$lambda$10$Type($$outer_0, columnTypes_1) {
    this.$$outer_0 = $$outer_0;
    this.columnTypes_1 = columnTypes_1;
  };
defineClass(632, 1, {}, idwca.JsTotalsTableConfig$lambda$10$Type);
_.test_0 = function test_3(arg0) {
  return idwca.$lambda$10(
    this.$$outer_0,
    this.columnTypes_1,
    castToString(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$lambda$10$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/lambda$10$Type",
    632
  );
idwca.JsTotalsTableConfig$lambda$11$Type =
  function JsTotalsTableConfig$lambda$11$Type(
    $$outer_0,
    colsNeedingCompoundNames_1,
    aggregations_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.colsNeedingCompoundNames_1 = colsNeedingCompoundNames_1;
    this.aggregations_2 = aggregations_2;
  };
defineClass(633, 1, {}, idwca.JsTotalsTableConfig$lambda$11$Type);
_.accept_1 = function accept_11(arg0, arg1) {
  idwca.$lambda$11(
    this.$$outer_0,
    this.colsNeedingCompoundNames_1,
    this.aggregations_2,
    castToString(arg0),
    castTo(arg1, 128)
  );
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$lambda$11$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/lambda$11$Type",
    633
  );
idwca.$getClass_118 = function $getClass_118() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTotalsTableConfig$lambda$12$Type =
  function JsTotalsTableConfig$lambda$12$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1429, $wnd.Function, {}, idwca.JsTotalsTableConfig$lambda$12$Type);
_.onInvoke = function onInvoke_65(arg0, arg1, arg2) {
  return idwca.$lambda$12(this.$$outer_0, castToString(arg0));
};
idwca.$getClass_119 = function $getClass_119() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTotalsTableConfig$lambda$13$Type =
  function JsTotalsTableConfig$lambda$13$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1430, $wnd.Function, {}, idwca.JsTotalsTableConfig$lambda$13$Type);
_.onInvoke = function onInvoke_66(arg0, arg1, arg2) {
  return idwca.$lambda$13_2(this.$$outer_0, castToString(arg0));
};
idwca.JsTotalsTableConfig$lambda$14$Type =
  function JsTotalsTableConfig$lambda$14$Type(
    colsNeedingCompoundNames_0,
    aggregationType_1
  ) {
    this.colsNeedingCompoundNames_0 = colsNeedingCompoundNames_0;
    this.aggregationType_1 = aggregationType_1;
  };
defineClass(634, 1, {}, idwca.JsTotalsTableConfig$lambda$14$Type);
_.apply_1 = function apply_38(arg0) {
  return idwca.lambda$14(
    this.colsNeedingCompoundNames_0,
    this.aggregationType_1,
    castToString(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$lambda$14$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/lambda$14$Type",
    634
  );
idwca.JsTotalsTableConfig$lambda$17$Type =
  function JsTotalsTableConfig$lambda$17$Type() {};
defineClass(637, 1, {}, idwca.JsTotalsTableConfig$lambda$17$Type);
_.apply_4 = function apply_39(arg0, arg1) {
  var $instance;
  return (
    idwca.$clinit_JsTotalsTableConfig(),
    ($instance = castToJsArray(arg0)),
    $instance.concat.apply(
      $instance,
      ensureNotNull(
        castTo(
          ji.stampJavaTypeInfo_1(
            castToJsArray(arg1),
            initUnidimensionalArray(
              cggl.Ljava_lang_String_2_classLit,
              $intern_8,
              2,
              0,
              6,
              1
            )
          ),
          12
        )
      )
    )
  );
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$lambda$17$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/lambda$17$Type",
    637
  );
idwca.$getClass_120 = function $getClass_120() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTotalsTableConfig$lambda$2$Type =
  function JsTotalsTableConfig$lambda$2$Type($$outer_0, builder_1) {
    this.$$outer_0 = $$outer_0;
    this.builder_1 = builder_1;
  };
defineClass(1424, $wnd.Function, {}, idwca.JsTotalsTableConfig$lambda$2$Type);
_.onKey = function onKey_0(arg0) {
  idwca.$lambda$2(this.$$outer_0, this.builder_1, arg0);
};
idwca.$getClass_121 = function $getClass_121() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTotalsTableConfig$lambda$5$Type =
  function JsTotalsTableConfig$lambda$5$Type(seenColNames_0) {
    this.seenColNames_0 = seenColNames_0;
  };
defineClass(1425, $wnd.Function, {}, idwca.JsTotalsTableConfig$lambda$5$Type);
_.onInvoke = function onInvoke_67(arg0, arg1, arg2) {
  return idwca.lambda$5_0(this.seenColNames_0, castToString(arg0));
};
idwca.$getClass_122 = function $getClass_122() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTotalsTableConfig$lambda$6$Type =
  function JsTotalsTableConfig$lambda$6$Type(
    $$outer_0,
    columnTypes_1,
    aggs_2,
    seenColNames_3,
    colsNeedingCompoundNames_4
  ) {
    this.$$outer_0 = $$outer_0;
    this.columnTypes_1 = columnTypes_1;
    this.aggs_2 = aggs_2;
    this.seenColNames_3 = seenColNames_3;
    this.colsNeedingCompoundNames_4 = colsNeedingCompoundNames_4;
  };
defineClass(1426, $wnd.Function, {}, idwca.JsTotalsTableConfig$lambda$6$Type);
_.onKey = function onKey_1(arg0) {
  idwca.$lambda$6(
    this.$$outer_0,
    this.columnTypes_1,
    this.aggs_2,
    this.seenColNames_3,
    this.colsNeedingCompoundNames_4,
    arg0
  );
};
idwca.$getClass_123 = function $getClass_123() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.JsTotalsTableConfig$lambda$7$Type =
  function JsTotalsTableConfig$lambda$7$Type(
    columnTypes_0,
    colName_1,
    aggs_2,
    seenColNames_3,
    colsNeedingCompoundNames_4
  ) {
    this.columnTypes_0 = columnTypes_0;
    this.colName_1 = colName_1;
    this.aggs_2 = aggs_2;
    this.seenColNames_3 = seenColNames_3;
    this.colsNeedingCompoundNames_4 = colsNeedingCompoundNames_4;
  };
defineClass(1428, $wnd.Function, {}, idwca.JsTotalsTableConfig$lambda$7$Type);
_.onInvoke = function onInvoke_68(arg0, arg1, arg2) {
  return idwca.lambda$7(
    this.columnTypes_0,
    this.colName_1,
    this.aggs_2,
    this.seenColNames_3,
    this.colsNeedingCompoundNames_4,
    castToString(arg0)
  );
};
idwca.JsTotalsTableConfig$lambda$8$Type =
  function JsTotalsTableConfig$lambda$8$Type() {};
defineClass(630, 1, {}, idwca.JsTotalsTableConfig$lambda$8$Type);
_.apply_1 = function apply_40(arg0) {
  return (
    castToString(arg0),
    idwca.$clinit_JsTotalsTableConfig(),
    new ju.LinkedHashSet()
  );
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$lambda$8$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/lambda$8$Type",
    630
  );
idwca.JsTotalsTableConfig$lambda$9$Type =
  function JsTotalsTableConfig$lambda$9$Type() {};
defineClass(631, 1, {}, idwca.JsTotalsTableConfig$lambda$9$Type);
_.apply_1 = function apply_41(arg0) {
  return (
    castToString(arg0),
    idwca.$clinit_JsTotalsTableConfig(),
    new ju.LinkedHashSet()
  );
};
cggl.Lio_deephaven_web_client_api_JsTotalsTableConfig$lambda$9$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "JsTotalsTableConfig/lambda$9$Type",
    631
  );
idwca.JsWorkerHeapInfo = function JsWorkerHeapInfo(heapInfo) {
  this.maximumHeapSize_0 = jl.__parseAndValidateLong(heapInfo.getMaxMemory());
  this.freeMemory_0 = jl.__parseAndValidateLong(heapInfo.getFreeMemory());
  this.totalHeapSize_0 = jl.__parseAndValidateLong(heapInfo.getTotalMemory());
};
defineClass(834, 1, {}, idwca.JsWorkerHeapInfo);
defineProperties(_, {
  freeMemory: {
    get: function getFreeMemory() {
      return toDouble_0(this.freeMemory_0);
    },
  },
});
defineProperties(_, {
  maximumHeapSize: {
    get: function getMaximumHeapSize() {
      return toDouble_0(this.maximumHeapSize_0);
    },
  },
});
defineProperties(_, {
  totalHeapSize: {
    get: function getTotalHeapSize() {
      return toDouble_0(this.totalHeapSize_0);
    },
  },
});
_.freeMemory_0 = 0;
_.maximumHeapSize_0 = 0;
_.totalHeapSize_0 = 0;
cggl.Lio_deephaven_web_client_api_JsWorkerHeapInfo_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "JsWorkerHeapInfo",
  834
);
idwca.LazyString = function LazyString(expensiveThing) {
  this.expensiveThing = expensiveThing;
};
idwca.of_1 = function of_1(obj) {
  if (obj != null && cggl.isFunction(obj)) {
    return new idwca.LazyString(castToFunction(obj));
  }
  return new idwca.LazyString(
    makeLambdaFunction(
      idwca.LazyString$lambda$0$Type.prototype.valueOf_0,
      idwca.LazyString$lambda$0$Type,
      [obj]
    )
  );
};
idwca.resolve = function resolve(msgs) {
  var copy, cp, i;
  copy =
    (idwca.$clinit_JsLazy(),
    new idwca.JsLazy(
      new idwca.JsLazy$lambda$3$Type(new idwca.LazyString$lambda$1$Type(), msgs)
    ));
  for (i = msgs.length; i-- > 0; ) {
    if (instanceOf(msgs[i], 102)) {
      cp = castToArray(copy.supplier.valueOf_0());
      setCheck(cp, i, toString_7(msgs[i]));
    }
  }
  return instanceOf(copy.supplier, 82)
    ? castToArray(copy.supplier.valueOf_0())
    : msgs;
};
defineClass(102, 1, { 102: 1 }, idwca.LazyString);
_.toString_0 = function toString_17() {
  return valueOf_31(this.expensiveThing.call(null));
};
cggl.Lio_deephaven_web_client_api_LazyString_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "LazyString",
  102
);
idwca.$getClass_124 = function $getClass_124() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.LazyString$lambda$0$Type = function LazyString$lambda$0$Type(obj_0) {
  this.obj_0 = obj_0;
};
defineClass(1546, $wnd.Function, $intern_47, idwca.LazyString$lambda$0$Type);
_.valueOf_0 = function valueOf_18() {
  return this.obj_0;
};
idwca.$apply = function $apply(arg0) {
  return ji.stampJavaTypeInfo_1(
    $wnd.Array.of.apply(null, ensureNotNull(castToArray(arg0))),
    initUnidimensionalArray(
      cggl.Ljava_lang_Object_2_classLit,
      $intern_7,
      1,
      0,
      5,
      1
    )
  );
};
idwca.LazyString$lambda$1$Type = function LazyString$lambda$1$Type() {};
defineClass(744, 1, {}, idwca.LazyString$lambda$1$Type);
_.apply_1 = function apply_42(arg0) {
  return idwca.$apply(arg0);
};
cggl.Lio_deephaven_web_client_api_LazyString$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "LazyString/lambda$1$Type",
    744
  );
idwca.$clinit_LocalDateWrapper = function $clinit_LocalDateWrapper() {
  idwca.$clinit_LocalDateWrapper = emptyMethod;
  idwca.YEAR_FORMAT =
    (cggic.$clinit_NumberFormat(),
    new cggic.NumberFormat_0("0000", cggic.$getDefaultNative()));
  idwca.MONTH_DAY_FORMAT = new cggic.NumberFormat_0(
    "00",
    cggic.$getDefaultNative()
  );
};
idwca.$getDayOfMonth = function $getDayOfMonth(this$static) {
  return this$static.dayOfMonth;
};
idwca.$getMonthValue = function $getMonthValue(this$static) {
  return this$static.monthValue;
};
idwca.$getYear = function $getYear(this$static) {
  return this$static.year_0;
};
idwca.$toString_6 = function $toString_6(this$static) {
  return (
    cggic.$format(idwca.YEAR_FORMAT, this$static.year_0) +
    "-" +
    cggic.$format(idwca.MONTH_DAY_FORMAT, this$static.monthValue) +
    "-" +
    cggic.$format(idwca.MONTH_DAY_FORMAT, this$static.dayOfMonth)
  );
};
idwca.LocalDateWrapper = function LocalDateWrapper(
  year,
  monthValue,
  dayOfMonth
) {
  idwca.$clinit_LocalDateWrapper();
  this.year_0 = year;
  this.monthValue = monthValue;
  this.dayOfMonth = dayOfMonth;
};
idwca.LocalDateWrapper_0 = function LocalDateWrapper_0(localDate) {
  idwca.$clinit_LocalDateWrapper();
  this.year_0 = localDate.year_0;
  this.monthValue = localDate.monthValue;
  this.dayOfMonth = localDate.dayOfMonth;
};
defineClass(
  209,
  1,
  { 209: 1 },
  idwca.LocalDateWrapper,
  idwca.LocalDateWrapper_0
);
_.getDayOfMonth = function getDayOfMonth() {
  return idwca.$getDayOfMonth(this);
};
_.getMonthValue = function getMonthValue() {
  return idwca.$getMonthValue(this);
};
_.getYear = function getYear() {
  return idwca.$getYear(this);
};
_.toString = function toString_18() {
  return idwca.$toString_6(this);
};
_.toString_0 = function () {
  return this.toString();
};
_.valueOf = function valueOf_19() {
  return (
    cggic.$format(idwca.YEAR_FORMAT, this.year_0) +
    "-" +
    cggic.$format(idwca.MONTH_DAY_FORMAT, this.monthValue) +
    "-" +
    cggic.$format(idwca.MONTH_DAY_FORMAT, this.dayOfMonth)
  );
};
_.dayOfMonth = 0;
_.monthValue = 0;
_.year_0 = 0;
cggl.Lio_deephaven_web_client_api_LocalDateWrapper_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "LocalDateWrapper",
  209
);
idwca.$clinit_LocalTimeWrapper = function $clinit_LocalTimeWrapper() {
  idwca.$clinit_LocalTimeWrapper = emptyMethod;
  idwca.TWO_DIGIT_FORMAT =
    (cggic.$clinit_NumberFormat(),
    new cggic.NumberFormat_0("00", cggic.$getDefaultNative()));
  idwca.NANOS_FORMAT = new cggic.NumberFormat_0(
    "000000000",
    cggic.$getDefaultNative()
  );
};
idwca.$toString_7 = function $toString_7(this$static) {
  return (
    cggic.$format(idwca.TWO_DIGIT_FORMAT, this$static.localTime.hour) +
    ":" +
    cggic.$format(idwca.TWO_DIGIT_FORMAT, this$static.localTime.minute) +
    ":" +
    cggic.$format(idwca.TWO_DIGIT_FORMAT, this$static.localTime.second) +
    "." +
    cggic.$format(idwca.NANOS_FORMAT, this$static.localTime.nano)
  );
};
idwca.LocalTimeWrapper = function LocalTimeWrapper(localTime) {
  idwca.$clinit_LocalTimeWrapper();
  this.localTime = localTime;
};
defineClass(256, 1, { 256: 1 }, idwca.LocalTimeWrapper);
_.getHour = function getHour() {
  return this.localTime.hour;
};
_.getMinute = function getMinute() {
  return this.localTime.minute;
};
_.getNano = function getNano() {
  return this.localTime.nano;
};
_.getSecond = function getSecond() {
  return this.localTime.second;
};
_.toString = function toString_19() {
  return idwca.$toString_7(this);
};
_.toString_0 = function () {
  return this.toString();
};
_.valueOf = function valueOf_20() {
  return (
    cggic.$format(idwca.TWO_DIGIT_FORMAT, this.localTime.hour) +
    ":" +
    cggic.$format(idwca.TWO_DIGIT_FORMAT, this.localTime.minute) +
    ":" +
    cggic.$format(idwca.TWO_DIGIT_FORMAT, this.localTime.second) +
    "." +
    cggic.$format(idwca.NANOS_FORMAT, this.localTime.nano)
  );
};
cggl.Lio_deephaven_web_client_api_LocalTimeWrapper_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "LocalTimeWrapper",
  256
);
idwca.$getMicros = function $getMicros(this$static) {
  return this$static.micros_0;
};
idwca.$setLogLevel = function $setLogLevel(this$static, logLevel) {
  this$static.logLevel_0 = logLevel;
};
idwca.$setMessage = function $setMessage(this$static, message) {
  this$static.message_0 = message;
};
idwca.$setMicros = function $setMicros(this$static, timestamp) {
  this$static.micros_0 = timestamp;
};
idwca.LogItem = function LogItem() {};
defineClass(223, 1, { 223: 1, 3: 1 }, idwca.LogItem);
defineProperties(_, {
  logLevel: {
    get: function getLogLevel() {
      return this.logLevel_0;
    },
  },
});
defineProperties(_, {
  message: {
    get: function getMessage_1() {
      return this.message_0;
    },
  },
});
defineProperties(_, {
  micros: {
    get: function getMicros() {
      return idwca.$getMicros(this);
    },
  },
});
_.micros_0 = 0;
cggl.Lio_deephaven_web_client_api_LogItem_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "LogItem",
  223
);
idwca.$getToken = function $getToken(this$static) {
  return this$static.token_0;
};
idwca.$getType_0 = function $getType_0(this$static) {
  return this$static.type_0;
};
idwca.$getUsername = function $getUsername(this$static) {
  return this$static.username_0;
};
idwca.$setToken = function $setToken(this$static, token) {
  this$static.token_0 = token;
};
idwca.$setType = function $setType(this$static, type_0) {
  this$static.type_0 = type_0;
};
idwca.LoginCredentials = function LoginCredentials() {};
idwca.LoginCredentials_0 = function LoginCredentials_0(source) {
  jb.$has(source, "username") &&
    (this.username_0 = jb.$asString_2(jb.$getAsAny(source, "username")));
  jb.$has(source, "token") &&
    (this.token_0 = jb.$asString_2(jb.$getAsAny(source, "token")));
  jb.$has(source, "type") &&
    (this.type_0 = jb.$asString_2(jb.$getAsAny(source, "type")));
};
idwca.reconnect_0 = function reconnect_0(token) {
  var loginCredentials;
  loginCredentials = new idwca.LoginCredentials();
  loginCredentials.type_0 = "Bearer";
  loginCredentials.token_0 = token;
  return loginCredentials;
};
defineClass(
  210,
  1,
  { 210: 1 },
  idwca.LoginCredentials,
  idwca.LoginCredentials_0
);
defineProperties(_, {
  token: {
    get: function getToken() {
      return idwca.$getToken(this);
    },
  },
});
defineProperties(_, {
  type: {
    get: function getType_2() {
      return idwca.$getType_0(this);
    },
  },
});
defineProperties(_, {
  username: {
    get: function getUsername() {
      return idwca.$getUsername(this);
    },
  },
});
defineProperties(_, {
  token: {
    set: function setToken(token) {
      idwca.$setToken(this, token);
    },
  },
});
defineProperties(_, {
  type: {
    set: function setType(type_0) {
      idwca.$setType(this, type_0);
    },
  },
});
defineProperties(_, {
  username: {
    set: function setUsername(username) {
      this.username_0 = username;
    },
  },
});
cggl.Lio_deephaven_web_client_api_LoginCredentials_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "LoginCredentials",
  210
);
idwca.$$init_15 = function $$init_15(this$static) {
  this$static.sessions = new ju.ArrayList();
  this$static.cancelled = new $wnd.Set();
};
idwca.$close_1 = function $close_1(this$static) {
  instanceOf(this$static.connection.supplier, 82) &&
    idwca.$forceClose(castTo(this$static.connection.supplier.valueOf_0(), 58));
  this$static.closed_0 = true;
};
idwca.$connected = function $connected(this$static) {
  var listeners;
  if (this$static.closed_0) {
    return;
  }
  this$static.connected = true;
  this$static.notifiedConnectionError = false;
  idwca.$fireEvent_1(this$static, "connect", jb.emptyObjectLiteral());
  this$static.hasDisconnected &&
    ((listeners = castToJsArray(jb.$get_23(this$static.map_0, "reconnect"))),
    listeners != null && listeners.length > 0
      ? idwca.$fireEvent_1(this$static, "reconnect", jb.emptyObjectLiteral())
      : $wnd.goog.global.console.log(
          "IdeConnection on " +
            this$static.serverUrl +
            ": " +
            "Query reconnected (to prevent this log message, handle the EVENT_RECONNECT event)"
        ));
};
idwca.$disconnected_0 = function $disconnected_0(this$static) {
  var listeners;
  this$static.connected = false;
  this$static.hasDisconnected = true;
  listeners = castToJsArray(jb.$get_23(this$static.map_0, "disconnect"));
  listeners != null && listeners.length > 0
    ? idwca.$fireEvent_1(this$static, "disconnect", jb.emptyObjectLiteral())
    : $wnd.goog.global.console.log(
        "IdeConnection on " +
          this$static.serverUrl +
          ": " +
          "Query disconnected (to prevent this log message, handle the EVENT_DISCONNECT event)"
      );
};
idwca.$lambda$1_1 = function $lambda$1_1(this$static, resolve_0, reject_1) {
  idwca.$addEventListenerOneShot_0(
    this$static,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_HasEventHandling$EventPair_2_classLit,
        1
      ),
      $intern_7,
      171,
      0,
      [
        idwca.of_0(
          "connect",
          makeLambdaFunction(
            idwca.QueryConnectable$lambda$2$Type.prototype.onEvent,
            idwca.QueryConnectable$lambda$2$Type,
            [resolve_0]
          )
        ),
        idwca.of_0(
          "disconnect",
          makeLambdaFunction(
            idwca.QueryConnectable$lambda$3$Type.prototype.onEvent,
            idwca.QueryConnectable$lambda$3$Type,
            [reject_1]
          )
        ),
      ]
    )
  );
};
idwca.$lambda$12_0 = function $lambda$12_0(
  this$static,
  ticket_1,
  closer_2,
  result_2
) {
  var session;
  if (this$static.cancelled.has(ticket_1)) {
    throw toJs(new jl.RuntimeException_1("User cancelled request"));
  }
  session = new idwci.IdeSession(
    castTo(this$static.connection.supplier.valueOf_0(), 58),
    result_2,
    closer_2
  );
  ju.$add(this$static.sessions, session);
  return session;
};
idwca.$lambda$13_3 = function $lambda$13_3(this$static, callback_0) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.GetConsoleTypesRequest();
  castTo(
    this$static.connection.supplier.valueOf_0(),
    58
  ).consoleServiceClient.getConsoleTypes(
    request,
    castTo(this$static.connection.supplier.valueOf_0(), 58).metadata_0,
    makeLambdaFunction(
      idwca.QueryConnectable$1methodref$apply$Type.prototype.onInvoke_18,
      idwca.QueryConnectable$1methodref$apply$Type,
      [callback_0]
    )
  );
};
idwca.$lambda$16_0 = function $lambda$16_0(this$static, callback_0) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.GetHeapInfoRequest();
  castTo(
    this$static.connection.supplier.valueOf_0(),
    58
  ).consoleServiceClient.getHeapInfo(
    request,
    castTo(this$static.connection.supplier.valueOf_0(), 58).metadata_0,
    makeLambdaFunction(
      idwca.QueryConnectable$2methodref$apply$Type.prototype.onInvoke_19,
      idwca.QueryConnectable$2methodref$apply$Type,
      [callback_0]
    )
  );
};
idwca.$lambda$6_0 = function $lambda$6_0(this$static, ticket_1) {
  var run;
  run = !this$static.cancelled.has(ticket_1);
  if (run) {
    this$static.cancelled.add(ticket_1);
    idwca.$releaseTicket(
      castTo(this$static.connection.supplier.valueOf_0(), 58),
      ticket_1
    );
  }
};
idwca.$lambda$8 = function $lambda$8(
  this$static,
  type_1,
  ticket_2,
  callback_2
) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.StartConsoleRequest();
  request.setSessionType(type_1);
  request.setResultId(ticket_2);
  castTo(
    this$static.connection.supplier.valueOf_0(),
    58
  ).consoleServiceClient.startConsole(
    request,
    castTo(this$static.connection.supplier.valueOf_0(), 58).metadata_0,
    makeLambdaFunction(
      idwca.QueryConnectable$0methodref$apply$Type.prototype.onInvoke_21,
      idwca.QueryConnectable$0methodref$apply$Type,
      [callback_2]
    )
  );
};
idwca.$notifyConnectionError = function $notifyConnectionError(
  this$static,
  status_0
) {
  var event_0, listeners;
  if (
    this$static.notifiedConnectionError ||
    ((listeners = castToJsArray(
      jb.$get_23(this$static.map_0, "hack-connection-failure")
    )),
    !(listeners != null && listeners.length > 0))
  ) {
    return;
  }
  this$static.notifiedConnectionError = true;
  event_0 = jb.emptyObjectLiteral();
  event_0.detail = jb.of_8(
    "status",
    status_0.code,
    "details",
    status_0.details,
    "metadata",
    status_0.metadata
  );
  idwca.$fireEvent_0(
    this$static,
    "hack-connection-failure",
    new $wnd.CustomEvent("hack-connection-failure", event_0)
  );
  idwcf.warn(
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
      $intern_7,
      1,
      5,
      [
        "The event dh.IdeConnection.HACK_CONNECTION_FAILURE is deprecated and will be removed in a later release",
      ]
    )
  );
};
idwca.$onConnected = function $onConnected(this$static) {
  if (this$static.connected) {
    return $wnd.Promise.resolve(null);
  }
  if (this$static.closed_0) {
    return $wnd.Promise.reject("Connection already closed");
  }
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.QueryConnectable$lambda$1$Type.prototype.onInvoke_6,
      idwca.QueryConnectable$lambda$1$Type,
      [this$static]
    )
  );
};
idwca.$startSession = function $startSession(this$static, type_0) {
  var closer, config, promise, ticket;
  promise = new idwcf.LazyPromise();
  config = castTo(this$static.connection.supplier.valueOf_0(), 58).config;
  ticket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket();
  ticket.setTicket(idwca.$newTicketRaw(config));
  closer = makeLambdaFunction(
    idwca.QueryConnectable$lambda$6$Type.prototype.run,
    idwca.QueryConnectable$lambda$6$Type,
    [this$static, ticket]
  );
  idwca
    .$onConnected(this$static)
    .then(
      makeLambdaFunction(
        idwca.QueryConnectable$lambda$7$Type.prototype.onInvoke_5,
        idwca.QueryConnectable$lambda$7$Type,
        [this$static, type_0, ticket]
      )
    )
    .then(
      makeLambdaFunction(
        idwca.QueryConnectable$lambda$10$Type.prototype.onInvoke_5,
        idwca.QueryConnectable$lambda$10$Type,
        [promise, ticket]
      ),
      makeLambdaFunction(
        idwca.QueryConnectable$lambda$11$Type.prototype.onInvoke_5,
        idwca.QueryConnectable$lambda$11$Type,
        [promise]
      )
    );
  return idwcf.$asPromise_0(
    promise,
    makeLambdaFunction(
      idwca.QueryConnectable$lambda$12$Type.prototype.apply_1,
      idwca.QueryConnectable$lambda$12$Type,
      [this$static, ticket, closer]
    ),
    closer
  );
};
idwca.QueryConnectable = function QueryConnectable() {
  idwca.HasEventHandling.call(this);
  idwca.$$init_15(this);
  this.connection =
    (idwca.$clinit_JsLazy(),
    new idwca.JsLazy(new idwca.QueryConnectable$lambda$0$Type(this)));
};
idwca.lambda$4_1 = function lambda$4_1(
  cancel_0,
  DO_NOTHING_1,
  connect_2,
  callback_3,
  f_5
) {
  f_5 == null &&
    maskUndefined(cancel_0[0]) === maskUndefined(DO_NOTHING_1) &&
    setCheck(cancel_0, 0, idwca.$subscribeToLogs(connect_2, callback_3));
};
idwca.lambda$5_1 = function lambda$5_1(cancel_0) {
  if (cancel_0[0] != null) {
    cancel_0[0]();
    setCheck(cancel_0, 0, null);
  }
};
defineClass(257, 57, $intern_51);
_.getConsoleTypes = function getConsoleTypes() {
  var promise;
  promise = new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwca.QueryConnectable$lambda$13$Type(this)]
    )
  );
  return promise.then(
    makeLambdaFunction(
      idwca.QueryConnectable$lambda$15$Type.prototype.onInvoke_5,
      idwca.QueryConnectable$lambda$15$Type,
      []
    )
  );
};
_.getWorkerHeapInfo = function getWorkerHeapInfo() {
  var promise;
  promise = new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwca.QueryConnectable$lambda$16$Type(this)]
    )
  );
  return promise.then(
    makeLambdaFunction(
      idwca.QueryConnectable$lambda$18$Type.prototype.onInvoke_5,
      idwca.QueryConnectable$lambda$18$Type,
      []
    )
  );
};
_.onLogMessage = function onLogMessage(callback) {
  var DO_NOTHING, cancel, connect;
  connect = castTo(this.connection.supplier.valueOf_0(), 58);
  DO_NOTHING = (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0);
  cancel = stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit,
      1
    ),
    $intern_7,
    32,
    11,
    [DO_NOTHING]
  );
  idwca.$onOpen(
    connect,
    new idwca.QueryConnectable$lambda$4$Type(
      cancel,
      DO_NOTHING,
      connect,
      callback
    )
  );
  return makeLambdaFunction(
    idwca.QueryConnectable$lambda$5$Type.prototype.run,
    idwca.QueryConnectable$lambda$5$Type,
    [cancel]
  );
};
_.startSession = function startSession(type_0) {
  return idwca.$startSession(this, type_0);
};
_.closed_0 = false;
_.connected = false;
_.hasDisconnected = false;
_.notifiedConnectionError = false;
cggl.Lio_deephaven_web_client_api_QueryConnectable_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "QueryConnectable",
  257
);
idwca.$getClass_125 = function $getClass_125() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$0methodref$apply$Type =
  function QueryConnectable$0methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1480,
  $wnd.Function,
  {},
  idwca.QueryConnectable$0methodref$apply$Type
);
_.onInvoke_21 = function onInvoke_69(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_126 = function $getClass_126() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$1methodref$apply$Type =
  function QueryConnectable$1methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1482,
  $wnd.Function,
  {},
  idwca.QueryConnectable$1methodref$apply$Type
);
_.onInvoke_18 = function onInvoke_70(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_127 = function $getClass_127() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$2methodref$apply$Type =
  function QueryConnectable$2methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1484,
  $wnd.Function,
  {},
  idwca.QueryConnectable$2methodref$apply$Type
);
_.onInvoke_19 = function onInvoke_71(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.QueryConnectable$lambda$0$Type = function QueryConnectable$lambda$0$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(676, 1, {}, idwca.QueryConnectable$lambda$0$Type);
_.valueOf_0 = function valueOf_21() {
  return new idwca.WorkerConnection(this.$$outer_0);
};
cggl.Lio_deephaven_web_client_api_QueryConnectable$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "QueryConnectable/lambda$0$Type",
    676
  );
idwca.$getClass_128 = function $getClass_128() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$1$Type = function QueryConnectable$lambda$1$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1468, $wnd.Function, {}, idwca.QueryConnectable$lambda$1$Type);
_.onInvoke_6 = function onInvoke_72(arg0, arg1) {
  idwca.$lambda$1_1(this.$$outer_0, arg0, arg1);
};
idwca.$getClass_129 = function $getClass_129() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$10$Type =
  function QueryConnectable$lambda$10$Type(promise_0, ticket_1) {
    this.promise_0 = promise_0;
    this.ticket_1 = ticket_1;
  };
defineClass(
  1472,
  $wnd.Function,
  $intern_36,
  idwca.QueryConnectable$lambda$10$Type
);
_.onInvoke_5 = function onInvoke_73(arg0) {
  return idwcf.$succeed(this.promise_0, this.ticket_1), null;
};
idwca.$getClass_130 = function $getClass_130() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$11$Type =
  function QueryConnectable$lambda$11$Type(promise_0) {
    this.promise_0 = promise_0;
  };
defineClass(1473, $wnd.Function, {}, idwca.QueryConnectable$lambda$11$Type);
_.onInvoke_5 = function onInvoke_74(arg0) {
  return idwcf.$fail(this.promise_0, arg0), null;
};
idwca.$apply_0 = function $apply_0(this$static, arg0) {
  return idwca.$lambda$12_0(
    this$static.$$outer_0,
    this$static.ticket_1,
    this$static.closer_2,
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket)
  );
};
idwca.$getClass_131 = function $getClass_131() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$12$Type =
  function QueryConnectable$lambda$12$Type($$outer_0, ticket_1, closer_2) {
    this.$$outer_0 = $$outer_0;
    this.ticket_1 = ticket_1;
    this.closer_2 = closer_2;
  };
defineClass(
  1474,
  $wnd.Function,
  $intern_34,
  idwca.QueryConnectable$lambda$12$Type
);
_.apply_1 = function apply_43(arg0) {
  return idwca.$apply_0(this, arg0);
};
idwca.QueryConnectable$lambda$13$Type =
  function QueryConnectable$lambda$13$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(679, 1, $intern_19, idwca.QueryConnectable$lambda$13$Type);
_.accept = function accept_12(arg0) {
  idwca.$lambda$13_3(this.$$outer_0, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_QueryConnectable$lambda$13$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "QueryConnectable/lambda$13$Type",
    679
  );
idwca.$getClass_132 = function $getClass_132() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$15$Type =
  function QueryConnectable$lambda$15$Type() {};
defineClass(
  1475,
  $wnd.Function,
  $intern_36,
  idwca.QueryConnectable$lambda$15$Type
);
_.onInvoke_5 = function onInvoke_75(arg0) {
  return $wnd.Promise.resolve(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.GetConsoleTypesResponse
    ).getConsoleTypesList()
  );
};
idwca.QueryConnectable$lambda$16$Type =
  function QueryConnectable$lambda$16$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(680, 1, $intern_19, idwca.QueryConnectable$lambda$16$Type);
_.accept = function accept_13(arg0) {
  idwca.$lambda$16_0(this.$$outer_0, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_QueryConnectable$lambda$16$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "QueryConnectable/lambda$16$Type",
    680
  );
idwca.$getClass_133 = function $getClass_133() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$18$Type =
  function QueryConnectable$lambda$18$Type() {};
defineClass(
  1476,
  $wnd.Function,
  $intern_36,
  idwca.QueryConnectable$lambda$18$Type
);
_.onInvoke_5 = function onInvoke_76(arg0) {
  return $wnd.Promise.resolve(
    new idwca.JsWorkerHeapInfo(
      castToNative(
        arg0,
        $wnd.dhinternal.io.deephaven.proto.console_pb.GetHeapInfoResponse
      )
    )
  );
};
idwca.$getClass_134 = function $getClass_134() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$2$Type = function QueryConnectable$lambda$2$Type(
  resolve_0
) {
  this.resolve_0 = resolve_0;
};
defineClass(
  1477,
  $wnd.Function,
  $intern_35,
  idwca.QueryConnectable$lambda$2$Type
);
_.onEvent = function onEvent_12(arg0) {
  this.resolve_0.call(null, null);
};
idwca.$getClass_135 = function $getClass_135() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$3$Type = function QueryConnectable$lambda$3$Type(
  reject_0
) {
  this.reject_0 = reject_0;
};
defineClass(
  1478,
  $wnd.Function,
  $intern_35,
  idwca.QueryConnectable$lambda$3$Type
);
_.onEvent = function onEvent_13(arg0) {
  this.reject_0.call(null, "Connection disconnected");
};
idwca.$accept = function $accept(this$static, arg0, arg1) {
  idwca.lambda$4_1(
    this$static.cancel_0,
    this$static.DO_NOTHING_1,
    this$static.connect_2,
    this$static.callback_3,
    (throwClassCastExceptionUnlessNull(arg0), castToString(arg1))
  );
};
idwca.QueryConnectable$lambda$4$Type = function QueryConnectable$lambda$4$Type(
  cancel_0,
  DO_NOTHING_1,
  connect_2,
  callback_3
) {
  this.cancel_0 = cancel_0;
  this.DO_NOTHING_1 = DO_NOTHING_1;
  this.connect_2 = connect_2;
  this.callback_3 = callback_3;
};
defineClass(677, 1, {}, idwca.QueryConnectable$lambda$4$Type);
_.accept_1 = function accept_14(arg0, arg1) {
  idwca.$accept(this, arg0, arg1);
};
cggl.Lio_deephaven_web_client_api_QueryConnectable$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "QueryConnectable/lambda$4$Type",
    677
  );
idwca.$getClass_136 = function $getClass_136() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$5$Type = function QueryConnectable$lambda$5$Type(
  cancel_0
) {
  this.cancel_0 = cancel_0;
};
defineClass(
  1469,
  $wnd.Function,
  $intern_49,
  idwca.QueryConnectable$lambda$5$Type
);
_.run = function run_13() {
  idwca.lambda$5_1(this.cancel_0);
};
idwca.$andThen = function $andThen(this$static, second) {
  var self_0;
  return (
    (self_0 = this$static),
    makeLambdaFunction(idwsf.JsRunnable$1.prototype.run, idwsf.JsRunnable$1, [
      self_0,
      second,
    ])
  );
};
idwca.$getClass_137 = function $getClass_137() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.$run = function $run(this$static) {
  idwca.$lambda$6_0(this$static.$$outer_0, this$static.ticket_1);
};
idwca.QueryConnectable$lambda$6$Type = function QueryConnectable$lambda$6$Type(
  $$outer_0,
  ticket_1
) {
  this.$$outer_0 = $$outer_0;
  this.ticket_1 = ticket_1;
};
defineClass(
  1470,
  $wnd.Function,
  $intern_49,
  idwca.QueryConnectable$lambda$6$Type
);
_.run = function run_14() {
  idwca.$run(this);
};
idwca.$getClass_138 = function $getClass_138() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.QueryConnectable$lambda$7$Type = function QueryConnectable$lambda$7$Type(
  $$outer_0,
  type_1,
  ticket_2
) {
  this.$$outer_0 = $$outer_0;
  this.type_1 = type_1;
  this.ticket_2 = ticket_2;
};
defineClass(
  1471,
  $wnd.Function,
  $intern_36,
  idwca.QueryConnectable$lambda$7$Type
);
_.onInvoke_5 = function onInvoke_77(arg0) {
  var lastArg;
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [
        new idwca.QueryConnectable$lambda$8$Type(
          this.$$outer_0,
          this.type_1,
          ((lastArg = this.ticket_2),
          throwClassCastExceptionUnlessNull(arg0),
          lastArg)
        ),
      ]
    )
  );
};
idwca.QueryConnectable$lambda$8$Type = function QueryConnectable$lambda$8$Type(
  $$outer_0,
  type_1,
  ticket_2
) {
  this.$$outer_0 = $$outer_0;
  this.type_1 = type_1;
  this.ticket_2 = ticket_2;
};
defineClass(678, 1, $intern_19, idwca.QueryConnectable$lambda$8$Type);
_.accept = function accept_15(arg0) {
  idwca.$lambda$8(
    this.$$outer_0,
    this.type_1,
    this.ticket_2,
    castToFunction(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_QueryConnectable$lambda$8$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "QueryConnectable/lambda$8$Type",
    678
  );
defineClass(910, 1, {});
idwca.EVENT_CONNECT_0 = "connect";
idwca.EVENT_DISCONNECT_2 = "disconnect";
idwca.EVENT_RECONNECT_2 = "reconnect";
idwca.EVENT_TABLE_OPENED = "tableopened";
cggl.Lio_deephaven_web_client_api_QueryInfoConstants_2_classLit =
  createForClass("io.deephaven.web.client.api", "QueryInfoConstants", 910);
idwca.$$init_16 = function $$init_16(this$static) {};
idwca.$disconnected_1 = function $disconnected_1(this$static) {
  this$static.state = 0;
  $wnd.goog.global.clearTimeout(this$static.cancel_0);
};
idwca.$failed = function $failed(this$static) {
  var delay;
  if (this$static.state == 3) {
    return;
  }
  this$static.state = 3;
  if (this$static.currentTry > this$static.maxTries) {
    return;
  }
  ++this$static.currentTry;
  delay =
    $wnd.Math.random() *
    $wnd.Math.min(100 * $wnd.Math.pow(2, this$static.currentTry - 1), 60000);
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    ["Attempting reconnect in ", ji.uncheckedCast(delay), "ms", this$static]
  );
  this$static.cancel_0 = $wnd.goog.global.setTimeout(
    makeLambdaFunction(
      idwca.ReconnectState$lambda$0$Type.prototype.onInvoke_4,
      idwca.ReconnectState$lambda$0$Type,
      [this$static]
    ),
    delay
  );
};
idwca.$initialConnection = function $initialConnection(this$static) {
  if (
    this$static.state == 1 ||
    this$static.state == 4 ||
    this$static.state == 2
  ) {
    return;
  }
  this$static.state = 1;
  idwca.$connectToWorker(this$static.retry.$$outer_0);
};
idwca.$lambda$0_2 = function $lambda$0_2(this$static) {
  if (this$static.state != 3) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  this$static.state = 4;
  idwca.$connectToWorker(this$static.retry.$$outer_0);
};
idwca.$success = function $success(this$static) {
  if (!(this$static.state == 1 || this$static.state == 4)) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  this$static.state = 2;
  this$static.currentTry = 0;
};
idwca.ReconnectState = function ReconnectState(retry) {
  idwca.$$init_16(this);
  this.maxTries = $intern_1;
  this.retry = retry;
};
idwca.ReconnectState_0 = function ReconnectState_0(retry) {
  idwca.ReconnectState.call(this, retry);
};
defineClass(358, 1, {}, idwca.ReconnectState_0);
_.cancel_0 = 0;
_.currentTry = 0;
_.maxTries = 0;
_.state = 0;
cggl.Lio_deephaven_web_client_api_ReconnectState_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "ReconnectState",
  358
);
idwca.$getClass_139 = function $getClass_139() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.ReconnectState$lambda$0$Type = function ReconnectState$lambda$0$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1569, $wnd.Function, {}, idwca.ReconnectState$lambda$0$Type);
_.onInvoke_4 = function onInvoke_78(arg0) {
  idwca.$lambda$0_2(this.$$outer_0);
};
idwca.SearchDisplayMode = function SearchDisplayMode() {};
defineClass(911, 1, {}, idwca.SearchDisplayMode);
idwca.SEARCH_DISPLAY_DEFAULT = "Default";
idwca.SEARCH_DISPLAY_HIDE = "Hide";
idwca.SEARCH_DISPLAY_SHOW = "Show";
cggl.Lio_deephaven_web_client_api_SearchDisplayMode_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "SearchDisplayMode",
  911
);
idwca.$clinit_Sort = function $clinit_Sort() {
  idwca.$clinit_Sort = emptyMethod;
  idwca.REVERSE_COLUMN = new idwca.Column(
    -1,
    -1,
    null,
    null,
    "",
    "__REVERSE_COLUMN",
    false,
    null,
    null,
    false,
    false
  );
};
idwca.$$init_17 = function $$init_17(this$static) {};
idwca.$getClass_140 = function $getClass_140() {
  return cggl.Lio_deephaven_web_client_api_Sort_2_classLit;
};
idwca.$getColumn = function $getColumn(this$static) {
  return this$static.column_0;
};
idwca.$getDirection = function $getDirection(this$static) {
  return this$static.direction_0;
};
idwca.$isAbs = function $isAbs(this$static) {
  return this$static.abs_0;
};
idwca.$makeDescriptor = function $makeDescriptor(this$static) {
  var descriptor;
  if (this$static.direction_0 == null) {
    throw toJs(
      new jl.IllegalStateException_0(
        "Cannot perform a sort without a direction, please call desc() or asc()"
      )
    );
  }
  descriptor = new $wnd.dhinternal.io.deephaven.proto.table_pb.SortDescriptor();
  descriptor.setIsAbsolute(this$static.abs_0);
  descriptor.setColumnName(this$static.column_0.name_0);
  switch (this$static.direction_0) {
    case "ASC":
      descriptor.setDirection(
        $wnd.dhinternal.io.deephaven.proto.table_pb.SortDescriptor.SortDirection
          .ASCENDING
      );
      break;
    case "DESC":
      descriptor.setDirection(
        $wnd.dhinternal.io.deephaven.proto.table_pb.SortDescriptor.SortDirection
          .DESCENDING
      );
      break;
    case "REVERSE":
      descriptor.setDirection(
        $wnd.dhinternal.io.deephaven.proto.table_pb.SortDescriptor.SortDirection
          .REVERSE
      );
  }
  return descriptor;
};
idwca.Sort = function Sort(column) {
  idwca.$clinit_Sort();
  idwca.$$init_17(this);
  this.column_0 = column;
};
idwca.reverse_1 = function reverse_1() {
  idwca.$clinit_Sort();
  var reverse;
  reverse = new idwca.Sort(idwca.REVERSE_COLUMN);
  reverse.direction_0 = "REVERSE";
  return reverse;
};
defineClass(97, 1, { 97: 1 }, idwca.Sort);
_.abs = function abs_0() {
  var sort_0;
  sort_0 = new idwca.Sort(this.column_0);
  sort_0.abs_0 = true;
  sort_0.direction_0 = this.direction_0;
  return sort_0;
};
_.asc = function asc() {
  var sort_0;
  sort_0 = new idwca.Sort(this.column_0);
  sort_0.abs_0 = this.abs_0;
  sort_0.direction_0 = "ASC";
  return sort_0;
};
_.desc = function desc() {
  var sort_0;
  sort_0 = new idwca.Sort(this.column_0);
  sort_0.abs_0 = this.abs_0;
  sort_0.direction_0 = "DESC";
  return sort_0;
};
_.equals_0 = function equals_4(o) {
  var sort_0;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_client_api_Sort_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  sort_0 = castTo(o, 97);
  if (this.abs_0 != sort_0.abs_0) return false;
  if (!jl.$equals_12(this.column_0.name_0, sort_0.column_0.name_0))
    return false;
  return jl.$equals_12(this.direction_0, sort_0.direction_0);
};
defineProperties(_, {
  column: {
    get: function getColumn() {
      return idwca.$getColumn(this);
    },
  },
});
defineProperties(_, {
  direction: {
    get: function getDirection() {
      return idwca.$getDirection(this);
    },
  },
});
_.hashCode_1 = function hashCode_5() {
  var result;
  result = ji.getHashCode_2(this.column_0.name_0);
  result = 31 * result + ji.getHashCode_2(this.direction_0);
  result = 31 * result + (this.abs_0 ? 1 : 0);
  return result;
};
defineProperties(_, {
  isAbs: {
    get: function isAbs() {
      return idwca.$isAbs(this);
    },
  },
});
_.toString = function toString_20() {
  return (
    "Sort{column=" +
    this.column_0 +
    ", direction='" +
    this.direction_0 +
    "'" +
    ", abs=" +
    this.abs_0 +
    "}"
  );
};
_.toString_0 = function () {
  return this.toString();
};
_.abs_0 = false;
idwca.ASCENDING = "ASC";
idwca.DESCENDING = "DESC";
idwca.REVERSE = "REVERSE";
cggl.Lio_deephaven_web_client_api_Sort_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "Sort",
  97
);
idwca.$get_3 = function $get_3(this$static, index_0) {
  if (instanceOf(index_0, 39)) {
    return this$static.get_2(castTo(index_0, 39).value_0);
  }
  return this$static.get_1(jb.asInt(index_0) | 0);
};
idwca.$getData = function $getData(this$static, index_0, column) {
  if (instanceOf(index_0, 39)) {
    return this$static.getData_1(castTo(index_0, 39).value_0, column);
  }
  return this$static.getData_0(
    (jb.checkCriticalType_0(jb.isInt(index_0)), jb.asInt(index_0)),
    column
  );
};
idwca.$getFormat = function $getFormat(this$static, index_0, column) {
  if (instanceOf(index_0, 39)) {
    return this$static.getFormat_1(castTo(index_0, 39).value_0, column);
  }
  return this$static.getFormat_0(
    (jb.checkCriticalType_0(jb.isInt(index_0)), jb.asInt(index_0)),
    column
  );
};
defineClass(912, 1, {});
idwca.EVENT_DISCONNECT_3 = "disconnect";
idwca.EVENT_KEYADDED_0 = "keyadded";
idwca.EVENT_RECONNECT_3 = "reconnect";
idwca.EVENT_RECONNECTFAILED_1 = "reconnectfailed";
cggl.Lio_deephaven_web_client_api_TableMapEventLegacyNamespace_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "TableMapEventLegacyNamespace",
    912
  );
idwca.$$init_18 = function $$init_18(this$static) {
  this$static.state = (idwca.$clinit_TableTicket$State(), idwca.PENDING);
};
idwca.$equals_1 = function $equals_1(this$static, o) {
  var that;
  if (maskUndefined(this$static) === maskUndefined(o)) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_client_api_TableTicket_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 87);
  return this$static.exportId_0 == that.exportId_0;
};
idwca.$getClass_141 = function $getClass_141() {
  return cggl.Lio_deephaven_web_client_api_TableTicket_2_classLit;
};
idwca.$hashCode_1 = function $hashCode_1(this$static) {
  return this$static.exportId_0;
};
idwca.$isResolved = function $isResolved(this$static) {
  return (
    this$static.isConnected &&
    this$static.state == (idwca.$clinit_TableTicket$State(), idwca.EXPORTED)
  );
};
idwca.$makeFlightDescriptor = function $makeFlightDescriptor(this$static) {
  var flightDescriptor;
  flightDescriptor =
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightDescriptor();
  flightDescriptor.setType(
    $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightDescriptor
      .DescriptorType.PATH
  );
  flightDescriptor.setPathList(
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["export", this$static.exportId_0 + ""]
    )
  );
  return flightDescriptor;
};
idwca.$makeTableReference = function $makeTableReference(this$static) {
  var reference;
  reference = new $wnd.dhinternal.io.deephaven.proto.table_pb.TableReference();
  reference.setTicket(idwca.$makeTicket(this$static));
  return reference;
};
idwca.$makeTicket = function $makeTicket(this$static) {
  var ticket;
  ticket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket();
  ticket.setTicket(this$static.ticket_0);
  return ticket;
};
idwca.$setConnected = function $setConnected(this$static, connected) {
  this$static.isConnected = connected;
};
idwca.$setState_0 = function $setState_0(this$static, state) {
  this$static.state = state;
};
idwca.$toString_8 = function $toString_8(this$static) {
  return (
    "TableTicket{ticket=" +
    this$static.ticket_0 +
    ", state=" +
    this$static.state +
    ", isConnected=" +
    this$static.isConnected +
    "}"
  );
};
idwca.TableTicket = function TableTicket(ticket) {
  var id_0, ii;
  idwca.$$init_18(this);
  this.ticket_0 = ticket;
  id_0 = 0;
  for (ii = 4; ii >= 1; --ii) {
    id_0 = (id_0 << 8) | jl.$intValue(castToDouble(jb.$getAt(ticket, ii)));
  }
  this.exportId_0 = id_0;
};
idwca.createTableRef = function createTableRef(varDef) {
  var tableRef;
  tableRef = new $wnd.dhinternal.io.deephaven.proto.table_pb.TableReference();
  tableRef.setTicket(idwca.createTicket(varDef));
  return tableRef;
};
idwca.createTicket = function createTicket(varDef) {
  var ticket;
  ticket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket();
  ticket.setTicket(varDef.id_0);
  return ticket;
};
defineClass(87, 1, { 87: 1 }, idwca.TableTicket);
_.equals_0 = function equals_5(o) {
  return idwca.$equals_1(this, o);
};
_.hashCode_1 = function hashCode_6() {
  return idwca.$hashCode_1(this);
};
_.toString_0 = function toString_21() {
  return idwca.$toString_8(this);
};
_.exportId_0 = 0;
_.isConnected = true;
cggl.Lio_deephaven_web_client_api_TableTicket_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "TableTicket",
  87
);
idwca.$clinit_TableTicket$State = function $clinit_TableTicket$State() {
  idwca.$clinit_TableTicket$State = emptyMethod;
  idwca.UNKNOWN = new idwca.TableTicket$State("UNKNOWN", 0);
  idwca.PENDING = new idwca.TableTicket$State("PENDING", 1);
  idwca.PUBLISHING = new idwca.TableTicket$State("PUBLISHING", 2);
  idwca.QUEUED = new idwca.TableTicket$State("QUEUED", 3);
  idwca.RUNNING = new idwca.TableTicket$State("RUNNING", 4);
  idwca.EXPORTED = new idwca.TableTicket$State("EXPORTED", 5);
  idwca.RELEASED = new idwca.TableTicket$State("RELEASED", 6);
  idwca.CANCELLED = new idwca.TableTicket$State("CANCELLED", 7);
  idwca.FAILED = new idwca.TableTicket$State("FAILED", 8);
  idwca.DEPENDENCY_FAILED = new idwca.TableTicket$State("DEPENDENCY_FAILED", 9);
  idwca.DEPENDENCY_NEVER_FOUND = new idwca.TableTicket$State(
    "DEPENDENCY_NEVER_FOUND",
    10
  );
  idwca.DEPENDENCY_CANCELLED = new idwca.TableTicket$State(
    "DEPENDENCY_CANCELLED",
    11
  );
  idwca.DEPENDENCY_RELEASED = new idwca.TableTicket$State(
    "DEPENDENCY_RELEASED",
    12
  );
};
idwca.TableTicket$State = function TableTicket$State(enum$name, enum$ordinal) {
  Enum.call(this, enum$name, enum$ordinal);
};
idwca.values_1 = function values_1() {
  idwca.$clinit_TableTicket$State();
  return stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lio_deephaven_web_client_api_TableTicket$State_2_classLit,
      1
    ),
    $intern_17,
    84,
    0,
    [
      idwca.UNKNOWN,
      idwca.PENDING,
      idwca.PUBLISHING,
      idwca.QUEUED,
      idwca.RUNNING,
      idwca.EXPORTED,
      idwca.RELEASED,
      idwca.CANCELLED,
      idwca.FAILED,
      idwca.DEPENDENCY_FAILED,
      idwca.DEPENDENCY_NEVER_FOUND,
      idwca.DEPENDENCY_CANCELLED,
      idwca.DEPENDENCY_RELEASED,
    ]
  );
};
defineClass(84, 37, { 84: 1, 3: 1, 33: 1, 37: 1 }, idwca.TableTicket$State);
cggl.Lio_deephaven_web_client_api_TableTicket$State_2_classLit = createForEnum(
  "io.deephaven.web.client.api",
  "TableTicket/State",
  84,
  idwca.values_1
);
idwca.ValueType = function ValueType() {};
defineClass(913, 1, {}, idwca.ValueType);
idwca.BOOLEAN = "Boolean";
idwca.DATETIME = "Datetime";
idwca.DOUBLE = "Double";
idwca.LONG = "Long";
idwca.NUMBER = "Number";
idwca.STRING = "String";
cggl.Lio_deephaven_web_client_api_ValueType_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "ValueType",
  913
);
idwca.$$init_19 = function $$init_19(this$static) {
  this$static.metadata_0 = new $wnd.dhinternal.browserHeaders.BrowserHeaders();
  this$static.onOpen = new ju.ArrayList();
  this$static.cache_0 = new idwcas.StateCache();
  this$static.batchers = new $wnd.WeakMap();
  new $wnd.WeakMap();
  new $wnd.WeakMap();
  this$static.flushable = new ju.HashSet();
  this$static.logCallbacks = new $wnd.Set();
  this$static.subscriptionStreams = new ju.HashMap();
  this$static.simpleReconnectableInstances = new $wnd.Set();
  this$static.pastLogs = new ju.ArrayList();
  this$static.recordLog = makeLambdaFunction(
    idwca.WorkerConnection$0methodref$add$Type.prototype.apply_3,
    idwca.WorkerConnection$0methodref$add$Type,
    [this$static.pastLogs]
  );
  this$static.fieldUpdatesCallback = new $wnd.Set();
  this$static.knownFields = new ju.HashMap();
};
idwca.$appendStatesToDump = function $appendStatesToDump(
  this$static,
  parent_0,
  statesAndParents,
  graph
) {
  var childStates, clientTableState, clientTableState$iterator;
  childStates = castTo(statesAndParents.get(parent_0), 79);
  if (!childStates) {
    return;
  }
  for (
    clientTableState$iterator = childStates.iterator_0();
    clientTableState$iterator.hasNext_1();

  ) {
    clientTableState = castTo(clientTableState$iterator.next_1(), 14);
    !parent_0
      ? ((graph.string += "  null"), graph)
      : jl.$append_5(
          ((graph.string += "  handle"), graph),
          parent_0.handle.exportId_0
        );
    jl.$append_9(
      jl.$append_9(
        jl.$append_9(
          jl.$append_5(
            ((graph.string += " -> handle"), graph),
            clientTableState.handle.exportId_0
          ),
          '[label="'
        ),
        jl.$replaceAll(clientTableState.fetchSummary, '"', "")
      ),
      '"];\n'
    );
    idwca.$appendStatesToDump(
      this$static,
      clientTableState,
      statesAndParents,
      graph
    );
  }
};
idwca.$authUpdate = function $authUpdate(this$static) {
  if (this$static.scheduledAuthUpdate != null) {
    $wnd.goog.global.clearTimeout(
      jl.$doubleValue(this$static.scheduledAuthUpdate)
    );
    this$static.scheduledAuthUpdate = null;
  }
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$30$Type.prototype.onInvoke_6,
      idwca.WorkerConnection$lambda$30$Type,
      [this$static]
    )
  );
};
idwca.$checkStatus = function $checkStatus(this$static, fail) {
  return idwca.$checkStatus_0(
    this$static,
    idwcabs.of_2(fail.code, fail.message, fail.metadata)
  );
};
idwca.$checkStatus_0 = function $checkStatus_0(this$static, status_0) {
  if (
    this$static.state ==
    (idwca.$clinit_WorkerConnection$State(), idwca.Disconnected)
  ) {
    return false;
  }
  if (idwcabs.$isOk(status_0)) {
    return true;
  } else if (
    status_0.code == $wnd.dhinternal.grpcWeb.grpc.Code.Unauthenticated
  ) {
    idwca.$notifyConnectionError(this$static.info_0, status_0);
    idwca.$fireEvent_1(
      this$static.info_0,
      "reconnectauthfailed",
      jb.emptyObjectLiteral()
    );
  } else if (idwcabs.$isTransportError(status_0)) {
    idwca.$notifyConnectionError(this$static.info_0, status_0);
    idwca.$fireEvent_1(
      this$static.info_0,
      "disconnect",
      jb.emptyObjectLiteral()
    );
    idwca.$connectionLost(this$static);
  }
  return false;
};
idwca.$connectToWorker = function $connectToWorker(this$static) {
  $wnd.Promise.resolve(this$static.info_0)
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$2$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$2$Type,
        [this$static]
      )
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$9$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$9$Type,
        [this$static]
      ),
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$10$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$10$Type,
        [this$static]
      )
    );
};
idwca.$connectionLost = function $connectionLost(this$static) {
  var cts, cts$iterator, entry, outerIter;
  this$static.simpleReconnectableInstances.forEach(
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$41$Type.prototype.onInvoke_2,
      idwca.WorkerConnection$lambda$41$Type,
      []
    )
  );
  idwca.$disconnected_0(this$static.info_0);
  for (
    cts$iterator =
      ((outerIter = new ju.AbstractMap$2(this$static.cache_0.allStates).this$01
        .entrySet_0()
        .iterator_0()),
      new ju.AbstractMap$2$1(outerIter));
    cts$iterator.val$outerIter2.hasNext_1();

  ) {
    cts =
      ((entry = castTo(cts$iterator.val$outerIter2.next_1(), 27)),
      castTo(entry.getValue_0(), 14));
    idwcs.$forActiveLifecycles(
      cts,
      makeLambdaFunction(
        idwca.WorkerConnection$8methodref$disconnected$Type.prototype.apply_3,
        idwca.WorkerConnection$8methodref$disconnected$Type,
        []
      )
    );
  }
  if (
    this$static.state ==
    (idwca.$clinit_WorkerConnection$State(), idwca.Disconnected)
  ) {
    return;
  }
  this$static.state = idwca.Reconnecting;
  idwca.$failed(this$static.newSessionReconnect);
  ju.$forEach_3(
    this$static.onOpen,
    new idwca.WorkerConnection$lambda$43$Type()
  );
  this$static.onOpen.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
};
idwca.$createTypedTicket = function $createTypedTicket(varDef) {
  var typedTicket;
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setTicket(idwca.createTicket(varDef));
  typedTicket.setType(varDef.type_0);
  return typedTicket;
};
idwca.$emptyTable = function $emptyTable(this$static, size_0) {
  return idwca
    .$whenServerReady(this$static, "create emptyTable")
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$127$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$127$Type,
        [this$static, size_0]
      )
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$130$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$130$Type,
        [this$static]
      )
    );
};
idwca.$exportedTableUpdateMessage = function $exportedTableUpdateMessage(
  this$static,
  clientId,
  size_0
) {
  ju.$ifPresent(
    idwcas.$get_7(this$static.cache_0, clientId),
    new idwca.WorkerConnection$lambda$40$Type(size_0)
  );
};
idwca.$flush = function $flush(this$static) {
  var columnTypes,
    columnsOffset,
    includedColumns,
    isViewport,
    oldStream,
    previousState,
    request,
    serializationOptionsOffset,
    state,
    state$iterator,
    statesToFlush,
    stream,
    subscriptionReq,
    tableTicketOffset,
    viewportOffset,
    vps;
  statesToFlush = new ju.ArrayList_1(this$static.flushable);
  this$static.flushable.map_0.clear();
  for (
    state$iterator = new ju.ArrayList$1(statesToFlush);
    state$iterator.i < state$iterator.this$01.array.length;

  ) {
    state = castTo(ju.$next_8(state$iterator), 14);
    if (
      idwsf.$allMatch(
        idwcf.iterate(state.active.values()),
        new idwcs.ClientTableState$lambda$16$Type()
      )
    ) {
      if (state.subscribed) {
        state.subscribed = false;
        if (state.handle.isConnected) {
          stream = castTo(
            ju.$remove_0(this$static.subscriptionStreams, state),
            155
          );
          if (stream) {
            stream.end_0();
            stream.cancel_1();
          }
        }
      }
      if (
        state.active.size == 0 &&
        state.paused.size == 0 &&
        state.retainers.size == 0
      ) {
        previousState = state.resolution;
        idwcs.$setResolution(
          state,
          (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0)
        );
        state.subscribed = false;
        if (previousState != idwcs.RELEASED_0) {
          idwcas.$release_1(this$static.cache_0, state);
          stampJavaTypeInfo(
            getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
            $intern_7,
            1,
            5,
            ["Releasing state", state, idwca.of_1(state.handle)]
          );
          state.handle.isConnected &&
            idwca.$releaseTicket(this$static, idwca.$makeTicket(state.handle));
        }
      }
    } else {
      vps = new ju.ArrayList();
      idwcs.$forActiveSubscriptions(
        state,
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$107$Type.prototype.apply_0,
          idwca.WorkerConnection$lambda$107$Type,
          [state, vps]
        )
      );
      isViewport = !jus
        .$spliterator_13(
          jus.$filter_1(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(vps, 16)
            ),
            new juf.Predicate$lambda$2$Type(
              new idwca.WorkerConnection$lambda$108$Type()
            )
          )
        )
        .tryAdvance((jus.$clinit_StreamImpl(), jus.NULL_CONSUMER));
      if (
        !(
          isViewport ||
          jus.$noneMatch_0(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(vps, 16)
            ),
            new idwca.WorkerConnection$lambda$109$Type()
          )
        )
      ) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "All subscriptions to a given handle must be consistently viewport or non-viewport"
          )
        );
      }
      includedColumns = castTo(
        ju.$orElseThrow(
          jus.$reduce_0(
            jus.$map_0(
              new jus.StreamImpl(
                null,
                new ju.Spliterators$IteratorSpliterator(vps, 16)
              ),
              new idwca.WorkerConnection$32methodref$getColumns$Type()
            ),
            new idwca.WorkerConnection$lambda$111$Type()
          ),
          new idwca.WorkerConnection$lambda$112$Type()
        ),
        73
      );
      columnTypes = castTo(
        jus.$toArray_6(
          jus.$map_0(
            ju.stream_4(state.tableDef.columns_0),
            new idwca.WorkerConnection$33methodref$getType$Type()
          ),
          new idwca.WorkerConnection$34methodref$lambda$114$Type()
        ),
        12
      );
      state.subscribed = true;
      subscriptionReq = new $wnd.dhinternal.flatbuffers.Builder(1024);
      columnsOffset =
        $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.createColumnsVector(
          subscriptionReq,
          idwcab.makeUint8ArrayFromBitset(includedColumns)
        );
      viewportOffset = 0;
      isViewport &&
        (viewportOffset =
          $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.createViewportVector(
            subscriptionReq,
            idwcab.serializeRanges(
              castTo(
                jus.$collect_1(
                  jus.$map_0(
                    new jus.StreamImpl(
                      null,
                      new ju.Spliterators$IteratorSpliterator(vps, 16)
                    ),
                    new idwca.WorkerConnection$35methodref$getRows$Type()
                  ),
                  jus.of_3(
                    new jus.Collectors$23methodref$ctor$Type(),
                    new jus.Collectors$24methodref$add$Type(),
                    new jus.Collectors$lambda$50$Type(),
                    new jus.Collectors$lambda$51$Type(),
                    stampJavaTypeInfo(
                      getClassLiteralForArray(
                        cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                        1
                      ),
                      $intern_17,
                      48,
                      0,
                      [
                        (jus.$clinit_Collector$Characteristics(),
                        jus.UNORDERED),
                        jus.IDENTITY_FINISH,
                      ]
                    )
                  )
                ),
                81
              )
            )
          ));
      serializationOptionsOffset =
        $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionOptions.createBarrageSubscriptionOptions(
          subscriptionReq,
          $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io
            .deephaven.barrage.flatbuf.ColumnConversionMode.Stringify,
          true,
          $intern_21,
          0,
          0
        );
      tableTicketOffset =
        $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.createTicketVector(
          subscriptionReq,
          state.handle.ticket_0
        );
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.startBarrageSubscriptionRequest(
        subscriptionReq
      );
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.addColumns(
        subscriptionReq,
        columnsOffset
      );
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.addSubscriptionOptions(
        subscriptionReq,
        serializationOptionsOffset
      );
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.addViewport(
        subscriptionReq,
        viewportOffset
      );
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.addTicket(
        subscriptionReq,
        tableTicketOffset
      );
      subscriptionReq.finish(
        $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.endBarrageSubscriptionRequest(
          subscriptionReq
        )
      );
      request =
        new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData();
      request.setAppMetadata(
        idwcab.wrapMessage(
          subscriptionReq,
          $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io
            .deephaven.barrage.flatbuf.BarrageMessageType
            .BarrageSubscriptionRequest
        )
      );
      stream = idwcabs.$create(
        new idwcabs.BiDiStream$Factory(
          new idwca.WorkerConnection$25methodref$metadata$Type(this$static),
          new idwca.WorkerConnection$26methodref$newTicketInt$Type(
            this$static.config
          )
        ),
        new idwca.WorkerConnection$lambda$116$Type(this$static),
        new idwca.WorkerConnection$lambda$117$Type(this$static),
        new idwca.WorkerConnection$lambda$118$Type(this$static),
        new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData()
      );
      stream.send_0(request);
      stream.onData(
        makeLambdaFunction(
          idwca.WorkerConnection$2.prototype.apply_3,
          idwca.WorkerConnection$2,
          [this$static, isViewport, columnTypes, state]
        )
      );
      stream.onStatus(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$120$Type.prototype.apply_3,
          idwca.WorkerConnection$lambda$120$Type,
          [this$static, state]
        )
      );
      oldStream = castTo(
        ju.$put_2(this$static.subscriptionStreams, state, stream),
        155
      );
      if (oldStream) {
        oldStream.end_0();
        oldStream.cancel_1();
      }
    }
  }
};
idwca.$forceClose = function $forceClose(this$static) {
  this$static.state =
    (idwca.$clinit_WorkerConnection$State(), idwca.Disconnected);
  if (this$static.logStream != null) {
    this$static.logStream.cancel();
    this$static.logStream = null;
  }
  this$static.pastLogs.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  this$static.logCallbacks.clear();
  if (this$static.terminationStream != null) {
    this$static.terminationStream.cancel();
    this$static.terminationStream = null;
  }
  if (this$static.exportNotifications_0 != null) {
    this$static.exportNotifications_0.cancel();
    this$static.exportNotifications_0 = null;
  }
  idwca.$disconnected_1(this$static.newSessionReconnect);
  if (this$static.scheduledAuthUpdate != null) {
    $wnd.goog.global.clearTimeout(
      jl.$doubleValue(this$static.scheduledAuthUpdate)
    );
    this$static.scheduledAuthUpdate = null;
  }
};
idwca.$forceReconnect = function $forceReconnect(this$static) {
  this$static.state =
    (idwca.$clinit_WorkerConnection$State(), idwca.Reconnecting);
  idwca.$failed(this$static.newSessionReconnect);
};
idwca.$getBatcher = function $getBatcher(this$static, table) {
  var batcher, myBatcher;
  batcher = castTo(this$static.batchers.get(table), 129);
  if (!batcher || batcher.sent) {
    myBatcher = new idwcab2.RequestBatcher(table, this$static);
    this$static.batchers.set(table, myBatcher);
    idwcab2.$onSend(
      myBatcher,
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$100$Type.prototype.apply_3,
        idwca.WorkerConnection$lambda$100$Type,
        [this$static, table, myBatcher]
      )
    );
    return myBatcher;
  }
  return batcher;
};
idwca.$getFigure = function $getFigure(this$static, varDef) {
  if (!jl.$equalsIgnoreCase(varDef.type_0, "Figure")) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Can't load as a figure: " + varDef.type_0
      )
    );
  }
  return idwca
    .$whenServerReady(this$static, "get a figure")
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$76$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$76$Type,
        [this$static, varDef]
      )
    );
};
idwca.$getHierarchicalTable = function $getHierarchicalTable(
  this$static,
  varDef
) {
  var ticket;
  return idwcai2
    .$race(
      ((ticket = idwca.$newTicket(this$static.config)),
      new idwcai2.TicketAndPromise(
        ticket,
        idwca
          .$whenServerReady(this$static, "exportScopeTicket")
          .then(
            makeLambdaFunction(
              idwca.WorkerConnection$lambda$69$Type.prototype.onInvoke_5,
              idwca.WorkerConnection$lambda$69$Type,
              [this$static, varDef, ticket]
            )
          ),
        this$static
      )),
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$83$Type.prototype.apply_1,
        idwca.WorkerConnection$lambda$83$Type,
        [this$static, varDef]
      )
    )
    .promise.then(
      makeLambdaFunction(
        idwca.WorkerConnection$21methodref$refetch$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$21methodref$refetch$Type,
        []
      )
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$75$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$75$Type,
        [this$static]
      )
    );
};
idwca.$getJsObject = function $getJsObject(this$static, definitionObject) {
  var hasId, hasName, id_0, name_0, type_0;
  if (instanceOf(definitionObject, 62)) {
    return idwca.$getObject_0(this$static, castTo(definitionObject, 62));
  }
  if (!jb.$has(definitionObject, "type")) {
    throw toJs(
      new jl.IllegalArgumentException_0("no type field; could not getObject")
    );
  }
  type_0 = jb.$asString_2(jb.$getAsAny(definitionObject, "type"));
  hasName = jb.$has(definitionObject, "name");
  hasId = jb.$has(definitionObject, "id");
  if (hasName && hasId) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "has both name and id field; could not getObject"
      )
    );
  } else if (hasName) {
    name_0 = jb.$asString_2(jb.$getAsAny(definitionObject, "name"));
    return idwca
      .$getVariableDefinition(this$static, name_0, type_0)
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$16methodref$getObject$Type.prototype
            .onInvoke_5,
          idwca.WorkerConnection$16methodref$getObject$Type,
          [this$static]
        )
      );
  } else if (hasId) {
    id_0 = jb.$asString_2(jb.$getAsAny(definitionObject, "id"));
    return idwca.$getObject_0(
      this$static,
      new idwcac.JsVariableDefinition_0(type_0, id_0)
    );
  } else {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "no name/id field; could not construct getObject"
      )
    );
  }
};
idwca.$getObject = function $getObject(this$static, typedTicket) {
  if (jl.$equalsIgnoreCase("Table", typedTicket.getType())) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "wrong way to get a table from a ticket"
      )
    );
  } else if (jl.$equalsIgnoreCase("Figure", typedTicket.getType())) {
    return idwcawp.$refetch_1(
      new idwcawp.JsFigure(
        this$static,
        new idwca.WorkerConnection$lambda$56$Type(this$static, typedTicket)
      )
    );
  } else if (jl.$equalsIgnoreCase("pandas.DataFrame", typedTicket.getType())) {
    return idwca
      .$whenServerReady(this$static, "get a widget")
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$84$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$84$Type,
          [this$static, typedTicket]
        )
      )
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$17methodref$refetch$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$17methodref$refetch$Type,
          []
        )
      )
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$59$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$59$Type,
          []
        )
      );
  } else if (jl.$equalsIgnoreCase("PartitionedTable", typedTicket.getType())) {
    return idwca.$refetch(
      new idwca.JsPartitionedTable(
        this$static,
        new idwcaw.JsWidget(this$static, typedTicket)
      )
    );
  } else if (jl.$equalsIgnoreCase("HierarchicalTable", typedTicket.getType())) {
    return idwcaw
      .$refetch_0(new idwcaw.JsWidget(this$static, typedTicket))
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$60$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$60$Type,
          [this$static]
        )
      );
  } else {
    idwca.warnLegacyTicketTypes(typedTicket.getType());
    return idwca
      .$whenServerReady(this$static, "get a widget")
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$84$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$84$Type,
          [this$static, typedTicket]
        )
      )
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$18methodref$refetch$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$18methodref$refetch$Type,
          []
        )
      );
  }
};
idwca.$getObject_0 = function $getObject_0(this$static, definition) {
  var ticket;
  if (jl.$equalsIgnoreCase("Table", definition.type_0)) {
    return idwca
      .$whenServerReady(this$static, "get a table")
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$46$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$46$Type,
          [this$static, definition, null]
        )
      );
  } else if (jl.$equalsIgnoreCase("Figure", definition.type_0)) {
    return idwca.$getFigure(this$static, definition);
  } else if (jl.$equalsIgnoreCase("pandas.DataFrame", definition.type_0)) {
    return idwcai2
      .$race(
        ((ticket = idwca.$newTicket(this$static.config)),
        new idwcai2.TicketAndPromise(
          ticket,
          idwca
            .$whenServerReady(this$static, "exportScopeTicket")
            .then(
              makeLambdaFunction(
                idwca.WorkerConnection$lambda$69$Type.prototype.onInvoke_5,
                idwca.WorkerConnection$lambda$69$Type,
                [this$static, definition, ticket]
              )
            ),
          this$static
        )),
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$83$Type.prototype.apply_1,
          idwca.WorkerConnection$lambda$83$Type,
          [this$static, definition]
        )
      )
      .promise.then(
        makeLambdaFunction(
          idwca.WorkerConnection$14methodref$refetch$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$14methodref$refetch$Type,
          []
        )
      )
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$53$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$53$Type,
          []
        )
      );
  } else if (jl.$equalsIgnoreCase("PartitionedTable", definition.type_0)) {
    return idwca
      .$whenServerReady(this$static, "get a partitioned table")
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$72$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$72$Type,
          [this$static, definition]
        )
      )
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$73$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$73$Type,
          [this$static]
        )
      );
  } else if (jl.$equalsIgnoreCase("HierarchicalTable", definition.type_0)) {
    return idwcai2
      .$race(
        ((ticket = idwca.$newTicket(this$static.config)),
        new idwcai2.TicketAndPromise(
          ticket,
          idwca
            .$whenServerReady(this$static, "exportScopeTicket")
            .then(
              makeLambdaFunction(
                idwca.WorkerConnection$lambda$69$Type.prototype.onInvoke_5,
                idwca.WorkerConnection$lambda$69$Type,
                [this$static, definition, ticket]
              )
            ),
          this$static
        )),
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$83$Type.prototype.apply_1,
          idwca.WorkerConnection$lambda$83$Type,
          [this$static, definition]
        )
      )
      .promise.then(
        makeLambdaFunction(
          idwca.WorkerConnection$21methodref$refetch$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$21methodref$refetch$Type,
          []
        )
      )
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$75$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$75$Type,
          [this$static]
        )
      );
  } else {
    idwca.warnLegacyTicketTypes(definition.type_0);
    return idwcai2
      .$race(
        ((ticket = idwca.$newTicket(this$static.config)),
        new idwcai2.TicketAndPromise(
          ticket,
          idwca
            .$whenServerReady(this$static, "exportScopeTicket")
            .then(
              makeLambdaFunction(
                idwca.WorkerConnection$lambda$69$Type.prototype.onInvoke_5,
                idwca.WorkerConnection$lambda$69$Type,
                [this$static, definition, ticket]
              )
            ),
          this$static
        )),
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$83$Type.prototype.apply_1,
          idwca.WorkerConnection$lambda$83$Type,
          [this$static, definition]
        )
      )
      .promise.then(
        makeLambdaFunction(
          idwca.WorkerConnection$15methodref$refetch$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$15methodref$refetch$Type,
          []
        )
      );
  }
};
idwca.$getTable_0 = function $getTable_0(
  this$static,
  varDef,
  applyPreviewColumns
) {
  return idwca
    .$whenServerReady(this$static, "get a table")
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$46$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$46$Type,
        [this$static, varDef, applyPreviewColumns]
      )
    );
};
idwca.$getVariableDefinition = function $getVariableDefinition(
  this$static,
  name_0,
  type_0
) {
  var listener, promise;
  promise = new idwcf.LazyPromise();
  listener = new idwca.WorkerConnection$1Listener(
    this$static,
    name_0,
    type_0,
    promise
  );
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [idwcf.$timeout(promise, 10000)]
    )
  ).then(
    makeLambdaFunction(
      idwca.WorkerConnection$10methodref$resolve$Type.prototype.onInvoke_5,
      idwca.WorkerConnection$10methodref$resolve$Type,
      []
    ),
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$45$Type.prototype.onInvoke_5,
      idwca.WorkerConnection$lambda$45$Type,
      [listener]
    )
  );
};
idwca.$isUsable = function $isUsable(this$static) {
  switch (this$static.state.ordinal_0) {
    case 1:
    case 0:
      return true;
  }
  return false;
};
idwca.$lambda$10_0 = function $lambda$10_0(this$static, fail_0) {
  var failure;
  this$static.state = (idwca.$clinit_WorkerConnection$State(), idwca.Failed);
  failure = toString_7(fail_0);
  ju.$forEach_3(
    this$static.onOpen,
    new idwca.WorkerConnection$lambda$24$Type(failure)
  );
  this$static.onOpen.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  idwca.$connectionLost(this$static);
  idwca.$failureHandled(this$static.info_0, "Failed to connect: " + failure);
  return null;
};
idwca.$lambda$100 = function $lambda$100(this$static, table_1, myBatcher_2) {
  maskUndefined(this$static.batchers.get(table_1)) ===
    maskUndefined(myBatcher_2) && this$static.batchers.delete(table_1);
};
idwca.$lambda$102_0 = function $lambda$102_0(
  this$static,
  failFetch_1,
  fetchSummary_2,
  unsolicitedTable_3,
  handle_3
) {
  var cts;
  cts = new idwcs.ClientTableState(
    this$static,
    handle_3,
    failFetch_1,
    fetchSummary_2
  );
  idwcs.$applyTableCreationResponse(cts, unsolicitedTable_3);
  return cts;
};
idwca.$lambda$103 = function $lambda$103(
  this$static,
  fetcher_1,
  fetchSummary_2,
  handle_2
) {
  return new idwcs.ClientTableState(
    this$static,
    handle_2,
    fetcher_1,
    fetchSummary_2
  );
};
idwca.$lambda$104 = function $lambda$104(
  this$static,
  fetcher_1,
  fetchSummary_2,
  h_2
) {
  return new idwcs.ClientTableState(
    this$static,
    h_2,
    fetcher_1,
    fetchSummary_2
  );
};
idwca.$lambda$116 = function $lambda$116(this$static, headers_0) {
  return this$static.flightServiceClient.doExchange(headers_0);
};
idwca.$lambda$117 = function $lambda$117(this$static, first_0, headers_1) {
  return this$static.browserFlightServiceClient.openDoExchange(
    first_0,
    headers_1
  );
};
idwca.$lambda$118 = function $lambda$118(this$static, next_0, headers_1, c_2) {
  return this$static.browserFlightServiceClient.nextDoExchange(
    next_0,
    headers_1,
    makeLambdaFunction(
      idwca.WorkerConnection$36methodref$apply$Type.prototype.onInvoke_7,
      idwca.WorkerConnection$36methodref$apply$Type,
      [c_2]
    )
  );
};
idwca.$lambda$120 = function $lambda$120(this$static, state_1, err_1) {
  idwca.$checkStatus_0(this$static, err_1);
  !idwcabs.$isOk(err_1) &&
    !idwcabs.$isTransportError(err_1) &&
    idwcs.$setResolution_0(
      state_1,
      (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.FAILED_0),
      err_1.details
    );
};
idwca.$lambda$123 = function $lambda$123(this$static, callback_1) {
  this$static.logCallbacks.delete(callback_1);
  if (this$static.logCallbacks.size == 1) {
    this$static.logCallbacks.delete(this$static.recordLog);
    if (this$static.logCallbacks.size != 0) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    this$static.pastLogs.array = initUnidimensionalArray(
      cggl.Ljava_lang_Object_2_classLit,
      $intern_7,
      1,
      0,
      5,
      1
    );
    if (this$static.logStream != null) {
      this$static.logStream.cancel();
      this$static.logStream = null;
    }
  }
};
idwca.$lambda$127 = function $lambda$127(this$static, size_1) {
  return idwca.$newState(
    this$static,
    new idwca.WorkerConnection$lambda$128$Type(this$static, size_1),
    "emptyTable(" + size_1 + ")"
  );
};
idwca.$lambda$128 = function $lambda$128(
  this$static,
  size_1,
  c_1,
  cts_2,
  metadata_3
) {
  var emptyTableRequest;
  emptyTableRequest =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.EmptyTableRequest();
  emptyTableRequest.setResultId(idwca.$makeTicket(cts_2.handle));
  emptyTableRequest.setSize(size_1 + "");
  this$static.tableServiceClient.emptyTable(
    emptyTableRequest,
    metadata_3,
    makeLambdaFunction(
      idwca.WorkerConnection$40methodref$apply$Type.prototype.onInvoke_47,
      idwca.WorkerConnection$40methodref$apply$Type,
      [c_1]
    )
  );
};
idwca.$lambda$131 = function $lambda$131(
  this$static,
  periodNanos_1,
  startTimeNanos_3,
  startTime_5
) {
  return idwca.$newState(
    this$static,
    new idwca.WorkerConnection$lambda$132$Type(
      this$static,
      periodNanos_1,
      startTimeNanos_3
    ),
    "create timetable(" + periodNanos_1 + ", " + startTime_5 + ")"
  );
};
idwca.$lambda$132 = function $lambda$132(
  this$static,
  periodNanos_1,
  startTimeNanos_3,
  c_2,
  cts_3,
  metadata_4
) {
  var timeTableRequest;
  timeTableRequest =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.TimeTableRequest();
  timeTableRequest.setResultId(idwca.$makeTicket(cts_3.handle));
  timeTableRequest.setPeriodNanos(periodNanos_1 + "");
  timeTableRequest.setStartTimeNanos(toString_6(startTimeNanos_3) + "");
  this$static.tableServiceClient.timeTable(
    timeTableRequest,
    metadata_4,
    makeLambdaFunction(
      idwca.WorkerConnection$41methodref$apply$Type.prototype.onInvoke_58,
      idwca.WorkerConnection$41methodref$apply$Type,
      [c_2]
    )
  );
};
idwca.$lambda$2_0 = function $lambda$2_0(this$static) {
  if (this$static.metadata_0.has("authorization")) {
    return idwca
      .$authUpdate(this$static)
      .then(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$3$Type.prototype.onInvoke_5,
          idwca.WorkerConnection$lambda$3$Type,
          []
        )
      );
  }
  return $wnd.Promise.all([
    $wnd.Promise.resolve(this$static.info_0.token_0).then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$4$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$4$Type,
        [this$static]
      )
    ),
    $wnd.Promise.resolve(this$static.info_0.options_0).then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$5$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$5$Type,
        [this$static]
      )
    ),
  ])
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$7$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$7$Type,
        [this$static]
      )
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$8$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$8$Type,
        []
      )
    );
};
idwca.$lambda$25 = function $lambda$25(this$static, data_0) {
  var callback, callback$iterator, logItem;
  logItem = new idwca.LogItem();
  idwca.$setLogLevel(logItem, data_0.getLogLevel());
  idwca.$setMessage(logItem, data_0.getMessage());
  idwca.$setMicros(
    logItem,
    toDouble_0(jl.__parseAndValidateLong(data_0.getMicros()))
  );
  for (
    callback$iterator = idwcf.lambda$0_16(
      idwcf.iterate(this$static.logCallbacks.keys()).itrs_0
    );
    callback$iterator.hasNext_1();

  ) {
    callback = castToFunction(callback$iterator.next_1());
    callback(logItem);
  }
};
idwca.$lambda$27_0 = function $lambda$27_0(this$static, update_0) {
  update_0.getUpdateFailureMessage() != null &&
  ji.uncheckedCast(update_0.getUpdateFailureMessage()).length != 0
    ? ju.$ifPresent(
        idwcas.$get_7(
          this$static.cache_0,
          new idwca.TableTicket(update_0.getExportId().getTicket_asU8())
        ),
        new idwca.WorkerConnection$lambda$28$Type(update_0)
      )
    : idwca.$exportedTableUpdateMessage(
        this$static,
        new idwca.TableTicket(update_0.getExportId().getTicket_asU8()),
        jl.__parseAndValidateLong(update_0.getSize())
      );
};
idwca.$lambda$30 = function $lambda$30(this$static, resolve_0, reject_1) {
  var handshake;
  handshake = idwcabs.$create(
    new idwcabs.BiDiStream$Factory(
      new idwca.WorkerConnection$25methodref$metadata$Type(this$static),
      new idwca.WorkerConnection$26methodref$newTicketInt$Type(
        this$static.config
      )
    ),
    new idwcabs.HandshakeStreamFactory$lambda$0$Type(this$static),
    new idwcabs.HandshakeStreamFactory$lambda$1$Type(this$static),
    new idwcabs.HandshakeStreamFactory$lambda$2$Type(this$static),
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.HandshakeRequest()
  );
  handshake.onHeaders_0(
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$31$Type.prototype.apply_3,
      idwca.WorkerConnection$lambda$31$Type,
      [this$static, handshake]
    )
  );
  handshake.onStatus(
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$32$Type.prototype.apply_3,
      idwca.WorkerConnection$lambda$32$Type,
      [this$static, resolve_0, reject_1]
    )
  );
  handshake.send_0(
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.HandshakeRequest()
  );
};
idwca.$lambda$31 = function $lambda$31(this$static, handshake_1, headers_1) {
  var authorization, existing, init;
  authorization = headers_1.get("authorization");
  if (authorization.length > 0) {
    existing = this$static.metadata_0.get("authorization");
    if (
      !jl.$equals_12(
        castToString(jb.$getAt(existing, 0)),
        jb.$getAt(authorization, 0)
      )
    ) {
      this$static.metadata_0.set("authorization", authorization);
      init = jb.emptyObjectLiteral();
      init.detail = new idwca.JsRefreshToken(
        castToString(jb.$getAt(authorization, 0)),
        this$static.sessionTimeoutMs
      );
      idwca.$fireEvent_1(this$static.info_0, "refreshtokenupdated", init);
    }
  }
  handshake_1.end_0();
};
idwca.$lambda$32 = function $lambda$32(
  this$static,
  resolve_1,
  reject_2,
  status_2
) {
  if (idwcabs.$isOk(status_2)) {
    this$static.scheduledAuthUpdate = ji.uncheckedCast(
      $wnd.goog.global.setTimeout(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$33$Type.prototype.onInvoke_4,
          idwca.WorkerConnection$lambda$33$Type,
          [this$static]
        ),
        this$static.sessionTimeoutMs / 2
      )
    );
    resolve_1(null);
  } else {
    if (status_2.code == $wnd.dhinternal.grpcWeb.grpc.Code.Unauthenticated) {
      this$static.metadata_0.delete("authorization");
      idwca.$fireEvent_1(
        this$static.info_0,
        "reconnectauthfailed",
        jb.emptyObjectLiteral()
      );
      return;
    }
    idwca.$checkStatus_0(this$static, status_2);
    status_2.details == null || ji.uncheckedCast(status_2.details).length == 0
      ? reject_2(
          "Error occurred while authenticating, gRPC status " + status_2.code
        )
      : reject_2(status_2.details);
  }
};
idwca.$lambda$34_0 = function $lambda$34_0(this$static, fail_0, success_1) {
  if (
    this$static.state ==
    (idwca.$clinit_WorkerConnection$State(), idwca.Disconnected)
  ) {
    return;
  }
  if (fail_0 != null) {
    if (idwca.$checkStatus(this$static, fail_0)) {
      this$static.terminationStream =
        this$static.sessionServiceClient.terminationNotification(
          new $wnd.dhinternal.io.deephaven.proto.session_pb.TerminationNotificationRequest(),
          this$static.metadata_0,
          makeLambdaFunction(
            idwca.WorkerConnection$lambda$34$Type.prototype.onInvoke_34,
            idwca.WorkerConnection$lambda$34$Type,
            [this$static]
          )
        );
    } else {
      idwca.$notifyConnectionError(this$static.info_0, fail_0);
      idwca.$connectionLost(this$static);
    }
    return;
  }
  if (success_1 == null) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  idwca.$connectionLost(this$static);
  idwci.$notifyServerShutdown(this$static.info_0, success_1);
};
idwca.$lambda$35_0 = function $lambda$35_0(this$static, handle_1, snapshot_2) {
  idwcas.$get_7(this$static.cache_0, handle_1).ref != null || undefined;
  ju.$ifPresent(
    idwcas.$get_7(this$static.cache_0, handle_1),
    new idwca.WorkerConnection$lambda$36$Type(snapshot_2, handle_1)
  );
};
idwca.$lambda$38 = function $lambda$38(this$static, tableHandle_1, updates_2) {
  var cts;
  cts = idwcas.$get_7(this$static.cache_0, tableHandle_1);
  ju.$ifPresent(cts, new idwca.WorkerConnection$lambda$39$Type(updates_2));
};
idwca.$lambda$4_0 = function $lambda$4_0(this$static, authToken_0) {
  this$static.metadata_0.set(
    "authorization",
    jl.$trim(authToken_0.type_0 + " " + authToken_0.value_0)
  );
  return $wnd.Promise.resolve(authToken_0);
};
idwca.$lambda$46_0 = function $lambda$46_0(
  this$static,
  varDef_1,
  applyPreviewColumns_2
) {
  return idwca
    .$newState(
      this$static,
      new idwca.WorkerConnection$lambda$47$Type(
        this$static,
        varDef_1,
        applyPreviewColumns_2
      ),
      "fetch table " + varDef_1.title_0
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$51$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$51$Type,
        [this$static]
      )
    );
};
idwca.$lambda$47 = function $lambda$47(
  this$static,
  varDef_1,
  applyPreviewColumns_2,
  c_2,
  cts_3,
  metadata_4
) {
  var req;
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [
      "performing fetch for ",
      varDef_1.title_0,
      " / ",
      cts_3,
      " (" +
        new idwca.LazyString(
          makeLambdaFunction(
            idwca.WorkerConnection$11methodref$getHandle$Type.prototype
              .valueOf_0,
            idwca.WorkerConnection$11methodref$getHandle$Type,
            [cts_3]
          )
        ),
      ")",
    ]
  );
  if (
    applyPreviewColumns_2 == null ||
    ji.unsafeCastToBoolean(
      (ji.checkCriticalNotNull(applyPreviewColumns_2), applyPreviewColumns_2)
    )
  ) {
    req =
      new $wnd.dhinternal.io.deephaven.proto.table_pb.ApplyPreviewColumnsRequest();
    req.setSourceId(idwca.createTableRef(varDef_1));
    req.setResultId(idwca.$makeTicket(cts_3.handle));
    this$static.tableServiceClient.applyPreviewColumns(
      req,
      metadata_4,
      makeLambdaFunction(
        idwca.WorkerConnection$12methodref$apply$Type.prototype.onInvoke_42,
        idwca.WorkerConnection$12methodref$apply$Type,
        [c_2]
      )
    );
  } else {
    req = new $wnd.dhinternal.io.deephaven.proto.table_pb.FetchTableRequest();
    req.setSourceId(idwca.createTableRef(varDef_1));
    req.setResultId(idwca.$makeTicket(cts_3.handle));
    this$static.tableServiceClient.fetchTable(
      req,
      metadata_4,
      makeLambdaFunction(
        idwca.WorkerConnection$13methodref$apply$Type.prototype.onInvoke_49,
        idwca.WorkerConnection$13methodref$apply$Type,
        [c_2]
      )
    );
  }
};
idwca.$lambda$5_2 = function $lambda$5_2(this$static, options_0) {
  $wnd.Object.keys(options_0.headers).forEach(
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$6$Type.prototype.onInvoke,
      idwca.WorkerConnection$lambda$6$Type,
      [this$static, options_0]
    )
  );
  return $wnd.Promise.resolve(options_0);
};
idwca.$lambda$51_0 = function $lambda$51_0(this$static, cts_1) {
  var table;
  table = new idwca.JsTable_0(this$static, cts_1);
  return $wnd.Promise.resolve(table);
};
idwca.$lambda$56_0 = function $lambda$56_0(this$static, typedTicket_1, c_1) {
  var widget;
  widget = new idwcaw.JsWidget(this$static, typedTicket_1);
  (idwcaw.$closeStream(widget),
  new $wnd.Promise(
    makeLambdaFunction(
      idwcaw.JsWidget$lambda$5$Type.prototype.onInvoke_6,
      idwcaw.JsWidget$lambda$5$Type,
      [widget]
    )
  )).then(
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$57$Type.prototype.onInvoke_5,
      idwca.WorkerConnection$lambda$57$Type,
      [c_1, widget]
    )
  );
};
idwca.$lambda$6_1 = function $lambda$6_1(this$static, options_1, key_1) {
  this$static.metadata_0.set(
    key_1,
    castToString(jb.$get_23(options_1.headers, key_1))
  );
  return null;
};
idwca.$lambda$62_0 = function $lambda$62_0(this$static, data_0) {
  var created,
    createdFI,
    i,
    i0,
    i1,
    removed,
    removedFI,
    removedId,
    result,
    updated,
    updatedFI;
  created = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_console_JsVariableDefinition_2_classLit,
    $intern_52,
    62,
    0,
    0,
    1
  );
  updated = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_console_JsVariableDefinition_2_classLit,
    $intern_52,
    62,
    0,
    0,
    1
  );
  removed = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_console_JsVariableDefinition_2_classLit,
    $intern_52,
    62,
    0,
    0,
    1
  );
  removedFI = data_0.getRemovedList();
  for (i0 = 0; i0 < removedFI.length; ++i0) {
    removedId = castToNative(
      jb.$getAt(removedFI, i0),
      $wnd.dhinternal.io.deephaven.proto.application_pb.FieldInfo
    )
      .getTypedTicket()
      .getTicket()
      .getTicket_asB64();
    result = castTo(ju.$getStringValue(this$static.knownFields, removedId), 62);
    removed[removed.length] = result;
    ju.$removeStringValue(this$static.knownFields, removedId);
  }
  createdFI = data_0.getCreatedList();
  for (i1 = 0; i1 < createdFI.length; ++i1) {
    result = new idwcac.JsVariableDefinition(
      castToNative(
        jb.$getAt(createdFI, i1),
        $wnd.dhinternal.io.deephaven.proto.application_pb.FieldInfo
      )
    );
    created[created.length] = result;
    ju.$putStringValue(this$static.knownFields, result.id_0, result);
  }
  updatedFI = data_0.getUpdatedList();
  for (i = 0; i < updatedFI.length; ++i) {
    result = new idwcac.JsVariableDefinition(
      castToNative(
        jb.$getAt(updatedFI, i),
        $wnd.dhinternal.io.deephaven.proto.application_pb.FieldInfo
      )
    );
    updated[updated.length] = result;
    ju.$putStringValue(this$static.knownFields, result.id_0, result);
  }
  idwcf.runLater(
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$63$Type.prototype.run,
      idwca.WorkerConnection$lambda$63$Type,
      [this$static, created, updated, removed]
    )
  );
};
idwca.$lambda$66 = function $lambda$66(this$static, callback_1) {
  this$static.fieldUpdatesCallback.delete(callback_1);
  if (this$static.fieldUpdatesCallback.size == 0) {
    ju.$reset(this$static.knownFields);
    if (this$static.fieldsChangeUpdateStream != null) {
      this$static.fieldsChangeUpdateStream.cancel();
      this$static.fieldsChangeUpdateStream = null;
    }
  }
};
idwca.$lambda$67_0 = function $lambda$67_0(this$static, c_0) {
  return ju.$add(this$static.onOpen, c_0);
};
idwca.$lambda$69 = function $lambda$69(this$static, varDef_1, ticket_2) {
  var req;
  req = new $wnd.dhinternal.io.deephaven.proto.session_pb.ExportRequest();
  req.setSourceId(idwca.$createTypedTicket(varDef_1).getTicket());
  req.setResultId(ticket_2);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwca.WorkerConnection$lambda$70$Type(this$static, req)]
    )
  );
};
idwca.$lambda$70_0 = function $lambda$70_0(this$static, req_1, c_1) {
  return this$static.sessionServiceClient.exportFromTicket(
    req_1,
    this$static.metadata_0,
    makeLambdaFunction(
      idwca.WorkerConnection$20methodref$apply$Type.prototype.onInvoke_33,
      idwca.WorkerConnection$20methodref$apply$Type,
      [c_1]
    )
  );
};
idwca.$lambda$72_0 = function $lambda$72_0(this$static, varDef_1) {
  var ticket;
  return idwcai2.$race(
    ((ticket = idwca.$newTicket(this$static.config)),
    new idwcai2.TicketAndPromise(
      ticket,
      idwca
        .$whenServerReady(this$static, "exportScopeTicket")
        .then(
          makeLambdaFunction(
            idwca.WorkerConnection$lambda$69$Type.prototype.onInvoke_5,
            idwca.WorkerConnection$lambda$69$Type,
            [this$static, varDef_1, ticket]
          )
        ),
      this$static
    )),
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$83$Type.prototype.apply_1,
      idwca.WorkerConnection$lambda$83$Type,
      [this$static, varDef_1]
    )
  ).promise;
};
idwca.$lambda$76 = function $lambda$76(this$static, varDef_1) {
  return idwcawp.$refetch_1(
    new idwcawp.JsFigure(
      this$static,
      new idwca.WorkerConnection$lambda$77$Type(this$static, varDef_1)
    )
  );
};
idwca.$lambda$77_0 = function $lambda$77_0(this$static, varDef_1, c_1) {
  var ticket;
  idwcai2
    .$race(
      ((ticket = idwca.$newTicket(this$static.config)),
      new idwcai2.TicketAndPromise(
        ticket,
        idwca
          .$whenServerReady(this$static, "exportScopeTicket")
          .then(
            makeLambdaFunction(
              idwca.WorkerConnection$lambda$69$Type.prototype.onInvoke_5,
              idwca.WorkerConnection$lambda$69$Type,
              [this$static, varDef_1, ticket]
            )
          ),
        this$static
      )),
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$83$Type.prototype.apply_1,
        idwca.WorkerConnection$lambda$83$Type,
        [this$static, varDef_1]
      )
    )
    .promise.then(
      makeLambdaFunction(
        idwca.WorkerConnection$22methodref$refetch$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$22methodref$refetch$Type,
        []
      )
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$79$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$79$Type,
        [c_1]
      ),
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$80$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$80$Type,
        [c_1]
      )
    );
};
idwca.$lambda$83 = function $lambda$83(this$static, varDef_1, ticket_1) {
  var typedTicket;
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setType(varDef_1.type_0);
  typedTicket.setTicket(ticket_1);
  return idwca
    .$whenServerReady(this$static, "get a widget")
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$84$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$84$Type,
        [this$static, typedTicket]
      )
    );
};
idwca.$lambda$87_0 = function $lambda$87_0(
  this$static,
  dataRef_1,
  columnNames_2,
  types_3,
  data_4,
  userTimeZone_5,
  c_5,
  cts_6
) {
  var arr,
    arr$iterator,
    bodyData,
    bodyMessage,
    buffer,
    buffers,
    buffersOffset,
    columnName,
    columnType,
    columns,
    context,
    cumulativeOffset,
    d,
    fields,
    fieldsOffset,
    i,
    i0,
    i1,
    i2,
    length_0,
    metadataOffset,
    nameOffset,
    node,
    nodes,
    nodesOffset,
    recordBatchOffset,
    schema,
    schemaMessage,
    schemaMessagePayload,
    stream,
    typeOffset,
    writer;
  d = dataRef_1[0];
  if (d == null) {
    c_5("Data already released, cannot re-create table", null);
    return;
  }
  dataRef_1[0] = null;
  schema = new $wnd.dhinternal.flatbuffers.Builder(1024);
  columns = new ju.ArrayList();
  fields = initUnidimensionalArray(
    cggl.D_classLit,
    $intern_31,
    18,
    columnNames_2.length,
    15,
    1
  );
  for (i0 = 0; i0 < columnNames_2.length; i0++) {
    columnName = columnNames_2[i0];
    columnType = types_3[i0];
    writer =
      (idwcap.$clinit_JsDataHandler(),
      castTo(
        ju.$computeIfAbsent_0(
          (idwcap.$clinit_JsDataHandler$HandlersHolder(), idwcap.HANDLERS),
          columnType,
          new idwcap.JsDataHandler$lambda$0$Type()
        ),
        42
      ));
    columns.array[columns.array.length] = writer;
    nameOffset = schema.createString(columnName);
    typeOffset = writer.writeType(schema);
    metadataOffset =
      $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Field.createCustomMetadataVector(
        schema,
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.D_classLit, 1),
          $intern_31,
          18,
          15,
          [
            $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.KeyValue.createKeyValue(
              schema,
              schema.createString("deephaven:type"),
              schema.createString(writer.deephavenType)
            ),
          ]
        )
      );
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Field.startField(
      schema
    );
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Field.addName(
      schema,
      nameOffset
    );
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Field.addNullable(
      schema,
      true
    );
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Field.addTypeType(
      schema,
      writer.arrowTypeType
    );
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Field.addType(
      schema,
      typeOffset
    );
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Field.addCustomMetadata(
      schema,
      metadataOffset
    );
    fields[i0] =
      $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Field.endField(
        schema
      );
  }
  fieldsOffset =
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Schema.createFieldsVector(
      schema,
      fields
    );
  $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Schema.startSchema(
    schema
  );
  $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Schema.addFields(
    schema,
    fieldsOffset
  );
  schemaMessage =
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData();
  schemaMessagePayload = idwca.createMessage(
    schema,
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.MessageHeader.Schema,
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Schema.endSchema(
      schema
    ),
    0
  );
  schemaMessage.setDataHeader(schemaMessagePayload);
  schemaMessage.setAppMetadata(idwcab.emptyMessage());
  schemaMessage.setFlightDescriptor(idwca.$makeFlightDescriptor(cts_6.handle));
  stream = idwcabs.$create(
    new idwcabs.BiDiStream$Factory(
      new idwca.WorkerConnection$25methodref$metadata$Type(this$static),
      new idwca.WorkerConnection$26methodref$newTicketInt$Type(
        this$static.config
      )
    ),
    new idwca.WorkerConnection$lambda$88$Type(this$static),
    new idwca.WorkerConnection$lambda$89$Type(this$static),
    new idwca.WorkerConnection$lambda$90$Type(this$static),
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData()
  );
  stream.send_0(schemaMessage);
  stream.onEnd_0(
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$92$Type.prototype.apply_3,
      idwca.WorkerConnection$lambda$92$Type,
      [schemaMessagePayload, data_4, cts_6, c_5]
    )
  );
  bodyMessage =
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData();
  bodyMessage.setAppMetadata(idwcab.emptyMessage());
  bodyData = new $wnd.dhinternal.flatbuffers.Builder(1024);
  buffers = new ju.ArrayList();
  nodes = new ju.ArrayList();
  context = new idwcap.JsDataHandler$ParseContext();
  userTimeZone_5 != null &&
    (context.timeZone_0 = idwcai.getTimeZone(userTimeZone_5));
  for (i1 = 0; i1 < data_4.length; i1++) {
    (ji.checkCriticalElementIndex(i1, columns.array.length),
    castTo(columns.array[i1], 42)).write_0(
      data_4[i1],
      context,
      makeLambdaFunction(
        idwca.WorkerConnection$28methodref$add$Type.prototype.apply_3,
        idwca.WorkerConnection$28methodref$add$Type,
        [nodes]
      ),
      makeLambdaFunction(
        idwca.WorkerConnection$29methodref$add$Type.prototype.apply_3,
        idwca.WorkerConnection$29methodref$add$Type,
        [buffers]
      )
    );
  }
  $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch.startBuffersVector(
    bodyData,
    buffers.array.length
  );
  length_0 = 0;
  for (
    arr$iterator = new ju.ArrayList$1(buffers);
    arr$iterator.i < arr$iterator.this$01.array.length;

  ) {
    arr = castToNative(ju.$next_8(arr$iterator), $wnd.Uint8Array);
    if (arr.byteLength % 8 != 0) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    length_0 += arr.byteLength;
  }
  cumulativeOffset = length_0;
  for (i2 = buffers.array.length - 1; i2 >= 0; i2--) {
    buffer =
      (ji.checkCriticalElementIndex(i2, buffers.array.length),
      castToNative(buffers.array[i2], $wnd.Uint8Array));
    cumulativeOffset -= buffer.byteLength;
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Buffer.createBuffer(
      bodyData,
      $wnd.dhinternal.flatbuffers.Long.create(cumulativeOffset, 0),
      $wnd.dhinternal.flatbuffers.Long.create(buffer.byteLength, 0)
    );
  }
  if (cumulativeOffset != 0) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  buffersOffset = bodyData.endVector();
  $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch.startNodesVector(
    bodyData,
    nodes.array.length
  );
  for (i = nodes.array.length - 1; i >= 0; i--) {
    node =
      (ji.checkCriticalElementIndex(i, nodes.array.length),
      castTo(nodes.array[i], 136));
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.FieldNode.createFieldNode(
      bodyData,
      $wnd.dhinternal.flatbuffers.Long.create(node.length_0, 0),
      $wnd.dhinternal.flatbuffers.Long.create(node.nullCount_0, 0)
    );
  }
  nodesOffset = bodyData.endVector();
  $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch.startRecordBatch(
    bodyData
  );
  $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch.addBuffers(
    bodyData,
    buffersOffset
  );
  $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch.addNodes(
    bodyData,
    nodesOffset
  );
  $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch.addLength(
    bodyData,
    $wnd.dhinternal.flatbuffers.Long.create(data_4[0].length, 0)
  );
  recordBatchOffset =
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch.endRecordBatch(
      bodyData
    );
  bodyMessage.setDataHeader(
    idwca.createMessage(
      bodyData,
      $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
        .flatbuf.MessageHeader.RecordBatch,
      recordBatchOffset,
      length_0
    )
  );
  bodyMessage.setDataBody(idwca.$padAndConcat(buffers, length_0));
  stream.send_0(bodyMessage);
  stream.end_0();
};
idwca.$lambda$88_0 = function $lambda$88_0(this$static, headers_0) {
  return this$static.flightServiceClient.doPut(headers_0);
};
idwca.$lambda$89 = function $lambda$89(this$static, first_0, headers_1) {
  return this$static.browserFlightServiceClient.openDoPut(first_0, headers_1);
};
idwca.$lambda$9_0 = function $lambda$9_0(this$static, newSession_0) {
  var hasActiveSubs, inactiveStatesToRemove;
  this$static.terminationStream =
    this$static.sessionServiceClient.terminationNotification(
      new $wnd.dhinternal.io.deephaven.proto.session_pb.TerminationNotificationRequest(),
      this$static.metadata_0,
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$34$Type.prototype.onInvoke_34,
        idwca.WorkerConnection$lambda$34$Type,
        [this$static]
      )
    );
  this$static.state = (idwca.$clinit_WorkerConnection$State(), idwca.Connected);
  idwca.$success(this$static.newSessionReconnect);
  if (
    ji.unsafeCastToBoolean(
      (ji.checkCriticalNotNull(newSession_0), newSession_0)
    )
  ) {
    new $wnd.WeakMap();
    new $wnd.WeakMap();
    hasActiveSubs = castTo(
      jus.$toArray_6(
        jus.$peek_0(
          jus.$filter_1(
            jus.$peek_0(
              new jus.StreamImpl(
                null,
                new ju.Spliterators$IteratorSpliterator(
                  new ju.AbstractMap$2(this$static.cache_0.allStates),
                  0
                )
              ),
              new idwca.WorkerConnection$lambda$11$Type()
            ),
            new idwca.WorkerConnection$lambda$13$Type()
          ),
          new idwca.WorkerConnection$lambda$14$Type()
        ),
        new idwca.WorkerConnection$2methodref$lambda$16$Type()
      ),
      193
    );
    inactiveStatesToRemove = castTo(
      jus.$collect_1(
        jus.$filter_1(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(
              new ju.AbstractMap$2(this$static.cache_0.allStates),
              0
            )
          ),
          new idwca.WorkerConnection$3methodref$isEmpty$Type()
        ),
        jus.of_4(
          new jus.Collectors$21methodref$ctor$Type(),
          new jus.Collectors$20methodref$add$Type(),
          new jus.Collectors$lambda$42$Type(),
          stampJavaTypeInfo(
            getClassLiteralForArray(
              cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
              1
            ),
            $intern_17,
            48,
            0,
            [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
          )
        )
      ),
      79
    );
    inactiveStatesToRemove.forEach_0(
      new idwca.WorkerConnection$4methodref$release$Type(this$static.cache_0)
    );
    this$static.flushable.map_0.clear();
    idwcs.$revive_0(this$static.reviver, this$static.metadata_0, hasActiveSubs);
    this$static.simpleReconnectableInstances.forEach(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$19$Type.prototype.onInvoke_2,
        idwca.WorkerConnection$lambda$19$Type,
        []
      )
    );
  } else {
    this$static.simpleReconnectableInstances.forEach(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$20$Type.prototype.onInvoke_2,
        idwca.WorkerConnection$lambda$20$Type,
        []
      )
    );
    hasActiveSubs = castTo(
      jus.$toArray_6(
        jus.$filter_1(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(
              new ju.AbstractMap$2(this$static.cache_0.allStates),
              0
            )
          ),
          new idwca.WorkerConnection$lambda$21$Type()
        ),
        new idwca.WorkerConnection$5methodref$lambda$16$Type()
      ),
      193
    );
    idwcs.$revive_0(this$static.reviver, this$static.metadata_0, hasActiveSubs);
  }
  idwca.$connected(this$static.info_0);
  ju.$forEach_3(
    this$static.onOpen,
    new idwca.WorkerConnection$lambda$23$Type()
  );
  this$static.onOpen.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  idwca.$startExportNotificationsStream(this$static);
  idwca.$maybeRestartLogStream(this$static);
  return $wnd.Promise.resolve(null);
};
idwca.$lambda$90_0 = function $lambda$90_0(
  this$static,
  next_0,
  headers_1,
  callback_2
) {
  return this$static.browserFlightServiceClient.nextDoPut(
    next_0,
    headers_1,
    makeLambdaFunction(
      idwca.WorkerConnection$27methodref$apply$Type.prototype.onInvoke_8,
      idwca.WorkerConnection$27methodref$apply$Type,
      [callback_2]
    )
  );
};
idwca.$lambda$97_0 = function $lambda$97_0(
  this$static,
  tables_1,
  c_1,
  cts_2,
  metadata_3
) {
  var i, requestMessage, table, tableHandles;
  tableHandles = newArray_0(tables_1.length);
  for (i = 0; i < tables_1.length; i++) {
    table = tables_1[i];
    if (
      !jl.equals_Ljava_lang_Object__Z__devirtual$(
        table.workerConnection,
        this$static
      )
    ) {
      throw toJs(
        new jl.IllegalStateException_0(
          "Table in merge is not on the worker for this connection"
        )
      );
    }
    setCheck(
      tableHandles,
      i,
      new $wnd.dhinternal.io.deephaven.proto.table_pb.TableReference()
    );
    tableHandles[i].setTicket(
      idwca.$makeTicket(idwca.$state(tables_1[i]).handle)
    );
  }
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [
      "Merging tables: ",
      idwca.of_1(cts_2.handle),
      " for ",
      (jl.$clinit_Boolean(),
      idwca.$isResolved(cts_2.handle)
        ? ji.uncheckedCast(true)
        : ji.uncheckedCast(false)),
      cts_2.resolution,
    ]
  );
  requestMessage =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.MergeTablesRequest();
  requestMessage.setResultId(idwca.$makeTicket(cts_2.handle));
  requestMessage.setSourceIdsList(tableHandles);
  this$static.tableServiceClient.mergeTables(
    requestMessage,
    metadata_3,
    makeLambdaFunction(
      idwca.WorkerConnection$30methodref$apply$Type.prototype.onInvoke_51,
      idwca.WorkerConnection$30methodref$apply$Type,
      [c_1]
    )
  );
};
idwca.$maybeRestartLogStream = function $maybeRestartLogStream(this$static) {
  var logSubscriptionRequest;
  if (this$static.logCallbacks.size == 0) {
    return;
  }
  this$static.logStream != null && this$static.logStream.cancel();
  logSubscriptionRequest =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.LogSubscriptionRequest();
  this$static.pastLogs.array.length > 0 &&
    logSubscriptionRequest.setLastSeenLogTimestamp(
      "" +
        toString_6(
          fromDouble_0(
            castTo(
              ju.$get_18(
                this$static.pastLogs,
                this$static.pastLogs.array.length - 1
              ),
              223
            ).micros_0
          )
        )
    );
  this$static.logStream = castToJsObject(
    this$static.consoleServiceClient.subscribeToLogs(
      logSubscriptionRequest,
      this$static.metadata_0
    )
  );
  this$static.logStream.on(
    "data",
    castToFunction(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$25$Type.prototype.apply_3,
        idwca.WorkerConnection$lambda$25$Type,
        [this$static]
      )
    )
  );
  this$static.logStream.on(
    "end",
    castToFunction(
      makeLambdaFunction(
        idwca.WorkerConnection$6methodref$checkStatus$Type.prototype.apply_3,
        idwca.WorkerConnection$6methodref$checkStatus$Type,
        [this$static]
      )
    )
  );
};
idwca.$mergeTables = function $mergeTables(this$static, tables) {
  return idwca
    .$newState(
      this$static,
      new idwca.WorkerConnection$lambda$97$Type(this$static, tables),
      "merging tables"
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$99$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$99$Type,
        [this$static]
      )
    );
};
idwca.$newState = function $newState(this$static, fetcher, fetchSummary) {
  var handle, s;
  handle = new idwca.TableTicket(idwca.$newTicketRaw(this$static.config));
  s = idwcas.$create_0(
    this$static.cache_0,
    handle,
    new idwca.WorkerConnection$lambda$104$Type(
      this$static,
      fetcher,
      fetchSummary
    )
  );
  return idwcs.$refetch_2(s, this$static.metadata_0);
};
idwca.$newState_0 = function $newState_0(this$static, fetcher, fetchSummary) {
  return idwcas.$create_0(
    this$static.cache_0,
    new idwca.TableTicket(idwca.$newTicketRaw(this$static.config)),
    new idwca.WorkerConnection$lambda$103$Type(
      this$static,
      fetcher,
      fetchSummary
    )
  );
};
idwca.$newState_1 = function $newState_1(this$static, from, to) {
  return idwca.$newState_2(
    this$static,
    from,
    to,
    new idwca.TableTicket(idwca.$newTicketRaw(this$static.config))
  );
};
idwca.$newState_2 = function $newState_2(this$static, from, to, handle) {
  return idwcas.$create_0(
    this$static.cache_0,
    handle,
    new idwca.WorkerConnection$lambda$105$Type(from, to)
  );
};
idwca.$newStateFromUnsolicitedTable = function $newStateFromUnsolicitedTable(
  this$static,
  unsolicitedTable,
  fetchSummary
) {
  var failFetch, tableTicket;
  tableTicket = new idwca.TableTicket(
    unsolicitedTable.getResultId().getTicket().getTicket_asU8()
  );
  failFetch = new idwca.WorkerConnection$lambda$101$Type(fetchSummary);
  return idwcas.$create_0(
    this$static.cache_0,
    tableTicket,
    new idwca.WorkerConnection$lambda$102$Type(
      this$static,
      failFetch,
      fetchSummary,
      unsolicitedTable
    )
  );
};
idwca.$newTable = function $newTable(
  this$static,
  columnNames,
  types,
  data_0,
  userTimeZone
) {
  var dataRef;
  dataRef = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 3),
    $intern_41,
    80,
    0,
    [data_0]
  );
  return idwca
    .$newState(
      this$static,
      new idwca.WorkerConnection$lambda$87$Type(
        this$static,
        dataRef,
        columnNames,
        types,
        data_0,
        userTimeZone
      ),
      "creating new table"
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$95$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$95$Type,
        [this$static]
      )
    );
};
idwca.$notifyFieldsChangeListeners = function $notifyFieldsChangeListeners(
  this$static,
  update
) {
  var callback, callback$iterator;
  for (
    callback$iterator = idwcf.lambda$0_16(
      idwcf.iterate(this$static.fieldUpdatesCallback.keys()).itrs_0
    );
    callback$iterator.hasNext_1();

  ) {
    callback = castToFunction(callback$iterator.next_1());
    callback(update);
  }
};
idwca.$onOpen = function $onOpen(this$static, callback) {
  switch (this$static.state.ordinal_0) {
    case 1:
      idwcf.runLater(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$121$Type.prototype.run,
          idwca.WorkerConnection$lambda$121$Type,
          [callback]
        )
      );
      break;
    case 3:
    case 2:
      this$static.state =
        (idwca.$clinit_WorkerConnection$State(), idwca.Reconnecting);
      idwca.$initialConnection(this$static.newSessionReconnect);
    default:
      ju.$add(this$static.onOpen, new idwca.Callbacks$4(callback));
  }
};
idwca.$padAndConcat = function $padAndConcat(buffers, length_0) {
  var all, buffer, currentPosition, i;
  all = new $wnd.Uint8Array(
    toInt_0(
      jus.$collect(
        jus.$mapToInt(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(buffers, 16)
          ),
          new idwca.WorkerConnection$lambda$96$Type()
        )
      ).sum_0
    )
  );
  currentPosition = 0;
  for (i = 0; i < buffers.array.length; i++) {
    buffer =
      (ji.checkCriticalElementIndex(i, buffers.array.length),
      castToNative(buffers.array[i], $wnd.Uint8Array));
    all.set(buffer, currentPosition);
    currentPosition += buffer.byteLength;
  }
  if (length_0 != currentPosition) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return all;
};
idwca.$registerSimpleReconnectable = function $registerSimpleReconnectable(
  this$static,
  figure
) {
  this$static.simpleReconnectableInstances.add(figure);
};
idwca.$releaseTicket = function $releaseTicket(this$static, ticket) {
  var releaseRequest;
  releaseRequest =
    new $wnd.dhinternal.io.deephaven.proto.session_pb.ReleaseRequest();
  releaseRequest.setId(ticket);
  this$static.sessionServiceClient.release(
    releaseRequest,
    this$static.metadata_0,
    null
  );
};
idwca.$scheduleCheck = function $scheduleCheck(this$static, state) {
  this$static.flushable.map_0.size() == 0 &&
    idwcf.runLater(
      makeLambdaFunction(
        idwca.WorkerConnection$31methodref$flush$Type.prototype.run,
        idwca.WorkerConnection$31methodref$flush$Type,
        [this$static]
      )
    );
  ju.$add_0(this$static.flushable, state);
};
idwca.$setSessionTimeoutMs = function $setSessionTimeoutMs(
  this$static,
  sessionTimeoutMs
) {
  this$static.sessionTimeoutMs = sessionTimeoutMs;
};
idwca.$startExportNotificationsStream =
  function $startExportNotificationsStream(this$static) {
    this$static.exportNotifications_0 != null &&
      this$static.exportNotifications_0.cancel();
    this$static.exportNotifications_0 = castToJsObject(
      this$static.tableServiceClient.exportedTableUpdates(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableUpdatesRequest(),
        this$static.metadata_0
      )
    );
    this$static.exportNotifications_0.on(
      "data",
      castToFunction(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$27$Type.prototype.apply_3,
          idwca.WorkerConnection$lambda$27$Type,
          [this$static]
        )
      )
    );
    this$static.exportNotifications_0.on(
      "status",
      castToFunction(
        makeLambdaFunction(
          idwca.WorkerConnection$7methodref$checkStatus$Type.prototype.apply_3,
          idwca.WorkerConnection$7methodref$checkStatus$Type,
          [this$static]
        )
      )
    );
  };
idwca.$streamFactory = function $streamFactory(this$static) {
  return new idwcabs.BiDiStream$Factory(
    new idwca.WorkerConnection$25methodref$metadata$Type(this$static),
    new idwca.WorkerConnection$26methodref$newTicketInt$Type(this$static.config)
  );
};
idwca.$subscribeToFieldUpdates = function $subscribeToFieldUpdates(
  this$static,
  callback
) {
  var empty, update;
  this$static.fieldUpdatesCallback.add(callback);
  if (this$static.fieldUpdatesCallback.size == 1) {
    this$static.fieldsChangeUpdateStream = castToJsObject(
      this$static.applicationServiceClient.listFields(
        new $wnd.dhinternal.io.deephaven.proto.application_pb.ListFieldsRequest(),
        this$static.metadata_0
      )
    );
    this$static.fieldsChangeUpdateStream.on(
      "data",
      castToFunction(
        makeLambdaFunction(
          idwca.WorkerConnection$lambda$62$Type.prototype.apply_3,
          idwca.WorkerConnection$lambda$62$Type,
          [this$static]
        )
      )
    );
    this$static.fieldsChangeUpdateStream.on(
      "end",
      castToFunction(
        makeLambdaFunction(
          idwca.WorkerConnection$19methodref$checkStatus$Type.prototype.apply_3,
          idwca.WorkerConnection$19methodref$checkStatus$Type,
          [this$static]
        )
      )
    );
  } else {
    empty = initUnidimensionalArray(
      cggl.Lio_deephaven_web_client_api_console_JsVariableDefinition_2_classLit,
      $intern_52,
      62,
      0,
      0,
      1
    );
    update = new idwcac.JsVariableChanges(
      castTo(
        ju.$toArray_0(new ju.AbstractMap$2(this$static.knownFields), empty),
        168
      ),
      empty,
      empty
    );
    idwcf.runLater(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$65$Type.prototype.run,
        idwca.WorkerConnection$lambda$65$Type,
        [callback, update]
      )
    );
  }
  return makeLambdaFunction(
    idwca.WorkerConnection$lambda$66$Type.prototype.run,
    idwca.WorkerConnection$lambda$66$Type,
    [this$static, callback]
  );
};
idwca.$subscribeToLogs = function $subscribeToLogs(this$static, callback) {
  var mustSub;
  mustSub = this$static.logCallbacks.size == 0;
  this$static.logCallbacks.add(callback);
  if (mustSub) {
    this$static.logCallbacks.add(this$static.recordLog);
    idwca.$maybeRestartLogStream(this$static);
  } else {
    ju.$forEach_3(
      this$static.pastLogs,
      new idwca.WorkerConnection$38methodref$apply$Type(callback)
    );
  }
  return makeLambdaFunction(
    idwca.WorkerConnection$lambda$123$Type.prototype.run,
    idwca.WorkerConnection$lambda$123$Type,
    [this$static, callback]
  );
};
idwca.$timeTable = function $timeTable(this$static, periodNanos, startTime) {
  var startTimeNanos;
  startTimeNanos = !startTime ? -1 : startTime.value_0;
  return idwca
    .$whenServerReady(this$static, "create timetable")
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$131$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$131$Type,
        [this$static, periodNanos, startTimeNanos, startTime]
      )
    )
    .then(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$134$Type.prototype.onInvoke_5,
        idwca.WorkerConnection$lambda$134$Type,
        [this$static]
      )
    );
};
idwca.$unregisterSimpleReconnectable = function $unregisterSimpleReconnectable(
  this$static,
  figure
) {
  this$static.simpleReconnectableInstances.delete(figure);
};
idwca.$whenServerReady = function $whenServerReady(this$static, operationName) {
  switch (this$static.state.ordinal_0) {
    case 3:
    case 2:
      this$static.state =
        (idwca.$clinit_WorkerConnection$State(), idwca.Reconnecting);
      idwca.$initialConnection(this$static.newSessionReconnect);
    case 0:
    case 4:
      return idwca
        .promise_2(
          this$static.info_0,
          new idwca.WorkerConnection$lambda$67$Type(this$static)
        )
        .then(
          makeLambdaFunction(
            idwca.WorkerConnection$lambda$68$Type.prototype.onInvoke_5,
            idwca.WorkerConnection$lambda$68$Type,
            [this$static]
          )
        );
    case 1:
      return $wnd.Promise.resolve(this$static);
    default:
      return $wnd.Promise.reject(
        "Can't " +
          operationName +
          " while connection is in state " +
          this$static.state
      );
  }
};
idwca.WorkerConnection = function WorkerConnection(info) {
  idwca.$$init_19(this);
  this.info_0 = info;
  this.config = new idwca.ClientConfiguration();
  this.state = (idwca.$clinit_WorkerConnection$State(), idwca.Connecting);
  this.reviver = new idwcs.TableReviver(this);
  this.sessionServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.session_pb_service.SessionServiceClient(
      info.serverUrl,
      (idwcab.$clinit_WebGrpcUtils(), idwcab.CLIENT_OPTIONS)
    );
  this.tableServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.table_pb_service.TableServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.consoleServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.console_pb_service.ConsoleServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.flightServiceClient =
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb_service.FlightServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.applicationServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.application_pb_service.ApplicationServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.browserFlightServiceClient =
    new $wnd.dhinternal.arrow.flight.protocol.BrowserFlight_pb_service.BrowserFlightServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.inputTableServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.inputtable_pb_service.InputTableServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.objectServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.object_pb_service.ObjectServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.partitionedTableServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.partitionedtable_pb_service.PartitionedTableServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.storageServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.storage_pb_service.StorageServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.configServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.config_pb_service.ConfigServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.hierarchicalTableServiceClient =
    new $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb_service.HierarchicalTableServiceClient(
      info.serverUrl,
      idwcab.CLIENT_OPTIONS
    );
  this.newSessionReconnect = new idwca.ReconnectState_0(
    makeLambdaFunction(
      idwca.WorkerConnection$1methodref$connectToWorker$Type.prototype.run,
      idwca.WorkerConnection$1methodref$connectToWorker$Type,
      [this]
    )
  );
  idwca.$initialConnection(this.newSessionReconnect);
};
idwca.createMessage = function createMessage(
  payload,
  messageHeaderType,
  messageHeaderOffset,
  bodyLength
) {
  payload.finish(
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.Message.createMessage(
      payload,
      $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow
        .flatbuf.MetadataVersion.V5,
      messageHeaderType,
      messageHeaderOffset,
      $wnd.dhinternal.flatbuffers.Long.create(bodyLength, 0),
      0
    )
  );
  return payload.asUint8Array();
};
idwca.lambda$101 = function lambda$101(fetchSummary_0) {
  throw toJs(
    new jl.IllegalStateException_0(
      "Cannot reconnect, must recreate the unsolicited table on the server: " +
        fetchSummary_0
    )
  );
};
idwca.lambda$105 = function lambda$105(from_0, to_1, h_2) {
  return idwcs.$newState_3(from_0, h_2, to_1);
};
idwca.lambda$107 = function lambda$107(
  state_0,
  vps_1,
  table_2,
  subscription_3
) {
  if (table_2.currentState != state_0) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Inactive table has a viewport still attached")
    );
  }
  ju.$add(
    vps_1,
    new idwsd.TableSubscriptionRequest(
      table_2.subscriptionId,
      subscription_3.rows_0,
      subscription_3.columns_0
    )
  );
};
idwca.lambda$11_1 = function lambda$11_1(cts_0) {
  idwca.$setConnected(cts_0.handle, false);
  cts_0.subscribed = false;
  idwcs.$forActiveLifecycles(
    cts_0,
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$12$Type.prototype.apply_3,
      idwca.WorkerConnection$lambda$12$Type,
      [cts_0]
    )
  );
};
idwca.lambda$111 = function lambda$111(bs1_0, bs2_1) {
  var result;
  result = new ju.BitSet();
  ju.$or(result, bs1_0);
  ju.$or(result, bs2_1);
  return result;
};
idwca.lambda$12 = function lambda$12(cts_0, item_1) {
  if (!(!instanceOf(item_1, 13) || idwca.$state(castTo(item_1, 13)) == cts_0)) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Invalid table state " + item_1 + " does not point to state " + cts_0
      )
    );
  }
  item_1.suppress = true;
};
idwca.lambda$125 = function lambda$125(graph_0, cts_1) {
  jl.$forEach_2(
    idwcf.iterate(cts_1.active.values()),
    new idwca.WorkerConnection$lambda$126$Type(graph_0)
  );
};
idwca.lambda$126 = function lambda$126(graph_0, binding_1) {
  var tableId;
  tableId = binding_1.table_0.subscriptionId;
  jl.$append_9(
    jl.$append_5(((graph_0.string += "  table"), graph_0), tableId),
    "[shape=box];\n"
  );
  jl.$append_9(
    jl.$append_5(
      jl.$append_9(
        jl.$append_5(((graph_0.string += "  table"), graph_0), tableId),
        " -> handle"
      ),
      idwca.$state(binding_1.table_0).handle.exportId_0
    ),
    "[color=blue];\n"
  );
  !!idwcs.$getRollback(binding_1) &&
    jl.$append_9(
      jl.$append_5(
        jl.$append_9(
          jl.$append_5(
            ((graph_0.string += "  handle"), graph_0),
            binding_1.state.handle.exportId_0
          ),
          " -> handle"
        ),
        idwcs.$getRollback(binding_1).state.handle.exportId_0
      ),
      " [style=dotted, label=rollback];\n"
    );
};
idwca.lambda$14_0 = function lambda$14_0(cts_0) {
  idwcs.$forActiveTables(
    cts_0,
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$15$Type.prototype.apply_3,
      idwca.WorkerConnection$lambda$15$Type,
      [cts_0]
    )
  );
};
idwca.lambda$15_0 = function lambda$15_0(cts_0, t_1) {
  if (!idwcs.$isAncestor(idwca.$state(t_1), cts_0)) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Invalid binding " +
          t_1 +
          " (" +
          idwca.$state(t_1) +
          ") does not contain " +
          cts_0
      )
    );
  }
};
idwca.lambda$24 = function lambda$24(failure_0, c_1) {
  c_1.onFailure(failure_0);
};
idwca.lambda$28 = function lambda$28(update_0, state1_1) {
  idwcs.$setResolution_0(
    state1_1,
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.FAILED_0),
    update_0.getUpdateFailureMessage()
  );
};
idwca.lambda$36 = function lambda$36(snapshot_0, handle_1, s_2) {
  idwcs.$setSize_0(s_2, snapshot_0.tableSize);
  idwcs.$forActiveTables(
    s_2,
    makeLambdaFunction(
      idwca.WorkerConnection$lambda$37$Type.prototype.apply_3,
      idwca.WorkerConnection$lambda$37$Type,
      [handle_1, snapshot_0]
    )
  );
};
idwca.lambda$37 = function lambda$37(handle_0, snapshot_1, table_2) {
  idwca.$handleSnapshot_0(table_2, handle_0, snapshot_1);
};
idwca.lambda$39 = function lambda$39(updates_1, s_2) {
  if (!s_2.subscribed) {
    return;
  }
  idwcs.$handleDelta_1(s_2, updates_1);
};
idwca.lambda$40_0 = function lambda$40_0(size_0, state_1) {
  state_1.subscribed || idwcs.$setSize_0(state_1, size_0);
};
idwca.lambda$41 = function lambda$41(item_0) {
  var e;
  try {
    idwcal.$disconnected(item_0);
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 41)) {
      e = $e0;
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          ["Error in firing Figure.EVENT_DISCONNECT event", e]
        )
      );
    } else throw toJs($e0);
  }
  return null;
};
idwca.lambda$45 = function lambda$45(listener_0, fail_1) {
  idwca.$run_1(listener_0.subscription);
  return $wnd.Promise.reject(fail_1);
};
idwca.lambda$53 = function lambda$53(widget_0) {
  idwcaw.$close_3(widget_0);
  return idwcaw.$fetch(widget_0.exportedObjects_0[0]);
};
idwca.lambda$59 = function lambda$59(widget_0) {
  idwcaw.$close_3(widget_0);
  return idwcaw.$fetch(widget_0.exportedObjects_0[0]);
};
idwca.lambda$79 = function lambda$79(c_0, widget_1) {
  c_0(null, idwca.makeFigureFetchResponse(widget_1));
  idwcaw.$close_3(widget_1);
  return null;
};
idwca.lambda$92 = function lambda$92(
  schemaMessagePayload_0,
  data_1,
  cts_2,
  c_3,
  status_4
) {
  var schemaPlusHeader, syntheticResponse;
  if (idwcabs.$isOk(status_4)) {
    syntheticResponse =
      new $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableCreationResponse();
    schemaPlusHeader = new $wnd.Uint8Array(schemaMessagePayload_0.length + 8);
    schemaPlusHeader.set(schemaMessagePayload_0, 8);
    syntheticResponse.setSchemaHeader(schemaPlusHeader);
    syntheticResponse.setSize(data_1[0].length + "");
    syntheticResponse.setIsStatic(true);
    syntheticResponse.setSuccess(true);
    syntheticResponse.setResultId(idwca.$makeTableReference(cts_2.handle));
    c_3(null, syntheticResponse);
  } else {
    c_3(status_4.details, null);
  }
};
idwca.makeFigureFetchResponse = function makeFigureFetchResponse(widget) {
  var legacyResponse;
  legacyResponse =
    new $wnd.dhinternal.io.deephaven.proto.object_pb.FetchObjectResponse();
  legacyResponse.setData(widget.response.getData().getPayload_asU8());
  legacyResponse.setType(widget.typedTicket_0.getType());
  legacyResponse.setTypedExportIdsList(
    castToJsArray(
      jus.$toArray_6(
        jus.$map_0(
          ju.stream_4(widget.exportedObjects_0),
          new idwca.WorkerConnection$23methodref$typedTicket$Type()
        ),
        new idwca.WorkerConnection$24methodref$lambda$82$Type()
      )
    )
  );
  return legacyResponse;
};
idwca.warnLegacyTicketTypes = function warnLegacyTicketTypes(ticketType) {
  jl.$equalsIgnoreCase("TableMap", ticketType) &&
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "TableMap is now known as PartitionedTable, fetching as a plain widget. To fetch as a PartitionedTable use that as the type.",
        ]
      )
    );
  jl.$equalsIgnoreCase("TreeTable", ticketType) &&
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "TreeTable is now HierarchicalTable, fetching as a plain widget. To fetch as a HierarchicalTable use that as this type.",
        ]
      )
    );
};
defineClass(58, 1, { 58: 1 }, idwca.WorkerConnection);
_.dump = function dump_0(graphName) {
  var graph, statesAndParents;
  graphName == null && (graphName = "states");
  graph = new jl.StringBuilder_1("digraph " + graphName + " {\n");
  graph.string += '  null [label="fetch from server" shape=plaintext]\n';
  statesAndParents = castTo(
    jus.$collect_1(
      new jus.StreamImpl(
        null,
        new ju.Spliterators$IteratorSpliterator(
          new ju.AbstractMap$2(this.cache_0.allStates),
          0
        )
      ),
      jus.groupingBy_0(
        new idwca.WorkerConnection$39methodref$getPrevious$Type(),
        jus.of_4(
          new jus.Collectors$21methodref$ctor$Type(),
          new jus.Collectors$20methodref$add$Type(),
          new jus.Collectors$lambda$42$Type(),
          stampJavaTypeInfo(
            getClassLiteralForArray(
              cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
              1
            ),
            $intern_17,
            48,
            0,
            [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
          )
        )
      )
    ),
    30
  );
  idwca.$appendStatesToDump(this, null, statesAndParents, graph);
  jl.$forEach_2(
    new ju.AbstractMap$2(this.cache_0.allStates),
    new idwca.WorkerConnection$lambda$125$Type(graph)
  );
  return ((graph.string += "}"), graph).string;
};
_.forceClose = function forceClose() {
  idwca.$forceClose(this);
};
_.forceReconnect = function forceReconnect() {
  idwca.$forceReconnect(this);
};
_.subscribeToFieldUpdates = function subscribeToFieldUpdates(callback) {
  return idwca.$subscribeToFieldUpdates(this, callback);
};
_.sessionTimeoutMs = 10000;
cggl.Lio_deephaven_web_client_api_WorkerConnection_2_classLit = createForClass(
  "io.deephaven.web.client.api",
  "WorkerConnection",
  58
);
idwca.$getClass_142 = function $getClass_142() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$0methodref$add$Type =
  function WorkerConnection$0methodref$add$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1075,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$0methodref$add$Type
);
_.apply_3 = function apply_44(arg0) {
  ju.$add(this.$$outer_0, castTo(arg0, 223));
};
idwca.$getClass_143 = function $getClass_143() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$10methodref$resolve$Type =
  function WorkerConnection$10methodref$resolve$Type() {};
defineClass(
  1099,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$10methodref$resolve$Type
);
_.onInvoke_5 = function onInvoke_79(arg0) {
  return $wnd.Promise.resolve(castTo(arg0, 62));
};
idwca.$getClass_144 = function $getClass_144() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$11methodref$getHandle$Type =
  function WorkerConnection$11methodref$getHandle$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1147,
  $wnd.Function,
  $intern_47,
  idwca.WorkerConnection$11methodref$getHandle$Type
);
_.valueOf_0 = function valueOf_22() {
  return this.$$outer_0.handle;
};
idwca.$getClass_145 = function $getClass_145() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$12methodref$apply$Type =
  function WorkerConnection$12methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1149,
  $wnd.Function,
  {},
  idwca.WorkerConnection$12methodref$apply$Type
);
_.onInvoke_42 = function onInvoke_80(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_146 = function $getClass_146() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$13methodref$apply$Type =
  function WorkerConnection$13methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1151,
  $wnd.Function,
  {},
  idwca.WorkerConnection$13methodref$apply$Type
);
_.onInvoke_49 = function onInvoke_81(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_147 = function $getClass_147() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$14methodref$refetch$Type =
  function WorkerConnection$14methodref$refetch$Type() {};
defineClass(
  1101,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$14methodref$refetch$Type
);
_.onInvoke_5 = function onInvoke_82(arg0) {
  return idwcaw.$refetch_0(castTo(arg0, 60));
};
idwca.$getClass_148 = function $getClass_148() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$15methodref$refetch$Type =
  function WorkerConnection$15methodref$refetch$Type() {};
defineClass(
  1105,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$15methodref$refetch$Type
);
_.onInvoke_5 = function onInvoke_83(arg0) {
  return idwcaw.$refetch_0(castTo(arg0, 60));
};
idwca.$getClass_149 = function $getClass_149() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$16methodref$getObject$Type =
  function WorkerConnection$16methodref$getObject$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1106,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$16methodref$getObject$Type
);
_.onInvoke_5 = function onInvoke_84(arg0) {
  return idwca.$getObject_0(this.$$outer_0, castTo(arg0, 62));
};
idwca.$getClass_150 = function $getClass_150() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$17methodref$refetch$Type =
  function WorkerConnection$17methodref$refetch$Type() {};
defineClass(
  1107,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$17methodref$refetch$Type
);
_.onInvoke_5 = function onInvoke_85(arg0) {
  return idwcaw.$refetch_0(castTo(arg0, 60));
};
idwca.$getClass_151 = function $getClass_151() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$18methodref$refetch$Type =
  function WorkerConnection$18methodref$refetch$Type() {};
defineClass(
  1110,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$18methodref$refetch$Type
);
_.onInvoke_5 = function onInvoke_86(arg0) {
  return idwcaw.$refetch_0(castTo(arg0, 60));
};
idwca.$getClass_152 = function $getClass_152() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$19methodref$checkStatus$Type =
  function WorkerConnection$19methodref$checkStatus$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1113,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$19methodref$checkStatus$Type
);
_.apply_3 = function apply_45(arg0) {
  idwca.$checkStatus_0(this.$$outer_0, arg0);
};
idwca.$accept_0 = function $accept_0(this$static, changes) {
  var foundField;
  foundField = castTo(
    changes.created_0.find(
      makeLambdaFunction(
        idwca.WorkerConnection$1Listener$lambda$1$Type.prototype.onInvoke_0,
        idwca.WorkerConnection$1Listener$lambda$1$Type,
        [this$static.val$name2, this$static.val$type3]
      )
    ),
    62
  );
  !foundField &&
    (foundField = castTo(
      changes.updated_0.find(
        makeLambdaFunction(
          idwca.WorkerConnection$1Listener$lambda$2$Type.prototype.onInvoke_0,
          idwca.WorkerConnection$1Listener$lambda$2$Type,
          [this$static.val$name2, this$static.val$type3]
        )
      ),
      62
    ));
  if (foundField) {
    idwca.$run_1(this$static.subscription);
    idwcf.$succeed(this$static.val$promise4, foundField);
  }
};
idwca.WorkerConnection$1Listener = function WorkerConnection$1Listener(
  this$0,
  val$name,
  val$type,
  val$promise
) {
  this.val$name2 = val$name;
  this.val$type3 = val$type;
  this.val$promise4 = val$promise;
  this.subscription = idwca.$subscribeToFieldUpdates(
    this$0,
    makeLambdaFunction(
      idwca.WorkerConnection$1Listener$9methodref$accept$Type.prototype.apply_3,
      idwca.WorkerConnection$1Listener$9methodref$accept$Type,
      [this]
    )
  );
};
idwca.lambda$1_2 = function lambda$1_2(name_0, type_1, field_2) {
  return (
    jl.$equals_12(field_2.title_0, name_0) &&
    jl.$equalsIgnoreCase(field_2.type_0, type_1)
  );
};
idwca.lambda$2_3 = function lambda$2_3(name_0, type_1, field_2) {
  return (
    jl.$equals_12(field_2.title_0, name_0) &&
    jl.$equalsIgnoreCase(field_2.type_0, type_1)
  );
};
defineClass(428, 1, $intern_19, idwca.WorkerConnection$1Listener);
_.accept = function accept_16(changes) {
  idwca.$accept_0(this, castTo(changes, 186));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$1Listener_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/1Listener",
    428
  );
idwca.$getClass_153 = function $getClass_153() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$1Listener$9methodref$accept$Type =
  function WorkerConnection$1Listener$9methodref$accept$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1171,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$1Listener$9methodref$accept$Type
);
_.apply_3 = function apply_46(arg0) {
  idwca.$accept_0(this.$$outer_0, castTo(arg0, 186));
};
idwca.$getClass_154 = function $getClass_154() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$1Listener$lambda$1$Type =
  function WorkerConnection$1Listener$lambda$1$Type(name_0, type_1) {
    this.name_0 = name_0;
    this.type_1 = type_1;
  };
defineClass(
  1172,
  $wnd.Function,
  {},
  idwca.WorkerConnection$1Listener$lambda$1$Type
);
_.onInvoke_0 = function onInvoke_87(arg0, arg1, arg2) {
  return idwca.lambda$1_2(this.name_0, this.type_1, castTo(arg0, 62));
};
idwca.$getClass_155 = function $getClass_155() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$1Listener$lambda$2$Type =
  function WorkerConnection$1Listener$lambda$2$Type(name_0, type_1) {
    this.name_0 = name_0;
    this.type_1 = type_1;
  };
defineClass(
  1173,
  $wnd.Function,
  {},
  idwca.WorkerConnection$1Listener$lambda$2$Type
);
_.onInvoke_0 = function onInvoke_88(arg0, arg1, arg2) {
  return idwca.lambda$2_3(this.name_0, this.type_1, castTo(arg0, 62));
};
idwca.$getClass_156 = function $getClass_156() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.$run_0 = function $run_0(this$static) {
  idwca.$connectToWorker(this$static.$$outer_0);
};
idwca.WorkerConnection$1methodref$connectToWorker$Type =
  function WorkerConnection$1methodref$connectToWorker$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1086,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$1methodref$connectToWorker$Type
);
_.run = function run_15() {
  idwca.$run_0(this);
};
idwca.$appendAndMaybeFlush = function $appendAndMaybeFlush(
  this$static,
  header,
  body_0
) {
  var removed, shouldFlush, updates;
  if (!this$static.nextDeltaUpdates) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  shouldFlush = idwcab.$appendRecordBatch(
    this$static.nextDeltaUpdates,
    header,
    body_0
  );
  if (shouldFlush) {
    updates = this$static.nextDeltaUpdates.deltaUpdates;
    this$static.nextDeltaUpdates = null;
    if (
      jl.$equals_12(
        "true",
        ju.$getStringValue(
          this$static.val$state4.tableDef.attributes.map_0,
          "BlinkTable"
        )
      )
    ) {
      if (updates.added_0.sortedRanges.length == 0) {
        if (this$static.deferredDeltaUpdates) {
          removed = this$static.deferredDeltaUpdates.removed_0;
          ju.$forEachRemaining_0(
            new ju.AbstractList$IteratorImpl(
              new ju.Arrays$ArrayList(updates.removed_0.sortedRanges)
            ),
            new idwca.WorkerConnection$2$37methodref$addRange$Type(removed)
          );
        } else {
          this$static.deferredDeltaUpdates = updates;
        }
        return;
      } else if (this$static.deferredDeltaUpdates) {
        if (updates.removed_0.sortedRanges.length != 0) {
          debugger;
          throw toJs(
            new jl.AssertionError_0(
              "Blink table received two consecutive remove rowsets"
            )
          );
        }
        idwsd.$setRemoved(updates, this$static.deferredDeltaUpdates.removed_0);
        this$static.deferredDeltaUpdates = null;
      }
    }
    idwcf.runLater(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$38$Type.prototype.run,
        idwca.WorkerConnection$lambda$38$Type,
        [this$static.this$01, this$static.val$state4.handle, updates]
      )
    );
  }
};
idwca.$apply_1 = function $apply_1(this$static, data_0) {
  var barrageMessageWrapper, barrageUpdate, body_0, header, headerMessage;
  body_0 = idwcab.typedArrayToLittleEndianByteBuffer_0(
    data_0.getDataBody_asU8()
  );
  headerMessage =
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.Message.getRootAsMessage(
      new $wnd.dhinternal.flatbuffers.ByteBuffer(data_0.getDataHeader_asU8())
    );
  if (
    body_0.limit == 0 &&
    headerMessage.headerType() !=
      $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
        .flatbuf.MessageHeader.RecordBatch
  ) {
    return;
  }
  header = castToNative(
    headerMessage.header(
      new $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch()
    ),
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.RecordBatch
  );
  barrageMessageWrapper =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageMessageWrapper.getRootAsBarrageMessageWrapper(
      new $wnd.dhinternal.flatbuffers.ByteBuffer(data_0.getAppMetadata_asU8())
    );
  if (
    barrageMessageWrapper.msgType() ==
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven
      .barrage.flatbuf.BarrageMessageType.None
  ) {
    idwca.$appendAndMaybeFlush(this$static, header, body_0);
  } else {
    if (
      barrageMessageWrapper.msgType() !=
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io
        .deephaven.barrage.flatbuf.BarrageMessageType.BarrageUpdateMetadata
    ) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    barrageUpdate =
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageUpdateMetadata.getRootAsBarrageUpdateMetadata(
        new $wnd.dhinternal.flatbuffers.ByteBuffer(
          new $wnd.Uint8Array(barrageMessageWrapper.msgPayloadArray())
        )
      );
    idwca.$startAndMaybeFlush(
      this$static,
      barrageUpdate.isSnapshot(),
      header,
      body_0,
      barrageUpdate,
      this$static.val$isViewport2,
      this$static.val$columnTypes3
    );
  }
};
idwca.$getClass_157 = function $getClass_157() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.$startAndMaybeFlush = function $startAndMaybeFlush(
  this$static,
  isSnapshot,
  header,
  body_0,
  barrageUpdate,
  isViewport,
  columnTypes
) {
  var snapshot;
  if (isSnapshot) {
    snapshot = idwcab.createSnapshot(
      header,
      body_0,
      barrageUpdate,
      isViewport,
      columnTypes
    );
    idwcf.runLater(
      makeLambdaFunction(
        idwca.WorkerConnection$lambda$35$Type.prototype.run,
        idwca.WorkerConnection$lambda$35$Type,
        [this$static.this$01, this$static.val$state4.handle, snapshot]
      )
    );
  } else {
    this$static.nextDeltaUpdates =
      new idwcab.WebBarrageUtils$DeltaUpdatesBuilder(
        barrageUpdate,
        isViewport,
        columnTypes
      );
    idwca.$appendAndMaybeFlush(this$static, header, body_0);
  }
};
idwca.WorkerConnection$2 = function WorkerConnection$2(
  this$0,
  val$isViewport,
  val$columnTypes,
  val$state
) {
  this.this$01 = this$0;
  this.val$isViewport2 = val$isViewport;
  this.val$columnTypes3 = val$columnTypes;
  this.val$state4 = val$state;
};
defineClass(1124, $wnd.Function, $intern_48, idwca.WorkerConnection$2);
_.apply_3 = function apply_47(data_0) {
  idwca.$apply_1(
    this,
    castToNative(
      data_0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    )
  );
};
_.val$isViewport2 = false;
idwca.WorkerConnection$2$37methodref$addRange$Type =
  function WorkerConnection$2$37methodref$addRange$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  458,
  1,
  $intern_19,
  idwca.WorkerConnection$2$37methodref$addRange$Type
);
_.accept = function accept_17(arg0) {
  idwsd.$addRange(this.$$outer_0, castTo(arg0, 24));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$2$37methodref$addRange$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/2/37methodref$addRange$Type",
    458
  );
idwca.$getClass_158 = function $getClass_158() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$20methodref$apply$Type =
  function WorkerConnection$20methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1154,
  $wnd.Function,
  {},
  idwca.WorkerConnection$20methodref$apply$Type
);
_.onInvoke_33 = function onInvoke_89(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_159 = function $getClass_159() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$21methodref$refetch$Type =
  function WorkerConnection$21methodref$refetch$Type() {};
defineClass(
  948,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$21methodref$refetch$Type
);
_.onInvoke_5 = function onInvoke_90(arg0) {
  return idwcaw.$refetch_0(castTo(arg0, 60));
};
idwca.$getClass_160 = function $getClass_160() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$22methodref$refetch$Type =
  function WorkerConnection$22methodref$refetch$Type() {};
defineClass(
  1155,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$22methodref$refetch$Type
);
_.onInvoke_5 = function onInvoke_91(arg0) {
  return idwcaw.$refetch_0(castTo(arg0, 60));
};
idwca.WorkerConnection$23methodref$typedTicket$Type =
  function WorkerConnection$23methodref$typedTicket$Type() {};
defineClass(434, 1, {}, idwca.WorkerConnection$23methodref$typedTicket$Type);
_.apply_1 = function apply_48(arg0) {
  return idwcaw.$typedTicket_0(castTo(arg0, 245));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$23methodref$typedTicket$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/23methodref$typedTicket$Type",
    434
  );
idwca.WorkerConnection$24methodref$lambda$82$Type =
  function WorkerConnection$24methodref$lambda$82$Type() {};
defineClass(435, 1, {}, idwca.WorkerConnection$24methodref$lambda$82$Type);
_.apply_2 = function apply_49(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$24methodref$lambda$82$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/24methodref$lambda$82$Type",
    435
  );
idwca.$get_4 = function $get_4(this$static) {
  return this$static.$$outer_0.metadata_0;
};
idwca.WorkerConnection$25methodref$metadata$Type =
  function WorkerConnection$25methodref$metadata$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(150, 1, {}, idwca.WorkerConnection$25methodref$metadata$Type);
_.get_0 = function get_2() {
  return idwca.$get_4(this);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$25methodref$metadata$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/25methodref$metadata$Type",
    150
  );
idwca.WorkerConnection$26methodref$newTicketInt$Type =
  function WorkerConnection$26methodref$newTicketInt$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(151, 1, {}, idwca.WorkerConnection$26methodref$newTicketInt$Type);
cggl.Lio_deephaven_web_client_api_WorkerConnection$26methodref$newTicketInt$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/26methodref$newTicketInt$Type",
    151
  );
idwca.$getClass_161 = function $getClass_161() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$27methodref$apply$Type =
  function WorkerConnection$27methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1161,
  $wnd.Function,
  {},
  idwca.WorkerConnection$27methodref$apply$Type
);
_.onInvoke_8 = function onInvoke_92(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$apply_2 = function $apply_2(this$static, arg0) {
  ju.$add(this$static.$$outer_0, castTo(arg0, 136));
};
idwca.$getClass_162 = function $getClass_162() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$28methodref$add$Type =
  function WorkerConnection$28methodref$add$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1159,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$28methodref$add$Type
);
_.apply_3 = function apply_50(arg0) {
  idwca.$apply_2(this, arg0);
};
idwca.$apply_3 = function $apply_3(this$static, arg0) {
  ju.$add(this$static.$$outer_0, castToNative(arg0, $wnd.Uint8Array));
};
idwca.$getClass_163 = function $getClass_163() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$29methodref$add$Type =
  function WorkerConnection$29methodref$add$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1160,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$29methodref$add$Type
);
_.apply_3 = function apply_51(arg0) {
  idwca.$apply_3(this, arg0);
};
idwca.WorkerConnection$2methodref$lambda$16$Type =
  function WorkerConnection$2methodref$lambda$16$Type() {};
defineClass(416, 1, {}, idwca.WorkerConnection$2methodref$lambda$16$Type);
_.apply_2 = function apply_52(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_state_ClientTableState_2_classLit,
    $intern_45,
    14,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$2methodref$lambda$16$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/2methodref$lambda$16$Type",
    416
  );
idwca.$getClass_164 = function $getClass_164() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$30methodref$apply$Type =
  function WorkerConnection$30methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1163,
  $wnd.Function,
  {},
  idwca.WorkerConnection$30methodref$apply$Type
);
_.onInvoke_51 = function onInvoke_93(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_165 = function $getClass_165() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$31methodref$flush$Type =
  function WorkerConnection$31methodref$flush$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1121,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$31methodref$flush$Type
);
_.run = function run_16() {
  idwca.$flush(this.$$outer_0);
};
idwca.WorkerConnection$32methodref$getColumns$Type =
  function WorkerConnection$32methodref$getColumns$Type() {};
defineClass(449, 1, {}, idwca.WorkerConnection$32methodref$getColumns$Type);
_.apply_1 = function apply_53(arg0) {
  return castTo(arg0, 191).columns_0;
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$32methodref$getColumns$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/32methodref$getColumns$Type",
    449
  );
idwca.WorkerConnection$33methodref$getType$Type =
  function WorkerConnection$33methodref$getType$Type() {};
defineClass(452, 1, {}, idwca.WorkerConnection$33methodref$getType$Type);
_.apply_1 = function apply_54(arg0) {
  return castTo(arg0, 83).type_0;
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$33methodref$getType$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/33methodref$getType$Type",
    452
  );
idwca.WorkerConnection$34methodref$lambda$114$Type =
  function WorkerConnection$34methodref$lambda$114$Type() {};
defineClass(453, 1, {}, idwca.WorkerConnection$34methodref$lambda$114$Type);
_.apply_2 = function apply_55(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$34methodref$lambda$114$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/34methodref$lambda$114$Type",
    453
  );
idwca.WorkerConnection$35methodref$getRows$Type =
  function WorkerConnection$35methodref$getRows$Type() {};
defineClass(454, 1, {}, idwca.WorkerConnection$35methodref$getRows$Type);
_.apply_1 = function apply_56(arg0) {
  return castTo(arg0, 191).rows_0;
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$35methodref$getRows$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/35methodref$getRows$Type",
    454
  );
idwca.$getClass_166 = function $getClass_166() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$36methodref$apply$Type =
  function WorkerConnection$36methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1164,
  $wnd.Function,
  {},
  idwca.WorkerConnection$36methodref$apply$Type
);
_.onInvoke_7 = function onInvoke_94(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.WorkerConnection$38methodref$apply$Type =
  function WorkerConnection$38methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(459, 1, $intern_19, idwca.WorkerConnection$38methodref$apply$Type);
_.accept = function accept_18(arg0) {
  this.$$outer_0.call(null, castTo(arg0, 223));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$38methodref$apply$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/38methodref$apply$Type",
    459
  );
idwca.WorkerConnection$39methodref$getPrevious$Type =
  function WorkerConnection$39methodref$getPrevious$Type() {};
defineClass(460, 1, {}, idwca.WorkerConnection$39methodref$getPrevious$Type);
_.apply_1 = function apply_57(arg0) {
  return castTo(arg0, 14).source_0;
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$39methodref$getPrevious$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/39methodref$getPrevious$Type",
    460
  );
idwca.WorkerConnection$3methodref$isEmpty$Type =
  function WorkerConnection$3methodref$isEmpty$Type() {};
defineClass(417, 1, {}, idwca.WorkerConnection$3methodref$isEmpty$Type);
_.test_0 = function test_4(arg0) {
  return idwcs.$isEmpty(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$3methodref$isEmpty$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/3methodref$isEmpty$Type",
    417
  );
idwca.$getClass_167 = function $getClass_167() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$40methodref$apply$Type =
  function WorkerConnection$40methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1166,
  $wnd.Function,
  {},
  idwca.WorkerConnection$40methodref$apply$Type
);
_.onInvoke_47 = function onInvoke_95(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$getClass_168 = function $getClass_168() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$41methodref$apply$Type =
  function WorkerConnection$41methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1168,
  $wnd.Function,
  {},
  idwca.WorkerConnection$41methodref$apply$Type
);
_.onInvoke_58 = function onInvoke_96(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwca.$accept_1 = function $accept_1(this$static, arg0) {
  idwcas.$release_1(this$static.$$outer_0, castTo(arg0, 14));
};
idwca.WorkerConnection$4methodref$release$Type =
  function WorkerConnection$4methodref$release$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(418, 1, $intern_19, idwca.WorkerConnection$4methodref$release$Type);
_.accept = function accept_19(arg0) {
  idwca.$accept_1(this, arg0);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$4methodref$release$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/4methodref$release$Type",
    418
  );
idwca.WorkerConnection$5methodref$lambda$16$Type =
  function WorkerConnection$5methodref$lambda$16$Type() {};
defineClass(420, 1, {}, idwca.WorkerConnection$5methodref$lambda$16$Type);
_.apply_2 = function apply_58(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_state_ClientTableState_2_classLit,
    $intern_45,
    14,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$5methodref$lambda$16$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/5methodref$lambda$16$Type",
    420
  );
idwca.$getClass_169 = function $getClass_169() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$6methodref$checkStatus$Type =
  function WorkerConnection$6methodref$checkStatus$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1092,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$6methodref$checkStatus$Type
);
_.apply_3 = function apply_59(arg0) {
  idwca.$checkStatus_0(this.$$outer_0, arg0);
};
idwca.$getClass_170 = function $getClass_170() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$7methodref$checkStatus$Type =
  function WorkerConnection$7methodref$checkStatus$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1095,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$7methodref$checkStatus$Type
);
_.apply_3 = function apply_60(arg0) {
  idwca.$checkStatus_0(this.$$outer_0, arg0);
};
idwca.$getClass_171 = function $getClass_171() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$8methodref$disconnected$Type =
  function WorkerConnection$8methodref$disconnected$Type() {};
defineClass(
  1098,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$8methodref$disconnected$Type
);
_.apply_3 = function apply_61(arg0) {
  idwcal.$disconnected(castTo(arg0, 51));
};
idwca.$clinit_WorkerConnection$State =
  function $clinit_WorkerConnection$State() {
    idwca.$clinit_WorkerConnection$State = emptyMethod;
    idwca.Connecting = new idwca.WorkerConnection$State("Connecting", 0);
    idwca.Connected = new idwca.WorkerConnection$State("Connected", 1);
    idwca.Disconnected = new idwca.WorkerConnection$State("Disconnected", 2);
    idwca.Failed = new idwca.WorkerConnection$State("Failed", 3);
    idwca.Reconnecting = new idwca.WorkerConnection$State("Reconnecting", 4);
  };
idwca.WorkerConnection$State = function WorkerConnection$State(
  enum$name,
  enum$ordinal
) {
  Enum.call(this, enum$name, enum$ordinal);
};
idwca.values_2 = function values_2() {
  idwca.$clinit_WorkerConnection$State();
  return stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lio_deephaven_web_client_api_WorkerConnection$State_2_classLit,
      1
    ),
    $intern_17,
    149,
    0,
    [
      idwca.Connecting,
      idwca.Connected,
      idwca.Disconnected,
      idwca.Failed,
      idwca.Reconnecting,
    ]
  );
};
defineClass(
  149,
  37,
  { 149: 1, 3: 1, 33: 1, 37: 1 },
  idwca.WorkerConnection$State
);
cggl.Lio_deephaven_web_client_api_WorkerConnection$State_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api",
    "WorkerConnection/State",
    149,
    idwca.values_2
  );
idwca.$getClass_172 = function $getClass_172() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$10$Type =
  function WorkerConnection$lambda$10$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1089, $wnd.Function, {}, idwca.WorkerConnection$lambda$10$Type);
_.onInvoke_5 = function onInvoke_97(arg0) {
  return idwca.$lambda$10_0(this.$$outer_0, arg0);
};
idwca.$getClass_173 = function $getClass_173() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$100$Type =
  function WorkerConnection$lambda$100$Type($$outer_0, table_1, myBatcher_2) {
    this.$$outer_0 = $$outer_0;
    this.table_1 = table_1;
    this.myBatcher_2 = myBatcher_2;
  };
defineClass(
  1120,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$100$Type
);
_.apply_3 = function apply_62(arg0) {
  var lastArg;
  idwca.$lambda$100(
    this.$$outer_0,
    this.table_1,
    ((lastArg = this.myBatcher_2),
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest
    ),
    lastArg)
  );
};
idwca.WorkerConnection$lambda$101$Type =
  function WorkerConnection$lambda$101$Type(fetchSummary_0) {
    this.fetchSummary_0 = fetchSummary_0;
  };
defineClass(442, 1, {}, idwca.WorkerConnection$lambda$101$Type);
_.fetch_1 = function fetch_16(arg0, arg1, arg2) {
  idwca.lambda$101(this.fetchSummary_0);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$101$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$101$Type",
    442
  );
idwca.WorkerConnection$lambda$102$Type =
  function WorkerConnection$lambda$102$Type(
    $$outer_0,
    failFetch_1,
    fetchSummary_2,
    unsolicitedTable_3
  ) {
    this.$$outer_0 = $$outer_0;
    this.failFetch_1 = failFetch_1;
    this.fetchSummary_2 = fetchSummary_2;
    this.unsolicitedTable_3 = unsolicitedTable_3;
  };
defineClass(443, 1, {}, idwca.WorkerConnection$lambda$102$Type);
_.apply_1 = function apply_63(arg0) {
  return idwca.$lambda$102_0(
    this.$$outer_0,
    this.failFetch_1,
    this.fetchSummary_2,
    this.unsolicitedTable_3,
    castTo(arg0, 87)
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$102$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$102$Type",
    443
  );
idwca.WorkerConnection$lambda$103$Type =
  function WorkerConnection$lambda$103$Type(
    $$outer_0,
    fetcher_1,
    fetchSummary_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.fetcher_1 = fetcher_1;
    this.fetchSummary_2 = fetchSummary_2;
  };
defineClass(444, 1, {}, idwca.WorkerConnection$lambda$103$Type);
_.apply_1 = function apply_64(arg0) {
  return idwca.$lambda$103(
    this.$$outer_0,
    this.fetcher_1,
    this.fetchSummary_2,
    castTo(arg0, 87)
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$103$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$103$Type",
    444
  );
idwca.WorkerConnection$lambda$104$Type =
  function WorkerConnection$lambda$104$Type(
    $$outer_0,
    fetcher_1,
    fetchSummary_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.fetcher_1 = fetcher_1;
    this.fetchSummary_2 = fetchSummary_2;
  };
defineClass(445, 1, {}, idwca.WorkerConnection$lambda$104$Type);
_.apply_1 = function apply_65(arg0) {
  return idwca.$lambda$104(
    this.$$outer_0,
    this.fetcher_1,
    this.fetchSummary_2,
    castTo(arg0, 87)
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$104$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$104$Type",
    445
  );
idwca.WorkerConnection$lambda$105$Type =
  function WorkerConnection$lambda$105$Type(from_0, to_1) {
    this.from_0 = from_0;
    this.to_1 = to_1;
  };
defineClass(446, 1, {}, idwca.WorkerConnection$lambda$105$Type);
_.apply_1 = function apply_66(arg0) {
  return idwca.lambda$105(this.from_0, this.to_1, castTo(arg0, 87));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$105$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$105$Type",
    446
  );
idwca.$getClass_174 = function $getClass_174() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$107$Type =
  function WorkerConnection$lambda$107$Type(state_0, vps_1) {
    this.state_0 = state_0;
    this.vps_1 = vps_1;
  };
defineClass(
  1123,
  $wnd.Function,
  $intern_30,
  idwca.WorkerConnection$lambda$107$Type
);
_.apply_0 = function apply_67(arg0, arg1) {
  idwca.lambda$107(
    this.state_0,
    this.vps_1,
    castTo(arg0, 13),
    castTo(arg1, 175)
  );
};
idwca.$test = function $test(arg0) {
  return !!castTo(arg0, 191).rows_0;
};
idwca.WorkerConnection$lambda$108$Type =
  function WorkerConnection$lambda$108$Type() {};
defineClass(447, 1, {}, idwca.WorkerConnection$lambda$108$Type);
_.test_0 = function test_5(arg0) {
  return idwca.$test(arg0);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$108$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$108$Type",
    447
  );
idwca.WorkerConnection$lambda$109$Type =
  function WorkerConnection$lambda$109$Type() {};
defineClass(448, 1, {}, idwca.WorkerConnection$lambda$109$Type);
_.test_0 = function test_6(arg0) {
  return !!castTo(arg0, 191).rows_0;
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$109$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$109$Type",
    448
  );
idwca.WorkerConnection$lambda$11$Type =
  function WorkerConnection$lambda$11$Type() {};
defineClass(413, 1, $intern_19, idwca.WorkerConnection$lambda$11$Type);
_.accept = function accept_20(arg0) {
  idwca.lambda$11_1(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$11$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$11$Type",
    413
  );
idwca.WorkerConnection$lambda$111$Type =
  function WorkerConnection$lambda$111$Type() {};
defineClass(450, 1, {}, idwca.WorkerConnection$lambda$111$Type);
_.apply_4 = function apply_68(arg0, arg1) {
  return idwca.lambda$111(castTo(arg0, 73), castTo(arg1, 73));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$111$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$111$Type",
    450
  );
idwca.WorkerConnection$lambda$112$Type =
  function WorkerConnection$lambda$112$Type() {};
defineClass(451, 1, {}, idwca.WorkerConnection$lambda$112$Type);
_.get_0 = function get_3() {
  return new jl.IllegalStateException_0(
    "Cannot call subscribe with zero subscriptions"
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$112$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$112$Type",
    451
  );
idwca.WorkerConnection$lambda$116$Type =
  function WorkerConnection$lambda$116$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(455, 1, {}, idwca.WorkerConnection$lambda$116$Type);
_.openBiDiStream = function openBiDiStream(arg0) {
  return idwca.$lambda$116(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$116$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$116$Type",
    455
  );
idwca.WorkerConnection$lambda$117$Type =
  function WorkerConnection$lambda$117$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(456, 1, {}, idwca.WorkerConnection$lambda$117$Type);
_.openStream = function openStream(arg0, arg1) {
  return idwca.$lambda$117(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    ),
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$117$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$117$Type",
    456
  );
idwca.WorkerConnection$lambda$118$Type =
  function WorkerConnection$lambda$118$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(457, 1, {}, idwca.WorkerConnection$lambda$118$Type);
_.nextStreamMessage = function nextStreamMessage(arg0, arg1, arg2) {
  idwca.$lambda$118(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    ),
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$118$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$118$Type",
    457
  );
idwca.$getClass_175 = function $getClass_175() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$12$Type =
  function WorkerConnection$lambda$12$Type(cts_0) {
    this.cts_0 = cts_0;
  };
defineClass(
  1140,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$12$Type
);
_.apply_3 = function apply_69(arg0) {
  idwca.lambda$12(this.cts_0, castTo(arg0, 51));
};
idwca.$getClass_176 = function $getClass_176() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$120$Type =
  function WorkerConnection$lambda$120$Type($$outer_0, state_1) {
    this.$$outer_0 = $$outer_0;
    this.state_1 = state_1;
  };
defineClass(
  1125,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$120$Type
);
_.apply_3 = function apply_70(arg0) {
  idwca.$lambda$120(this.$$outer_0, this.state_1, arg0);
};
idwca.$getClass_177 = function $getClass_177() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$121$Type =
  function WorkerConnection$lambda$121$Type(callback_0) {
    this.callback_0 = callback_0;
  };
defineClass(
  1126,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$lambda$121$Type
);
_.run = function run_17() {
  idwca.$accept(this.callback_0, null, null);
};
idwca.$getClass_178 = function $getClass_178() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$123$Type =
  function WorkerConnection$lambda$123$Type($$outer_0, callback_1) {
    this.$$outer_0 = $$outer_0;
    this.callback_1 = callback_1;
  };
defineClass(
  1127,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$lambda$123$Type
);
_.run = function run_18() {
  idwca.$lambda$123(this.$$outer_0, this.callback_1);
};
idwca.WorkerConnection$lambda$125$Type =
  function WorkerConnection$lambda$125$Type(graph_0) {
    this.graph_0 = graph_0;
  };
defineClass(462, 1, $intern_19, idwca.WorkerConnection$lambda$125$Type);
_.accept = function accept_21(arg0) {
  idwca.lambda$125(this.graph_0, castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$125$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$125$Type",
    462
  );
idwca.WorkerConnection$lambda$126$Type =
  function WorkerConnection$lambda$126$Type(graph_0) {
    this.graph_0 = graph_0;
  };
defineClass(461, 1, $intern_19, idwca.WorkerConnection$lambda$126$Type);
_.accept = function accept_22(arg0) {
  idwca.lambda$126(this.graph_0, castTo(arg0, 55));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$126$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$126$Type",
    461
  );
idwca.$getClass_179 = function $getClass_179() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$127$Type =
  function WorkerConnection$lambda$127$Type($$outer_0, size_1) {
    this.$$outer_0 = $$outer_0;
    this.size_1 = size_1;
  };
defineClass(
  1128,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$127$Type
);
_.onInvoke_5 = function onInvoke_98(arg0) {
  return idwca.$lambda$127(this.$$outer_0, this.size_1);
};
_.size_1 = 0;
idwca.WorkerConnection$lambda$128$Type =
  function WorkerConnection$lambda$128$Type($$outer_0, size_1) {
    this.$$outer_0 = $$outer_0;
    this.size_1 = size_1;
  };
defineClass(463, 1, {}, idwca.WorkerConnection$lambda$128$Type);
_.fetch_1 = function fetch_17(arg0, arg1, arg2) {
  idwca.$lambda$128(this.$$outer_0, this.size_1, arg0, arg1, arg2);
};
_.size_1 = 0;
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$128$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$128$Type",
    463
  );
idwca.WorkerConnection$lambda$13$Type =
  function WorkerConnection$lambda$13$Type() {};
defineClass(414, 1, {}, idwca.WorkerConnection$lambda$13$Type);
_.test_0 = function test_7(arg0) {
  return !idwcs.$isEmpty(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$13$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$13$Type",
    414
  );
idwca.$getClass_180 = function $getClass_180() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$130$Type =
  function WorkerConnection$lambda$130$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1129,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$130$Type
);
_.onInvoke_5 = function onInvoke_99(arg0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this.$$outer_0, castTo(arg0, 14))
  );
};
idwca.$getClass_181 = function $getClass_181() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$131$Type =
  function WorkerConnection$lambda$131$Type(
    $$outer_0,
    periodNanos_1,
    startTimeNanos_3,
    startTime_5
  ) {
    this.$$outer_0 = $$outer_0;
    this.periodNanos_1 = periodNanos_1;
    this.startTimeNanos_3 = startTimeNanos_3;
    this.startTime_5 = startTime_5;
  };
defineClass(
  1130,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$131$Type
);
_.onInvoke_5 = function onInvoke_100(arg0) {
  return idwca.$lambda$131(
    this.$$outer_0,
    this.periodNanos_1,
    this.startTimeNanos_3,
    this.startTime_5
  );
};
_.periodNanos_1 = 0;
_.startTimeNanos_3 = 0;
idwca.WorkerConnection$lambda$132$Type =
  function WorkerConnection$lambda$132$Type(
    $$outer_0,
    periodNanos_1,
    startTimeNanos_3
  ) {
    this.$$outer_0 = $$outer_0;
    this.periodNanos_1 = periodNanos_1;
    this.startTimeNanos_3 = startTimeNanos_3;
  };
defineClass(464, 1, {}, idwca.WorkerConnection$lambda$132$Type);
_.fetch_1 = function fetch_18(arg0, arg1, arg2) {
  idwca.$lambda$132(
    this.$$outer_0,
    this.periodNanos_1,
    this.startTimeNanos_3,
    arg0,
    arg1,
    arg2
  );
};
_.periodNanos_1 = 0;
_.startTimeNanos_3 = 0;
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$132$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$132$Type",
    464
  );
idwca.$getClass_182 = function $getClass_182() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$134$Type =
  function WorkerConnection$lambda$134$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1131,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$134$Type
);
_.onInvoke_5 = function onInvoke_101(arg0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this.$$outer_0, castTo(arg0, 14))
  );
};
idwca.WorkerConnection$lambda$14$Type =
  function WorkerConnection$lambda$14$Type() {};
defineClass(415, 1, $intern_19, idwca.WorkerConnection$lambda$14$Type);
_.accept = function accept_23(arg0) {
  idwca.lambda$14_0(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$14$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$14$Type",
    415
  );
idwca.$getClass_183 = function $getClass_183() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$15$Type =
  function WorkerConnection$lambda$15$Type(cts_0) {
    this.cts_0 = cts_0;
  };
defineClass(
  1141,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$15$Type
);
_.apply_3 = function apply_71(arg0) {
  idwca.lambda$15_0(this.cts_0, castTo(arg0, 13));
};
idwca.$getClass_184 = function $getClass_184() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$19$Type =
  function WorkerConnection$lambda$19$Type() {};
defineClass(1138, $wnd.Function, {}, idwca.WorkerConnection$lambda$19$Type);
_.onInvoke_2 = function onInvoke_102(arg0, arg1, arg2) {
  var lastArg;
  return ((lastArg = castTo(arg0, 51)), castTo(arg1, 51), lastArg).refetch();
};
idwca.$getClass_185 = function $getClass_185() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$2$Type = function WorkerConnection$lambda$2$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(
  1087,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$2$Type
);
_.onInvoke_5 = function onInvoke_103(arg0) {
  return castTo(arg0, 257), idwca.$lambda$2_0(this.$$outer_0);
};
idwca.$getClass_186 = function $getClass_186() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$20$Type =
  function WorkerConnection$lambda$20$Type() {};
defineClass(1139, $wnd.Function, {}, idwca.WorkerConnection$lambda$20$Type);
_.onInvoke_2 = function onInvoke_104(arg0, arg1, arg2) {
  var lastArg;
  return (
    ((lastArg = castTo(arg0, 51)), castTo(arg1, 51), lastArg).reconnect(), null
  );
};
idwca.WorkerConnection$lambda$21$Type =
  function WorkerConnection$lambda$21$Type() {};
defineClass(419, 1, {}, idwca.WorkerConnection$lambda$21$Type);
_.test_0 = function test_8(arg0) {
  return !idwcs.$isEmpty(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$21$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$21$Type",
    419
  );
idwca.WorkerConnection$lambda$23$Type =
  function WorkerConnection$lambda$23$Type() {};
defineClass(421, 1, $intern_19, idwca.WorkerConnection$lambda$23$Type);
_.accept = function accept_24(arg0) {
  castTo(arg0, 227).onSuccess(null);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$23$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$23$Type",
    421
  );
idwca.WorkerConnection$lambda$24$Type =
  function WorkerConnection$lambda$24$Type(failure_0) {
    this.failure_0 = failure_0;
  };
defineClass(422, 1, $intern_19, idwca.WorkerConnection$lambda$24$Type);
_.accept = function accept_25(arg0) {
  idwca.lambda$24(this.failure_0, castTo(arg0, 227));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$24$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$24$Type",
    422
  );
idwca.$getClass_187 = function $getClass_187() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$25$Type =
  function WorkerConnection$lambda$25$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1091,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$25$Type
);
_.apply_3 = function apply_72(arg0) {
  idwca.$lambda$25(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.LogSubscriptionData
    )
  );
};
idwca.$getClass_188 = function $getClass_188() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$27$Type =
  function WorkerConnection$lambda$27$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1094,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$27$Type
);
_.apply_3 = function apply_73(arg0) {
  idwca.$lambda$27_0(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableUpdateMessage
    )
  );
};
idwca.WorkerConnection$lambda$28$Type =
  function WorkerConnection$lambda$28$Type(update_0) {
    this.update_0 = update_0;
  };
defineClass(423, 1, $intern_19, idwca.WorkerConnection$lambda$28$Type);
_.accept = function accept_26(arg0) {
  idwca.lambda$28(this.update_0, castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$28$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$28$Type",
    423
  );
idwca.$getClass_189 = function $getClass_189() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$3$Type =
  function WorkerConnection$lambda$3$Type() {};
defineClass(
  1132,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$3$Type
);
_.onInvoke_5 = function onInvoke_105(arg0) {
  return (
    throwClassCastExceptionUnlessNull(arg0),
    $wnd.Promise.resolve((jl.$clinit_Boolean(), FALSE))
  );
};
idwca.$getClass_190 = function $getClass_190() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$30$Type =
  function WorkerConnection$lambda$30$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1096, $wnd.Function, {}, idwca.WorkerConnection$lambda$30$Type);
_.onInvoke_6 = function onInvoke_106(arg0, arg1) {
  idwca.$lambda$30(this.$$outer_0, arg0, arg1);
};
idwca.$getClass_191 = function $getClass_191() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$31$Type =
  function WorkerConnection$lambda$31$Type($$outer_0, handshake_1) {
    this.$$outer_0 = $$outer_0;
    this.handshake_1 = handshake_1;
  };
defineClass(
  1142,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$31$Type
);
_.apply_3 = function apply_74(arg0) {
  idwca.$lambda$31(this.$$outer_0, this.handshake_1, arg0);
};
idwca.$getClass_192 = function $getClass_192() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$32$Type =
  function WorkerConnection$lambda$32$Type($$outer_0, resolve_1, reject_2) {
    this.$$outer_0 = $$outer_0;
    this.resolve_1 = resolve_1;
    this.reject_2 = reject_2;
  };
defineClass(
  1143,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$32$Type
);
_.apply_3 = function apply_75(arg0) {
  idwca.$lambda$32(this.$$outer_0, this.resolve_1, this.reject_2, arg0);
};
idwca.$getClass_193 = function $getClass_193() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$33$Type =
  function WorkerConnection$lambda$33$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1144, $wnd.Function, {}, idwca.WorkerConnection$lambda$33$Type);
_.onInvoke_4 = function onInvoke_107(arg0) {
  idwca.$authUpdate(this.$$outer_0);
};
idwca.$getClass_194 = function $getClass_194() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$34$Type =
  function WorkerConnection$lambda$34$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(952, $wnd.Function, {}, idwca.WorkerConnection$lambda$34$Type);
_.onInvoke_34 = function onInvoke_108(arg0, arg1) {
  idwca.$lambda$34_0(this.$$outer_0, arg0, arg1);
};
idwca.$getClass_195 = function $getClass_195() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$35$Type =
  function WorkerConnection$lambda$35$Type($$outer_0, handle_1, snapshot_2) {
    this.$$outer_0 = $$outer_0;
    this.handle_1 = handle_1;
    this.snapshot_2 = snapshot_2;
  };
defineClass(
  1169,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$lambda$35$Type
);
_.run = function run_19() {
  idwca.$lambda$35_0(this.$$outer_0, this.handle_1, this.snapshot_2);
};
idwca.WorkerConnection$lambda$36$Type =
  function WorkerConnection$lambda$36$Type(snapshot_0, handle_1) {
    this.snapshot_0 = snapshot_0;
    this.handle_1 = handle_1;
  };
defineClass(424, 1, $intern_19, idwca.WorkerConnection$lambda$36$Type);
_.accept = function accept_27(arg0) {
  idwca.lambda$36(this.snapshot_0, this.handle_1, castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$36$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$36$Type",
    424
  );
idwca.$getClass_196 = function $getClass_196() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$37$Type =
  function WorkerConnection$lambda$37$Type(handle_0, snapshot_1) {
    this.handle_0 = handle_0;
    this.snapshot_1 = snapshot_1;
  };
defineClass(
  1145,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$37$Type
);
_.apply_3 = function apply_76(arg0) {
  idwca.lambda$37(this.handle_0, this.snapshot_1, castTo(arg0, 13));
};
idwca.$getClass_197 = function $getClass_197() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$38$Type =
  function WorkerConnection$lambda$38$Type(
    $$outer_0,
    tableHandle_1,
    updates_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.tableHandle_1 = tableHandle_1;
    this.updates_2 = updates_2;
  };
defineClass(
  1170,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$lambda$38$Type
);
_.run = function run_20() {
  idwca.$lambda$38(this.$$outer_0, this.tableHandle_1, this.updates_2);
};
idwca.WorkerConnection$lambda$39$Type =
  function WorkerConnection$lambda$39$Type(updates_1) {
    this.updates_1 = updates_1;
  };
defineClass(425, 1, $intern_19, idwca.WorkerConnection$lambda$39$Type);
_.accept = function accept_28(arg0) {
  idwca.lambda$39(this.updates_1, castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$39$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$39$Type",
    425
  );
idwca.$getClass_198 = function $getClass_198() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$4$Type = function WorkerConnection$lambda$4$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(
  1133,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$4$Type
);
_.onInvoke_5 = function onInvoke_109(arg0) {
  return idwca.$lambda$4_0(this.$$outer_0, castTo(arg0, 290));
};
idwca.WorkerConnection$lambda$40$Type =
  function WorkerConnection$lambda$40$Type(size_0) {
    this.size_0 = size_0;
  };
defineClass(426, 1, $intern_19, idwca.WorkerConnection$lambda$40$Type);
_.accept = function accept_29(arg0) {
  idwca.lambda$40_0(this.size_0, castTo(arg0, 14));
};
_.size_0 = 0;
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$40$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$40$Type",
    426
  );
idwca.$getClass_199 = function $getClass_199() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$41$Type =
  function WorkerConnection$lambda$41$Type() {};
defineClass(1097, $wnd.Function, {}, idwca.WorkerConnection$lambda$41$Type);
_.onInvoke_2 = function onInvoke_110(arg0, arg1, arg2) {
  var lastArg;
  return idwca.lambda$41(
    ((lastArg = castTo(arg0, 51)), castTo(arg1, 51), lastArg)
  );
};
idwca.WorkerConnection$lambda$43$Type =
  function WorkerConnection$lambda$43$Type() {};
defineClass(427, 1, $intern_19, idwca.WorkerConnection$lambda$43$Type);
_.accept = function accept_30(arg0) {
  castTo(arg0, 227).onFailure("Connection to server closed");
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$43$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$43$Type",
    427
  );
idwca.$getClass_200 = function $getClass_200() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$45$Type =
  function WorkerConnection$lambda$45$Type(listener_0) {
    this.listener_0 = listener_0;
  };
defineClass(1100, $wnd.Function, {}, idwca.WorkerConnection$lambda$45$Type);
_.onInvoke_5 = function onInvoke_111(arg0) {
  return idwca.lambda$45(this.listener_0, arg0);
};
idwca.$getClass_201 = function $getClass_201() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$46$Type =
  function WorkerConnection$lambda$46$Type(
    $$outer_0,
    varDef_1,
    applyPreviewColumns_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.varDef_1 = varDef_1;
    this.applyPreviewColumns_2 = applyPreviewColumns_2;
  };
defineClass(
  947,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$46$Type
);
_.onInvoke_5 = function onInvoke_112(arg0) {
  return idwca.$lambda$46_0(
    this.$$outer_0,
    this.varDef_1,
    this.applyPreviewColumns_2
  );
};
idwca.WorkerConnection$lambda$47$Type =
  function WorkerConnection$lambda$47$Type(
    $$outer_0,
    varDef_1,
    applyPreviewColumns_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.varDef_1 = varDef_1;
    this.applyPreviewColumns_2 = applyPreviewColumns_2;
  };
defineClass(429, 1, {}, idwca.WorkerConnection$lambda$47$Type);
_.fetch_1 = function fetch_19(arg0, arg1, arg2) {
  idwca.$lambda$47(
    this.$$outer_0,
    this.varDef_1,
    this.applyPreviewColumns_2,
    arg0,
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$47$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$47$Type",
    429
  );
idwca.$getClass_202 = function $getClass_202() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$5$Type = function WorkerConnection$lambda$5$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(
  1134,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$5$Type
);
_.onInvoke_5 = function onInvoke_113(arg0) {
  return idwca.$lambda$5_2(this.$$outer_0, castTo(arg0, 170));
};
idwca.$getClass_203 = function $getClass_203() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$51$Type =
  function WorkerConnection$lambda$51$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1146,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$51$Type
);
_.onInvoke_5 = function onInvoke_114(arg0) {
  return idwca.$lambda$51_0(this.$$outer_0, castTo(arg0, 14));
};
idwca.$getClass_204 = function $getClass_204() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$53$Type =
  function WorkerConnection$lambda$53$Type() {};
defineClass(
  1102,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$53$Type
);
_.onInvoke_5 = function onInvoke_115(arg0) {
  return idwca.lambda$53(castTo(arg0, 60));
};
idwca.WorkerConnection$lambda$56$Type =
  function WorkerConnection$lambda$56$Type($$outer_0, typedTicket_1) {
    this.$$outer_0 = $$outer_0;
    this.typedTicket_1 = typedTicket_1;
  };
defineClass(430, 1, {}, idwca.WorkerConnection$lambda$56$Type);
_.fetch_2 = function fetch_20(arg0) {
  idwca.$lambda$56_0(this.$$outer_0, this.typedTicket_1, arg0);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$56$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$56$Type",
    430
  );
idwca.$getClass_205 = function $getClass_205() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$57$Type =
  function WorkerConnection$lambda$57$Type(c_0, widget_1) {
    this.c_0 = c_0;
    this.widget_1 = widget_1;
  };
defineClass(
  1152,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$57$Type
);
_.onInvoke_5 = function onInvoke_116(arg0) {
  var lastArg;
  return (
    this.c_0.call(
      null,
      null,
      idwca.makeFigureFetchResponse(
        ((lastArg = this.widget_1), castTo(arg0, 60), lastArg)
      )
    ),
    null
  );
};
idwca.$getClass_206 = function $getClass_206() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$59$Type =
  function WorkerConnection$lambda$59$Type() {};
defineClass(
  1108,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$59$Type
);
_.onInvoke_5 = function onInvoke_117(arg0) {
  return idwca.lambda$59(castTo(arg0, 60));
};
idwca.$getClass_207 = function $getClass_207() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$6$Type = function WorkerConnection$lambda$6$Type(
  $$outer_0,
  options_1
) {
  this.$$outer_0 = $$outer_0;
  this.options_1 = options_1;
};
defineClass(1137, $wnd.Function, {}, idwca.WorkerConnection$lambda$6$Type);
_.onInvoke = function onInvoke_118(arg0, arg1, arg2) {
  return idwca.$lambda$6_1(this.$$outer_0, this.options_1, castToString(arg0));
};
idwca.$getClass_208 = function $getClass_208() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$60$Type =
  function WorkerConnection$lambda$60$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1109,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$60$Type
);
_.onInvoke_5 = function onInvoke_119(arg0) {
  return $wnd.Promise.resolve(
    new idwcat.JsTreeTable(this.$$outer_0, castTo(arg0, 60))
  );
};
idwca.$getClass_209 = function $getClass_209() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$62$Type =
  function WorkerConnection$lambda$62$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1112,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$62$Type
);
_.apply_3 = function apply_77(arg0) {
  idwca.$lambda$62_0(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.application_pb.FieldsChangeUpdate
    )
  );
};
idwca.$getClass_210 = function $getClass_210() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$63$Type =
  function WorkerConnection$lambda$63$Type(
    $$outer_0,
    created_1,
    updated_2,
    removed_3
  ) {
    this.$$outer_0 = $$outer_0;
    this.created_1 = created_1;
    this.updated_2 = updated_2;
    this.removed_3 = removed_3;
  };
defineClass(
  1153,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$lambda$63$Type
);
_.run = function run_21() {
  idwca.$notifyFieldsChangeListeners(
    this.$$outer_0,
    new idwcac.JsVariableChanges(this.created_1, this.updated_2, this.removed_3)
  );
};
idwca.$getClass_211 = function $getClass_211() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$65$Type =
  function WorkerConnection$lambda$65$Type(callback_0, update_1) {
    this.callback_0 = callback_0;
    this.update_1 = update_1;
  };
defineClass(
  1114,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$lambda$65$Type
);
_.run = function run_22() {
  this.callback_0.call(null, this.update_1);
};
idwca.$getClass_212 = function $getClass_212() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.$run_1 = function $run_1(this$static) {
  idwca.$lambda$66(this$static.$$outer_0, this$static.callback_1);
};
idwca.WorkerConnection$lambda$66$Type =
  function WorkerConnection$lambda$66$Type($$outer_0, callback_1) {
    this.$$outer_0 = $$outer_0;
    this.callback_1 = callback_1;
  };
defineClass(
  1115,
  $wnd.Function,
  $intern_49,
  idwca.WorkerConnection$lambda$66$Type
);
_.run = function run_23() {
  idwca.$run_1(this);
};
idwca.WorkerConnection$lambda$67$Type =
  function WorkerConnection$lambda$67$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(431, 1, $intern_19, idwca.WorkerConnection$lambda$67$Type);
_.accept = function accept_31(arg0) {
  idwca.$lambda$67_0(this.$$outer_0, castTo(arg0, 227));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$67$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$67$Type",
    431
  );
idwca.$getClass_213 = function $getClass_213() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$68$Type =
  function WorkerConnection$lambda$68$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1116,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$68$Type
);
_.onInvoke_5 = function onInvoke_120(arg0) {
  return (
    throwClassCastExceptionUnlessNull(arg0),
    $wnd.Promise.resolve(this.$$outer_0)
  );
};
idwca.$getClass_214 = function $getClass_214() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$69$Type =
  function WorkerConnection$lambda$69$Type($$outer_0, varDef_1, ticket_2) {
    this.$$outer_0 = $$outer_0;
    this.varDef_1 = varDef_1;
    this.ticket_2 = ticket_2;
  };
defineClass(
  270,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$69$Type
);
_.onInvoke_5 = function onInvoke_121(arg0) {
  return idwca.$lambda$69(this.$$outer_0, this.varDef_1, this.ticket_2);
};
idwca.$getClass_215 = function $getClass_215() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$7$Type = function WorkerConnection$lambda$7$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(
  1135,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$7$Type
);
_.onInvoke_5 = function onInvoke_122(arg0) {
  return castToArray(arg0), idwca.$authUpdate(this.$$outer_0);
};
idwca.WorkerConnection$lambda$70$Type =
  function WorkerConnection$lambda$70$Type($$outer_0, req_1) {
    this.$$outer_0 = $$outer_0;
    this.req_1 = req_1;
  };
defineClass(432, 1, $intern_19, idwca.WorkerConnection$lambda$70$Type);
_.accept = function accept_32(arg0) {
  idwca.$lambda$70_0(this.$$outer_0, this.req_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$70$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$70$Type",
    432
  );
idwca.$getClass_216 = function $getClass_216() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$72$Type =
  function WorkerConnection$lambda$72$Type($$outer_0, varDef_1) {
    this.$$outer_0 = $$outer_0;
    this.varDef_1 = varDef_1;
  };
defineClass(
  1103,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$72$Type
);
_.onInvoke_5 = function onInvoke_123(arg0) {
  return idwca.$lambda$72_0(this.$$outer_0, this.varDef_1);
};
idwca.$getClass_217 = function $getClass_217() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$73$Type =
  function WorkerConnection$lambda$73$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1104,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$73$Type
);
_.onInvoke_5 = function onInvoke_124(arg0) {
  return idwca.$refetch(
    new idwca.JsPartitionedTable(this.$$outer_0, castTo(arg0, 60))
  );
};
idwca.$getClass_218 = function $getClass_218() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$75$Type =
  function WorkerConnection$lambda$75$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  949,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$75$Type
);
_.onInvoke_5 = function onInvoke_125(arg0) {
  return $wnd.Promise.resolve(
    new idwcat.JsTreeTable(this.$$outer_0, castTo(arg0, 60))
  );
};
idwca.$getClass_219 = function $getClass_219() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$76$Type =
  function WorkerConnection$lambda$76$Type($$outer_0, varDef_1) {
    this.$$outer_0 = $$outer_0;
    this.varDef_1 = varDef_1;
  };
defineClass(
  1117,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$76$Type
);
_.onInvoke_5 = function onInvoke_126(arg0) {
  return idwca.$lambda$76(this.$$outer_0, this.varDef_1);
};
idwca.WorkerConnection$lambda$77$Type =
  function WorkerConnection$lambda$77$Type($$outer_0, varDef_1) {
    this.$$outer_0 = $$outer_0;
    this.varDef_1 = varDef_1;
  };
defineClass(433, 1, {}, idwca.WorkerConnection$lambda$77$Type);
_.fetch_2 = function fetch_21(arg0) {
  idwca.$lambda$77_0(this.$$outer_0, this.varDef_1, arg0);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$77$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$77$Type",
    433
  );
idwca.$getClass_220 = function $getClass_220() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$79$Type =
  function WorkerConnection$lambda$79$Type(c_0) {
    this.c_0 = c_0;
  };
defineClass(
  1156,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$79$Type
);
_.onInvoke_5 = function onInvoke_127(arg0) {
  return idwca.lambda$79(this.c_0, castTo(arg0, 60));
};
idwca.$getClass_221 = function $getClass_221() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$8$Type =
  function WorkerConnection$lambda$8$Type() {};
defineClass(
  1136,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$8$Type
);
_.onInvoke_5 = function onInvoke_128(arg0) {
  return (
    throwClassCastExceptionUnlessNull(arg0),
    $wnd.Promise.resolve((jl.$clinit_Boolean(), TRUE))
  );
};
idwca.$getClass_222 = function $getClass_222() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$80$Type =
  function WorkerConnection$lambda$80$Type(c_0) {
    this.c_0 = c_0;
  };
defineClass(1157, $wnd.Function, {}, idwca.WorkerConnection$lambda$80$Type);
_.onInvoke_5 = function onInvoke_129(arg0) {
  return this.c_0.call(null, arg0, null), null;
};
idwca.$apply_4 = function $apply_4(this$static, arg0) {
  return idwca.$lambda$83(
    this$static.$$outer_0,
    this$static.varDef_1,
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket)
  );
};
idwca.$getClass_223 = function $getClass_223() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$83$Type =
  function WorkerConnection$lambda$83$Type($$outer_0, varDef_1) {
    this.$$outer_0 = $$outer_0;
    this.varDef_1 = varDef_1;
  };
defineClass(
  271,
  $wnd.Function,
  $intern_34,
  idwca.WorkerConnection$lambda$83$Type
);
_.apply_1 = function apply_78(arg0) {
  return idwca.$apply_4(this, arg0);
};
idwca.$getClass_224 = function $getClass_224() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$84$Type =
  function WorkerConnection$lambda$84$Type($$outer_0, typedTicket_1) {
    this.$$outer_0 = $$outer_0;
    this.typedTicket_1 = typedTicket_1;
  };
defineClass(
  885,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$84$Type
);
_.onInvoke_5 = function onInvoke_130(arg0) {
  return $wnd.Promise.resolve(
    new idwcaw.JsWidget(this.$$outer_0, this.typedTicket_1)
  );
};
idwca.WorkerConnection$lambda$87$Type =
  function WorkerConnection$lambda$87$Type(
    $$outer_0,
    dataRef_1,
    columnNames_2,
    types_3,
    data_4,
    userTimeZone_5
  ) {
    this.$$outer_0 = $$outer_0;
    this.dataRef_1 = dataRef_1;
    this.columnNames_2 = columnNames_2;
    this.types_3 = types_3;
    this.data_4 = data_4;
    this.userTimeZone_5 = userTimeZone_5;
  };
defineClass(439, 1, {}, idwca.WorkerConnection$lambda$87$Type);
_.fetch_1 = function fetch_22(arg0, arg1, arg2) {
  idwca.$lambda$87_0(
    this.$$outer_0,
    this.dataRef_1,
    this.columnNames_2,
    this.types_3,
    this.data_4,
    this.userTimeZone_5,
    arg0,
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$87$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$87$Type",
    439
  );
idwca.WorkerConnection$lambda$88$Type =
  function WorkerConnection$lambda$88$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(436, 1, {}, idwca.WorkerConnection$lambda$88$Type);
_.openBiDiStream = function openBiDiStream_0(arg0) {
  return idwca.$lambda$88_0(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$88$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$88$Type",
    436
  );
idwca.WorkerConnection$lambda$89$Type =
  function WorkerConnection$lambda$89$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(437, 1, {}, idwca.WorkerConnection$lambda$89$Type);
_.openStream = function openStream_0(arg0, arg1) {
  return idwca.$lambda$89(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    ),
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$89$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$89$Type",
    437
  );
idwca.$getClass_225 = function $getClass_225() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$9$Type = function WorkerConnection$lambda$9$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(
  1088,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$9$Type
);
_.onInvoke_5 = function onInvoke_131(arg0) {
  return idwca.$lambda$9_0(this.$$outer_0, castToBoolean(arg0));
};
idwca.WorkerConnection$lambda$90$Type =
  function WorkerConnection$lambda$90$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(438, 1, {}, idwca.WorkerConnection$lambda$90$Type);
_.nextStreamMessage = function nextStreamMessage_0(arg0, arg1, arg2) {
  idwca.$lambda$90_0(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    ),
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$90$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$90$Type",
    438
  );
idwca.$getClass_226 = function $getClass_226() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$92$Type =
  function WorkerConnection$lambda$92$Type(
    schemaMessagePayload_0,
    data_1,
    cts_2,
    c_3
  ) {
    this.schemaMessagePayload_0 = schemaMessagePayload_0;
    this.data_1 = data_1;
    this.cts_2 = cts_2;
    this.c_3 = c_3;
  };
defineClass(
  1158,
  $wnd.Function,
  $intern_48,
  idwca.WorkerConnection$lambda$92$Type
);
_.apply_3 = function apply_79(arg0) {
  idwca.lambda$92(
    this.schemaMessagePayload_0,
    this.data_1,
    this.cts_2,
    this.c_3,
    arg0
  );
};
idwca.$getClass_227 = function $getClass_227() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$95$Type =
  function WorkerConnection$lambda$95$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1118,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$95$Type
);
_.onInvoke_5 = function onInvoke_132(arg0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this.$$outer_0, castTo(arg0, 14))
  );
};
idwca.WorkerConnection$lambda$96$Type =
  function WorkerConnection$lambda$96$Type() {};
defineClass(440, 1, {}, idwca.WorkerConnection$lambda$96$Type);
_.applyAsInt = function applyAsInt(arg0) {
  return castToNative(arg0, $wnd.Uint8Array).byteLength;
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$96$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$96$Type",
    440
  );
idwca.WorkerConnection$lambda$97$Type =
  function WorkerConnection$lambda$97$Type($$outer_0, tables_1) {
    this.$$outer_0 = $$outer_0;
    this.tables_1 = tables_1;
  };
defineClass(441, 1, {}, idwca.WorkerConnection$lambda$97$Type);
_.fetch_1 = function fetch_23(arg0, arg1, arg2) {
  idwca.$lambda$97_0(this.$$outer_0, this.tables_1, arg0, arg1, arg2);
};
cggl.Lio_deephaven_web_client_api_WorkerConnection$lambda$97$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api",
    "WorkerConnection/lambda$97$Type",
    441
  );
idwca.$getClass_228 = function $getClass_228() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwca.WorkerConnection$lambda$99$Type =
  function WorkerConnection$lambda$99$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1119,
  $wnd.Function,
  $intern_36,
  idwca.WorkerConnection$lambda$99$Type
);
_.onInvoke_5 = function onInvoke_133(arg0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this.$$outer_0, castTo(arg0, 14))
  );
};
idwcab.$$init_20 = function $$init_20(this$static) {
  this$static.sortedRanges = new ju.ArrayList();
};
idwcab.$append = function $append(this$static, value_0) {
  if (eq(this$static.pending, -1)) {
    this$static.pending = value_0;
  } else if (compare_1(value_0, 0) < 0) {
    ju.$add(
      this$static.sortedRanges,
      new idwsd.Range_0(this$static.pending, neg_0(value_0))
    );
    this$static.pending = -1;
  } else {
    ju.$add(
      this$static.sortedRanges,
      new idwsd.Range_0(this$static.pending, this$static.pending)
    );
    this$static.pending = value_0;
  }
};
idwcab.$read = function $read(this$static, data_0) {
  var actualValue,
    byteCount,
    byteValue,
    command,
    ii,
    ii0,
    shortCount,
    shortValue,
    value_0;
  do {
    command = round_byte(
      jl.$doubleValue(
        castToDouble(jb.$getAt(data_0.byteArray, data_0.position_0++))
      )
    );
    switch (command & 120) {
      case 8:
        value_0 = idwcab.readValue(data_0, command);
        actualValue = add_1(
          this$static.offset_0,
          compare_1(value_0, 0) < 0 ? neg_0(value_0) : value_0
        );
        idwcab.$append(
          this$static,
          compare_1(value_0, 0) < 0 ? neg_0(actualValue) : actualValue
        );
        this$static.offset_0 = actualValue;
        break;
      case 16:
        shortCount = toInt_0(idwcab.readValue(data_0, command));
        for (ii0 = 0; ii0 < shortCount; ++ii0) {
          shortValue = jn.$getShort(data_0);
          actualValue = add_1(
            this$static.offset_0,
            cggl.createSmallLongEmul0(shortValue < 0 ? -shortValue : shortValue)
          );
          idwcab.$append(
            this$static,
            shortValue < 0 ? neg_0(actualValue) : actualValue
          );
          this$static.offset_0 = actualValue;
        }

        break;
      case 24:
        byteCount = toInt_0(idwcab.readValue(data_0, command));
        for (ii = 0; ii < byteCount; ++ii) {
          byteValue = round_byte(
            jl.$doubleValue(
              castToDouble(jb.$getAt(data_0.byteArray, data_0.position_0++))
            )
          );
          actualValue = add_1(
            this$static.offset_0,
            cggl.createSmallLongEmul0(byteValue < 0 ? -byteValue : byteValue)
          );
          idwcab.$append(
            this$static,
            byteValue < 0 ? neg_0(actualValue) : actualValue
          );
          this$static.offset_0 = actualValue;
        }

        break;
      case 32:
        gte_0(this$static.pending, 0) &&
          idwcab.$append(this$static, this$static.pending);
        return idwsd.fromSortedRanges(
          castTo(
            ju.$toArray_2(
              this$static.sortedRanges,
              initUnidimensionalArray(
                cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
                $intern_44,
                24,
                0,
                0,
                1
              )
            ),
            86
          )
        );
      default:
        throw toJs(
          new jl.IllegalStateException_0(
            "Bad command: " + command + " at position " + data_0.position_0
          )
        );
    }
  } while (true);
};
idwcab.CompressedRangeSetReader = function CompressedRangeSetReader() {
  idwcab.$$init_20(this);
};
idwcab.appendWithDeltaOffset = function appendWithDeltaOffset(
  payload,
  shorts,
  offset,
  value_0,
  negate
) {
  var newValue;
  if (gte_0(value_0, add_1(offset, 32767))) {
    idwcab.flushShorts(payload, shorts);
    newValue = sub_3(value_0, offset);
    idwcab.writeValue(payload, 8, negate ? neg_0(newValue) : newValue);
  } else
    negate
      ? jn.$put_1(shorts, (toInt_0(neg_0(sub_3(value_0, offset))) << 16) >> 16)
      : jn.$put_1(shorts, (toInt_0(sub_3(value_0, offset)) << 16) >> 16);
  return value_0;
};
idwcab.flushShorts = function flushShorts(payload, shorts) {
  var byteCount,
    consecutiveBytes,
    ii,
    offset,
    requiresShort,
    shortCount,
    shortValue;
  for (offset = 0; offset < shorts.position_0; ) {
    byteCount = 0;
    while (
      offset + byteCount < shorts.position_0 &&
      round_short(
        jl.$doubleValue(
          castToDouble(jb.$getAt(shorts.shortArray, offset + byteCount))
        )
      ) < 127 &&
      round_short(
        jl.$doubleValue(
          castToDouble(jb.$getAt(shorts.shortArray, offset + byteCount))
        )
      ) > $intern_53
    ) {
      ++byteCount;
    }
    if (byteCount > 3 || byteCount + offset == shorts.position_0) {
      if (byteCount == 1) {
        idwcab.writeValue(
          payload,
          8,
          fromInt(
            round_short(
              jl.$doubleValue(
                castToDouble(jb.$getAt(shorts.shortArray, offset))
              )
            )
          )
        );
      } else {
        idwcab.writeValue(payload, 24, cggl.createSmallLongEmul0(byteCount));
        for (ii = offset; ii < offset + byteCount; ++ii) {
          jn.$put(
            payload,
            (round_short(
              jl.$doubleValue(castToDouble(jb.$getAt(shorts.shortArray, ii)))
            ) <<
              24) >>
              24
          );
        }
      }
      offset += byteCount;
    } else {
      shortCount = byteCount;
      consecutiveBytes = 0;
      while (shortCount + consecutiveBytes + offset < shorts.position_0) {
        shortValue = round_short(
          jl.$doubleValue(
            castToDouble(
              jb.$getAt(
                shorts.shortArray,
                offset + shortCount + consecutiveBytes
              )
            )
          )
        );
        requiresShort = shortValue >= 127 || shortValue <= $intern_53;
        if (requiresShort) {
          consecutiveBytes = 0;
          shortCount += consecutiveBytes;
          ++shortCount;
        } else {
          ++consecutiveBytes;
        }
        if (consecutiveBytes > 3) {
          break;
        }
      }
      consecutiveBytes > 0 &&
        consecutiveBytes <= 3 &&
        offset + shortCount + consecutiveBytes == shorts.position_0 &&
        (shortCount += consecutiveBytes);
      if (shortCount >= 2) {
        idwcab.writeValue(payload, 16, cggl.createSmallLongEmul0(shortCount));
        for (ii = offset; ii < offset + shortCount; ++ii) {
          jn.$putShort_0(
            payload,
            round_short(
              jl.$doubleValue(castToDouble(jb.$getAt(shorts.shortArray, ii)))
            )
          );
        }
      } else
        shortCount == 1 &&
          idwcab.writeValue(
            payload,
            8,
            fromInt(
              round_short(
                jl.$doubleValue(
                  castToDouble(jb.$getAt(shorts.shortArray, offset))
                )
              )
            )
          );
      offset += shortCount;
    }
  }
  jn.$position(shorts, 0);
};
idwcab.readValue = function readValue(in_0, command) {
  var value_0;
  switch (command & 7) {
    case 3:
      value_0 = jn.$getLong(in_0);
      break;
    case 2:
      value_0 = fromInt(jn.$getInt(in_0));
      break;
    case 1:
      value_0 = fromInt(jn.$getShort(in_0));
      break;
    case 4:
      value_0 = fromInt(
        round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(in_0.byteArray, in_0.position_0++))
          )
        )
      );
      break;
    default:
      throw toJs(new jl.IllegalStateException_0("Bad command: " + command));
  }
  return value_0;
};
idwcab.writeRange = function writeRange(s) {
  var it, offset, payload, r, result, shorts, sliced;
  offset = 0;
  payload =
    ((result = jn.allocateDirect(s.sortedRanges.length * 2 * 9 + 1)), result);
  jn.$order(payload, (jn.$clinit_ByteOrder(), jn.LITTLE_ENDIAN));
  shorts = jn.allocate_0(s.sortedRanges.length * 2);
  for (
    it = new ju.AbstractList$IteratorImpl(
      new ju.Arrays$ArrayList(s.sortedRanges)
    );
    it.i < it.this$01_0.size();

  ) {
    r =
      (ji.checkCriticalElement(it.i < it.this$01_0.size()),
      castTo(it.this$01_0.getAtIndex((it.last_0 = it.i++)), 24));
    if (eq(r.last_0, r.first_0)) {
      offset = idwcab.appendWithDeltaOffset(
        payload,
        shorts,
        offset,
        r.first_0,
        false
      );
    } else {
      offset = idwcab.appendWithDeltaOffset(
        payload,
        shorts,
        offset,
        r.first_0,
        false
      );
      offset = idwcab.appendWithDeltaOffset(
        payload,
        shorts,
        offset,
        r.last_0,
        true
      );
    }
  }
  idwcab.flushShorts(payload, shorts);
  jb.$setAt(payload.byteArray, payload.position_0++, 32);
  jn.$flip(payload);
  sliced = jn.$slice(payload);
  jn.$order(sliced, jn.LITTLE_ENDIAN);
  return sliced;
};
idwcab.writeValue = function writeValue(out, command, value_0) {
  if (compare_1(value_0, $intern_1) > 0 || compare_1(value_0, $intern_22) < 0) {
    jn.$put(out, ((command | 3) << 24) >> 24);
    jn.$putLong_0(out, value_0);
  } else if (
    compare_1(value_0, 32767) > 0 ||
    compare_1(value_0, $intern_54) < 0
  ) {
    jn.$put(out, ((command | 2) << 24) >> 24);
    jn.$putInt(out, toInt_0(value_0));
  } else if (
    compare_1(value_0, 127) > 0 ||
    compare_1(value_0, $intern_53) < 0
  ) {
    jn.$put(out, ((command | 1) << 24) >> 24);
    jn.$putShort_0(out, (toInt_0(value_0) << 16) >> 16);
  } else {
    jn.$put(out, ((command | 4) << 24) >> 24);
    jn.$put(out, (toInt_0(value_0) << 24) >> 24);
  }
};
defineClass(110, 1, {}, idwcab.CompressedRangeSetReader);
_.offset_0 = 0;
_.pending = -1;
cggl.Lio_deephaven_web_client_api_barrage_CompressedRangeSetReader_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "CompressedRangeSetReader",
    110
  );
idwcab.$read_0 = function $read_0(data_0) {
  var end,
    endIter,
    postShiftStart,
    postShiftStartIter,
    ranges,
    start_0,
    startIter,
    startPosition;
  start_0 = idwcab.$read(new idwcab.CompressedRangeSetReader(), data_0);
  end = idwcab.$read(new idwcab.CompressedRangeSetReader(), data_0);
  postShiftStart = idwcab.$read(new idwcab.CompressedRangeSetReader(), data_0);
  startIter = jus.$iterator_19(
    jus.$flatMapToLong(
      ju.stream_4(start_0.sortedRanges),
      new idwsd.RangeSet$lambda$0$Type()
    )
  );
  endIter = jus.$iterator_19(
    jus.$flatMapToLong(
      ju.stream_4(end.sortedRanges),
      new idwsd.RangeSet$lambda$0$Type()
    )
  );
  postShiftStartIter = jus.$iterator_19(
    jus.$flatMapToLong(
      ju.stream_4(postShiftStart.sortedRanges),
      new idwsd.RangeSet$lambda$0$Type()
    )
  );
  ranges = initUnidimensionalArray(
    cggl.Lio_deephaven_web_shared_data_ShiftedRange_2_classLit,
    $intern_0,
    306,
    0,
    0,
    1
  );
  while (
    (startIter.hasElement ||
      (startIter.hasElement = startIter.spliterator.tryAdvance_0(startIter)),
    startIter.hasElement)
  ) {
    startPosition = ju.$nextLong(startIter);
    ranges[ranges.length] = new idwsd.ShiftedRange(
      new idwsd.Range_0(startPosition, ju.$nextLong(endIter)),
      sub_3(ju.$nextLong(postShiftStartIter), startPosition)
    );
  }
  return ranges;
};
idwcab.createSnapshot = function createSnapshot(
  header,
  body_0,
  barrageUpdate,
  isViewport,
  columnTypes
) {
  var added,
    addedRowsIncluded,
    buffers,
    columnData,
    columnIndex,
    includedAdditions,
    nodes;
  if (barrageUpdate == null) {
    includedAdditions = added = idwsd.ofRange_0(
      0,
      fromDouble_0(header.length().toFloat64() - 1)
    );
  } else {
    added = idwcab.$read(
      new idwcab.CompressedRangeSetReader(),
      idwcab.typedArrayToLittleEndianByteBuffer(barrageUpdate.addedRowsArray())
    );
    addedRowsIncluded = barrageUpdate.addedRowsIncludedArray();
    isViewport && addedRowsIncluded != null
      ? (includedAdditions = idwcab.$read(
          new idwcab.CompressedRangeSetReader(),
          idwcab.typedArrayToLittleEndianByteBuffer(addedRowsIncluded)
        ))
      : (includedAdditions = added);
  }
  nodes = new idwcab.WebBarrageUtils$Iter(
    jus
      .range_2(round_int(header.nodesLength()))
      .mapToObj(new idwcab.WebBarrageUtils$9methodref$nodes$Type(header))
      .iterator_0()
  );
  buffers = new idwcab.WebBarrageUtils$Iter(
    jus
      .range_2(round_int(header.buffersLength()))
      .mapToObj(new idwcab.WebBarrageUtils$10methodref$buffers$Type(header))
      .iterator_0()
  );
  columnData = initUnidimensionalArray(
    cggl.Lio_deephaven_web_shared_data_columns_ColumnData_2_classLit,
    $intern_0,
    76,
    columnTypes.length,
    0,
    1
  );
  for (columnIndex = 0; columnIndex < columnTypes.length; ++columnIndex) {
    columnData[columnIndex] = idwcab.readArrowBuffer(
      body_0,
      nodes,
      buffers,
      toInt_0(
        jus.$collect_0(
          jus.$mapToLong(
            ju.stream_4(includedAdditions.sortedRanges),
            new idwsd.RangeSet$0methodref$size$Type()
          )
        ).sum_0
      ),
      columnTypes[columnIndex]
    );
  }
  return new idwsd.TableSnapshot(
    includedAdditions,
    columnData,
    jus.$collect_0(
      jus.$mapToLong(
        ju.stream_4(added.sortedRanges),
        new idwsd.RangeSet$0methodref$size$Type()
      )
    ).sum_0
  );
};
idwcab.emptyMessage = function emptyMessage() {
  var builder, offset;
  builder = new $wnd.dhinternal.flatbuffers.Builder(1024);
  offset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageMessageWrapper.createBarrageMessageWrapper(
      builder,
      1852338276,
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io
        .deephaven.barrage.flatbuf.BarrageMessageType.None,
      0
    );
  builder.finish(offset);
  return builder.asUint8Array();
};
idwcab.keyValuePairs = function keyValuePairs(filterPrefix, count, accessor) {
  var i, key, map_0, oldValue, pair;
  map_0 = new ju.HashMap();
  for (i = 0; i < count; i++) {
    pair = accessor.apply_5(i);
    key = idjpdaffsoaaf.$asString_0(pair.key());
    if (
      jl.$equals_12(
        ji.uncheckedCast(key).substr(0, ji.uncheckedCast(filterPrefix).length),
        filterPrefix
      )
    ) {
      key = jl.$substring(key, ji.uncheckedCast(filterPrefix).length);
      oldValue = castToString(
        ju.$putStringValue(map_0, key, idjpdaffsoaaf.$asString_1(pair.value()))
      );
      if (oldValue != null) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            key + " had " + oldValue + ", replaced with " + pair.value()
          )
        );
      }
    }
  }
  return map_0;
};
idwcab.makeUint8ArrayFromBitset = function makeUint8ArrayFromBitset(bitset) {
  var array, bytes, i, length_0;
  length_0 = ((ju.$previousSetBit(bitset) + 8) / 8) | 0;
  array = new $wnd.Uint8Array(length_0);
  bytes = ju.$toByteArray(bitset);
  for (i = 0; i < bytes.length; i++) {
    jb.$setAt(array, i, bytes[i]);
  }
  return array;
};
idwcab.readArrowBuffer = function readArrowBuffer(
  data_0,
  nodes,
  buffers,
  size_0,
  columnType
) {
  var arrayNode,
    arrayStart,
    bigDecArray,
    bigIntArray,
    boolArray,
    buf,
    byteArray,
    charArray,
    day,
    doubleArray,
    floatArray,
    hasNulls,
    hour,
    i,
    i0,
    i1,
    i2,
    i3,
    inner,
    innerHasNulls,
    innerOffsets,
    innerSize,
    innerValid,
    instanceSize,
    intArray,
    ioff,
    j,
    lastArg,
    len,
    localDateArray,
    localTimeArray,
    longArray,
    minute,
    month,
    nano,
    offsets,
    payload,
    positions,
    scale,
    second,
    shortArray,
    strArr,
    strArrArr,
    stringArray,
    stringBytes,
    stringSize,
    suffixlength,
    thisNode,
    valid,
    wireValues,
    year;
  valid = idwcab.readValidityBufferAsBitset(
    data_0,
    size_0,
    castToNative(
      idwcab.$next(buffers),
      $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow
        .flatbuf.Buffer
    )
  );
  thisNode = castToNative(
    idwcab.$next(nodes),
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.FieldNode
  );
  hasNulls = thisNode.nullCount().toFloat64() != 0;
  size_0 = $wnd.Math.min(size_0, round_int(thisNode.length().toFloat64()));
  positions = castToNative(
    idwcab.$next(buffers),
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow
      .flatbuf.Buffer
  );
  switch (columnType) {
    case "int":
      if (!(positions.length().toFloat64() >= size_0 * 4)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      intArray = new $wnd.Int32Array(
        data_0.byteArray.buffer,
        round_int(positions.offset().toFloat64()),
        size_0
      );
      return new idwsdc.IntArrayColumnData(intArray);
    case "short":
      if (!(positions.length().toFloat64() >= size_0 * 2)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      shortArray = new $wnd.Int16Array(
        data_0.byteArray.buffer,
        round_int(positions.offset().toFloat64()),
        size_0
      );
      return new idwsdc.ShortArrayColumnData(shortArray);
    case "boolean":
    case "java.lang.Boolean":
      if (!(positions.length().toFloat64() >= (((size_0 + 63) / 64) | 0))) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      jn.$position(data_0, round_int(positions.offset().toFloat64()));
      wireValues = idwcab.readBitSetWithLength(
        data_0,
        round_int(positions.length().toFloat64())
      );
      boolArray = initUnidimensionalArray(
        cggl.Ljava_lang_Boolean_2_classLit,
        $intern_17,
        337,
        size_0,
        8,
        1
      );
      for (i0 = 0; i0 < size_0; ++i0) {
        (!hasNulls || ju.$get_20(valid, i0)) &&
          (boolArray[i0] =
            (jl.$clinit_Boolean(),
            ju.$get_20(wireValues, i0)
              ? ji.uncheckedCast(true)
              : ji.uncheckedCast(false)));
      }

      return new idwsdc.BooleanArrayColumnData(boolArray);
    case "byte":
      if (!(positions.length().toFloat64() >= size_0)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      byteArray = new $wnd.Int8Array(
        data_0.byteArray.buffer,
        round_int(positions.offset().toFloat64()),
        size_0
      );
      return new idwsdc.ByteArrayColumnData(byteArray);
    case "double":
      if (!(positions.length().toFloat64() >= size_0 * 8)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      doubleArray = new $wnd.Float64Array(
        data_0.byteArray.buffer,
        round_int(positions.offset().toFloat64()),
        size_0
      );
      return new idwsdc.DoubleArrayColumnData(doubleArray);
    case "float":
      if (!(positions.length().toFloat64() >= size_0 * 4)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      floatArray = new $wnd.Float32Array(
        data_0.byteArray.buffer,
        round_int(positions.offset().toFloat64()),
        size_0
      );
      return new idwsdc.FloatArrayColumnData(floatArray);
    case "char":
      if (!(positions.length().toFloat64() >= size_0 * 2)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      charArray = new $wnd.Uint16Array(
        data_0.byteArray.buffer,
        round_int(positions.offset().toFloat64()),
        size_0
      );
      return new idwsdc.CharArrayColumnData(charArray);
    case "long":
    case "java.time.Instant":
    case "java.time.ZonedDateTime":
      if (!(positions.length().toFloat64() >= size_0 * 8)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      longArray = initUnidimensionalArray(
        cggl.J_classLit,
        $intern_43,
        18,
        size_0,
        14,
        1
      );
      jn.$position(data_0, round_int(positions.offset().toFloat64()));
      for (i1 = 0; i1 < size_0; i1++) {
        longArray[i1] = jn.$getLong(data_0);
      }

      return new idwsdc.LongArrayColumnData(longArray);
    case "java.time.LocalTime":
      if (!(positions.length().toFloat64() >= size_0 * 6)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      jn.$position(data_0, round_int(positions.offset().toFloat64()));
      localDateArray = initUnidimensionalArray(
        cggl.Lio_deephaven_web_shared_data_LocalDate_2_classLit,
        $intern_0,
        217,
        size_0,
        0,
        1
      );
      for (i2 = 0; i2 < size_0; i2++) {
        year = jn.$getInt(data_0);
        month = round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(data_0.byteArray, data_0.position_0++))
          )
        );
        day = round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(data_0.byteArray, data_0.position_0++))
          )
        );
        localDateArray[i2] = new idwsd.LocalDate(year, month, day);
      }

      return new idwsdc.LocalDateArrayColumnData(localDateArray);
    case "java.time.LocalDate":
      if (!(positions.length().toFloat64() == size_0 * 7)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }

      localTimeArray = initUnidimensionalArray(
        cggl.Lio_deephaven_web_shared_data_LocalTime_2_classLit,
        $intern_0,
        218,
        size_0,
        0,
        1
      );
      jn.$position(data_0, round_int(positions.offset().toFloat64()));
      for (i3 = 0; i3 < size_0; i3++) {
        nano = jn.$getInt(data_0);
        hour = round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(data_0.byteArray, data_0.position_0++))
          )
        );
        minute = round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(data_0.byteArray, data_0.position_0++))
          )
        );
        second = round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(data_0.byteArray, data_0.position_0++))
          )
        );
        jn.$position(data_0, data_0.position_0 + 1);
        localTimeArray[i3] = new idwsd.LocalTime(hour, minute, second, nano);
      }

      return new idwsdc.LocalTimeArrayColumnData(localTimeArray);
    default:
      offsets = idwcab.readOffsets(data_0, size_0, positions);
      {
        suffixlength = ji.uncheckedCast("[]").length;
        if (
          jl.$equals_12(
            ji
              .uncheckedCast(columnType)
              .substr(
                ji.uncheckedCast(columnType).length - suffixlength,
                suffixlength
              ),
            "[]"
          )
        ) {
          arrayNode = castToNative(
            idwcab.$next(nodes),
            $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache
              .arrow.flatbuf.FieldNode
          );
          innerSize = round_int(arrayNode.length().toFloat64());
          innerHasNulls = arrayNode.nullCount().toFloat64() != 0;
          innerValid = idwcab.readValidityBufferAsBitset(
            data_0,
            innerSize,
            castToNative(
              idwcab.$next(buffers),
              $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache
                .arrow.flatbuf.Buffer
            )
          );
          innerOffsets = idwcab.readOffsets(
            data_0,
            innerSize,
            castToNative(
              idwcab.$next(buffers),
              $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache
                .arrow.flatbuf.Buffer
            )
          );
          payload = castToNative(
            idwcab.$next(buffers),
            $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache
              .arrow.flatbuf.Buffer
          );
          switch (columnType) {
            case "java.lang.String[]":
              strArrArr = initUnidimensionalArray(
                cggl.Ljava_lang_String_2_classLit,
                $intern_33,
                12,
                size_0,
                0,
                2
              );
              for (i = 0; i < size_0; i++) {
                if (hasNulls && !ju.$get_20(valid, i)) {
                  continue;
                }
                arrayStart = round_int(
                  jl.$doubleValue(castToDouble(jb.$getAt(offsets.intArray, i)))
                );
                instanceSize =
                  round_int(
                    jl.$doubleValue(
                      castToDouble(jb.$getAt(offsets.intArray, i + 1))
                    )
                  ) - arrayStart;
                strArr = initUnidimensionalArray(
                  cggl.Ljava_lang_String_2_classLit,
                  $intern_8,
                  2,
                  instanceSize,
                  6,
                  1
                );
                for (j = 0; j < instanceSize; j++) {
                  inner = j + arrayStart;
                  if (innerHasNulls && !ju.$get_20(innerValid, inner)) {
                    if (
                      round_int(
                        jl.$doubleValue(
                          castToDouble(jb.$getAt(innerOffsets.intArray, inner))
                        )
                      ) !=
                      round_int(
                        jl.$doubleValue(
                          castToDouble(
                            jb.$getAt(innerOffsets.intArray, inner + 1)
                          )
                        )
                      )
                    ) {
                      debugger;
                      throw toJs(
                        new jl.AssertionError_0(
                          round_int(
                            jl.$doubleValue(
                              castToDouble(
                                jb.$getAt(innerOffsets.intArray, inner)
                              )
                            )
                          ) +
                            " == " +
                            round_int(
                              jl.$doubleValue(
                                castToDouble(
                                  jb.$getAt(innerOffsets.intArray, inner + 1)
                                )
                              )
                            )
                        )
                      );
                    }
                    continue;
                  }
                  jn.$position(
                    data_0,
                    round_int(payload.offset().toFloat64()) +
                      round_int(
                        jl.$doubleValue(
                          castToDouble(jb.$getAt(innerOffsets.intArray, inner))
                        )
                      )
                  );
                  stringSize =
                    round_int(
                      jl.$doubleValue(
                        castToDouble(
                          jb.$getAt(innerOffsets.intArray, inner + 1)
                        )
                      )
                    ) -
                    round_int(
                      jl.$doubleValue(
                        castToDouble(jb.$getAt(innerOffsets.intArray, inner))
                      )
                    );
                  stringBytes = initUnidimensionalArray(
                    cggl.B_classLit,
                    $intern_55,
                    18,
                    stringSize,
                    15,
                    1
                  );
                  jn.$get_13(data_0, stringBytes, stringBytes.length);
                  strArr[j] = jl.$create_1(
                    ((lastArg = stringBytes),
                    jnc.$clinit_StandardCharsets(),
                    lastArg)
                  );
                }
                strArrArr[i] = strArr;
              }

              return new idwsdc.StringArrayArrayColumnData(strArrArr);
            default:
              throw toJs(
                new jl.IllegalStateException_0(
                  "Can't decode column of type " + columnType
                )
              );
          }
        } else {
          payload = castToNative(
            idwcab.$next(buffers),
            $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache
              .arrow.flatbuf.Buffer
          );
          switch (columnType) {
            case "java.lang.String": {
              stringArray = initUnidimensionalArray(
                cggl.Ljava_lang_String_2_classLit,
                $intern_8,
                2,
                size_0,
                6,
                1
              );
              buf = initUnidimensionalArray(
                cggl.B_classLit,
                $intern_55,
                18,
                32,
                15,
                1
              );
              for (i = 0; i < size_0; i++) {
                if (hasNulls && !ju.$get_20(valid, i)) {
                  continue;
                }
                ioff = round_int(
                  jl.$doubleValue(castToDouble(jb.$getAt(offsets.intArray, i)))
                );
                len =
                  round_int(
                    jl.$doubleValue(
                      castToDouble(jb.$getAt(offsets.intArray, i + 1))
                    )
                  ) - ioff;
                jn.$position(
                  data_0,
                  round_int(payload.offset().toFloat64()) + ioff
                );
                buf.length < len &&
                  (buf = initUnidimensionalArray(
                    cggl.B_classLit,
                    $intern_55,
                    18,
                    len,
                    15,
                    1
                  ));
                jn.$get_13(data_0, buf, len);
                stringArray[i] = jl.valueOf_32(
                  ji.$decodeString(
                    buf,
                    ((lastArg = len), jnc.$clinit_StandardCharsets(), lastArg)
                  )
                );
              }
              return new idwsdc.StringArrayColumnData(stringArray);
            }

            case "java.math.BigDecimal": {
              bigDecArray = initUnidimensionalArray(
                cggl.Ljava_math_BigDecimal_2_classLit,
                $intern_17,
                50,
                size_0,
                0,
                1
              );
              buf = null;
              for (i = 0; i < size_0; i++) {
                if (hasNulls && !ju.$get_20(valid, i)) {
                  continue;
                }
                ioff = round_int(
                  jl.$doubleValue(castToDouble(jb.$getAt(offsets.intArray, i)))
                );
                len =
                  round_int(
                    jl.$doubleValue(
                      castToDouble(jb.$getAt(offsets.intArray, i + 1))
                    )
                  ) - ioff;
                jn.$position(
                  data_0,
                  round_int(payload.offset().toFloat64()) + ioff
                );
                scale = jn.$getInt(data_0);
                len -= 4;
                (buf == null || buf.length != len) &&
                  (buf = initUnidimensionalArray(
                    cggl.B_classLit,
                    $intern_55,
                    18,
                    len,
                    15,
                    1
                  ));
                bigDecArray[i] = new jm.BigDecimal_3(
                  (jn.$get_13(data_0, buf, buf.length),
                  new jm.BigInteger_6(buf)),
                  scale
                );
              }
              return new idwsdc.BigDecimalArrayColumnData(bigDecArray);
            }

            case "java.math.BigInteger": {
              bigIntArray = initUnidimensionalArray(
                cggl.Ljava_math_BigInteger_2_classLit,
                $intern_17,
                28,
                size_0,
                0,
                1
              );
              buf = null;
              for (i = 0; i < size_0; i++) {
                if (hasNulls && !ju.$get_20(valid, i)) {
                  continue;
                }
                ioff = round_int(
                  jl.$doubleValue(castToDouble(jb.$getAt(offsets.intArray, i)))
                );
                len =
                  round_int(
                    jl.$doubleValue(
                      castToDouble(jb.$getAt(offsets.intArray, i + 1))
                    )
                  ) - ioff;
                (buf == null || buf.length != len) &&
                  (buf = initUnidimensionalArray(
                    cggl.B_classLit,
                    $intern_55,
                    18,
                    len,
                    15,
                    1
                  ));
                jn.$position(
                  data_0,
                  round_int(payload.offset().toFloat64()) + ioff
                );
                bigIntArray[i] =
                  (jn.$get_13(data_0, buf, buf.length),
                  new jm.BigInteger_6(buf));
              }
              return new idwsdc.BigIntegerArrayColumnData(bigIntArray);
            }

            default:
              throw toJs(
                new jl.IllegalStateException_0(
                  "Can't decode column of type " + columnType
                )
              );
          }
        }
      }
  }
};
idwcab.readBitSetWithLength = function readBitSetWithLength(
  data_0,
  lenInBytes
) {
  var array;
  array = initUnidimensionalArray(
    cggl.B_classLit,
    $intern_55,
    18,
    lenInBytes,
    15,
    1
  );
  jn.$get_13(data_0, array, array.length);
  return ju.valueOf_38(array);
};
idwcab.readColumnDefinitions = function readColumnDefinitions(schema) {
  var cols_0, f, fieldMetadata, formatColumnName, i;
  cols_0 = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_barrage_def_ColumnDefinition_2_classLit,
    $intern_7,
    83,
    round_int(schema.fieldsLength()),
    0,
    1
  );
  for (i = 0; i < schema.fieldsLength(); i++) {
    cols_0[i] = new idwcabd.ColumnDefinition();
    f = schema.fields(i);
    fieldMetadata = idwcab.keyValuePairs(
      "deephaven:",
      f.customMetadataLength(),
      new idwcab.WebBarrageUtils$7methodref$customMetadata$Type(f)
    );
    idwcabd.$setName(cols_0[i], idjpdaffsoaaf.$asString(f.name()));
    idwcabd.$setColumnIndex(cols_0[i], i);
    idwcabd.$setType_0(
      cols_0[i],
      castToString(ju.$get_22(fieldMetadata.stringMap, "type"))
    );
    idwcabd.$setIsSortable(
      cols_0[i],
      jl.$equals_12("true", ju.$get_22(fieldMetadata.stringMap, "isSortable"))
    );
    idwcabd.$setStyleColumn(
      cols_0[i],
      jl.$equals_12("true", ju.$get_22(fieldMetadata.stringMap, "isStyle"))
    );
    idwcabd.$setFormatColumn(
      cols_0[i],
      jl.$equals_12(
        "true",
        ju.$get_22(fieldMetadata.stringMap, "isDateFormat")
      ) ||
        jl.$equals_12(
          "true",
          ju.$get_22(fieldMetadata.stringMap, "isNumberFormat")
        )
    );
    idwcabd.$setForRow(
      cols_0[i],
      jl.$equals_12("true", ju.$get_22(fieldMetadata.stringMap, "isRowStyle"))
    );
    formatColumnName = castToString(
      ju.$get_22(fieldMetadata.stringMap, "dateFormatColumn")
    );
    formatColumnName == null &&
      (formatColumnName = castToString(
        ju.$get_22(fieldMetadata.stringMap, "numberFormatColumn")
      ));
    idwcabd.$setFormatColumnName(cols_0[i], formatColumnName);
    idwcabd.$setStyleColumnName(
      cols_0[i],
      castToString(ju.$get_22(fieldMetadata.stringMap, "styleColumn"))
    );
    ju.$contains_5(fieldMetadata.stringMap, "inputtable.isKey") &&
      idwcabd.$setInputTableKeyColumn(
        cols_0[i],
        jl.$equals_12(
          "true",
          ju.$get_22(fieldMetadata.stringMap, "inputtable.isKey")
        )
      );
    idwcabd.$setDescription(
      cols_0[i],
      castToString(ju.$get_22(fieldMetadata.stringMap, "description"))
    );
    idwcabd.$setPartitionColumn(
      cols_0[i],
      jl.$equals_12(
        "true",
        ju.$get_22(fieldMetadata.stringMap, "isPartitioning")
      )
    );
    idwcabd.$setHierarchicalExpandByColumn(
      cols_0[i],
      jl.$equals_12(
        "true",
        ju.$get_22(
          fieldMetadata.stringMap,
          "hierarchicalTable.isExpandByColumn"
        )
      )
    );
    idwcabd.$setHierarchicalRowDepthColumn(
      cols_0[i],
      jl.$equals_12(
        "true",
        ju.$get_22(
          fieldMetadata.stringMap,
          "hierarchicalTable.isRowDepthColumn"
        )
      )
    );
    idwcabd.$setHierarchicalRowExpandedColumn(
      cols_0[i],
      jl.$equals_12(
        "true",
        ju.$get_22(
          fieldMetadata.stringMap,
          "hierarchicalTable.isRowExpandedColumn"
        )
      )
    );
    jl.$equals_12(
      "true",
      ju.$get_22(fieldMetadata.stringMap, "rollupTable.isAggregatedNodeColumn")
    );
    idwcabd.$setRollupConstituentNodeColumn(
      cols_0[i],
      jl.$equals_12(
        "true",
        ju.$get_22(
          fieldMetadata.stringMap,
          "rollupTable.isConstituentNodeColumn"
        )
      )
    );
    idwcabd.$setRollupGroupByColumn(
      cols_0[i],
      jl.$equals_12(
        "true",
        ju.$get_22(fieldMetadata.stringMap, "rollupTable.isGroupByColumn")
      )
    );
    idwcabd.$setRollupAggregationInputColumn(
      cols_0[i],
      castToString(
        ju.$get_22(
          fieldMetadata.stringMap,
          "rollupTable.aggregationInputColumnName"
        )
      )
    );
  }
  return cols_0;
};
idwcab.readOffsets = function readOffsets(data_0, size_0, buffer) {
  var emptyOffsets, offsets;
  if (size_0 == 0) {
    emptyOffsets = jn.allocate();
    return emptyOffsets;
  }
  jn.$position(data_0, round_int(buffer.offset().toFloat64()));
  offsets = jn.$asIntBuffer(jn.$slice(data_0));
  jn.$limit(offsets, size_0 + 1);
  return offsets;
};
idwcab.readSchemaMessage = function readSchemaMessage(flightSchemaMessage) {
  var bb, headerMessage;
  bb = new $wnd.dhinternal.flatbuffers.ByteBuffer(flightSchemaMessage);
  bb.setPosition(bb.position() + 8);
  headerMessage =
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.Message.getRootAsMessage(
      bb
    );
  if (
    headerMessage.headerType() !=
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.MessageHeader.Schema
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return castToNative(
    headerMessage.header(
      new $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Schema()
    ),
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow
      .flatbuf.Schema
  );
};
idwcab.readTableDefinition = function readTableDefinition(schema) {
  var attributes, cols_0;
  cols_0 = idwcab.readColumnDefinitions(schema);
  attributes = new idwcabd.TableAttributesDefinition(
    idwcab.keyValuePairs(
      "deephaven:attribute.",
      schema.customMetadataLength(),
      new idwcab.WebBarrageUtils$4methodref$customMetadata$Type(schema)
    ),
    (idwcab.keyValuePairs(
      "deephaven:attribute_type.",
      schema.customMetadataLength(),
      new idwcab.WebBarrageUtils$5methodref$customMetadata$Type(schema)
    ),
    new ju.AbstractMap$1(
      idwcab.keyValuePairs(
        "deephaven:unsent.attribute.",
        schema.customMetadataLength(),
        new idwcab.WebBarrageUtils$6methodref$customMetadata$Type(schema)
      )
    ))
  );
  return idwcabd.$setColumns(
    idwcabd.$setAttributes(new idwcabd.InitialTableDefinition(), attributes),
    cols_0
  );
};
idwcab.readValidityBufferAsBitset = function readValidityBufferAsBitset(
  data_0,
  size_0,
  buffer
) {
  var valid;
  if (size_0 == 0 || buffer.length().toFloat64() == 0) {
    return new ju.BitSet_0(0);
  }
  jn.$position(data_0, round_int(buffer.offset().toFloat64()));
  valid = idwcab.readBitSetWithLength(
    data_0,
    round_int(buffer.length().toFloat64())
  );
  return valid;
};
idwcab.serializeRanges = function serializeRanges(rangeSets) {
  var buffer, payload, rangeSet, rangeSet$iterator, s;
  if (rangeSets.size() == 0) {
    return new $wnd.Uint8Array(0);
  } else if (rangeSets.size() == 1) {
    s = castTo(rangeSets.iterator_0().next_1(), 70);
  } else {
    s = new idwsd.RangeSet();
    for (
      rangeSet$iterator = rangeSets.iterator_0();
      rangeSet$iterator.hasNext_1();

    ) {
      rangeSet = castTo(rangeSet$iterator.next_1(), 70);
      ju.$forEachRemaining_0(
        new ju.AbstractList$IteratorImpl(
          new ju.Arrays$ArrayList(rangeSet.sortedRanges)
        ),
        new idwcab.WebBarrageUtils$8methodref$addRange$Type(s)
      );
    }
  }
  payload = idwcab.writeRange(s);
  buffer = payload.byteArray;
  return new $wnd.Uint8Array(buffer);
};
idwcab.typedArrayToLittleEndianByteBuffer =
  function typedArrayToLittleEndianByteBuffer(data_0) {
    var bb, slicedBuffer;
    slicedBuffer = data_0.slice().buffer;
    bb = new jn.ByteBuffer_0(slicedBuffer);
    jn.$order(bb, (jn.$clinit_ByteOrder(), jn.LITTLE_ENDIAN));
    return bb;
  };
idwcab.typedArrayToLittleEndianByteBuffer_0 =
  function typedArrayToLittleEndianByteBuffer_0(data_0) {
    var bb, slicedBuffer;
    slicedBuffer = data_0.slice().buffer;
    bb = new jn.ByteBuffer_0(slicedBuffer);
    jn.$order(bb, (jn.$clinit_ByteOrder(), jn.LITTLE_ENDIAN));
    return bb;
  };
idwcab.wrapMessage = function wrapMessage(innerBuilder, messageType) {
  var messageOffset, offset, outerBuilder;
  outerBuilder = new $wnd.dhinternal.flatbuffers.Builder(1024);
  messageOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageMessageWrapper.createMsgPayloadVector(
      outerBuilder,
      innerBuilder.asUint8Array()
    );
  offset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageMessageWrapper.createBarrageMessageWrapper(
      outerBuilder,
      1852338276,
      messageType,
      messageOffset
    );
  outerBuilder.finish(offset);
  return outerBuilder.asUint8Array();
};
idwcab.WebBarrageUtils$10methodref$buffers$Type =
  function WebBarrageUtils$10methodref$buffers$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(738, 1, {}, idwcab.WebBarrageUtils$10methodref$buffers$Type);
_.apply_2 = function apply_80(arg0) {
  return this.$$outer_0.buffers(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$10methodref$buffers$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/10methodref$buffers$Type",
    738
  );
idwcab.WebBarrageUtils$4methodref$customMetadata$Type =
  function WebBarrageUtils$4methodref$customMetadata$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(732, 1, {}, idwcab.WebBarrageUtils$4methodref$customMetadata$Type);
_.apply_5 = function apply_81(arg0) {
  return this.$$outer_0.customMetadata(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$4methodref$customMetadata$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/4methodref$customMetadata$Type",
    732
  );
idwcab.WebBarrageUtils$5methodref$customMetadata$Type =
  function WebBarrageUtils$5methodref$customMetadata$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(733, 1, {}, idwcab.WebBarrageUtils$5methodref$customMetadata$Type);
_.apply_5 = function apply_82(arg0) {
  return this.$$outer_0.customMetadata(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$5methodref$customMetadata$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/5methodref$customMetadata$Type",
    733
  );
idwcab.WebBarrageUtils$6methodref$customMetadata$Type =
  function WebBarrageUtils$6methodref$customMetadata$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(734, 1, {}, idwcab.WebBarrageUtils$6methodref$customMetadata$Type);
_.apply_5 = function apply_83(arg0) {
  return this.$$outer_0.customMetadata(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$6methodref$customMetadata$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/6methodref$customMetadata$Type",
    734
  );
idwcab.WebBarrageUtils$7methodref$customMetadata$Type =
  function WebBarrageUtils$7methodref$customMetadata$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(735, 1, {}, idwcab.WebBarrageUtils$7methodref$customMetadata$Type);
_.apply_5 = function apply_84(arg0) {
  return this.$$outer_0.customMetadata(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$7methodref$customMetadata$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/7methodref$customMetadata$Type",
    735
  );
idwcab.WebBarrageUtils$8methodref$addRange$Type =
  function WebBarrageUtils$8methodref$addRange$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  736,
  1,
  $intern_19,
  idwcab.WebBarrageUtils$8methodref$addRange$Type
);
_.accept = function accept_33(arg0) {
  idwsd.$addRange(this.$$outer_0, castTo(arg0, 24));
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$8methodref$addRange$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/8methodref$addRange$Type",
    736
  );
idwcab.WebBarrageUtils$9methodref$nodes$Type =
  function WebBarrageUtils$9methodref$nodes$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(737, 1, {}, idwcab.WebBarrageUtils$9methodref$nodes$Type);
_.apply_2 = function apply_85(arg0) {
  return this.$$outer_0.nodes(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$9methodref$nodes$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/9methodref$nodes$Type",
    737
  );
idwcab.$$init_21 = function $$init_21(this$static) {
  this$static.deltaUpdates = new idwsd.DeltaUpdates();
};
idwcab.$appendRecordBatch = function $appendRecordBatch(
  this$static,
  recordBatch,
  body_0
) {
  gt(this$static.numAddRowsRemaining, 0)
    ? idwcab.$handleAddBatch(this$static, recordBatch, body_0)
    : gt(this$static.numModRowsRemaining, 0) &&
      idwcab.$handleModBatch(this$static, recordBatch, body_0);
  return (
    eq(this$static.numAddRowsRemaining, 0) &&
    eq(this$static.numModRowsRemaining, 0)
  );
};
idwcab.$handleAddBatch = function $handleAddBatch(
  this$static,
  recordBatch,
  body_0
) {
  var addedColumnData, buffers, columnData, columnIndex, nodes;
  nodes = new idwcab.WebBarrageUtils$Iter(
    jus
      .range_2(round_int(recordBatch.nodesLength()))
      .mapToObj(
        new idwcab.WebBarrageUtils$DeltaUpdatesBuilder$0methodref$nodes$Type(
          recordBatch
        )
      )
      .iterator_0()
  );
  buffers = new idwcab.WebBarrageUtils$Iter(
    jus
      .range_2(round_int(recordBatch.buffersLength()))
      .mapToObj(
        new idwcab.WebBarrageUtils$DeltaUpdatesBuilder$1methodref$buffers$Type(
          recordBatch
        )
      )
      .iterator_0()
  );
  addedColumnData = initUnidimensionalArray(
    cggl.Lio_deephaven_web_shared_data_DeltaUpdates$ColumnAdditions_2_classLit,
    $intern_0,
    249,
    this$static.columnTypes.length,
    0,
    1
  );
  for (
    columnIndex = 0;
    columnIndex < this$static.columnTypes.length;
    ++columnIndex
  ) {
    if (
      !(
        (nodes.next_0 != null || nodes.wrapped.hasNext_1()) &&
        (buffers.next_0 != null || buffers.wrapped.hasNext_1())
      )
    ) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    columnData = idwcab.readArrowBuffer(
      body_0,
      nodes,
      buffers,
      round_int(
        castToNative(
          idwcab.$peek(nodes),
          $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache
            .arrow.flatbuf.FieldNode
        )
          .length()
          .toFloat64()
      ),
      this$static.columnTypes[columnIndex]
    );
    addedColumnData[columnIndex] = new idwsd.DeltaUpdates$ColumnAdditions(
      columnIndex,
      columnData
    );
  }
  idwsd.$setSerializedAdditions(this$static.deltaUpdates, addedColumnData);
  this$static.numAddRowsRemaining = sub_3(
    this$static.numAddRowsRemaining,
    fromDouble_0(recordBatch.length().toFloat64())
  );
};
idwcab.$handleModBatch = function $handleModBatch(
  this$static,
  recordBatch,
  body_0
) {
  var buffers,
    columnData,
    columnIndex,
    columnMetadata,
    modifiedColumnData,
    modifiedRows,
    nodes;
  nodes = new idwcab.WebBarrageUtils$Iter(
    jus
      .range_2(round_int(recordBatch.nodesLength()))
      .mapToObj(
        new idwcab.WebBarrageUtils$DeltaUpdatesBuilder$2methodref$nodes$Type(
          recordBatch
        )
      )
      .iterator_0()
  );
  buffers = new idwcab.WebBarrageUtils$Iter(
    jus
      .range_2(round_int(recordBatch.buffersLength()))
      .mapToObj(
        new idwcab.WebBarrageUtils$DeltaUpdatesBuilder$3methodref$buffers$Type(
          recordBatch
        )
      )
      .iterator_0()
  );
  modifiedColumnData = initUnidimensionalArray(
    cggl.Lio_deephaven_web_shared_data_DeltaUpdates$ColumnModifications_2_classLit,
    $intern_0,
    250,
    this$static.columnTypes.length,
    0,
    1
  );
  for (
    columnIndex = 0;
    columnIndex < this$static.columnTypes.length;
    ++columnIndex
  ) {
    if (
      !(
        (nodes.next_0 != null || nodes.wrapped.hasNext_1()) &&
        (buffers.next_0 != null || buffers.wrapped.hasNext_1())
      )
    ) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    columnMetadata = this$static.barrageUpdate.modColumnNodes(columnIndex);
    modifiedRows = idwcab.$read(
      new idwcab.CompressedRangeSetReader(),
      idwcab.typedArrayToLittleEndianByteBuffer(
        columnMetadata.modifiedRowsArray()
      )
    );
    columnData = idwcab.readArrowBuffer(
      body_0,
      nodes,
      buffers,
      round_int(
        castToNative(
          idwcab.$peek(nodes),
          $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache
            .arrow.flatbuf.FieldNode
        )
          .length()
          .toFloat64()
      ),
      this$static.columnTypes[columnIndex]
    );
    modifiedColumnData[columnIndex] =
      new idwsd.DeltaUpdates$ColumnModifications(
        columnIndex,
        modifiedRows,
        columnData
      );
  }
  idwsd.$setSerializedModifications(
    this$static.deltaUpdates,
    modifiedColumnData
  );
  this$static.numModRowsRemaining = sub_3(
    this$static.numModRowsRemaining,
    fromDouble_0(recordBatch.length().toFloat64())
  );
};
idwcab.WebBarrageUtils$DeltaUpdatesBuilder =
  function WebBarrageUtils$DeltaUpdatesBuilder(
    barrageUpdate,
    isViewport,
    columnTypes
  ) {
    var addedRowsIncluded,
      columnIndex,
      columnMetadata,
      includedAdditions,
      modifiedRows;
    idwcab.$$init_21(this);
    this.barrageUpdate = barrageUpdate;
    this.columnTypes = columnTypes;
    idwsd.$setAdded(
      this.deltaUpdates,
      idwcab.$read(
        new idwcab.CompressedRangeSetReader(),
        idwcab.typedArrayToLittleEndianByteBuffer(
          barrageUpdate.addedRowsArray()
        )
      )
    );
    idwsd.$setRemoved(
      this.deltaUpdates,
      idwcab.$read(
        new idwcab.CompressedRangeSetReader(),
        idwcab.typedArrayToLittleEndianByteBuffer(
          barrageUpdate.removedRowsArray()
        )
      )
    );
    idwsd.$setShiftedRanges(
      this.deltaUpdates,
      idwcab.$read_0(
        idwcab.typedArrayToLittleEndianByteBuffer(
          barrageUpdate.shiftDataArray()
        )
      )
    );
    addedRowsIncluded = barrageUpdate.addedRowsIncludedArray();
    isViewport && addedRowsIncluded != null
      ? (includedAdditions = idwcab.$read(
          new idwcab.CompressedRangeSetReader(),
          idwcab.typedArrayToLittleEndianByteBuffer(addedRowsIncluded)
        ))
      : (includedAdditions = this.deltaUpdates.added_0);
    this.numAddRowsRemaining = jus.$collect_0(
      jus.$mapToLong(
        ju.stream_4(includedAdditions.sortedRanges),
        new idwsd.RangeSet$0methodref$size$Type()
      )
    ).sum_0;
    idwsd.$setIncludedAdditions(this.deltaUpdates, includedAdditions);
    idwsd.$setSerializedAdditions(
      this.deltaUpdates,
      initUnidimensionalArray(
        cggl.Lio_deephaven_web_shared_data_DeltaUpdates$ColumnAdditions_2_classLit,
        $intern_0,
        249,
        0,
        0,
        1
      )
    );
    idwsd.$setSerializedModifications(
      this.deltaUpdates,
      initUnidimensionalArray(
        cggl.Lio_deephaven_web_shared_data_DeltaUpdates$ColumnModifications_2_classLit,
        $intern_0,
        250,
        0,
        0,
        1
      )
    );
    for (columnIndex = 0; columnIndex < columnTypes.length; ++columnIndex) {
      columnMetadata = barrageUpdate.modColumnNodes(columnIndex);
      modifiedRows = idwcab.$read(
        new idwcab.CompressedRangeSetReader(),
        idwcab.typedArrayToLittleEndianByteBuffer(
          columnMetadata.modifiedRowsArray()
        )
      );
      this.numModRowsRemaining = jl.max_1(
        this.numModRowsRemaining,
        jus.$collect_0(
          jus.$mapToLong(
            ju.stream_4(modifiedRows.sortedRanges),
            new idwsd.RangeSet$0methodref$size$Type()
          )
        ).sum_0
      );
    }
  };
defineClass(727, 1, {}, idwcab.WebBarrageUtils$DeltaUpdatesBuilder);
_.numAddRowsRemaining = 0;
_.numModRowsRemaining = 0;
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$DeltaUpdatesBuilder_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/DeltaUpdatesBuilder",
    727
  );
idwcab.WebBarrageUtils$DeltaUpdatesBuilder$0methodref$nodes$Type =
  function WebBarrageUtils$DeltaUpdatesBuilder$0methodref$nodes$Type(
    $$outer_0
  ) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  728,
  1,
  {},
  idwcab.WebBarrageUtils$DeltaUpdatesBuilder$0methodref$nodes$Type
);
_.apply_2 = function apply_86(arg0) {
  return this.$$outer_0.nodes(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$DeltaUpdatesBuilder$0methodref$nodes$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/DeltaUpdatesBuilder/0methodref$nodes$Type",
    728
  );
idwcab.WebBarrageUtils$DeltaUpdatesBuilder$1methodref$buffers$Type =
  function WebBarrageUtils$DeltaUpdatesBuilder$1methodref$buffers$Type(
    $$outer_0
  ) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  729,
  1,
  {},
  idwcab.WebBarrageUtils$DeltaUpdatesBuilder$1methodref$buffers$Type
);
_.apply_2 = function apply_87(arg0) {
  return this.$$outer_0.buffers(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$DeltaUpdatesBuilder$1methodref$buffers$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/DeltaUpdatesBuilder/1methodref$buffers$Type",
    729
  );
idwcab.WebBarrageUtils$DeltaUpdatesBuilder$2methodref$nodes$Type =
  function WebBarrageUtils$DeltaUpdatesBuilder$2methodref$nodes$Type(
    $$outer_0
  ) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  730,
  1,
  {},
  idwcab.WebBarrageUtils$DeltaUpdatesBuilder$2methodref$nodes$Type
);
_.apply_2 = function apply_88(arg0) {
  return this.$$outer_0.nodes(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$DeltaUpdatesBuilder$2methodref$nodes$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/DeltaUpdatesBuilder/2methodref$nodes$Type",
    730
  );
idwcab.WebBarrageUtils$DeltaUpdatesBuilder$3methodref$buffers$Type =
  function WebBarrageUtils$DeltaUpdatesBuilder$3methodref$buffers$Type(
    $$outer_0
  ) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  731,
  1,
  {},
  idwcab.WebBarrageUtils$DeltaUpdatesBuilder$3methodref$buffers$Type
);
_.apply_2 = function apply_89(arg0) {
  return this.$$outer_0.buffers(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$DeltaUpdatesBuilder$3methodref$buffers$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/DeltaUpdatesBuilder/3methodref$buffers$Type",
    731
  );
idwcab.$hasNext = function $hasNext(this$static) {
  return this$static.next_0 != null || this$static.wrapped.hasNext_1();
};
idwcab.$next = function $next(this$static) {
  var val;
  if (this$static.next_0 == null) {
    return this$static.wrapped.next_1();
  }
  val = this$static.next_0;
  this$static.next_0 = null;
  return val;
};
idwcab.$peek = function $peek(this$static) {
  if (this$static.next_0 != null) {
    return this$static.next_0;
  }
  return (this$static.next_0 = idwcab.$next(this$static));
};
idwcab.WebBarrageUtils$Iter = function WebBarrageUtils$Iter(wrapped) {
  this.wrapped = wrapped;
};
defineClass(185, 1, $intern_12, idwcab.WebBarrageUtils$Iter);
_.forEachRemaining = function forEachRemaining(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.remove_0 = function remove_1() {
  ju.$remove_10();
};
_.hasNext_1 = function hasNext() {
  return idwcab.$hasNext(this);
};
_.next_1 = function next_2() {
  return idwcab.$next(this);
};
cggl.Lio_deephaven_web_client_api_barrage_WebBarrageUtils$Iter_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage",
    "WebBarrageUtils/Iter",
    185
  );
idwcab.$clinit_WebGrpcUtils = function $clinit_WebGrpcUtils() {
  idwcab.$clinit_WebGrpcUtils = emptyMethod;
  idwcab.CLIENT_OPTIONS = jb.of_6(false);
  if (jl.$equals_12($wnd.goog.global.window.location.protocol, "http:")) {
    idwcab.USE_WEBSOCKETS = true;
    $wnd.dhinternal.grpcWeb.grpc.setDefaultTransport.call(
      null,
      makeLambdaFunction(
        idwcab.WebGrpcUtils$lambda$0$Type.prototype.onInvoke_13,
        idwcab.WebGrpcUtils$lambda$0$Type,
        []
      )
    );
  } else {
    idwcab.USE_WEBSOCKETS = false;
  }
};
idwcab.USE_WEBSOCKETS = false;
idwcab.$getClass_229 = function $getClass_229() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab.WebGrpcUtils$lambda$0$Type = function WebGrpcUtils$lambda$0$Type() {};
defineClass(1544, $wnd.Function, {}, idwcab.WebGrpcUtils$lambda$0$Type);
_.onInvoke_13 = function onInvoke_134(arg0) {
  return (
    idwcab.$clinit_WebGrpcUtils(),
    new idwcag.MultiplexedWebsocketTransport(arg0)
  );
};
idwcabd.$makeJsColumn = function $makeJsColumn(this$static, index_0, map_0) {
  var byNameMap, format, style;
  if (this$static.forRow) {
    return new idwca.Column(
      -1,
      this$static.columnIndex,
      null,
      null,
      this$static.type_0,
      this$static.name_0,
      false,
      null,
      null,
      false,
      this$static.isSortable_0
    );
  }
  byNameMap = castTo(
    map_0.get(
      (jl.$clinit_Boolean(),
      this$static.isRollupConstituentNodeColumn
        ? ji.uncheckedCast(true)
        : ji.uncheckedCast(false))
    ),
    30
  );
  format = castTo(byNameMap.get(this$static.formatColumn), 83);
  style = castTo(byNameMap.get(this$static.styleColumn), 83);
  return idwcabd.makeColumn(
    index_0,
    this$static,
    !format || !format.isNumberFormatColumn
      ? null
      : jl.valueOf_29(format.columnIndex),
    !style ? null : jl.valueOf_29(style.columnIndex),
    this$static.isPartitionColumn_0,
    !format || format.isNumberFormatColumn
      ? null
      : jl.valueOf_29(format.columnIndex),
    this$static.description_0,
    this$static.isInputTableKeyColumn
  );
};
idwcabd.$setColumnIndex = function $setColumnIndex(this$static, columnIndex) {
  this$static.columnIndex = columnIndex;
};
idwcabd.$setDescription = function $setDescription(this$static, description) {
  this$static.description_0 = description;
};
idwcabd.$setForRow = function $setForRow(this$static, forRow) {
  this$static.forRow = forRow;
};
idwcabd.$setFormatColumn = function $setFormatColumn(
  this$static,
  formatColumn
) {
  this$static.isFormatColumn = formatColumn;
};
idwcabd.$setFormatColumnName = function $setFormatColumnName(
  this$static,
  formatColumn
) {
  this$static.formatColumn = formatColumn;
};
idwcabd.$setHierarchicalExpandByColumn =
  function $setHierarchicalExpandByColumn(
    this$static,
    hierarchicalExpandByColumn
  ) {
    this$static.isHierarchicalExpandByColumn = hierarchicalExpandByColumn;
  };
idwcabd.$setHierarchicalRowDepthColumn =
  function $setHierarchicalRowDepthColumn(
    this$static,
    hierarchicalRowDepthColumn
  ) {
    this$static.isHierarchicalRowDepthColumn = hierarchicalRowDepthColumn;
  };
idwcabd.$setHierarchicalRowExpandedColumn =
  function $setHierarchicalRowExpandedColumn(
    this$static,
    hierarchicalRowExpandedColumn
  ) {
    this$static.isHierarchicalRowExpandedColumn = hierarchicalRowExpandedColumn;
  };
idwcabd.$setInputTableKeyColumn = function $setInputTableKeyColumn(
  this$static,
  inputTableKeyColumn
) {
  this$static.isInputTableKeyColumn = inputTableKeyColumn;
};
idwcabd.$setIsSortable = function $setIsSortable(this$static, sortable) {
  this$static.isSortable_0 = sortable;
};
idwcabd.$setName = function $setName(this$static, name_0) {
  this$static.name_0 = name_0;
};
idwcabd.$setPartitionColumn = function $setPartitionColumn(
  this$static,
  partitionColumn
) {
  this$static.isPartitionColumn_0 = partitionColumn;
};
idwcabd.$setRollupAggregationInputColumn =
  function $setRollupAggregationInputColumn(
    this$static,
    rollupAggregationInputColumn
  ) {
    this$static.rollupAggregationInputColumn = rollupAggregationInputColumn;
  };
idwcabd.$setRollupConstituentNodeColumn =
  function $setRollupConstituentNodeColumn(
    this$static,
    rollupConstituentNodeColumn
  ) {
    this$static.isRollupConstituentNodeColumn = rollupConstituentNodeColumn;
  };
idwcabd.$setRollupGroupByColumn = function $setRollupGroupByColumn(
  this$static,
  rollupGroupByColumn
) {
  this$static.isRollupGroupByColumn = rollupGroupByColumn;
};
idwcabd.$setStyleColumn = function $setStyleColumn(this$static, styleColumn) {
  this$static.isStyleColumn = styleColumn;
};
idwcabd.$setStyleColumnName = function $setStyleColumnName(
  this$static,
  styleColumn
) {
  this$static.styleColumn = styleColumn;
};
idwcabd.$setType_0 = function $setType_0(this$static, type_0) {
  this$static.type_0 = type_0;
};
idwcabd.ColumnDefinition = function ColumnDefinition() {};
idwcabd.makeColumn = function makeColumn(
  jsIndex,
  definition,
  numberFormatIndex,
  styleIndex,
  isPartitionColumn,
  formatStringIndex,
  description,
  inputTableKeyColumn
) {
  return new idwca.Column(
    jsIndex,
    definition.columnIndex,
    numberFormatIndex,
    styleIndex,
    definition.type_0,
    definition.name_0,
    isPartitionColumn,
    formatStringIndex,
    description,
    inputTableKeyColumn,
    definition.isSortable_0
  );
};
defineClass(83, 1, { 83: 1 }, idwcabd.ColumnDefinition);
_.columnIndex = 0;
_.forRow = false;
_.isFormatColumn = false;
_.isHierarchicalExpandByColumn = false;
_.isHierarchicalRowDepthColumn = false;
_.isHierarchicalRowExpandedColumn = false;
_.isInputTableKeyColumn = false;
_.isNumberFormatColumn = false;
_.isPartitionColumn_0 = false;
_.isRollupConstituentNodeColumn = false;
_.isRollupGroupByColumn = false;
_.isSortable_0 = false;
_.isStyleColumn = false;
cggl.Lio_deephaven_web_client_api_barrage_def_ColumnDefinition_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.def",
    "ColumnDefinition",
    83
  );
idwcabd.$setAttributes = function $setAttributes(this$static, attributes) {
  this$static.attributes = attributes;
  return this$static;
};
idwcabd.$setColumns = function $setColumns(this$static, columns) {
  this$static.columns_0 = columns;
  return this$static;
};
idwcabd.InitialTableDefinition = function InitialTableDefinition() {};
idwcabd.lambda$4_2 = function lambda$4_2(u_0, v_1) {
  if (maskUndefined(u_0) !== maskUndefined(v_1)) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Duplicates found for " + u_0 + " and " + v_1)
    );
  }
  return u_0;
};
defineClass(611, 1, {}, idwcabd.InitialTableDefinition);
cggl.Lio_deephaven_web_client_api_barrage_def_InitialTableDefinition_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.def",
    "InitialTableDefinition",
    611
  );
idwcabd.$test_0 = function $test_0(arg0) {
  return castTo(arg0, 83).isRollupConstituentNodeColumn;
};
idwcabd.InitialTableDefinition$0methodref$isRollupConstituentNodeColumn$Type =
  function InitialTableDefinition$0methodref$isRollupConstituentNodeColumn$Type() {};
defineClass(
  251,
  1,
  {},
  idwcabd.InitialTableDefinition$0methodref$isRollupConstituentNodeColumn$Type
);
_.test_0 = function test_9(arg0) {
  return idwcabd.$test_0(arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_def_InitialTableDefinition$0methodref$isRollupConstituentNodeColumn$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.def",
    "InitialTableDefinition/0methodref$isRollupConstituentNodeColumn$Type",
    251
  );
idwcabd.InitialTableDefinition$1methodref$getName$Type =
  function InitialTableDefinition$1methodref$getName$Type() {};
defineClass(252, 1, {}, idwcabd.InitialTableDefinition$1methodref$getName$Type);
_.apply_1 = function apply_90(arg0) {
  return castTo(arg0, 83).name_0;
};
cggl.Lio_deephaven_web_client_api_barrage_def_InitialTableDefinition$1methodref$getName$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.def",
    "InitialTableDefinition/1methodref$getName$Type",
    252
  );
idwcabd.InitialTableDefinition$3methodref$ctor$Type =
  function InitialTableDefinition$3methodref$ctor$Type() {};
defineClass(253, 1, {}, idwcabd.InitialTableDefinition$3methodref$ctor$Type);
_.get_0 = function get_4() {
  return new ju.HashMap();
};
cggl.Lio_deephaven_web_client_api_barrage_def_InitialTableDefinition$3methodref$ctor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.def",
    "InitialTableDefinition/3methodref$ctor$Type",
    253
  );
idwcabd.InitialTableDefinition$lambda$4$Type =
  function InitialTableDefinition$lambda$4$Type() {};
defineClass(254, 1, {}, idwcabd.InitialTableDefinition$lambda$4$Type);
_.apply_4 = function apply_91(arg0, arg1) {
  return idwcabd.lambda$4_2(arg0, arg1);
};
cggl.Lio_deephaven_web_client_api_barrage_def_InitialTableDefinition$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.def",
    "InitialTableDefinition/lambda$4$Type",
    254
  );
idwcabd.TableAttributesDefinition = function TableAttributesDefinition(
  keys_0,
  remainingAttributes
) {
  this.map_0 = keys_0;
  this.remainingAttributeKeys = remainingAttributes;
};
defineClass(739, 1, {}, idwcabd.TableAttributesDefinition);
cggl.Lio_deephaven_web_client_api_barrage_def_TableAttributesDefinition_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.def",
    "TableAttributesDefinition",
    739
  );
defineClass(155, 1, { 155: 1 });
cggl.Lio_deephaven_web_client_api_barrage_stream_BiDiStream_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "BiDiStream",
    155
  );
idwcabs.$$init_22 = function $$init_22(this$static) {
  this$static.pending = new $wnd.Array();
};
idwcabs.$lambda$0_3 = function $lambda$0_3(
  this$static,
  responseStreamFactory_1,
  firstReq_1
) {
  return castToJsObject(
    responseStreamFactory_1.openStream(
      firstReq_1,
      idwcabs.$makeHeaders(this$static)
    )
  );
};
idwcabs.$lambda$1_2 = function $lambda$1_2(this$static, p0_0) {
  p0_0(this$static.responseStream_0);
  return null;
};
idwcabs.$makeHeaders = function $makeHeaders(this$static) {
  var nextHeaders;
  nextHeaders = new $wnd.dhinternal.browserHeaders.BrowserHeaders(
    this$static.headers_0.$$outer_0.metadata_0
  );
  nextHeaders.set("x-deephaven-stream-sequence", "" + this$static.nextSeq++);
  nextHeaders.set("x-deephaven-stream-ticket", "" + this$static.intTicket);
  return nextHeaders;
};
idwcabs.$waitForStream = function $waitForStream(this$static, action) {
  this$static.responseStream_0 != null
    ? action(this$static.responseStream_0)
    : this$static.pending.push(action);
};
idwcabs.BiDiStream$EmulatedBiDiStream = function BiDiStream$EmulatedBiDiStream(
  responseStreamFactory,
  nextWrapper,
  emptyReq,
  intTicket,
  headers
) {
  idwcabs.$$init_22(this);
  this.responseStreamFactory = makeLambdaFunction(
    idwcabs.BiDiStream$EmulatedBiDiStream$lambda$0$Type.prototype.apply_1,
    idwcabs.BiDiStream$EmulatedBiDiStream$lambda$0$Type,
    [this, responseStreamFactory]
  );
  this.nextWrapper = nextWrapper;
  this.emptyReq = emptyReq;
  this.intTicket = intTicket;
  this.headers_0 = headers;
};
idwcabs.lambda$4_3 = function lambda$4_3(handler_0, s_1) {
  return s_1.on("data", castToFunction(handler_0));
};
idwcabs.lambda$5_2 = function lambda$5_2(handler_0, s_1) {
  return s_1.on("status", castToFunction(handler_0));
};
idwcabs.lambda$6_0 = function lambda$6_0(handler_0, s_1) {
  return s_1.on("end", castToFunction(handler_0));
};
idwcabs.lambda$7_0 = function lambda$7_0(handler_0, s_1) {
  return idwcabs.$onHeaders(s_1, handler_0);
};
defineClass(546, 155, { 155: 1 }, idwcabs.BiDiStream$EmulatedBiDiStream);
_.cancel_1 = function cancel_1() {
  this.responseStream_0 != null && this.responseStream_0.cancel();
};
_.end_0 = function end_0() {
  var nextHeaders;
  if (this.responseStream_0 == null) {
    return;
  }
  nextHeaders = idwcabs.$makeHeaders(this);
  nextHeaders.set("x-deephaven-stream-halfclose", "1");
  this.nextWrapper.nextStreamMessage(
    this.emptyReq,
    nextHeaders,
    makeLambdaFunction(
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$3$Type.prototype.apply_0,
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$3$Type,
      []
    )
  );
};
_.onData = function onData(handler) {
  idwcabs.$waitForStream(
    this,
    makeLambdaFunction(
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$4$Type.prototype.apply_3,
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$4$Type,
      [handler]
    )
  );
};
_.onEnd_0 = function onEnd(handler) {
  idwcabs.$waitForStream(
    this,
    makeLambdaFunction(
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$6$Type.prototype.apply_3,
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$6$Type,
      [handler]
    )
  );
};
_.onHeaders_0 = function onHeaders(handler) {
  idwcabs.$waitForStream(
    this,
    makeLambdaFunction(
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$7$Type.prototype.apply_3,
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$7$Type,
      [handler]
    )
  );
};
_.onStatus = function onStatus(handler) {
  idwcabs.$waitForStream(
    this,
    makeLambdaFunction(
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$5$Type.prototype.apply_3,
      idwcabs.BiDiStream$EmulatedBiDiStream$lambda$5$Type,
      [handler]
    )
  );
};
_.send_0 = function send_0(payload) {
  if (this.responseStream_0 == null) {
    this.responseStream_0 = idwcabs.$apply_5(
      this.responseStreamFactory,
      payload
    );
    this.pending.forEach(
      makeLambdaFunction(
        idwcabs.BiDiStream$EmulatedBiDiStream$lambda$1$Type.prototype.onInvoke,
        idwcabs.BiDiStream$EmulatedBiDiStream$lambda$1$Type,
        [this]
      )
    );
    this.pending.length = 0;
  } else {
    this.nextWrapper.nextStreamMessage(
      payload,
      idwcabs.$makeHeaders(this),
      makeLambdaFunction(
        idwcabs.BiDiStream$EmulatedBiDiStream$lambda$2$Type.prototype.apply_0,
        idwcabs.BiDiStream$EmulatedBiDiStream$lambda$2$Type,
        []
      )
    );
  }
};
_.intTicket = 0;
_.nextSeq = 0;
cggl.Lio_deephaven_web_client_api_barrage_stream_BiDiStream$EmulatedBiDiStream_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "BiDiStream/EmulatedBiDiStream",
    546
  );
idwcabs.$apply_5 = function $apply_5(this$static, arg0) {
  return idwcabs.$lambda$0_3(
    this$static.$$outer_0,
    this$static.responseStreamFactory_1,
    arg0
  );
};
idwcabs.$getClass_230 = function $getClass_230() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.BiDiStream$EmulatedBiDiStream$lambda$0$Type =
  function BiDiStream$EmulatedBiDiStream$lambda$0$Type(
    $$outer_0,
    responseStreamFactory_1
  ) {
    this.$$outer_0 = $$outer_0;
    this.responseStreamFactory_1 = responseStreamFactory_1;
  };
defineClass(
  1294,
  $wnd.Function,
  $intern_34,
  idwcabs.BiDiStream$EmulatedBiDiStream$lambda$0$Type
);
_.apply_1 = function apply_92(arg0) {
  return idwcabs.$apply_5(this, arg0);
};
idwcabs.$getClass_231 = function $getClass_231() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.BiDiStream$EmulatedBiDiStream$lambda$1$Type =
  function BiDiStream$EmulatedBiDiStream$lambda$1$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1295,
  $wnd.Function,
  {},
  idwcabs.BiDiStream$EmulatedBiDiStream$lambda$1$Type
);
_.onInvoke = function onInvoke_135(arg0, arg1, arg2) {
  return idwcabs.$lambda$1_2(this.$$outer_0, castToFunction(arg0));
};
idwcabs.$getClass_232 = function $getClass_232() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.BiDiStream$EmulatedBiDiStream$lambda$2$Type =
  function BiDiStream$EmulatedBiDiStream$lambda$2$Type() {};
defineClass(
  1296,
  $wnd.Function,
  $intern_30,
  idwcabs.BiDiStream$EmulatedBiDiStream$lambda$2$Type
);
_.apply_0 = function apply_93(arg0, arg1) {};
idwcabs.$getClass_233 = function $getClass_233() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.BiDiStream$EmulatedBiDiStream$lambda$3$Type =
  function BiDiStream$EmulatedBiDiStream$lambda$3$Type() {};
defineClass(
  1297,
  $wnd.Function,
  $intern_30,
  idwcabs.BiDiStream$EmulatedBiDiStream$lambda$3$Type
);
_.apply_0 = function apply_94(arg0, arg1) {};
idwcabs.$getClass_234 = function $getClass_234() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.BiDiStream$EmulatedBiDiStream$lambda$4$Type =
  function BiDiStream$EmulatedBiDiStream$lambda$4$Type(handler_0) {
    this.handler_0 = handler_0;
  };
defineClass(
  1298,
  $wnd.Function,
  $intern_48,
  idwcabs.BiDiStream$EmulatedBiDiStream$lambda$4$Type
);
_.apply_3 = function apply_95(arg0) {
  idwcabs.lambda$4_3(this.handler_0, castToJsObject(arg0));
};
idwcabs.$getClass_235 = function $getClass_235() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.BiDiStream$EmulatedBiDiStream$lambda$5$Type =
  function BiDiStream$EmulatedBiDiStream$lambda$5$Type(handler_0) {
    this.handler_0 = handler_0;
  };
defineClass(
  1299,
  $wnd.Function,
  $intern_48,
  idwcabs.BiDiStream$EmulatedBiDiStream$lambda$5$Type
);
_.apply_3 = function apply_96(arg0) {
  idwcabs.lambda$5_2(this.handler_0, castToJsObject(arg0));
};
idwcabs.$getClass_236 = function $getClass_236() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.BiDiStream$EmulatedBiDiStream$lambda$6$Type =
  function BiDiStream$EmulatedBiDiStream$lambda$6$Type(handler_0) {
    this.handler_0 = handler_0;
  };
defineClass(
  1300,
  $wnd.Function,
  $intern_48,
  idwcabs.BiDiStream$EmulatedBiDiStream$lambda$6$Type
);
_.apply_3 = function apply_97(arg0) {
  idwcabs.lambda$6_0(this.handler_0, castToJsObject(arg0));
};
idwcabs.$getClass_237 = function $getClass_237() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.BiDiStream$EmulatedBiDiStream$lambda$7$Type =
  function BiDiStream$EmulatedBiDiStream$lambda$7$Type(handler_0) {
    this.handler_0 = handler_0;
  };
defineClass(
  1301,
  $wnd.Function,
  $intern_48,
  idwcabs.BiDiStream$EmulatedBiDiStream$lambda$7$Type
);
_.apply_3 = function apply_98(arg0) {
  idwcabs.lambda$7_0(this.handler_0, castToJsObject(arg0));
};
idwcabs.$create = function $create(
  this$static,
  bidirectionalStream,
  openEmulatedStream,
  nextEmulatedStream,
  emptyReq
) {
  return (idwcab.$clinit_WebGrpcUtils(), idwcab.USE_WEBSOCKETS)
    ? new idwcabs.BiDiStream$WebsocketBiDiStream(
        castToJsObject(
          bidirectionalStream.openBiDiStream(
            this$static.headers_0.$$outer_0.metadata_0
          )
        )
      )
    : new idwcabs.BiDiStream$EmulatedBiDiStream(
        openEmulatedStream,
        nextEmulatedStream,
        emptyReq,
        this$static.nextIntTicket.$$outer_0.next_0++,
        this$static.headers_0
      );
};
idwcabs.BiDiStream$Factory = function BiDiStream$Factory(
  headers,
  nextIntTicket
) {
  this.headers_0 = headers;
  this.nextIntTicket = nextIntTicket;
};
defineClass(154, 1, {}, idwcabs.BiDiStream$Factory);
cggl.Lio_deephaven_web_client_api_barrage_stream_BiDiStream$Factory_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "BiDiStream/Factory",
    154
  );
idwcabs.BiDiStream$WebsocketBiDiStream =
  function BiDiStream$WebsocketBiDiStream(wrapped) {
    this.wrapped = wrapped;
  };
defineClass(545, 155, { 155: 1 }, idwcabs.BiDiStream$WebsocketBiDiStream);
_.cancel_1 = function cancel_2() {
  this.wrapped.cancel();
};
_.end_0 = function end_1() {
  this.wrapped.end();
};
_.onData = function onData_0(handler) {
  this.wrapped.on("data", castToFunction(handler));
};
_.onEnd_0 = function onEnd_0(handler) {
  this.wrapped.on("end", castToFunction(handler));
};
_.onHeaders_0 = function onHeaders_0(handler) {
  try {
    this.wrapped.on("headers", castToFunction(handler));
  } catch ($e0) {
    $e0 = toJava($e0);
    if (!instanceOf($e0, 41)) throw toJs($e0);
  }
};
_.onStatus = function onStatus_0(handler) {
  this.wrapped.on("status", castToFunction(handler));
};
_.send_0 = function send_1(payload) {
  this.wrapped.write(payload);
};
cggl.Lio_deephaven_web_client_api_barrage_stream_BiDiStream$WebsocketBiDiStream_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "BiDiStream/WebsocketBiDiStream",
    545
  );
idwcabs.lambda$0_2 = function lambda$0_2(connection_0, metadata_1) {
  var client, listeners, options;
  listeners = idwcabs.listenerMap();
  options = jb.emptyObjectLiteral();
  options.host = connection_0.flightServiceClient.serviceHost;
  options.transport = null;
  options.debug = false;
  client = $wnd.dhinternal.grpcWeb.grpc.client(
    $wnd.dhinternal.arrow.flight.protocol.Flight_pb_service.FlightService
      .Handshake,
    options
  );
  client.onEnd(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$3$Type.prototype.onInvoke_11,
      idwcabs.HandshakeStreamFactory$lambda$3$Type,
      [listeners, metadata_1]
    )
  );
  client.onMessage(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$6$Type.prototype.onInvoke_3,
      idwcabs.HandshakeStreamFactory$lambda$6$Type,
      [listeners]
    )
  );
  client.onHeaders(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$8$Type.prototype.onInvoke_12,
      idwcabs.HandshakeStreamFactory$lambda$8$Type,
      [listeners]
    )
  );
  client.start(metadata_1);
  return new idwcabs.HandshakeStreamFactory$1(listeners, client);
};
idwcabs.lambda$1_3 = function lambda$1_3(connection_0, first_1, metadata_2) {
  var client, listeners, props;
  listeners = idwcabs.listenerMap();
  props = jb.emptyObjectLiteral();
  props.request = first_1;
  props.host = connection_0.browserFlightServiceClient.serviceHost;
  props.metadata = metadata_2;
  props.transport = null;
  props.debug = false;
  props.onMessage = makeLambdaFunction(
    idwcabs.HandshakeStreamFactory$lambda$10$Type.prototype.onInvoke_3,
    idwcabs.HandshakeStreamFactory$lambda$10$Type,
    [listeners]
  );
  props.onEnd = makeLambdaFunction(
    idwcabs.HandshakeStreamFactory$lambda$12$Type.prototype.onInvoke_11,
    idwcabs.HandshakeStreamFactory$lambda$12$Type,
    [listeners, metadata_2]
  );
  props.onHeaders = makeLambdaFunction(
    idwcabs.HandshakeStreamFactory$lambda$15$Type.prototype.onInvoke_12,
    idwcabs.HandshakeStreamFactory$lambda$15$Type,
    [listeners]
  );
  client = $wnd.dhinternal.grpcWeb.grpc.invoke.call(
    null,
    $wnd.dhinternal.arrow.flight.protocol.BrowserFlight_pb_service
      .BrowserFlightService.OpenHandshake,
    props
  );
  return new idwcabs.HandshakeStreamFactory$2(listeners, client);
};
idwcabs.lambda$10_0 = function lambda$10_0(listeners_0, responseMessage_1) {
  castToJsArray(ju.$get_22(listeners_0.stringMap, "data")).forEach(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$11$Type.prototype.onInvoke,
      idwcabs.HandshakeStreamFactory$lambda$11$Type,
      [responseMessage_1]
    )
  );
};
idwcabs.lambda$11_2 = function lambda$11_2(responseMessage_0, item_1) {
  return item_1.call(null, responseMessage_0);
};
idwcabs.lambda$12_0 = function lambda$12_0(
  listeners_0,
  metadata_1,
  status_2,
  statusMessage_3
) {
  castToJsArray(ju.$get_22(listeners_0.stringMap, "status")).forEach(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$13$Type.prototype.onInvoke,
      idwcabs.HandshakeStreamFactory$lambda$13$Type,
      [status_2, statusMessage_3, metadata_1]
    )
  );
  castToJsArray(ju.$get_22(listeners_0.stringMap, "end")).forEach(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$14$Type.prototype.onInvoke,
      idwcabs.HandshakeStreamFactory$lambda$14$Type,
      [status_2, statusMessage_3, metadata_1]
    )
  );
  ju.$reset(listeners_0);
};
idwcabs.lambda$13 = function lambda$13(
  status_0,
  statusMessage_1,
  metadata_2,
  item_3
) {
  return item_3.call(
    null,
    jb.of_8(
      "code",
      status_0,
      "details",
      statusMessage_1,
      "metadata",
      metadata_2
    )
  );
};
idwcabs.lambda$14_1 = function lambda$14_1(
  status_0,
  statusMessage_1,
  metadata_2,
  item_3
) {
  return item_3.call(
    null,
    jb.of_8(
      "code",
      status_0,
      "details",
      statusMessage_1,
      "metadata",
      metadata_2
    )
  );
};
idwcabs.lambda$15_1 = function lambda$15_1(listeners_0, headers_1) {
  castToJsArray(ju.$get_22(listeners_0.stringMap, "headers")).forEach(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$16$Type.prototype.onInvoke,
      idwcabs.HandshakeStreamFactory$lambda$16$Type,
      [headers_1]
    )
  );
};
idwcabs.lambda$16_0 = function lambda$16_0(headers_0, item_1) {
  return item_1.call(null, headers_0);
};
idwcabs.lambda$2_4 = function lambda$2_4(
  connection_0,
  next_1,
  headers_2,
  callback_3
) {
  return connection_0.browserFlightServiceClient.nextHandshake(
    next_1,
    headers_2,
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$0methodref$apply$Type.prototype.onInvoke_9,
      idwcabs.HandshakeStreamFactory$0methodref$apply$Type,
      [callback_3]
    )
  );
};
idwcabs.lambda$3 = function lambda$3(
  listeners_0,
  metadata_1,
  status_2,
  statusMessage_3
) {
  castToJsArray(ju.$get_22(listeners_0.stringMap, "status")).forEach(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$4$Type.prototype.onInvoke,
      idwcabs.HandshakeStreamFactory$lambda$4$Type,
      [status_2, statusMessage_3, metadata_1]
    )
  );
  castToJsArray(ju.$get_22(listeners_0.stringMap, "end")).forEach(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$5$Type.prototype.onInvoke,
      idwcabs.HandshakeStreamFactory$lambda$5$Type,
      [status_2, statusMessage_3, metadata_1]
    )
  );
  ju.$reset(listeners_0);
};
idwcabs.lambda$4_4 = function lambda$4_4(
  status_0,
  statusMessage_1,
  metadata_2,
  item_3
) {
  return item_3.call(
    null,
    jb.of_8(
      "code",
      status_0,
      "details",
      statusMessage_1,
      "metadata",
      metadata_2
    )
  );
};
idwcabs.lambda$5_3 = function lambda$5_3(
  status_0,
  statusMessage_1,
  metadata_2,
  item_3
) {
  return item_3.call(
    null,
    jb.of_8(
      "code",
      status_0,
      "details",
      statusMessage_1,
      "metadata",
      metadata_2
    )
  );
};
idwcabs.lambda$6_1 = function lambda$6_1(listeners_0, message_1) {
  castToJsArray(ju.$get_22(listeners_0.stringMap, "data")).forEach(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$7$Type.prototype.onInvoke,
      idwcabs.HandshakeStreamFactory$lambda$7$Type,
      [message_1]
    )
  );
};
idwcabs.lambda$7_1 = function lambda$7_1(message_0, item_1) {
  return item_1.call(null, message_0);
};
idwcabs.lambda$8_0 = function lambda$8_0(listeners_0, headers_1) {
  castToJsArray(ju.$get_22(listeners_0.stringMap, "headers")).forEach(
    makeLambdaFunction(
      idwcabs.HandshakeStreamFactory$lambda$9$Type.prototype.onInvoke,
      idwcabs.HandshakeStreamFactory$lambda$9$Type,
      [headers_1]
    )
  );
};
idwcabs.lambda$9 = function lambda$9(headers_0, item_1) {
  return item_1.call(null, headers_0);
};
idwcabs.listenerMap = function listenerMap() {
  var listeners;
  listeners = new ju.HashMap();
  ju.$putStringValue(listeners, "data", new $wnd.Array());
  ju.$putStringValue(listeners, "end", new $wnd.Array());
  ju.$putStringValue(listeners, "status", new $wnd.Array());
  ju.$putStringValue(listeners, "headers", new $wnd.Array());
  return listeners;
};
idwcabs.$getClass_238 = function $getClass_238() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$0methodref$apply$Type =
  function HandshakeStreamFactory$0methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1608,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$0methodref$apply$Type
);
_.onInvoke_9 = function onInvoke_136(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcabs.$write = function $write(this$static, message) {
  this$static.val$client2.send(message);
  return this$static;
};
idwcabs.HandshakeStreamFactory$1 = function HandshakeStreamFactory$1(
  val$listeners,
  val$client
) {
  this.val$listeners1 = val$listeners;
  this.val$client2 = val$client;
};
defineClass(877, 1, {}, idwcabs.HandshakeStreamFactory$1);
_.write = function write_0(message) {
  return idwcabs.$write(
    this,
    castToNative(
      message,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.HandshakeRequest
    )
  );
};
_.cancel = function cancel_3() {
  ju.$reset(this.val$listeners1);
  this.val$client2.close();
};
_.end = function end_2() {
  this.val$client2.finishSend();
};
_.on = function on(type_0, handler) {
  castToJsArray(ju.$getStringValue(this.val$listeners1, type_0)).push(handler);
  return this;
};
cggl.Lio_deephaven_web_client_api_barrage_stream_HandshakeStreamFactory$1_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "HandshakeStreamFactory/1",
    877
  );
idwcabs.HandshakeStreamFactory$2 = function HandshakeStreamFactory$2(
  val$listeners,
  val$client
) {
  this.val$listeners1 = val$listeners;
  this.val$client2 = val$client;
};
defineClass(879, 1, {}, idwcabs.HandshakeStreamFactory$2);
_.cancel = function cancel_4() {
  ju.$reset(this.val$listeners1);
  this.val$client2.close.call(null);
};
_.on = function on_0(type_0, handler) {
  castToJsArray(ju.$getStringValue(this.val$listeners1, type_0)).push(handler);
  return this;
};
cggl.Lio_deephaven_web_client_api_barrage_stream_HandshakeStreamFactory$2_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "HandshakeStreamFactory/2",
    879
  );
idwcabs.HandshakeStreamFactory$lambda$0$Type =
  function HandshakeStreamFactory$lambda$0$Type(connection_0) {
    this.connection_0 = connection_0;
  };
defineClass(878, 1, {}, idwcabs.HandshakeStreamFactory$lambda$0$Type);
_.openBiDiStream = function openBiDiStream_1(arg0) {
  return idwcabs.lambda$0_2(this.connection_0, arg0);
};
cggl.Lio_deephaven_web_client_api_barrage_stream_HandshakeStreamFactory$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "HandshakeStreamFactory/lambda$0$Type",
    878
  );
idwcabs.HandshakeStreamFactory$lambda$1$Type =
  function HandshakeStreamFactory$lambda$1$Type(connection_0) {
    this.connection_0 = connection_0;
  };
defineClass(880, 1, {}, idwcabs.HandshakeStreamFactory$lambda$1$Type);
_.openStream = function openStream_1(arg0, arg1) {
  return idwcabs.lambda$1_3(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.HandshakeRequest
    ),
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_barrage_stream_HandshakeStreamFactory$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "HandshakeStreamFactory/lambda$1$Type",
    880
  );
idwcabs.$getClass_239 = function $getClass_239() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$10$Type =
  function HandshakeStreamFactory$lambda$10$Type(listeners_0) {
    this.listeners_0 = listeners_0;
  };
defineClass(
  1601,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$10$Type
);
_.onInvoke_3 = function onInvoke_137(arg0) {
  idwcabs.lambda$10_0(this.listeners_0, arg0);
};
idwcabs.$getClass_240 = function $getClass_240() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$11$Type =
  function HandshakeStreamFactory$lambda$11$Type(responseMessage_0) {
    this.responseMessage_0 = responseMessage_0;
  };
defineClass(
  1604,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$11$Type
);
_.onInvoke = function onInvoke_138(arg0, arg1, arg2) {
  return idwcabs.lambda$11_2(this.responseMessage_0, castToFunction(arg0));
};
idwcabs.$getClass_241 = function $getClass_241() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$12$Type =
  function HandshakeStreamFactory$lambda$12$Type(listeners_0, metadata_1) {
    this.listeners_0 = listeners_0;
    this.metadata_1 = metadata_1;
  };
defineClass(
  1602,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$12$Type
);
_.onInvoke_11 = function onInvoke_139(arg0, arg1, arg2) {
  idwcabs.lambda$12_0(this.listeners_0, this.metadata_1, arg0, arg1);
};
idwcabs.$getClass_242 = function $getClass_242() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$13$Type =
  function HandshakeStreamFactory$lambda$13$Type(
    status_0,
    statusMessage_1,
    metadata_2
  ) {
    this.status_0 = status_0;
    this.statusMessage_1 = statusMessage_1;
    this.metadata_2 = metadata_2;
  };
defineClass(
  1605,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$13$Type
);
_.onInvoke = function onInvoke_140(arg0, arg1, arg2) {
  return idwcabs.lambda$13(
    this.status_0,
    this.statusMessage_1,
    this.metadata_2,
    castToFunction(arg0)
  );
};
_.status_0 = 0;
idwcabs.$getClass_243 = function $getClass_243() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$14$Type =
  function HandshakeStreamFactory$lambda$14$Type(
    status_0,
    statusMessage_1,
    metadata_2
  ) {
    this.status_0 = status_0;
    this.statusMessage_1 = statusMessage_1;
    this.metadata_2 = metadata_2;
  };
defineClass(
  1606,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$14$Type
);
_.onInvoke = function onInvoke_141(arg0, arg1, arg2) {
  return idwcabs.lambda$14_1(
    this.status_0,
    this.statusMessage_1,
    this.metadata_2,
    castToFunction(arg0)
  );
};
_.status_0 = 0;
idwcabs.$getClass_244 = function $getClass_244() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$15$Type =
  function HandshakeStreamFactory$lambda$15$Type(listeners_0) {
    this.listeners_0 = listeners_0;
  };
defineClass(
  1603,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$15$Type
);
_.onInvoke_12 = function onInvoke_142(arg0) {
  idwcabs.lambda$15_1(this.listeners_0, arg0);
};
idwcabs.$getClass_245 = function $getClass_245() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$16$Type =
  function HandshakeStreamFactory$lambda$16$Type(headers_0) {
    this.headers_0 = headers_0;
  };
defineClass(
  1607,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$16$Type
);
_.onInvoke = function onInvoke_143(arg0, arg1, arg2) {
  return idwcabs.lambda$16_0(this.headers_0, castToFunction(arg0));
};
idwcabs.HandshakeStreamFactory$lambda$2$Type =
  function HandshakeStreamFactory$lambda$2$Type(connection_0) {
    this.connection_0 = connection_0;
  };
defineClass(881, 1, {}, idwcabs.HandshakeStreamFactory$lambda$2$Type);
_.nextStreamMessage = function nextStreamMessage_1(arg0, arg1, arg2) {
  idwcabs.lambda$2_4(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.HandshakeRequest
    ),
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_barrage_stream_HandshakeStreamFactory$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.barrage.stream",
    "HandshakeStreamFactory/lambda$2$Type",
    881
  );
idwcabs.$getClass_246 = function $getClass_246() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$3$Type =
  function HandshakeStreamFactory$lambda$3$Type(listeners_0, metadata_1) {
    this.listeners_0 = listeners_0;
    this.metadata_1 = metadata_1;
  };
defineClass(
  1594,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$3$Type
);
_.onInvoke_11 = function onInvoke_144(arg0, arg1, arg2) {
  idwcabs.lambda$3(this.listeners_0, this.metadata_1, arg0, arg1);
};
idwcabs.$getClass_247 = function $getClass_247() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$4$Type =
  function HandshakeStreamFactory$lambda$4$Type(
    status_0,
    statusMessage_1,
    metadata_2
  ) {
    this.status_0 = status_0;
    this.statusMessage_1 = statusMessage_1;
    this.metadata_2 = metadata_2;
  };
defineClass(
  1597,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$4$Type
);
_.onInvoke = function onInvoke_145(arg0, arg1, arg2) {
  return idwcabs.lambda$4_4(
    this.status_0,
    this.statusMessage_1,
    this.metadata_2,
    castToFunction(arg0)
  );
};
_.status_0 = 0;
idwcabs.$getClass_248 = function $getClass_248() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$5$Type =
  function HandshakeStreamFactory$lambda$5$Type(
    status_0,
    statusMessage_1,
    metadata_2
  ) {
    this.status_0 = status_0;
    this.statusMessage_1 = statusMessage_1;
    this.metadata_2 = metadata_2;
  };
defineClass(
  1598,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$5$Type
);
_.onInvoke = function onInvoke_146(arg0, arg1, arg2) {
  return idwcabs.lambda$5_3(
    this.status_0,
    this.statusMessage_1,
    this.metadata_2,
    castToFunction(arg0)
  );
};
_.status_0 = 0;
idwcabs.$getClass_249 = function $getClass_249() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$6$Type =
  function HandshakeStreamFactory$lambda$6$Type(listeners_0) {
    this.listeners_0 = listeners_0;
  };
defineClass(
  1595,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$6$Type
);
_.onInvoke_3 = function onInvoke_147(arg0) {
  idwcabs.lambda$6_1(
    this.listeners_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.HandshakeResponse
    )
  );
};
idwcabs.$getClass_250 = function $getClass_250() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$7$Type =
  function HandshakeStreamFactory$lambda$7$Type(message_0) {
    this.message_0 = message_0;
  };
defineClass(
  1599,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$7$Type
);
_.onInvoke = function onInvoke_148(arg0, arg1, arg2) {
  return idwcabs.lambda$7_1(this.message_0, castToFunction(arg0));
};
idwcabs.$getClass_251 = function $getClass_251() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$8$Type =
  function HandshakeStreamFactory$lambda$8$Type(listeners_0) {
    this.listeners_0 = listeners_0;
  };
defineClass(
  1596,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$8$Type
);
_.onInvoke_12 = function onInvoke_149(arg0) {
  idwcabs.lambda$8_0(this.listeners_0, arg0);
};
idwcabs.$getClass_252 = function $getClass_252() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcabs.HandshakeStreamFactory$lambda$9$Type =
  function HandshakeStreamFactory$lambda$9$Type(headers_0) {
    this.headers_0 = headers_0;
  };
defineClass(
  1600,
  $wnd.Function,
  {},
  idwcabs.HandshakeStreamFactory$lambda$9$Type
);
_.onInvoke = function onInvoke_150(arg0, arg1, arg2) {
  return idwcabs.lambda$9(this.headers_0, castToFunction(arg0));
};
idwcabs.$onHeaders = function $onHeaders(this$static, handler) {
  try {
    return this$static.on("headers", castToFunction(handler));
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 41)) {
      return this$static;
    } else throw toJs($e0);
  }
};
idwcabs.$isOk = function $isOk(this$static) {
  return this$static.code == $wnd.dhinternal.grpcWeb.grpc.Code.OK;
};
idwcabs.$isTransportError = function $isTransportError(this$static) {
  return (
    this$static.code == $wnd.dhinternal.grpcWeb.grpc.Code.Internal ||
    this$static.code == $wnd.dhinternal.grpcWeb.grpc.Code.Unknown ||
    this$static.code == $wnd.dhinternal.grpcWeb.grpc.Code.Unavailable
  );
};
idwcabs.of_2 = function of_2(code_0, details, metadata) {
  return jb.of_8("code", code_0, "details", details, "metadata", metadata);
};
idwcab2.$$init_23 = function $$init_23(this$static) {
  this$static.ops = new ju.ArrayList();
};
idwcab2.$buildCustomColumns = function $buildCustomColumns(
  op,
  prevTableSupplier,
  lastOp
) {
  var customColumn, customColumn$iterator, updateViewOp, value_0;
  value_0 =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.SelectOrUpdateRequest();
  for (
    customColumn$iterator = new ju.ArrayList$1(
      new ju.ArrayList_1(op.customColumns_0)
    );
    customColumn$iterator.i < customColumn$iterator.this$01.array.length;

  ) {
    customColumn = castTo(ju.$next_8(customColumn$iterator), 148);
    (!op.appendTo || !idwcs.$hasCustomColumn(op.appendTo, customColumn)) &&
      value_0.addColumnSpecs(customColumn.expression_0);
  }
  if (value_0.getColumnSpecsList().length == 0) {
    return null;
  }
  updateViewOp =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
  updateViewOp.setUpdateView(value_0);
  value_0.setSourceId(idwcab2.$get_5(prevTableSupplier));
  lastOp[0] = new idwcab2.BatchBuilder$1methodref$setResultId$Type(value_0);
  return updateViewOp;
};
idwcab2.$buildDropColumns = function $buildDropColumns(
  op,
  prevTableSupplier,
  lastOp
) {
  var dropColumn, dropColumn$iterator, dropOp, value_0;
  value_0 =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.DropColumnsRequest();
  for (
    dropColumn$iterator = new ju.ArrayList$1(
      new ju.ArrayList_1(op.dropColumns_0)
    );
    dropColumn$iterator.i < dropColumn$iterator.this$01.array.length;

  ) {
    dropColumn = castToString(ju.$next_8(dropColumn$iterator));
    value_0.addColumnNames(dropColumn);
  }
  if (value_0.getColumnNamesList().length == 0) {
    return null;
  }
  dropOp =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
  dropOp.setDropColumns(value_0);
  value_0.setSourceId(idwcab2.$get_5(prevTableSupplier));
  lastOp[0] = new idwcab2.BatchBuilder$5methodref$setResultId$Type(value_0);
  return dropOp;
};
idwcab2.$buildFilter = function $buildFilter(op, prevTableSupplier, lastOp) {
  var filter, filter$iterator, filterOp, value_0;
  value_0 =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.FilterTableRequest();
  for (
    filter$iterator = new ju.ArrayList$1(new ju.ArrayList_1(op.filters));
    filter$iterator.i < filter$iterator.this$01.array.length;

  ) {
    filter = castTo(ju.$next_8(filter$iterator), 61);
    (!op.appendTo || !idwcs.$hasFilter(op.appendTo, filter)) &&
      value_0.addFilters(filter.descriptor);
  }
  if (value_0.getFiltersList().length == 0) {
    return null;
  }
  filterOp =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
  filterOp.setFilter(value_0);
  value_0.setSourceId(idwcab2.$get_5(prevTableSupplier));
  lastOp[0] = new idwcab2.BatchBuilder$4methodref$setResultId$Type(value_0);
  return filterOp;
};
idwcab2.$buildSort = function $buildSort(op, prevTableSupplier, lastOp) {
  var sort_0, sort$iterator, sortOp, value_0;
  value_0 = new $wnd.dhinternal.io.deephaven.proto.table_pb.SortTableRequest();
  for (
    sort$iterator = new ju.ArrayList$1(new ju.ArrayList_1(op.sorts));
    sort$iterator.i < sort$iterator.this$01.array.length;

  ) {
    sort_0 = castTo(ju.$next_8(sort$iterator), 97);
    (!op.appendTo || !idwcs.$hasSort(op.appendTo, sort_0)) &&
      value_0.addSorts(idwca.$makeDescriptor(sort_0));
  }
  if (value_0.getSortsList().length == 0) {
    return null;
  }
  sortOp =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
  sortOp.setSort(value_0);
  value_0.setSourceId(idwcab2.$get_5(prevTableSupplier));
  lastOp[0] = new idwcab2.BatchBuilder$3methodref$setResultId$Type(value_0);
  return sortOp;
};
idwcab2.$buildViewColumns = function $buildViewColumns(
  op,
  prevTableSupplier,
  lastOp
) {
  var dropColumn, dropColumn$iterator, dropOp, value_0;
  value_0 =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.SelectOrUpdateRequest();
  for (
    dropColumn$iterator = new ju.ArrayList$1(
      new ju.ArrayList_1(op.dropColumns_0)
    );
    dropColumn$iterator.i < dropColumn$iterator.this$01.array.length;

  ) {
    dropColumn = castToString(ju.$next_8(dropColumn$iterator));
    value_0.addColumnSpecs(dropColumn);
  }
  if (value_0.getColumnSpecsList().length == 0) {
    return null;
  }
  dropOp =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
  dropOp.setView(value_0);
  value_0.setSourceId(idwcab2.$get_5(prevTableSupplier));
  lastOp[0] = new idwcab2.BatchBuilder$6methodref$setResultId$Type(value_0);
  return dropOp;
};
idwcab2.$doNextOp = function $doNextOp(this$static, op) {
  ju.$indexOf_3(this$static.ops, op, 0) != -1 || ju.$add(this$static.ops, op);
  this$static.next_0 == op && (this$static.next_0 = null);
};
idwcab2.$flattenOperation = function $flattenOperation(
  op,
  prevTableSupplier,
  lastOp
) {
  var flattenOp, value_0;
  if (!op.isFlat) {
    return null;
  }
  flattenOp =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation();
  value_0 = new $wnd.dhinternal.io.deephaven.proto.table_pb.FlattenRequest();
  flattenOp.setFlatten(value_0);
  value_0.setSourceId(idwcab2.$get_5(prevTableSupplier));
  lastOp[0] = new idwcab2.BatchBuilder$2methodref$setResultId$Type(value_0);
  return flattenOp;
};
idwcab2.$getFirstOp = function $getFirstOp(this$static) {
  if (this$static.ops.array.length == 0) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Don't call getFirstOp on an empty batch!")
    );
  }
  return castTo(ju.$get_18(this$static.ops, 0), 189);
};
idwcab2.$getOp = function $getOp(this$static) {
  if (!this$static.next_0) {
    this$static.next_0 = new idwcab2.BatchBuilder$BatchOp();
    ju.$add(this$static.ops, this$static.next_0);
  }
  return this$static.next_0;
};
idwcab2.$serializable = function $serializable(this$static) {
  var i, lastOp, op, op$iterator, operations, prevTableSupplier, send;
  send = new $wnd.Array();
  for (
    op$iterator = new ju.ArrayList$1(this$static.ops);
    op$iterator.i < op$iterator.this$01.array.length;

  ) {
    op = castTo(ju.$next_8(op$iterator), 189);
    if (!(!!op.source_0 && !!op.target_0)) {
      if (!idwcs.$isRunning(op.state)) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "Only running states should be found in batch without a new handle"
          )
        );
      }
      continue;
    }
    if (idwcs.$isEmpty(op.state)) {
      idwcs.$setResolution_0(
        op.state,
        (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.FAILED_0),
        "Table state abandoned before request was made"
      );
      continue;
    }
    prevTableSupplier = new idwcab2.BatchBuilder$1(op, send);
    lastOp = initUnidimensionalArray(
      cggl.Ljava_util_function_Consumer_2_classLit,
      $intern_7,
      15,
      1,
      0,
      1
    );
    operations = castTo(
      jus.$collect_1(
        jus.$filter_1(
          jus.of_5([
            idwcab2.$buildCustomColumns(op, prevTableSupplier, lastOp),
            idwcab2.$buildViewColumns(op, prevTableSupplier, lastOp),
            idwcab2.$buildFilter(op, prevTableSupplier, lastOp),
            idwcab2.$buildSort(op, prevTableSupplier, lastOp),
            idwcab2.$buildDropColumns(op, prevTableSupplier, lastOp),
            idwcab2.$flattenOperation(op, prevTableSupplier, lastOp),
          ]),
          new idwcab2.BatchBuilder$0methodref$nonNull$Type()
        ),
        jus.of_4(
          new jus.Collectors$21methodref$ctor$Type(),
          new jus.Collectors$20methodref$add$Type(),
          new jus.Collectors$lambda$42$Type(),
          stampJavaTypeInfo(
            getClassLiteralForArray(
              cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
              1
            ),
            $intern_17,
            48,
            0,
            [(jus.$clinit_Collector$Characteristics(), jus.IDENTITY_FINISH)]
          )
        )
      ),
      79
    );
    if (!operations.isEmpty()) {
      lastOp[0].accept(
        idwca.$makeTicket(!op.target_0 ? op.state.handle : op.target_0)
      );
      for (i = 0; i < operations.size(); i++) {
        send.push(
          castToNative(
            operations.getAtIndex(i),
            $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest
              .Operation
          )
        );
      }
    }
  }
  return send;
};
idwcab2.$setCustomColumns = function $setCustomColumns(
  this$static,
  customColumns
) {
  idwcab2.$setCustomColumns_0(idwcab2.$getOp(this$static), customColumns);
};
idwcab2.$setFilter = function $setFilter(this$static, filters) {
  idwcab2.$setFilters(idwcab2.$getOp(this$static), filters);
};
idwcab2.$setFlat = function $setFlat(this$static, flat) {
  idwcab2.$setFlat_0(idwcab2.$getOp(this$static), flat);
};
idwcab2.$setSort = function $setSort(this$static, sorts) {
  idwcab2.$setSorts(idwcab2.$getOp(this$static), sorts);
};
idwcab2.BatchBuilder = function BatchBuilder() {
  idwcab2.$$init_23(this);
};
defineClass(361, 1, {}, idwcab2.BatchBuilder);
_.toString_0 = function toString_22() {
  return "BatchBuilder{ops=" + this.ops + "}";
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder_2_classLit =
  createForClass("io.deephaven.web.client.api.batch", "BatchBuilder", 361);
idwcab2.BatchBuilder$0methodref$nonNull$Type =
  function BatchBuilder$0methodref$nonNull$Type() {};
defineClass(806, 1, {}, idwcab2.BatchBuilder$0methodref$nonNull$Type);
_.test_0 = function test_10(arg0) {
  return arg0 != null;
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$0methodref$nonNull$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "BatchBuilder/0methodref$nonNull$Type",
    806
  );
idwcab2.$$init_24 = function $$init_24(this$static) {};
idwcab2.$get_5 = function $get_5(this$static) {
  var ref;
  ref = new $wnd.dhinternal.io.deephaven.proto.table_pb.TableReference();
  this$static.internalOffset == -1
    ? ref.setTicket(idwca.$makeTicket(idwcab2.$getSource(this$static.val$op2)))
    : ref.setBatchOffset(
        this$static.val$send3.length + this$static.internalOffset
      );
  ++this$static.internalOffset;
  return ref;
};
idwcab2.$get_6 = function $get_6(this$static) {
  return idwcab2.$get_5(this$static);
};
idwcab2.BatchBuilder$1 = function BatchBuilder$1(val$op, val$send) {
  this.val$op2 = val$op;
  this.val$send3 = val$send;
  idwcab2.$$init_24(this);
};
defineClass(805, 1, {}, idwcab2.BatchBuilder$1);
_.get_0 = function get_5() {
  return idwcab2.$get_6(this);
};
_.internalOffset = -1;
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$1_2_classLit =
  createForClass("io.deephaven.web.client.api.batch", "BatchBuilder/1", 805);
idwcab2.BatchBuilder$1methodref$setResultId$Type =
  function BatchBuilder$1methodref$setResultId$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  807,
  1,
  $intern_19,
  idwcab2.BatchBuilder$1methodref$setResultId$Type
);
_.accept = function accept_34(arg0) {
  this.$$outer_0.setResultId(
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket)
  );
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$1methodref$setResultId$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "BatchBuilder/1methodref$setResultId$Type",
    807
  );
idwcab2.BatchBuilder$2methodref$setResultId$Type =
  function BatchBuilder$2methodref$setResultId$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  808,
  1,
  $intern_19,
  idwcab2.BatchBuilder$2methodref$setResultId$Type
);
_.accept = function accept_35(arg0) {
  this.$$outer_0.setResultId(
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket)
  );
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$2methodref$setResultId$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "BatchBuilder/2methodref$setResultId$Type",
    808
  );
idwcab2.BatchBuilder$3methodref$setResultId$Type =
  function BatchBuilder$3methodref$setResultId$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  809,
  1,
  $intern_19,
  idwcab2.BatchBuilder$3methodref$setResultId$Type
);
_.accept = function accept_36(arg0) {
  this.$$outer_0.setResultId(
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket)
  );
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$3methodref$setResultId$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "BatchBuilder/3methodref$setResultId$Type",
    809
  );
idwcab2.BatchBuilder$4methodref$setResultId$Type =
  function BatchBuilder$4methodref$setResultId$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  810,
  1,
  $intern_19,
  idwcab2.BatchBuilder$4methodref$setResultId$Type
);
_.accept = function accept_37(arg0) {
  this.$$outer_0.setResultId(
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket)
  );
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$4methodref$setResultId$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "BatchBuilder/4methodref$setResultId$Type",
    810
  );
idwcab2.BatchBuilder$5methodref$setResultId$Type =
  function BatchBuilder$5methodref$setResultId$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  811,
  1,
  $intern_19,
  idwcab2.BatchBuilder$5methodref$setResultId$Type
);
_.accept = function accept_38(arg0) {
  this.$$outer_0.setResultId(
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket)
  );
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$5methodref$setResultId$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "BatchBuilder/5methodref$setResultId$Type",
    811
  );
idwcab2.BatchBuilder$6methodref$setResultId$Type =
  function BatchBuilder$6methodref$setResultId$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  812,
  1,
  $intern_19,
  idwcab2.BatchBuilder$6methodref$setResultId$Type
);
_.accept = function accept_39(arg0) {
  this.$$outer_0.setResultId(
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket)
  );
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$6methodref$setResultId$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "BatchBuilder/6methodref$setResultId$Type",
    812
  );
idwcab2.$$init_25 = function $$init_25(this$static) {
  this$static.sorts = new ju.ArrayList();
  this$static.conditions = new ju.ArrayList();
  this$static.dropColumns_0 = new ju.ArrayList();
  this$static.viewColumns = new ju.ArrayList();
  this$static.filters = new ju.ArrayList();
  this$static.customColumns_0 = new ju.ArrayList();
  this$static.selectDistinct_0 = new ju.ArrayList();
};
idwcab2.$equals_2 = function $equals_2(this$static, o) {
  var that;
  if (maskUndefined(this$static) === maskUndefined(o)) return true;
  if (
    o == null ||
    this$static.___clazz != jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 172);
  return idwcab2.$isEqual_0(this$static, that);
};
idwcab2.$hashCode_2 = function $hashCode_2(this$static) {
  var result;
  result = ju.hashCode_62(this$static.sorts);
  result = 31 * result + ju.hashCode_62(this$static.conditions);
  result = 31 * result + ju.hashCode_62(this$static.dropColumns_0);
  result = 31 * result + ju.hashCode_62(this$static.viewColumns);
  result = 31 * result + ju.hashCode_62(this$static.filters);
  result = 31 * result + ju.hashCode_62(this$static.customColumns_0);
  result = 31 * result + ju.hashCode_62(this$static.selectDistinct_0);
  result = 31 * result + (this$static.isFlat ? 0 : 1);
  return result;
};
idwcab2.$isEqual_0 = function $isEqual_0(this$static, that) {
  if (!ju.$equals_15(this$static.sorts, that.sorts)) return false;
  if (!ju.$equals_15(this$static.conditions, that.conditions)) return false;
  if (!ju.$equals_15(this$static.dropColumns_0, that.dropColumns_0))
    return false;
  if (!ju.$equals_15(this$static.viewColumns, that.viewColumns)) return false;
  if (!ju.$equals_15(this$static.filters, that.filters)) return false;
  if (!ju.$equals_15(this$static.customColumns_0, that.customColumns_0))
    return false;
  if (!ju.$equals_15(this$static.selectDistinct_0, that.selectDistinct_0))
    return false;
  return this$static.isFlat == that.isFlat;
};
idwcab2.$setConditions = function $setConditions(this$static, conditions) {
  this$static.conditions.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  ju.$addAll_0(this$static.conditions, conditions);
};
idwcab2.$setCustomColumns_0 = function $setCustomColumns_0(
  this$static,
  customColumns
) {
  this$static.customColumns_0.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  ju.$addAll_0(this$static.customColumns_0, customColumns);
};
idwcab2.$setDropColumns = function $setDropColumns(this$static, dropColumns) {
  this$static.dropColumns_0.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  ju.$addAll_0(this$static.dropColumns_0, dropColumns);
};
idwcab2.$setFilters = function $setFilters(this$static, filters) {
  this$static.filters.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  ju.$addAll_0(this$static.filters, filters);
};
idwcab2.$setFlat_0 = function $setFlat_0(this$static, flat) {
  this$static.isFlat = flat;
};
idwcab2.$setSorts = function $setSorts(this$static, sorts) {
  this$static.sorts.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  ju.$addAll_0(this$static.sorts, sorts);
};
idwcab2.$setViewColumns = function $setViewColumns(this$static, viewColumns) {
  this$static.viewColumns.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  ju.$addAll_0(this$static.viewColumns, viewColumns);
};
idwcab2.$toJs = function $toJs(this$static) {
  var config;
  config = new $wnd.Object();
  config.sorts = castTo(
    ju.$toArray_2(
      this$static.sorts,
      initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_Sort_2_classLit,
        { 983: 1, 3: 1, 5: 1 },
        97,
        this$static.sorts.array.length,
        0,
        1
      )
    ),
    983
  );
  config.conditions = castTo(
    ju.$toArray_2(
      this$static.conditions,
      initUnidimensionalArray(
        cggl.Ljava_lang_String_2_classLit,
        $intern_8,
        2,
        this$static.conditions.array.length,
        6,
        1
      )
    ),
    12
  );
  config.dropColumns = castTo(
    ju.$toArray_2(
      this$static.dropColumns_0,
      initUnidimensionalArray(
        cggl.Ljava_lang_String_2_classLit,
        $intern_8,
        2,
        this$static.dropColumns_0.array.length,
        6,
        1
      )
    ),
    12
  );
  config.viewColumns = castTo(
    ju.$toArray_2(
      this$static.viewColumns,
      initUnidimensionalArray(
        cggl.Ljava_lang_String_2_classLit,
        $intern_8,
        2,
        this$static.viewColumns.array.length,
        6,
        1
      )
    ),
    12
  );
  config.filters = castTo(
    ju.$toArray_2(
      this$static.filters,
      initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_filter_FilterCondition_2_classLit,
        $intern_56,
        61,
        this$static.filters.array.length,
        0,
        1
      )
    ),
    192
  );
  config.customColumns = castTo(
    jus.$toArray_6(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(
            this$static.customColumns_0,
            16
          )
        ),
        new idwcab2.TableConfig$0methodref$getExpression$Type()
      ),
      new idwcab2.TableConfig$1methodref$lambda$1$Type()
    ),
    12
  );
  config.isFlat = this$static.isFlat;
  return config;
};
idwcab2.$toString_9 = function $toString_9(this$static) {
  return (
    "TableConfig{sorts=" +
    this$static.sorts +
    ", filters=" +
    this$static.filters +
    ", customColumns=" +
    this$static.customColumns_0 +
    ", selectDistinct=" +
    this$static.selectDistinct_0 +
    ", conditions=" +
    this$static.conditions +
    ", dropColumns=" +
    this$static.dropColumns_0 +
    ", viewColumns=" +
    this$static.viewColumns +
    ", isFlat=" +
    this$static.isFlat +
    "}"
  );
};
idwcab2.$toSummaryString = function $toSummaryString(this$static) {
  var result;
  result = new jl.StringBuilder();
  this$static.customColumns_0.array.length == 0 ||
    jl.$append_9(
      jl.$append_9(
        ((result.string += "customColumns: "), result),
        castToString(
          jus.$collect_1(
            jus.$map_0(
              new jus.StreamImpl(
                null,
                new ju.Spliterators$IteratorSpliterator(
                  this$static.customColumns_0,
                  16
                )
              ),
              new idwcab2.TableConfig$2methodref$getExpression$Type()
            ),
            jus.of_3(
              new jus.Collectors$lambda$15$Type(),
              new jus.Collectors$9methodref$add$Type(),
              new jus.Collectors$10methodref$merge$Type(),
              new jus.Collectors$11methodref$toString$Type(),
              stampJavaTypeInfo(
                getClassLiteralForArray(
                  cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                  1
                ),
                $intern_17,
                48,
                0,
                []
              )
            )
          )
        )
      ),
      "\n"
    );
  this$static.filters.array.length == 0 ||
    jl.$append_9(
      jl.$append_9(
        ((result.string += "filters: "), result),
        castToString(
          jus.$collect_1(
            jus.$map_0(
              new jus.StreamImpl(
                null,
                new ju.Spliterators$IteratorSpliterator(this$static.filters, 16)
              ),
              new idwcab2.TableConfig$3methodref$toString$Type()
            ),
            jus.of_3(
              new jus.Collectors$lambda$15$Type(),
              new jus.Collectors$9methodref$add$Type(),
              new jus.Collectors$10methodref$merge$Type(),
              new jus.Collectors$11methodref$toString$Type(),
              stampJavaTypeInfo(
                getClassLiteralForArray(
                  cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                  1
                ),
                $intern_17,
                48,
                0,
                []
              )
            )
          )
        )
      ),
      "\n"
    );
  this$static.sorts.array.length == 0 ||
    jl.$append_9(
      jl.$append_9(
        ((result.string += "sorts: "), result),
        castToString(
          jus.$collect_1(
            jus.$map_0(
              new jus.StreamImpl(
                null,
                new ju.Spliterators$IteratorSpliterator(this$static.sorts, 16)
              ),
              new idwcab2.TableConfig$lambda$4$Type()
            ),
            jus.of_3(
              new jus.Collectors$lambda$15$Type(),
              new jus.Collectors$9methodref$add$Type(),
              new jus.Collectors$10methodref$merge$Type(),
              new jus.Collectors$11methodref$toString$Type(),
              stampJavaTypeInfo(
                getClassLiteralForArray(
                  cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                  1
                ),
                $intern_17,
                48,
                0,
                []
              )
            )
          )
        )
      ),
      "\n"
    );
  this$static.dropColumns_0.array.length == 0 ||
    jl.$append_9(
      jl.$append_9(
        ((result.string += "dropColumns: "), result),
        castToString(
          jus.$collect_1(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(
                this$static.dropColumns_0,
                16
              )
            ),
            jus.of_3(
              new jus.Collectors$lambda$15$Type(),
              new jus.Collectors$9methodref$add$Type(),
              new jus.Collectors$10methodref$merge$Type(),
              new jus.Collectors$11methodref$toString$Type(),
              stampJavaTypeInfo(
                getClassLiteralForArray(
                  cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                  1
                ),
                $intern_17,
                48,
                0,
                []
              )
            )
          )
        )
      ),
      "\n"
    );
  this$static.viewColumns.array.length == 0 ||
    jl.$append_9(
      jl.$append_9(
        ((result.string += "viewColumns: "), result),
        castToString(
          jus.$collect_1(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(
                this$static.viewColumns,
                16
              )
            ),
            jus.of_3(
              new jus.Collectors$lambda$15$Type(),
              new jus.Collectors$9methodref$add$Type(),
              new jus.Collectors$10methodref$merge$Type(),
              new jus.Collectors$11methodref$toString$Type(),
              stampJavaTypeInfo(
                getClassLiteralForArray(
                  cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                  1
                ),
                $intern_17,
                48,
                0,
                []
              )
            )
          )
        )
      ),
      "\n"
    );
  this$static.conditions.array.length == 0 ||
    jl.$append_9(
      jl.$append_9(
        ((result.string += "conditions: "), result),
        castToString(
          jus.$collect_1(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(
                this$static.conditions,
                16
              )
            ),
            jus.of_3(
              new jus.Collectors$lambda$15$Type(),
              new jus.Collectors$9methodref$add$Type(),
              new jus.Collectors$10methodref$merge$Type(),
              new jus.Collectors$11methodref$toString$Type(),
              stampJavaTypeInfo(
                getClassLiteralForArray(
                  cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                  1
                ),
                $intern_17,
                48,
                0,
                []
              )
            )
          )
        )
      ),
      "\n"
    );
  this$static.isFlat && ((result.string += "isFlat: true \n"), result);
  return result.string;
};
idwcab2.TableConfig = function TableConfig() {
  idwcab2.$$init_25(this);
};
idwcab2.TableConfig_0 = function TableConfig_0(
  sorts,
  conditions,
  filters,
  customColumns,
  dropColumns,
  viewColumns
) {
  idwcab2.$$init_25(this);
  ju.$addAll_0(this.sorts, sorts);
  ju.$addAll_0(this.conditions, conditions);
  ju.$addAll_0(this.filters, filters);
  ju.$addAll_0(this.customColumns_0, customColumns);
  ju.$addAll_0(this.dropColumns_0, dropColumns);
  ju.$addAll_0(this.viewColumns, viewColumns);
};
idwcab2.lambda$4_5 = function lambda$4_5(s_0) {
  return s_0.column_0.name_0 + " " + s_0.direction_0;
};
defineClass(172, 1, { 172: 1 });
_.equals_0 = function equals_6(o) {
  return idwcab2.$equals_2(this, o);
};
_.hashCode_1 = function hashCode_7() {
  return idwcab2.$hashCode_2(this);
};
_.toString_0 = function toString_23() {
  return idwcab2.$toString_9(this);
};
_.isFlat = false;
cggl.Lio_deephaven_web_client_api_batch_TableConfig_2_classLit = createForClass(
  "io.deephaven.web.client.api.batch",
  "TableConfig",
  172
);
idwcab2.$fromState = function $fromState(this$static, state) {
  this$static.state = state;
  idwcab2.$setSorts(this$static, new ju.ArrayList_1(state.sorts));
  idwcab2.$setConditions(this$static, new ju.ArrayList_1(state.conditions));
  idwcab2.$setDropColumns(this$static, new ju.ArrayList_1(state.dropColumns_0));
  idwcab2.$setViewColumns(this$static, new ju.ArrayList_1(state.viewColumns));
  idwcab2.$setFilters(this$static, new ju.ArrayList_1(state.filters));
  idwcab2.$setCustomColumns_0(
    this$static,
    new ju.ArrayList_1(state.customColumns_0)
  );
  idwcab2.$setFlat_0(this$static, state.isFlat);
};
idwcab2.$getClass_253 = function $getClass_253() {
  return cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$BatchOp_2_classLit;
};
idwcab2.$getSource = function $getSource(this$static) {
  return !this$static.source_0
    ? !this$static.appendTo
      ? null
      : this$static.appendTo.handle
    : this$static.source_0;
};
idwcab2.$isEqual_1 = function $isEqual_1(this$static, value_0) {
  if (
    !ju.$equals_15(
      new ju.ArrayList_1(this$static.sorts),
      new ju.ArrayList_1(value_0.sorts)
    )
  ) {
    return false;
  }
  if (
    !ju.$equals_15(
      new ju.ArrayList_1(this$static.customColumns_0),
      new ju.ArrayList_1(value_0.customColumns_0)
    )
  ) {
    return false;
  }
  if (
    !ju.$equals_15(
      new ju.ArrayList_1(this$static.conditions),
      new ju.ArrayList_1(value_0.conditions)
    )
  ) {
    return false;
  }
  if (
    new ju.ArrayList_1(this$static.filters).array.length !=
      new ju.ArrayList_1(value_0.filters).array.length ||
    !ju.$containsAll(
      new ju.ArrayList_1(this$static.filters),
      new ju.ArrayList_1(value_0.filters)
    )
  ) {
    return false;
  }
  if (
    new ju.ArrayList_1(this$static.dropColumns_0).array.length !=
      new ju.ArrayList_1(value_0.dropColumns_0).array.length ||
    !ju.$containsAll(
      new ju.ArrayList_1(this$static.dropColumns_0),
      new ju.ArrayList_1(value_0.dropColumns_0)
    )
  ) {
    return false;
  }
  if (
    new ju.ArrayList_1(this$static.viewColumns).array.length !=
      new ju.ArrayList_1(value_0.viewColumns).array.length ||
    !ju.$containsAll(
      new ju.ArrayList_1(this$static.viewColumns),
      new ju.ArrayList_1(value_0.viewColumns)
    )
  ) {
    return false;
  }
  if (this$static.isFlat != value_0.isFlat) {
    return false;
  }
  return true;
};
idwcab2.$setAppendTo = function $setAppendTo(this$static, appendTo) {
  this$static.appendTo = appendTo;
};
idwcab2.$setHandles = function $setHandles(this$static, source, target) {
  this$static.source_0 = source;
  this$static.target_0 = target;
};
idwcab2.BatchBuilder$BatchOp = function BatchBuilder$BatchOp() {
  idwcab2.TableConfig.call(this);
};
defineClass(189, 172, { 189: 1, 172: 1 }, idwcab2.BatchBuilder$BatchOp);
_.equals_0 = function equals_7(o) {
  var batchOp;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$BatchOp_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  if (!idwcab2.$equals_2(this, o)) return false;
  batchOp = castTo(o, 189);
  if (
    this.source_0
      ? !idwca.$equals_1(this.source_0, batchOp.source_0)
      : !!batchOp.source_0
  )
    return false;
  return this.target_0
    ? idwca.$equals_1(this.target_0, batchOp.target_0)
    : !batchOp.target_0;
};
_.hashCode_1 = function hashCode_8() {
  var result;
  result = idwcab2.$hashCode_2(this);
  result = 31 * result + (this.source_0 ? this.source_0.exportId_0 : 0);
  result = 31 * result + (this.target_0 ? this.target_0.exportId_0 : 0);
  return result;
};
_.toString_0 = function toString_24() {
  return (
    "BatchOp{, state=" +
    (!this.state ? null : idwcs.$toStringMinimal(this.state)) +
    ", appendTo=" +
    (!this.appendTo ? null : idwcs.$toStringMinimal(this.appendTo)) +
    ", " +
    ("TableConfig{sorts=" +
      this.sorts +
      ", filters=" +
      this.filters +
      ", customColumns=" +
      this.customColumns_0 +
      ", selectDistinct=" +
      this.selectDistinct_0 +
      ", conditions=" +
      this.conditions +
      ", dropColumns=" +
      this.dropColumns_0 +
      ", viewColumns=" +
      this.viewColumns +
      ", isFlat=" +
      this.isFlat +
      "}") +
    "}"
  );
};
cggl.Lio_deephaven_web_client_api_batch_BatchBuilder$BatchOp_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "BatchBuilder/BatchOp",
    189
  );
idwcab2.$allInterestedTables = function $allInterestedTables(this$static) {
  var state, state$iterator, tables;
  tables = new ju.IdentityHashMap();
  !!this$static.table_0.currentState ||
    ju.$put_2(tables, this$static.table_0, this$static.table_0);
  for (
    state$iterator = idwsf.$iterator_3(
      new idwsf.MappedIterable$lambda$3$Type(
        new idwsf.MappedIterable$lambda$4$Type(
          new idwsf.MappedIterable$0methodref$iterator$Type(
            this$static.builder.ops
          ),
          new idwcab2.RequestBatcher$1methodref$getState$Type()
        ),
        new idwsf.MappedIterable$1methodref$nonNull$Type()
      )
    );
    idwsf.$hasNext_2(state$iterator);

  ) {
    state = castTo(idwsf.$next_1(state$iterator), 14);
    jl.$forEach_2(
      idwcs.$getBoundTables(state),
      new idwcab2.RequestBatcher$lambda$5$Type(tables, state)
    );
  }
  return new idwcab2.RequestBatcher$2methodref$iterator$Type(
    new ju.AbstractMap$1(tables)
  );
};
idwcab2.$buildRequest_0 = function $buildRequest_0(this$static) {
  var request;
  idwcab2.$createOps(this$static);
  request = new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest();
  request.setOpsList(idwcab2.$serializable(this$static.builder));
  return request;
};
idwcab2.$createOps = function $createOps(this$static) {
  var t;
  try {
    idwcab2.$doCreateOps(this$static);
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      t = $e0;
      this$static.sent = true;
      throw toJs(t);
    } else throw toJs($e0);
  }
};
idwcab2.$customColumns = function $customColumns(this$static, newColumns) {
  idwcab2.$setCustomColumns(this$static.builder, newColumns);
};
idwcab2.$doCreateOps = function $doCreateOps(this$static) {
  var appendTo, existing, newOp, nextTry, op;
  op = idwcab2.$getOp(this$static.builder);
  appendTo = idwca.$state(this$static.table_0);
  if (!idwcs.$getBinding_0(appendTo, this$static.table_0).isActive()) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Table state " +
          appendTo +
          " did not have " +
          this$static.table_0 +
          " actively bound to it"
      )
    );
  }
  this$static.rollbackTo =
    ((existing = idwcs.$getBinding_0(appendTo, this$static.table_0)),
    !existing
      ? null
      : existing.isActive()
      ? castTo(existing, 55)
      : castTo(existing, 67).active);
  while (
    !idwcs.$isCompatible(
      appendTo,
      new ju.ArrayList_1(op.sorts),
      new ju.ArrayList_1(op.filters),
      new ju.ArrayList_1(op.customColumns_0),
      op.isFlat
    )
  ) {
    nextTry = appendTo.source_0;
    if (!nextTry) {
      debugger;
      throw toJs(
        new jl.AssertionError_0("Root state " + appendTo + " is not blank!")
      );
    }
    ju.$add(this$static.orphans, appendTo);
    idwcs.$pause(appendTo, this$static.table_0);
    appendTo = nextTry;
  }
  idwca.$setState(this$static.table_0, appendTo);
  if (idwcab2.$isEqual_1(op, appendTo) && idwcs.$isRunning(appendTo)) {
    op.state = appendTo;
    idwcab2.$setAppendTo(op, appendTo.source_0);
    idwcab2.$doNextOp(this$static.builder, op);
  } else {
    newOp = idwcab2.$maybeInsertInterimTable(this$static, op, appendTo);
    idwcab2.$insertOp(this$static, newOp, idwca.$state(this$static.table_0));
  }
};
idwcab2.$failTable = function $failTable(this$static, t, failureMessage) {
  var best, e, event_0, existing, state, state$iterator;
  event_0 = jb.emptyObjectLiteral();
  best = idwca.$state(t);
  for (
    state$iterator = idwsf.$iterator_1(
      new idwsf.LinkedIterable_0(
        best,
        new idwcs.ClientTableState$8methodref$getPrevious$Type(),
        false
      )
    );
    idwsf.$hasNext_1(state$iterator);

  ) {
    state = castTo(idwsf.$next_0(state$iterator), 14);
    if (
      idwsf.$anyMatch(
        new idwsf.MappedIterable$lambda$3$Type(
          new idwsf.MappedIterable$lambda$4$Type(
            new idwsf.MappedIterable$0methodref$iterator$Type(
              this$static.builder.ops
            ),
            new idwcab2.RequestBatcher$1methodref$getState$Type()
          ),
          new idwsf.MappedIterable$1methodref$nonNull$Type()
        ),
        new idwcab2.RequestBatcher$7methodref$equals$Type(state)
      )
    ) {
      best = state;
      break;
    }
  }
  event_0.detail = jb.of_7(
    "errorMessage",
    failureMessage,
    "configuration",
    idwcab2.$toJs(best)
  );
  try {
    idwcs.$rollback(
      ((existing = idwcs.$getBinding_0(t.currentState, t)),
      !existing
        ? null
        : existing.isActive()
        ? castTo(existing, 55)
        : castTo(existing, 67).active)
    );
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 41)) {
      e = $e0;
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          [
            "An exception occurred trying to rollback the table. This means that there will be no ticking data until the table configuration is applied again in a way that makes sense. See IDS-5199 for more detail.",
            e,
          ]
        )
      );
    } else throw toJs($e0);
  }
  idwca.$fireEvent_0(
    t,
    "requestfailed",
    new $wnd.CustomEvent("requestfailed", event_0)
  );
};
idwcab2.$failed_0 = function $failed_0(this$static, reject, fail) {
  var entry, outerIter, s, s$iterator, t, t$iterator;
  for (
    s$iterator = idwsf.$iterator_3(
      new idwsf.MappedIterable$lambda$3$Type(
        new idwsf.MappedIterable$lambda$3$Type(
          new idwsf.MappedIterable$lambda$4$Type(
            new idwsf.MappedIterable$0methodref$iterator$Type(
              this$static.builder.ops
            ),
            new idwcab2.RequestBatcher$1methodref$getState$Type()
          ),
          new idwsf.MappedIterable$1methodref$nonNull$Type()
        ),
        new idwcab2.RequestBatcher$lambda$20$Type()
      )
    );
    idwsf.$hasNext_2(s$iterator);

  ) {
    s = castTo(idwsf.$next_1(s$iterator), 14);
    idwcs.$setResolution_0(
      s,
      (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.FAILED_0),
      fail
    );
  }
  for (
    t$iterator =
      ((outerIter = idwcab2
        .$allInterestedTables(this$static)
        .$$outer_0.this$01.entrySet_0()
        .iterator_0()),
      new ju.AbstractMap$1$1(outerIter));
    t$iterator.val$outerIter2.hasNext_1();

  ) {
    t =
      ((entry = castTo(t$iterator.val$outerIter2.next_1(), 27)),
      castTo(entry.getKey(), 13));
    idwcab2.$failTable(this$static, t, fail);
  }
  reject(fail);
};
idwcab2.$filter = function $filter(this$static, newFilter) {
  idwcab2.$setFilter(this$static.builder, newFilter);
};
idwcab2.$insertOp = function $insertOp(this$static, op, sourceState) {
  var handle, newTail;
  if (idwca.$state(this$static.table_0) != sourceState) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "You must update your table's currentState before calling insertOp"
      )
    );
  }
  handle = sourceState.handle;
  newTail = idwca.$newState_1(this$static.connection, sourceState, op);
  idwca.$setState(this$static.table_0, newTail);
  idwca.$setRollback(this$static.table_0, this$static.rollbackTo);
  op.state = newTail;
  idwcab2.$setHandles(op, handle, newTail.handle);
  idwcab2.$doNextOp(this$static.builder, op);
  return newTail;
};
idwcab2.$lambda$17_0 = function $lambda$17_0(
  this$static,
  resolve_1,
  reject_2,
  status_2
) {
  idwcabs.$isOk(status_2)
    ? resolve_1(null)
    : idwcab2.$failed_0(this$static, reject_2, status_2.details);
  ju.$forEach_3(
    this$static.orphans,
    new idwcab2.RequestBatcher$6methodref$cleanup$Type()
  );
};
idwcab2.$lambda$7_0 = function $lambda$7_0(this$static, resolve_0, reject_1) {
  var active,
    batchStream,
    customColumnChanged,
    filterChanged,
    operationHead,
    prevState,
    request,
    send,
    send$iterator,
    sortChanged,
    source;
  prevState = idwca.$lastVisibleState(this$static.table_0);
  request = idwcab2.$buildRequest_0(this$static);
  for (
    send$iterator = new ju.ArrayList$1(this$static.onSend);
    send$iterator.i < send$iterator.this$01.array.length;

  ) {
    send = castToFunction(ju.$next_8(send$iterator));
    send(request);
  }
  this$static.onSend.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  this$static.sent = true;
  if (request.getOpsList().length == 0) {
    if (this$static.table_0.currentState) {
      active = idwca.$state(this$static.table_0);
      if (!idwcs.$isRunning(active)) {
        debugger;
        throw toJs(new jl.AssertionError_0(active));
      }
      sortChanged = !ju.$equals_15(
        new ju.ArrayList_1(prevState.sorts),
        new ju.ArrayList_1(active.sorts)
      );
      filterChanged = !ju.$equals_15(
        new ju.ArrayList_1(prevState.filters),
        new ju.ArrayList_1(active.filters)
      );
      customColumnChanged = !ju.$equals_15(
        new ju.ArrayList_1(prevState.customColumns_0),
        new ju.ArrayList_1(active.customColumns_0)
      );
      idwca.$fireEvent_3(
        this$static.table_0,
        "requestsucceeded",
        jb.emptyObjectLiteral()
      );
      sortChanged &&
        idwca.$fireEvent_3(
          this$static.table_0,
          "sortchanged",
          jb.emptyObjectLiteral()
        );
      filterChanged &&
        idwca.$fireEvent_3(
          this$static.table_0,
          "filterchanged",
          jb.emptyObjectLiteral()
        );
      customColumnChanged &&
        idwca.$fireEvent_3(
          this$static.table_0,
          "customcolumnschanged",
          jb.emptyObjectLiteral()
        );
    }
    ju.$forEach_3(
      this$static.orphans,
      new idwcab2.RequestBatcher$3methodref$cleanup$Type()
    );
    resolve_0(null);
    idwca.$maybeReviveSubscription(this$static.table_0);
    return;
  }
  operationHead = idwcab2.$getFirstOp(this$static.builder);
  if (!operationHead) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("A non-empty request must have a firstOp!")
    );
  }
  source = operationHead.appendTo;
  if (!source) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("A non-empty request must have a source state!")
    );
  }
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    ["Sending request", idwca.of_1(request), request, " based on ", this$static]
  );
  batchStream = castToJsObject(
    this$static.connection.tableServiceClient.batch(
      request,
      this$static.connection.metadata_0
    )
  );
  batchStream.on(
    "data",
    castToFunction(
      makeLambdaFunction(
        idwcab2.RequestBatcher$lambda$9$Type.prototype.apply_3,
        idwcab2.RequestBatcher$lambda$9$Type,
        [this$static]
      )
    )
  );
  batchStream.on(
    "end",
    castToFunction(
      makeLambdaFunction(
        idwcab2.RequestBatcher$lambda$17$Type.prototype.apply_3,
        idwcab2.RequestBatcher$lambda$17$Type,
        [this$static, resolve_0, reject_1]
      )
    )
  );
};
idwcab2.$lambda$9_1 = function $lambda$9_1(this$static, response_0) {
  var activeTablesAndStates,
    customColumnChanged,
    fail,
    filterChanged,
    lastVisibleState,
    outerIter,
    resultid,
    sortChanged,
    state,
    state0,
    table,
    table$iterator,
    table$iterator0,
    ticket;
  resultid = response_0.getResultId();
  if (!resultid.hasTicket()) {
    return;
  }
  ticket = resultid.getTicket();
  if (!response_0.getSuccess()) {
    fail = response_0.getErrorInfo();
    state0 = castTo(
      idwsf.$first(
        new idwsf.MappedIterable$lambda$3$Type(
          new idwsf.MappedIterable$lambda$3$Type(
            new idwsf.MappedIterable$lambda$4$Type(
              new idwsf.MappedIterable$0methodref$iterator$Type(
                this$static.builder.ops
              ),
              new idwcab2.RequestBatcher$1methodref$getState$Type()
            ),
            new idwsf.MappedIterable$1methodref$nonNull$Type()
          ),
          new idwcab2.RequestBatcher$lambda$10$Type(ticket)
        )
      ),
      14
    );
    if (
      state0.active.size == 0 &&
      state0.paused.size == 0 &&
      state0.retainers.size == 0
    ) {
      return;
    }
    idwca.$setState_0(
      state0.handle,
      (idwca.$clinit_TableTicket$State(), idwca.FAILED)
    );
    for (
      table$iterator0 = idwsf.$iterator_3(
        new idwsf.MappedIterable$lambda$3$Type(
          idwcab2.$allInterestedTables(this$static),
          new idwcab2.RequestBatcher$lambda$11$Type(state0)
        )
      );
      idwsf.$hasNext_2(table$iterator0);

    ) {
      table = castTo(idwsf.$next_1(table$iterator0), 13);
      idwcab2.$failTable(this$static, table, fail);
    }
    idwcs.$setResolution_0(
      state0,
      (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.FAILED_0),
      fail
    );
    return;
  }
  state = castTo(
    idwsf.$first(
      new idwsf.MappedIterable$lambda$3$Type(
        new idwsf.MappedIterable$lambda$3$Type(
          new idwsf.MappedIterable$lambda$4$Type(
            new idwsf.MappedIterable$0methodref$iterator$Type(
              this$static.builder.ops
            ),
            new idwcab2.RequestBatcher$1methodref$getState$Type()
          ),
          new idwsf.MappedIterable$1methodref$nonNull$Type()
        ),
        new idwcab2.RequestBatcher$lambda$12$Type(ticket)
      )
    ),
    14
  );
  if (
    state.active.size == 0 &&
    state.paused.size == 0 &&
    state.retainers.size == 0
  ) {
    return;
  }
  activeTablesAndStates = castTo(
    jus.$collect_1(
      jus.$filter_1(
        jus.$filter_1(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator_0(
              ((outerIter = idwcab2
                .$allInterestedTables(this$static)
                .$$outer_0.this$01.entrySet_0()
                .iterator_0()),
              new ju.AbstractMap$1$1(outerIter))
            )
          ),
          new idwcab2.RequestBatcher$4methodref$isAlive$Type()
        ),
        new idwcab2.RequestBatcher$lambda$14$Type(state)
      ),
      jus.toMap(
        new juf.Function$lambda$0$Type(),
        new idwcab2.RequestBatcher$5methodref$lastVisibleState$Type(),
        new jus.Collectors$lambda$44$Type(),
        new jus.Collectors$22methodref$ctor$Type()
      )
    ),
    30
  );
  idwcs.$applyTableCreationResponse(state, response_0);
  idwcs.$forActiveTables(
    state,
    makeLambdaFunction(
      idwcab2.RequestBatcher$lambda$16$Type.prototype.apply_3,
      idwcab2.RequestBatcher$lambda$16$Type,
      [state]
    )
  );
  idwcs.$setResolution(
    state,
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RUNNING_0)
  );
  for (
    table$iterator = activeTablesAndStates.keySet().iterator_0();
    table$iterator.hasNext_1();

  ) {
    table = castTo(table$iterator.next_1(), 13);
    lastVisibleState = castTo(activeTablesAndStates.get(table), 14);
    sortChanged = !ju.$equals_15(
      new ju.ArrayList_1(lastVisibleState.sorts),
      new ju.ArrayList_1(state.sorts)
    );
    filterChanged = !ju.$equals_15(
      new ju.ArrayList_1(lastVisibleState.filters),
      new ju.ArrayList_1(state.filters)
    );
    customColumnChanged = !ju.$equals_15(
      new ju.ArrayList_1(lastVisibleState.customColumns_0),
      new ju.ArrayList_1(state.customColumns_0)
    );
    idwca.$fireEvent_3(table, "requestsucceeded", jb.emptyObjectLiteral());
    sortChanged &&
      idwca.$fireEvent_3(table, "sortchanged", jb.emptyObjectLiteral());
    filterChanged &&
      idwca.$fireEvent_3(table, "filterchanged", jb.emptyObjectLiteral());
    customColumnChanged &&
      idwca.$fireEvent_3(
        table,
        "customcolumnschanged",
        jb.emptyObjectLiteral()
      );
  }
};
idwcab2.$maybeInsertInterimTable = function $maybeInsertInterimTable(
  this$static,
  op,
  appendTo
) {
  var appendToSort,
    desiredSorts,
    filterChanged,
    newAppendTo,
    newOp,
    sortChanged;
  op.appendTo = appendTo;
  filterChanged = !ju.$equals_15(
    new ju.ArrayList_1(appendTo.filters),
    new ju.ArrayList_1(op.filters)
  );
  if (filterChanged) {
    appendToSort = new ju.ArrayList_1(appendTo.sorts);
    desiredSorts = new ju.ArrayList_1(op.sorts);
    sortChanged = !ju.$equals_15(appendToSort, desiredSorts);
    if (sortChanged) {
      op.sorts.array = initUnidimensionalArray(
        cggl.Ljava_lang_Object_2_classLit,
        $intern_7,
        1,
        0,
        5,
        1
      );
      ju.$addAll_0(op.sorts, appendToSort);
      newAppendTo = idwcab2.$insertOp(this$static, op, appendTo);
      newOp = idwcab2.$getOp(this$static.builder);
      newOp.sorts.array = initUnidimensionalArray(
        cggl.Ljava_lang_Object_2_classLit,
        $intern_7,
        1,
        0,
        5,
        1
      );
      ju.$addAll_0(newOp.sorts, desiredSorts);
      idwcab2.$setFilters(newOp, new ju.ArrayList_1(op.filters));
      idwcab2.$setCustomColumns_0(
        newOp,
        new ju.ArrayList_1(op.customColumns_0)
      );
      idwcab2.$setFlat_0(newOp, op.isFlat);
      newOp.appendTo = newAppendTo;
      return newOp;
    }
  }
  return op;
};
idwcab2.$nestedPromise = function $nestedPromise(this$static, table) {
  var state;
  idwcab2.$createOps(this$static);
  state = idwcab2.$getOp(this$static.builder).state;
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcab2.RequestBatcher$lambda$0$Type.prototype.onInvoke_6,
      idwcab2.RequestBatcher$lambda$0$Type,
      [state, table]
    )
  );
};
idwcab2.$onSend = function $onSend(this$static, success) {
  ju.$add(this$static.onSend, success);
};
idwcab2.$setConfig = function $setConfig(this$static, other) {
  idwcab2.$customColumns(
    this$static,
    new ju.ArrayList_1(other.customColumns_0)
  );
  idwcab2.$sort(this$static, new ju.ArrayList_1(other.sorts));
  idwcab2.$filter(this$static, new ju.ArrayList_1(other.filters));
  idwcab2.$setFlat_1(this$static, other.isFlat);
};
idwcab2.$setFlat_1 = function $setFlat_1(this$static, isFlat) {
  idwcab2.$setFlat(this$static.builder, isFlat);
};
idwcab2.$sort = function $sort(this$static, newSort) {
  idwcab2.$setSort(this$static.builder, newSort);
};
idwcab2.RequestBatcher = function RequestBatcher(table, connection) {
  this.table_0 = table;
  this.connection = connection;
  this.builder = new idwcab2.BatchBuilder();
  this.onSend = new ju.ArrayList();
  this.orphans = new ju.ArrayList();
};
idwcab2.lambda$0_3 = function lambda$0_3(
  state_0,
  table_1,
  resolve_2,
  reject_3
) {
  idwcs.$onRunning(
    state_0,
    makeLambdaFunction(
      idwcab2.RequestBatcher$lambda$1$Type.prototype.apply_3,
      idwcab2.RequestBatcher$lambda$1$Type,
      [resolve_2, table_1]
    ),
    makeLambdaFunction(
      idwcab2.RequestBatcher$0methodref$onInvoke$Type.prototype.apply_3,
      idwcab2.RequestBatcher$0methodref$onInvoke$Type,
      [reject_3]
    ),
    makeLambdaFunction(
      idwcab2.RequestBatcher$lambda$3$Type.prototype.run,
      idwcab2.RequestBatcher$lambda$3$Type,
      [reject_3]
    )
  );
};
idwcab2.lambda$10_1 = function lambda$10_1(ticket_0, cts_1) {
  return (
    jl.$clinit_Boolean(),
    jl.$equals_12(
      idwca.$makeTicket(cts_1.handle).getTicket_asB64(),
      ticket_0.getTicket_asB64()
    )
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
idwcab2.lambda$11_3 = function lambda$11_3(state_0, t_1) {
  return (
    jl.$clinit_Boolean(),
    idwca.$state(t_1) == state_0
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
idwcab2.lambda$12_1 = function lambda$12_1(ticket_0, cts_1) {
  return (
    jl.$clinit_Boolean(),
    jl.$equals_12(
      idwca.$makeTicket(cts_1.handle).getTicket_asB64(),
      ticket_0.getTicket_asB64()
    )
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
idwcab2.lambda$14_2 = function lambda$14_2(state_0, t_1) {
  return idwca.$state(t_1) == state_0;
};
idwcab2.lambda$16_1 = function lambda$16_1(state_0, t_1) {
  t_1.suppress && idwca.$revive(t_1, state_0);
};
idwcab2.lambda$20 = function lambda$20(cts_0) {
  return (
    jl.$clinit_Boolean(),
    cts_0.resolution ==
      (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RUNNING_0) ||
    cts_0.resolution == idwcs.FAILED_0 ||
    cts_0.resolution == idwcs.RELEASED_0
      ? ji.uncheckedCast(false)
      : ji.uncheckedCast(true)
  );
};
idwcab2.lambda$5_4 = function lambda$5_4(tables_0, state_1, table_2) {
  !!ju.$getEntry(tables_0.hashCodeMap, table_2) ||
    (idwca.$hasHandle(table_2, state_1.handle) &&
      ju.$put_4(tables_0.hashCodeMap, table_2, table_2));
};
defineClass(129, 1, { 129: 1 }, idwcab2.RequestBatcher);
_.sent = false;
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher_2_classLit =
  createForClass("io.deephaven.web.client.api.batch", "RequestBatcher", 129);
idwcab2.$getClass_254 = function $getClass_254() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab2.RequestBatcher$0methodref$onInvoke$Type =
  function RequestBatcher$0methodref$onInvoke$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1435,
  $wnd.Function,
  $intern_48,
  idwcab2.RequestBatcher$0methodref$onInvoke$Type
);
_.apply_3 = function apply_99(arg0) {
  this.$$outer_0.call(null, arg0);
};
idwcab2.$apply_6 = function $apply_6(arg0) {
  return castTo(arg0, 189).state;
};
idwcab2.RequestBatcher$1methodref$getState$Type =
  function RequestBatcher$1methodref$getState$Type() {};
defineClass(203, 1, {}, idwcab2.RequestBatcher$1methodref$getState$Type);
_.apply_1 = function apply_100(arg0) {
  return idwcab2.$apply_6(arg0);
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$1methodref$getState$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/1methodref$getState$Type",
    203
  );
idwsf.$allMatch = function $allMatch(this$static, test_0) {
  var t, t$iterator;
  for (
    t$iterator = idwcf.lambda$0_16(this$static.itrs_0);
    t$iterator.hasNext_1();

  ) {
    t = t$iterator.next_1();
    if (!test_0.test_0(t)) {
      return false;
    }
  }
  return true;
};
idwsf.$anyMatch = function $anyMatch(this$static, test_0) {
  var t, t$iterator;
  for (
    t$iterator = idwsf.$lambda$3_7(this$static.$$outer_0, this$static.filter_1);
    idwsf.$hasNext_2(t$iterator);

  ) {
    t = idwsf.$next_1(t$iterator);
    if (idwcs.$equals_3(test_0.$$outer_0, t)) {
      return true;
    }
  }
  return false;
};
idwsf.$first = function $first(this$static) {
  var itr;
  itr = idwsf.$lambda$3_7(this$static.$$outer_0, this$static.filter_1);
  if (idwsf.$hasNext_2(itr)) {
    return idwsf.$next_1(itr);
  }
  throw toJs(new ju.NoSuchElementException_0(this$static + " is empty"));
};
idwsf.$lambda$3_7 = function $lambda$3_7(this$static, filter_1) {
  var source;
  source = this$static.iterator_0();
  return new idwsf.MappedIterable$2(source, filter_1);
};
idwsf.$lambda$4_9 = function $lambda$4_9(this$static, mapper_1) {
  var source;
  source = new ju.ArrayList$1(this$static.$$outer_0);
  return new idwsf.MappedIterable$3(source, mapper_1);
};
idwsf.$lambda$5_9 = function $lambda$5_9(this$static, more_1) {
  var mine, yours;
  mine = idwcf.lambda$0_16(this$static.itrs_0);
  yours = idwcf.lambda$0_16(more_1.itrs_0);
  return new idwsf.MappedIterable$4(mine, yours);
};
idwsf.$noneMatch = function $noneMatch(this$static, test_0) {
  var t, t$iterator;
  for (
    t$iterator = idwcf.lambda$0_16(this$static.itrs_0);
    t$iterator.hasNext_1();

  ) {
    t = t$iterator.next_1();
    if (test_0.$$outer_0.has(castTo(t, 13))) {
      return false;
    }
  }
  return true;
};
idwcab2.$iterator = function $iterator(this$static) {
  var outerIter;
  return (
    (outerIter = this$static.$$outer_0.this$01.entrySet_0().iterator_0()),
    new ju.AbstractMap$1$1(outerIter)
  );
};
idwcab2.RequestBatcher$2methodref$iterator$Type =
  function RequestBatcher$2methodref$iterator$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(640, 1, {}, idwcab2.RequestBatcher$2methodref$iterator$Type);
_.forEach_0 = function forEach(action) {
  jl.$forEach_2(this, action);
};
_.iterator_0 = function iterator_1() {
  return idwcab2.$iterator(this);
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$2methodref$iterator$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/2methodref$iterator$Type",
    640
  );
idwcab2.RequestBatcher$3methodref$cleanup$Type =
  function RequestBatcher$3methodref$cleanup$Type() {};
defineClass(641, 1, $intern_19, idwcab2.RequestBatcher$3methodref$cleanup$Type);
_.accept = function accept_40(arg0) {
  idwcs.$cleanup(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$3methodref$cleanup$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/3methodref$cleanup$Type",
    641
  );
idwcab2.RequestBatcher$4methodref$isAlive$Type =
  function RequestBatcher$4methodref$isAlive$Type() {};
defineClass(645, 1, {}, idwcab2.RequestBatcher$4methodref$isAlive$Type);
_.test_0 = function test_11(arg0) {
  return !!castTo(arg0, 13).currentState;
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$4methodref$isAlive$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/4methodref$isAlive$Type",
    645
  );
idwcab2.RequestBatcher$5methodref$lastVisibleState$Type =
  function RequestBatcher$5methodref$lastVisibleState$Type() {};
defineClass(
  647,
  1,
  {},
  idwcab2.RequestBatcher$5methodref$lastVisibleState$Type
);
_.apply_1 = function apply_101(arg0) {
  return idwca.$lastVisibleState(castTo(arg0, 13));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$5methodref$lastVisibleState$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/5methodref$lastVisibleState$Type",
    647
  );
idwcab2.RequestBatcher$6methodref$cleanup$Type =
  function RequestBatcher$6methodref$cleanup$Type() {};
defineClass(648, 1, $intern_19, idwcab2.RequestBatcher$6methodref$cleanup$Type);
_.accept = function accept_41(arg0) {
  idwcs.$cleanup(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$6methodref$cleanup$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/6methodref$cleanup$Type",
    648
  );
idwcab2.$test_1 = function $test_1(this$static, arg0) {
  return idwcs.$equals_3(this$static.$$outer_0, arg0);
};
idwcab2.RequestBatcher$7methodref$equals$Type =
  function RequestBatcher$7methodref$equals$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(649, 1, {}, idwcab2.RequestBatcher$7methodref$equals$Type);
_.test_0 = function test_12(arg0) {
  return idwcab2.$test_1(this, arg0);
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$7methodref$equals$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/7methodref$equals$Type",
    649
  );
idwcab2.$getClass_255 = function $getClass_255() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab2.RequestBatcher$lambda$0$Type = function RequestBatcher$lambda$0$Type(
  state_0,
  table_1
) {
  this.state_0 = state_0;
  this.table_1 = table_1;
};
defineClass(1433, $wnd.Function, {}, idwcab2.RequestBatcher$lambda$0$Type);
_.onInvoke_6 = function onInvoke_151(arg0, arg1) {
  idwcab2.lambda$0_3(this.state_0, this.table_1, arg0, arg1);
};
idwcab2.$getClass_256 = function $getClass_256() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab2.RequestBatcher$lambda$1$Type = function RequestBatcher$lambda$1$Type(
  resolve_0,
  table_1
) {
  this.resolve_0 = resolve_0;
  this.table_1 = table_1;
};
defineClass(
  1434,
  $wnd.Function,
  $intern_48,
  idwcab2.RequestBatcher$lambda$1$Type
);
_.apply_3 = function apply_102(arg0) {
  var lastArg;
  this.resolve_0.call(
    null,
    ((lastArg = this.table_1), castTo(arg0, 14), lastArg)
  );
};
idwcab2.RequestBatcher$lambda$10$Type = function RequestBatcher$lambda$10$Type(
  ticket_0
) {
  this.ticket_0 = ticket_0;
};
defineClass(642, 1, {}, idwcab2.RequestBatcher$lambda$10$Type);
_.apply_1 = function apply_103(arg0) {
  return idwcab2.lambda$10_1(this.ticket_0, castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$lambda$10$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/lambda$10$Type",
    642
  );
idwcab2.RequestBatcher$lambda$11$Type = function RequestBatcher$lambda$11$Type(
  state_0
) {
  this.state_0 = state_0;
};
defineClass(643, 1, {}, idwcab2.RequestBatcher$lambda$11$Type);
_.apply_1 = function apply_104(arg0) {
  return idwcab2.lambda$11_3(this.state_0, castTo(arg0, 13));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$lambda$11$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/lambda$11$Type",
    643
  );
idwcab2.RequestBatcher$lambda$12$Type = function RequestBatcher$lambda$12$Type(
  ticket_0
) {
  this.ticket_0 = ticket_0;
};
defineClass(644, 1, {}, idwcab2.RequestBatcher$lambda$12$Type);
_.apply_1 = function apply_105(arg0) {
  return idwcab2.lambda$12_1(this.ticket_0, castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$lambda$12$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/lambda$12$Type",
    644
  );
idwcab2.RequestBatcher$lambda$14$Type = function RequestBatcher$lambda$14$Type(
  state_0
) {
  this.state_0 = state_0;
};
defineClass(646, 1, {}, idwcab2.RequestBatcher$lambda$14$Type);
_.test_0 = function test_13(arg0) {
  return idwcab2.lambda$14_2(this.state_0, castTo(arg0, 13));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$lambda$14$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/lambda$14$Type",
    646
  );
idwcab2.$getClass_257 = function $getClass_257() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab2.RequestBatcher$lambda$16$Type = function RequestBatcher$lambda$16$Type(
  state_0
) {
  this.state_0 = state_0;
};
defineClass(
  1439,
  $wnd.Function,
  $intern_48,
  idwcab2.RequestBatcher$lambda$16$Type
);
_.apply_3 = function apply_106(arg0) {
  idwcab2.lambda$16_1(this.state_0, castTo(arg0, 13));
};
idwcab2.$getClass_258 = function $getClass_258() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab2.RequestBatcher$lambda$17$Type = function RequestBatcher$lambda$17$Type(
  $$outer_0,
  resolve_1,
  reject_2
) {
  this.$$outer_0 = $$outer_0;
  this.resolve_1 = resolve_1;
  this.reject_2 = reject_2;
};
defineClass(
  1438,
  $wnd.Function,
  $intern_48,
  idwcab2.RequestBatcher$lambda$17$Type
);
_.apply_3 = function apply_107(arg0) {
  idwcab2.$lambda$17_0(this.$$outer_0, this.resolve_1, this.reject_2, arg0);
};
idwcab2.RequestBatcher$lambda$20$Type =
  function RequestBatcher$lambda$20$Type() {};
defineClass(650, 1, {}, idwcab2.RequestBatcher$lambda$20$Type);
_.apply_1 = function apply_108(arg0) {
  return idwcab2.lambda$20(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$lambda$20$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/lambda$20$Type",
    650
  );
idwcab2.$getClass_259 = function $getClass_259() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab2.RequestBatcher$lambda$3$Type = function RequestBatcher$lambda$3$Type(
  reject_0
) {
  this.reject_0 = reject_0;
};
defineClass(
  1436,
  $wnd.Function,
  $intern_49,
  idwcab2.RequestBatcher$lambda$3$Type
);
_.run = function run_24() {
  this.reject_0.call(null, "Table failed, or was closed");
};
idwcab2.RequestBatcher$lambda$5$Type = function RequestBatcher$lambda$5$Type(
  tables_0,
  state_1
) {
  this.tables_0 = tables_0;
  this.state_1 = state_1;
};
defineClass(639, 1, $intern_19, idwcab2.RequestBatcher$lambda$5$Type);
_.accept = function accept_42(arg0) {
  idwcab2.lambda$5_4(this.tables_0, this.state_1, castTo(arg0, 13));
};
cggl.Lio_deephaven_web_client_api_batch_RequestBatcher$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "RequestBatcher/lambda$5$Type",
    639
  );
idwcab2.$getClass_260 = function $getClass_260() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab2.RequestBatcher$lambda$7$Type = function RequestBatcher$lambda$7$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1213, $wnd.Function, {}, idwcab2.RequestBatcher$lambda$7$Type);
_.onInvoke_6 = function onInvoke_152(arg0, arg1) {
  idwcab2.$lambda$7_0(this.$$outer_0, arg0, arg1);
};
idwcab2.$getClass_261 = function $getClass_261() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcab2.RequestBatcher$lambda$9$Type = function RequestBatcher$lambda$9$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(
  1437,
  $wnd.Function,
  $intern_48,
  idwcab2.RequestBatcher$lambda$9$Type
);
_.apply_3 = function apply_109(arg0) {
  idwcab2.$lambda$9_1(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableCreationResponse
    )
  );
};
idwcab2.TableConfig$0methodref$getExpression$Type =
  function TableConfig$0methodref$getExpression$Type() {};
defineClass(578, 1, {}, idwcab2.TableConfig$0methodref$getExpression$Type);
_.apply_1 = function apply_110(arg0) {
  return castTo(arg0, 148).expression_0;
};
cggl.Lio_deephaven_web_client_api_batch_TableConfig$0methodref$getExpression$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "TableConfig/0methodref$getExpression$Type",
    578
  );
idwcab2.TableConfig$1methodref$lambda$1$Type =
  function TableConfig$1methodref$lambda$1$Type() {};
defineClass(579, 1, {}, idwcab2.TableConfig$1methodref$lambda$1$Type);
_.apply_2 = function apply_111(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_batch_TableConfig$1methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "TableConfig/1methodref$lambda$1$Type",
    579
  );
idwcab2.TableConfig$2methodref$getExpression$Type =
  function TableConfig$2methodref$getExpression$Type() {};
defineClass(580, 1, {}, idwcab2.TableConfig$2methodref$getExpression$Type);
_.apply_1 = function apply_112(arg0) {
  return castTo(arg0, 148).expression_0;
};
cggl.Lio_deephaven_web_client_api_batch_TableConfig$2methodref$getExpression$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "TableConfig/2methodref$getExpression$Type",
    580
  );
idwcab2.TableConfig$3methodref$toString$Type =
  function TableConfig$3methodref$toString$Type() {};
defineClass(581, 1, {}, idwcab2.TableConfig$3methodref$toString$Type);
_.apply_1 = function apply_113(arg0) {
  return toString_7(castTo(arg0, 61).descriptor);
};
cggl.Lio_deephaven_web_client_api_batch_TableConfig$3methodref$toString$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "TableConfig/3methodref$toString$Type",
    581
  );
idwcab2.TableConfig$lambda$4$Type = function TableConfig$lambda$4$Type() {};
defineClass(582, 1, {}, idwcab2.TableConfig$lambda$4$Type);
_.apply_1 = function apply_114(arg0) {
  return idwcab2.lambda$4_5(castTo(arg0, 97));
};
cggl.Lio_deephaven_web_client_api_batch_TableConfig$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.batch",
    "TableConfig/lambda$4$Type",
    582
  );
idwcac.$getClass_262 = function $getClass_262() {
  return cggl.Lio_deephaven_web_client_api_console_JsCommandResult_2_classLit;
};
idwcac.JsCommandResult = function JsCommandResult(changes, error) {
  this.changes_0 = changes;
  this.error_0 = error;
};
defineClass(356, 1, {}, idwcac.JsCommandResult);
defineProperties(_, {
  changes: {
    get: function getChanges() {
      return this.changes_0;
    },
  },
});
defineProperties(_, {
  error: {
    get: function getError() {
      return this.error_0;
    },
  },
});
_.toString_0 = function toString_25() {
  var number;
  if (this.error_0 != null && ji.uncheckedCast(this.error_0).length != 0) {
    return this.error_0;
  }
  return (
    jl.$ensureNamesAreInitialized(
      cggl.Lio_deephaven_web_client_api_console_JsCommandResult_2_classLit
    ),
    cggl.Lio_deephaven_web_client_api_console_JsCommandResult_2_classLit
      .typeName +
      "@" +
      ((number = ji.uncheckedCast(
        jl.toUnsigned(jl.hashCode__I__devirtual$(this))
      )),
      number.toString(16))
  );
};
cggl.Lio_deephaven_web_client_api_console_JsCommandResult_2_classLit =
  createForClass("io.deephaven.web.client.api.console", "JsCommandResult", 356);
idwcac.$getCreated = function $getCreated(this$static) {
  return this$static.created_0;
};
idwcac.$getUpdated = function $getUpdated(this$static) {
  return this$static.updated_0;
};
idwcac.JsVariableChanges = function JsVariableChanges(
  created,
  updated,
  removed
) {
  this.created_0 = castTo($wnd.Object.freeze(created), 168);
  this.updated_0 = castTo($wnd.Object.freeze(updated), 168);
  this.removed_0 = castTo($wnd.Object.freeze(removed), 168);
};
idwcac.from_1 = function from_1(update) {
  var created, removed, updated;
  created = idwcac.toVariableDefinitions(update.getCreatedList());
  updated = idwcac.toVariableDefinitions(update.getUpdatedList());
  removed = idwcac.toVariableDefinitions(update.getRemovedList());
  return new idwcac.JsVariableChanges(created, updated, removed);
};
idwcac.toVariableDefinitions = function toVariableDefinitions(createdList) {
  var definitions, i;
  definitions = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_console_JsVariableDefinition_2_classLit,
    $intern_52,
    62,
    createdList.length,
    0,
    1
  );
  for (i = 0; i < createdList.length; i++) {
    definitions[i] = new idwcac.JsVariableDefinition(
      castToNative(
        jb.$getAt(createdList, i),
        $wnd.dhinternal.io.deephaven.proto.application_pb.FieldInfo
      )
    );
  }
  return definitions;
};
defineClass(186, 1, { 186: 1 }, idwcac.JsVariableChanges);
defineProperties(_, {
  created: {
    get: function getCreated() {
      return idwcac.$getCreated(this);
    },
  },
});
defineProperties(_, {
  removed: {
    get: function getRemoved() {
      return this.removed_0;
    },
  },
});
defineProperties(_, {
  updated: {
    get: function getUpdated() {
      return idwcac.$getUpdated(this);
    },
  },
});
cggl.Lio_deephaven_web_client_api_console_JsVariableChanges_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.console",
    "JsVariableChanges",
    186
  );
idwcac.$getId = function $getId(this$static) {
  return this$static.id_0;
};
idwcac.$getTitle = function $getTitle(this$static) {
  return this$static.title_0;
};
idwcac.$getType_1 = function $getType_1(this$static) {
  return this$static.type_0;
};
idwcac.JsVariableDefinition = function JsVariableDefinition(field) {
  this.type_0 = field.getTypedTicket().getType();
  this.id_0 = field.getTypedTicket().getTicket().getTicket_asB64();
  this.title_0 = field.getFieldName();
  this.description_0 = field.getFieldDescription();
  this.applicationId_0 = field.getApplicationId();
  this.applicationName_0 = field.getApplicationName();
};
idwcac.JsVariableDefinition_0 = function JsVariableDefinition_0(type_0, id_0) {
  if (!jl.$equals_12(ji.uncheckedCast(id_0).substr(0, 2), "cy")) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Cannot create a VariableDefinition from a non-scope ticket"
      )
    );
  }
  this.type_0 = type_0;
  this.title_0 = "js-constructed-not-available";
  this.id_0 = id_0;
  this.description_0 = "js-constructed-not-available";
  this.applicationId_0 = "scope";
  this.applicationName_0 = "";
};
defineClass(
  62,
  1,
  { 62: 1 },
  idwcac.JsVariableDefinition,
  idwcac.JsVariableDefinition_0
);
defineProperties(_, {
  applicationId: {
    get: function getApplicationId() {
      return this.applicationId_0;
    },
  },
});
defineProperties(_, {
  applicationName: {
    get: function getApplicationName() {
      return this.applicationName_0;
    },
  },
});
defineProperties(_, {
  description: {
    get: function getDescription_1() {
      return this.description_0;
    },
  },
});
defineProperties(_, {
  id: {
    get: function getId() {
      return idwcac.$getId(this);
    },
  },
});
defineProperties(_, {
  name: {
    get: function getName_1() {
      return this.title_0;
    },
  },
});
defineProperties(_, {
  title: {
    get: function getTitle() {
      return idwcac.$getTitle(this);
    },
  },
});
defineProperties(_, {
  type: {
    get: function getType_3() {
      return idwcac.$getType_1(this);
    },
  },
});
cggl.Lio_deephaven_web_client_api_console_JsVariableDefinition_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.console",
    "JsVariableDefinition",
    62
  );
idwcac.JsVariableDescriptor = function JsVariableDescriptor() {};
defineClass(914, 1, {}, idwcac.JsVariableDescriptor);
cggl.Lio_deephaven_web_client_api_console_JsVariableDescriptor_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.console",
    "JsVariableDescriptor",
    914
  );
idwcac.JsVariableType = function JsVariableType() {};
defineClass(915, 1, {}, idwcac.JsVariableType);
idwcac.FIGURE = "Figure";
idwcac.HIERARCHICALTABLE = "HierarchicalTable";
idwcac.OTHERWIDGET = "OtherWidget";
idwcac.PANDAS = "pandas.DataFrame";
idwcac.PARTITIONEDTABLE = "PartitionedTable";
idwcac.TABLE = "Table";
idwcac.TABLEMAP = "TableMap";
idwcac.TREEMAP = "Treemap";
idwcac.TREETABLE = "TreeTable";
cggl.Lio_deephaven_web_client_api_console_JsVariableType_2_classLit =
  createForClass("io.deephaven.web.client.api.console", "JsVariableType", 915);
idwcaf.$getClass_263 = function $getClass_263() {
  return cggl.Lio_deephaven_web_client_api_filter_FilterCondition_2_classLit;
};
idwcaf.$toString_10 = function $toString_10(this$static) {
  return toString_7(this$static.descriptor);
};
idwcaf.FilterCondition = function FilterCondition(descriptor) {
  this.descriptor = descriptor;
};
idwcaf.invoke_0 = function invoke_0(function_0) {
  var $i, args, c, invoke;
  args = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_filter_FilterValue_2_classLit,
    $intern_7,
    74,
    arguments.length - 1,
    0,
    1
  );
  for ($i = 0; $i < arguments.length - 1; $i++) {
    setCheck(args, $i, arguments[$i + 1]);
  }
  invoke = new $wnd.dhinternal.io.deephaven.proto.table_pb.InvokeCondition();
  invoke.setMethod(function_0);
  invoke.setArgumentsList(
    castToJsArray(
      jus.$toArray_6(
        jus.$map_0(
          new jus.StreamImpl(null, ju.spliterator_5(args, args.length)),
          new idwcaf.FilterCondition$lambda$0$Type()
        ),
        new idwcaf.FilterCondition$0methodref$lambda$1$Type()
      )
    )
  );
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setInvoke(invoke);
  return new idwcaf.FilterCondition(c);
};
idwcaf.search_0 = function search_0(value_0, columns) {
  var c, search;
  search = new $wnd.dhinternal.io.deephaven.proto.table_pb.SearchCondition();
  search.setSearchString(value_0.descriptor.getLiteral().getStringValue());
  columns != null &&
    search.setOptionalReferencesList(
      castToJsArray(
        jus.$toArray_6(
          jus.$map_0(
            new jus.StreamImpl(null, ju.spliterator_5(columns, columns.length)),
            new idwcaf.FilterCondition$lambda$2$Type()
          ),
          new idwcaf.FilterCondition$1methodref$lambda$3$Type()
        )
      )
    );
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setSearch(search);
  return new idwcaf.FilterCondition(c);
};
defineClass(61, 1, { 61: 1 }, idwcaf.FilterCondition);
_.and = function and_2() {
  var $i, and, c, filters;
  filters = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_filter_FilterCondition_2_classLit,
    $intern_56,
    61,
    arguments.length,
    0,
    1
  );
  for ($i = 0; $i < arguments.length; $i++) {
    setCheck(filters, $i, arguments[$i]);
  }
  and = new $wnd.dhinternal.io.deephaven.proto.table_pb.AndCondition();
  and.setFiltersList(
    castToJsArray(
      jus
        .concat(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(
              ju.singleton(this.descriptor),
              1
            )
          ),
          jus.$map_0(
            new jus.StreamImpl(null, ju.spliterator_5(filters, filters.length)),
            new idwcaf.FilterCondition$lambda$4$Type()
          )
        )
        .toArray_1(new idwcaf.FilterCondition$2methodref$lambda$5$Type())
    )
  );
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setAnd(and);
  return new idwcaf.FilterCondition(c);
};
_.equals_0 = function equals_8(o) {
  var i, mBinary, oBinary, that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_client_api_filter_FilterCondition_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 61);
  mBinary = this.descriptor.serializeBinary();
  oBinary = that.descriptor.serializeBinary();
  if (mBinary.length != oBinary.length) {
    return false;
  }
  for (i = 0; i < mBinary.length; ++i) {
    if (!ju.equals_68(jb.$getAt(mBinary, i), jb.$getAt(oBinary, i))) {
      return false;
    }
  }
  return true;
};
defineProperties(_, {
  columns: {
    get: function getColumns_2() {
      return new $wnd.Array();
    },
  },
});
_.hashCode_1 = function hashCode_9() {
  return jl.hashCode__I__devirtual$(this.descriptor);
};
_.not = function not_1() {
  var c, not;
  not = new $wnd.dhinternal.io.deephaven.proto.table_pb.NotCondition();
  not.setFilter(this.descriptor);
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setNot(not);
  return new idwcaf.FilterCondition(c);
};
_.or = function or_2() {
  var $i, c, filters, or;
  filters = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_filter_FilterCondition_2_classLit,
    $intern_56,
    61,
    arguments.length,
    0,
    1
  );
  for ($i = 0; $i < arguments.length; $i++) {
    setCheck(filters, $i, arguments[$i]);
  }
  or = new $wnd.dhinternal.io.deephaven.proto.table_pb.OrCondition();
  or.setFiltersList(
    castToJsArray(
      jus
        .concat(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(
              ju.singleton(this.descriptor),
              1
            )
          ),
          jus.$map_0(
            new jus.StreamImpl(null, ju.spliterator_5(filters, filters.length)),
            new idwcaf.FilterCondition$lambda$6$Type()
          )
        )
        .toArray_1(new idwcaf.FilterCondition$3methodref$lambda$5$Type())
    )
  );
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setOr(or);
  return new idwcaf.FilterCondition(c);
};
_.toString = function toString_26() {
  return idwcaf.$toString_10(this);
};
_.toString_0 = function () {
  return this.toString();
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition_2_classLit =
  createForClass("io.deephaven.web.client.api.filter", "FilterCondition", 61);
idwcaf.FilterCondition$0methodref$lambda$1$Type =
  function FilterCondition$0methodref$lambda$1$Type() {};
defineClass(398, 1, {}, idwcaf.FilterCondition$0methodref$lambda$1$Type);
_.apply_2 = function apply_115(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition$0methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterCondition/0methodref$lambda$1$Type",
    398
  );
idwcaf.FilterCondition$1methodref$lambda$3$Type =
  function FilterCondition$1methodref$lambda$3$Type() {};
defineClass(400, 1, {}, idwcaf.FilterCondition$1methodref$lambda$3$Type);
_.apply_2 = function apply_116(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition$1methodref$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterCondition/1methodref$lambda$3$Type",
    400
  );
idwcaf.FilterCondition$2methodref$lambda$5$Type =
  function FilterCondition$2methodref$lambda$5$Type() {};
defineClass(402, 1, {}, idwcaf.FilterCondition$2methodref$lambda$5$Type);
_.apply_2 = function apply_117(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition$2methodref$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterCondition/2methodref$lambda$5$Type",
    402
  );
idwcaf.FilterCondition$3methodref$lambda$5$Type =
  function FilterCondition$3methodref$lambda$5$Type() {};
defineClass(404, 1, {}, idwcaf.FilterCondition$3methodref$lambda$5$Type);
_.apply_2 = function apply_118(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition$3methodref$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterCondition/3methodref$lambda$5$Type",
    404
  );
idwcaf.FilterCondition$lambda$0$Type =
  function FilterCondition$lambda$0$Type() {};
defineClass(397, 1, {}, idwcaf.FilterCondition$lambda$0$Type);
_.apply_1 = function apply_119(arg0) {
  return castTo(arg0, 74).descriptor;
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterCondition/lambda$0$Type",
    397
  );
idwcaf.FilterCondition$lambda$2$Type =
  function FilterCondition$lambda$2$Type() {};
defineClass(399, 1, {}, idwcaf.FilterCondition$lambda$2$Type);
_.apply_1 = function apply_120(arg0) {
  return castTo(arg0, 74).descriptor.getReference();
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterCondition/lambda$2$Type",
    399
  );
idwcaf.FilterCondition$lambda$4$Type =
  function FilterCondition$lambda$4$Type() {};
defineClass(401, 1, {}, idwcaf.FilterCondition$lambda$4$Type);
_.apply_1 = function apply_121(arg0) {
  return castTo(arg0, 61).descriptor;
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterCondition/lambda$4$Type",
    401
  );
idwcaf.FilterCondition$lambda$6$Type =
  function FilterCondition$lambda$6$Type() {};
defineClass(403, 1, {}, idwcaf.FilterCondition$lambda$6$Type);
_.apply_1 = function apply_122(arg0) {
  return castTo(arg0, 61).descriptor;
};
cggl.Lio_deephaven_web_client_api_filter_FilterCondition$lambda$6$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterCondition/lambda$6$Type",
    403
  );
idwcaf.$eq = function $eq(this$static, term) {
  return idwcaf.$makeCompare(
    this$static,
    term,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition
      .CompareOperation.EQUALS
  );
};
idwcaf.$inIgnoreCase = function $inIgnoreCase(this$static, terms) {
  return idwcaf.$makeIn(
    this$static,
    terms,
    $wnd.dhinternal.io.deephaven.proto.table_pb.MatchType.REGULAR,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.IGNORE_CASE
  );
};
idwcaf.$makeCompare = function $makeCompare(this$static, term, operation) {
  var c, compare;
  compare = new $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition();
  compare.setLhs(this$static.descriptor);
  compare.setRhs(term.descriptor);
  compare.setOperation(operation);
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setCompare(compare);
  return new idwcaf.FilterCondition(c);
};
idwcaf.$makeContains = function $makeContains(
  this$static,
  term,
  casesensitivity
) {
  var c, contains;
  contains =
    new $wnd.dhinternal.io.deephaven.proto.table_pb.ContainsCondition();
  contains.setReference(this$static.descriptor.getReference());
  contains.setSearchString(term.descriptor.getLiteral().getStringValue());
  contains.setCaseSensitivity(casesensitivity);
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setContains(contains);
  return new idwcaf.FilterCondition(c);
};
idwcaf.$makeIn = function $makeIn(
  this$static,
  terms,
  matchType,
  casesensitivity
) {
  var c, value_0;
  value_0 = new $wnd.dhinternal.io.deephaven.proto.table_pb.InCondition();
  value_0.setTarget(this$static.descriptor);
  value_0.setMatchType(matchType);
  value_0.setCaseSensitivity(casesensitivity);
  value_0.setCandidatesList(
    castToJsArray(
      jus.$toArray_6(
        jus.$map_0(
          new jus.StreamImpl(null, ju.spliterator_5(terms, terms.length)),
          new idwcaf.FilterValue$lambda$0$Type()
        ),
        new idwcaf.FilterValue$0methodref$lambda$1$Type()
      )
    )
  );
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setIn(value_0);
  return new idwcaf.FilterCondition(c);
};
idwcaf.$makeMatches = function $makeMatches(
  this$static,
  term,
  casesensitivity
) {
  var c, contains;
  contains = new $wnd.dhinternal.io.deephaven.proto.table_pb.MatchesCondition();
  contains.setReference(this$static.descriptor.getReference());
  contains.setRegex(term.descriptor.getLiteral().getStringValue());
  contains.setCaseSensitivity(casesensitivity);
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setMatches(contains);
  return new idwcaf.FilterCondition(c);
};
idwcaf.$notInIgnoreCase = function $notInIgnoreCase(this$static, terms) {
  return idwcaf.$makeIn(
    this$static,
    terms,
    $wnd.dhinternal.io.deephaven.proto.table_pb.MatchType.INVERTED,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.IGNORE_CASE
  );
};
idwcaf.FilterValue = function FilterValue(literal) {
  this.descriptor = new $wnd.dhinternal.io.deephaven.proto.table_pb.Value();
  this.descriptor.setLiteral(literal);
};
idwcaf.FilterValue_0 = function FilterValue_0(column) {
  var ref;
  ref = new $wnd.dhinternal.io.deephaven.proto.table_pb.Reference();
  ref.setColumnName(column.name_0);
  this.descriptor = new $wnd.dhinternal.io.deephaven.proto.table_pb.Value();
  this.descriptor.setReference(ref);
};
idwcaf.ofBoolean = function ofBoolean(b) {
  var lit;
  ju.requireNonNull(b);
  lit = new $wnd.dhinternal.io.deephaven.proto.table_pb.Literal();
  lit.setBoolValue(ji.unsafeCastToBoolean((ji.checkCriticalNotNull(b), b)));
  return new idwcaf.FilterValue(lit);
};
idwcaf.ofNumber = function ofNumber(input_0) {
  var lit, value_0;
  ju.requireNonNull(input_0);
  if (instanceOf(input_0, 39)) {
    value_0 = castTo(input_0, 39);
    if (instanceOf(value_0, 91)) {
      lit = new $wnd.dhinternal.io.deephaven.proto.table_pb.Literal();
      lit.setNanoTimeValue("" + toString_6(castTo(input_0, 91).value_0));
      return new idwcaf.FilterValue(lit);
    } else {
      lit = new $wnd.dhinternal.io.deephaven.proto.table_pb.Literal();
      lit.setLongValue("" + toString_6(castTo(input_0, 39).value_0));
      return new idwcaf.FilterValue(lit);
    }
  } else if (instanceOfDouble(input_0)) {
    lit = new $wnd.dhinternal.io.deephaven.proto.table_pb.Literal();
    lit.setDoubleValue(
      (jb.checkCriticalType_0(typeof input_0 == "number"), jb.asDouble(input_0))
    );
    return new idwcaf.FilterValue(lit);
  } else {
    lit = new $wnd.dhinternal.io.deephaven.proto.table_pb.Literal();
    lit.setDoubleValue(jl.__parseAndValidateDouble(toString_7(input_0)));
    return new idwcaf.FilterValue(lit);
  }
};
idwcaf.ofString_2 = function ofString_2(input_0) {
  var lit, string;
  ju.requireNonNull(input_0);
  jl.$equals_12(typeof input_0, "string")
    ? (string = castToString(input_0))
    : (string = toString_7(input_0));
  lit = new $wnd.dhinternal.io.deephaven.proto.table_pb.Literal();
  lit.setStringValue(string);
  return new idwcaf.FilterValue(lit);
};
defineClass(74, 1, { 74: 1 }, idwcaf.FilterValue, idwcaf.FilterValue_0);
_.contains = function contains_0(term) {
  return idwcaf.$makeContains(
    this,
    term,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.MATCH_CASE
  );
};
_.containsIgnoreCase = function containsIgnoreCase(term) {
  return idwcaf.$makeContains(
    this,
    term,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.IGNORE_CASE
  );
};
_.eq = function eq_0(term) {
  return idwcaf.$eq(this, term);
};
_.eqIgnoreCase = function eqIgnoreCase(term) {
  return idwcaf.$makeIn(
    this,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_filter_FilterValue_2_classLit,
        1
      ),
      $intern_7,
      74,
      0,
      [term]
    ),
    $wnd.dhinternal.io.deephaven.proto.table_pb.MatchType.REGULAR,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.IGNORE_CASE
  );
};
_.greaterThan = function greaterThan(term) {
  return idwcaf.$makeCompare(
    this,
    term,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition
      .CompareOperation.GREATER_THAN
  );
};
_.greaterThanOrEqualTo = function greaterThanOrEqualTo(term) {
  return idwcaf.$makeCompare(
    this,
    term,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition
      .CompareOperation.GREATER_THAN_OR_EQUAL
  );
};
_.in = function in_1(terms) {
  return idwcaf.$makeIn(
    this,
    terms,
    $wnd.dhinternal.io.deephaven.proto.table_pb.MatchType.REGULAR,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.MATCH_CASE
  );
};
_.inIgnoreCase = function inIgnoreCase(terms) {
  return idwcaf.$inIgnoreCase(this, terms);
};
_.invoke = function invoke_1(method) {
  var $i, args, c, invoke;
  args = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_filter_FilterValue_2_classLit,
    $intern_7,
    74,
    arguments.length - 1,
    0,
    1
  );
  for ($i = 0; $i < arguments.length - 1; $i++) {
    setCheck(args, $i, arguments[$i + 1]);
  }
  invoke = new $wnd.dhinternal.io.deephaven.proto.table_pb.InvokeCondition();
  invoke.setMethod(method);
  invoke.setTarget(this.descriptor);
  invoke.setArgumentsList(
    castToJsArray(
      jus.$toArray_6(
        jus.$map_0(
          new jus.StreamImpl(null, ju.spliterator_5(args, args.length)),
          new idwcaf.FilterValue$lambda$2$Type()
        ),
        new idwcaf.FilterValue$1methodref$lambda$1$Type()
      )
    )
  );
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setInvoke(invoke);
  return new idwcaf.FilterCondition(c);
};
_.isFalse = function isFalse() {
  return idwcaf.$makeCompare(
    this,
    idwcaf.ofBoolean((jl.$clinit_Boolean(), ji.uncheckedCast(false))),
    $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition
      .CompareOperation.EQUALS
  );
};
_.isNull = function isNull_0() {
  var c, isNull;
  isNull = new $wnd.dhinternal.io.deephaven.proto.table_pb.IsNullCondition();
  isNull.setReference(this.descriptor.getReference());
  c = new $wnd.dhinternal.io.deephaven.proto.table_pb.Condition();
  c.setIsNull(isNull);
  return new idwcaf.FilterCondition(c);
};
_.isTrue = function isTrue() {
  return idwcaf.$makeCompare(
    this,
    idwcaf.ofBoolean((jl.$clinit_Boolean(), ji.uncheckedCast(true))),
    $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition
      .CompareOperation.EQUALS
  );
};
_.lessThan = function lessThan(term) {
  return idwcaf.$makeCompare(
    this,
    term,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition
      .CompareOperation.LESS_THAN
  );
};
_.lessThanOrEqualTo = function lessThanOrEqualTo(term) {
  return idwcaf.$makeCompare(
    this,
    term,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition
      .CompareOperation.LESS_THAN_OR_EQUAL
  );
};
_.matches = function matches(pattern) {
  return idwcaf.$makeMatches(
    this,
    pattern,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.MATCH_CASE
  );
};
_.matchesIgnoreCase = function matchesIgnoreCase(pattern) {
  return idwcaf.$makeMatches(
    this,
    pattern,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.IGNORE_CASE
  );
};
_.notEq = function notEq(term) {
  return idwcaf.$makeCompare(
    this,
    term,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CompareCondition
      .CompareOperation.NOT_EQUALS
  );
};
_.notEqIgnoreCase = function notEqIgnoreCase(term) {
  return idwcaf.$makeIn(
    this,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_filter_FilterValue_2_classLit,
        1
      ),
      $intern_7,
      74,
      0,
      [term]
    ),
    $wnd.dhinternal.io.deephaven.proto.table_pb.MatchType.INVERTED,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.IGNORE_CASE
  );
};
_.notIn = function notIn(terms) {
  return idwcaf.$makeIn(
    this,
    terms,
    $wnd.dhinternal.io.deephaven.proto.table_pb.MatchType.INVERTED,
    $wnd.dhinternal.io.deephaven.proto.table_pb.CaseSensitivity.MATCH_CASE
  );
};
_.notInIgnoreCase = function notInIgnoreCase(terms) {
  return idwcaf.$notInIgnoreCase(this, terms);
};
_.toString = function toString_27() {
  return toString_7(this.descriptor);
};
_.toString_0 = function () {
  return this.toString();
};
cggl.Lio_deephaven_web_client_api_filter_FilterValue_2_classLit =
  createForClass("io.deephaven.web.client.api.filter", "FilterValue", 74);
idwcaf.FilterValue$0methodref$lambda$1$Type =
  function FilterValue$0methodref$lambda$1$Type() {};
defineClass(394, 1, {}, idwcaf.FilterValue$0methodref$lambda$1$Type);
_.apply_2 = function apply_123(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_filter_FilterValue$0methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterValue/0methodref$lambda$1$Type",
    394
  );
idwcaf.FilterValue$1methodref$lambda$1$Type =
  function FilterValue$1methodref$lambda$1$Type() {};
defineClass(396, 1, {}, idwcaf.FilterValue$1methodref$lambda$1$Type);
_.apply_2 = function apply_124(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_filter_FilterValue$1methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterValue/1methodref$lambda$1$Type",
    396
  );
idwcaf.FilterValue$lambda$0$Type = function FilterValue$lambda$0$Type() {};
defineClass(393, 1, {}, idwcaf.FilterValue$lambda$0$Type);
_.apply_1 = function apply_125(arg0) {
  return castTo(arg0, 74).descriptor;
};
cggl.Lio_deephaven_web_client_api_filter_FilterValue$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterValue/lambda$0$Type",
    393
  );
idwcaf.FilterValue$lambda$2$Type = function FilterValue$lambda$2$Type() {};
defineClass(395, 1, {}, idwcaf.FilterValue$lambda$2$Type);
_.apply_1 = function apply_126(arg0) {
  return castTo(arg0, 74).descriptor;
};
cggl.Lio_deephaven_web_client_api_filter_FilterValue$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.filter",
    "FilterValue/lambda$2$Type",
    395
  );
idwcag.$$init_26 = function $$init_26(this$static) {
  this$static.streamId = idwcag.nextStreamId++;
  this$static.sendQueue = new ju.ArrayList();
  this$static.cleanup = (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0);
};
idwcag.$addWebsocketEventListener = function $addWebsocketEventListener(
  this$static,
  eventName,
  listener
) {
  this$static.transport_0.webSocket.addEventListener(eventName, listener);
  this$static.cleanup = idwsf.$andThen_0(
    this$static.cleanup,
    makeLambdaFunction(
      idwcag.MultiplexedWebsocketTransport$lambda$5$Type.prototype.run,
      idwcag.MultiplexedWebsocketTransport$lambda$5$Type,
      [this$static, eventName, listener]
    )
  );
};
idwcag.$lambda$5_3 = function $lambda$5_3(
  this$static,
  eventName_1,
  listener_2
) {
  this$static.transport_0.webSocket.removeEventListener(
    eventName_1,
    listener_2
  );
};
idwcag.$onClose = function $onClose(this$static, event_0) {
  if (instanceOf(this$static.alternativeTransport.supplier, 82)) {
    return;
  }
  this$static.options_0.onEnd.call(
    null,
    new $wnd.Error("Unexpectedly closed " + event_0.reason)
  );
  idwcag.$removeHandlers(this$static);
};
idwcag.$onMessage = function $onMessage(this$static, event_0) {
  var closed_0, messageEvent, streamId;
  messageEvent = event_0;
  streamId = new $wnd.DataView(
    castToNative(messageEvent.data, $wnd.ArrayBuffer),
    0,
    4
  ).getInt32(0);
  if (streamId < 0) {
    streamId = streamId ^ $intern_22;
    closed_0 = true;
  } else {
    closed_0 = false;
  }
  if (streamId == this$static.streamId) {
    this$static.options_0.onChunk.call(
      null,
      new $wnd.Uint8Array(castToNative(messageEvent.data, $wnd.ArrayBuffer), 4),
      false
    );
    if (closed_0) {
      this$static.options_0.onEnd.call(null, null);
      idwcag.$removeHandlers(this$static);
    }
  }
};
idwcag.$onOpen_0 = function $onOpen_0(this$static) {
  var i, i0, protocol, transport;
  protocol = jb.$get_23(this$static.transport_0.webSocket, "protocol");
  if (jl.equals_Ljava_lang_Object__Z__devirtual$(protocol, "grpc-websockets")) {
    transport = this$static.alternativeTransport.supplier.valueOf_0();
    this$static.transport_0.webSocket.close();
    for (i0 = 0; i0 < this$static.sendQueue.array.length; i0++) {
      castTo(ju.$get_18(this$static.sendQueue, i0), 329).sendFallback(
        transport
      );
    }
    this$static.sendQueue.array = initUnidimensionalArray(
      cggl.Ljava_lang_Object_2_classLit,
      $intern_7,
      1,
      0,
      5,
      1
    );
    return;
  } else if (
    !jl.equals_Ljava_lang_Object__Z__devirtual$(
      protocol,
      "grpc-websockets-multiplex"
    )
  ) {
    return;
  }
  for (i = 0; i < this$static.sendQueue.array.length; i++) {
    castTo(ju.$get_18(this$static.sendQueue, i), 329).send_1(
      this$static.transport_0.webSocket,
      this$static.streamId
    );
  }
  this$static.sendQueue.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
};
idwcag.$removeHandlers = function $removeHandlers(this$static) {
  this$static.cleanup.call(null);
  this$static.cleanup = (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0);
  if (this$static.transport_0) {
    idwcag.$release(this$static.transport_0);
    this$static.transport_0 = null;
  }
};
idwcag.$sendOrEnqueue = function $sendOrEnqueue(this$static, e) {
  this$static.transport_0.webSocket.readyState ==
  (ed.$clinit_WebSocket(), ed.CONNECTING)
    ? ju.$add(this$static.sendQueue, e)
    : e.send_1(this$static.transport_0.webSocket, this$static.streamId);
};
idwcag.MultiplexedWebsocketTransport = function MultiplexedWebsocketTransport(
  options
) {
  var url_0, urlWrapper;
  idwcag.$$init_26(this);
  this.options_0 = options;
  url_0 = options.url;
  urlWrapper = new $wnd.URL(url_0);
  this.path_0 = jl.$substring(urlWrapper.pathname, 1);
  this.transport_0 = idwcag.get_6(url_0);
  this.alternativeTransport = new idwca.JsLazy(
    new idwcag.MultiplexedWebsocketTransport$lambda$0$Type(options)
  );
};
idwcag.encodeASCII = function encodeASCII(str) {
  var charCode, encoded, i;
  encoded = new $wnd.Uint8Array(ji.uncheckedCast(str).length);
  for (i = 0; i < ji.uncheckedCast(str).length; i++) {
    charCode =
      (ji.checkCriticalStringElementIndex(i, ji.uncheckedCast(str).length),
      ji.uncheckedCast(str).charCodeAt(i));
    jb.$setAt(encoded, i, charCode);
  }
  return encoded;
};
idwcag.lambda$0_4 = function lambda$0_4(options_1) {
  idwcab.$clinit_WebGrpcUtils();
  $wnd.dhinternal.grpcWeb.grpc.setDefaultTransport.call(
    null,
    $wnd.dhinternal.grpcWeb.grpc.WebsocketTransport.call(null)
  );
  return $wnd.dhinternal.grpcWeb.grpc.WebsocketTransport.call(null)(options_1);
};
defineClass(837, 1, {}, idwcag.MultiplexedWebsocketTransport);
_.cancel = function cancel_5() {
  if (instanceOf(this.alternativeTransport.supplier, 82)) {
    this.alternativeTransport.supplier.valueOf_0().cancel();
    return;
  }
  idwcag.$removeHandlers(this);
};
_.finishSend = function finishSend() {
  if (instanceOf(this.alternativeTransport.supplier, 82)) {
    this.alternativeTransport.supplier.valueOf_0().finishSend();
    return;
  }
  idwcag.$sendOrEnqueue(
    this,
    new idwcag.MultiplexedWebsocketTransport$WebsocketFinishSignal()
  );
};
_.sendMessage = function sendMessage(msgBytes) {
  if (instanceOf(this.alternativeTransport.supplier, 82)) {
    this.alternativeTransport.supplier.valueOf_0().sendMessage(msgBytes);
    return;
  }
  idwcag.$sendOrEnqueue(
    this,
    new idwcag.MultiplexedWebsocketTransport$GrpcMessageFrame(msgBytes)
  );
};
_.start = function start_1(metadata) {
  if (instanceOf(this.alternativeTransport.supplier, 82)) {
    this.alternativeTransport.supplier.valueOf_0().start(metadata);
    return;
  }
  ++this.transport_0.activeCount;
  this.transport_0.webSocket.readyState ==
    (ed.$clinit_WebSocket(), ed.CONNECTING) &&
    idwcag.$addWebsocketEventListener(
      this,
      "open",
      new idwcag.MultiplexedWebsocketTransport$0methodref$onOpen$Type(this)
    );
  idwcag.$sendOrEnqueue(
    this,
    new idwcag.MultiplexedWebsocketTransport$HeaderFrame(this.path_0, metadata)
  );
  idwcag.$addWebsocketEventListener(
    this,
    "close",
    new idwcag.MultiplexedWebsocketTransport$1methodref$onClose$Type(this)
  );
  idwcag.$addWebsocketEventListener(
    this,
    "error",
    new idwcag.MultiplexedWebsocketTransport$2methodref$onError$Type()
  );
  idwcag.$addWebsocketEventListener(
    this,
    "message",
    new idwcag.MultiplexedWebsocketTransport$3methodref$onMessage$Type(this)
  );
};
_.streamId = 0;
idwcag.nextStreamId = 0;
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport",
    837
  );
idwcag.MultiplexedWebsocketTransport$0methodref$onOpen$Type =
  function MultiplexedWebsocketTransport$0methodref$onOpen$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  844,
  1,
  {},
  idwcag.MultiplexedWebsocketTransport$0methodref$onOpen$Type
);
_.handleEvent = function handleEvent(arg0) {
  idwcag.$onOpen_0(this.$$outer_0);
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$0methodref$onOpen$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/0methodref$onOpen$Type",
    844
  );
idwcag.MultiplexedWebsocketTransport$1methodref$onClose$Type =
  function MultiplexedWebsocketTransport$1methodref$onClose$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  845,
  1,
  {},
  idwcag.MultiplexedWebsocketTransport$1methodref$onClose$Type
);
_.handleEvent = function handleEvent_0(arg0) {
  idwcag.$onClose(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$1methodref$onClose$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/1methodref$onClose$Type",
    845
  );
idwcag.MultiplexedWebsocketTransport$2methodref$onError$Type =
  function MultiplexedWebsocketTransport$2methodref$onError$Type() {};
defineClass(
  846,
  1,
  {},
  idwcag.MultiplexedWebsocketTransport$2methodref$onError$Type
);
_.handleEvent = function handleEvent_1(arg0) {};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$2methodref$onError$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/2methodref$onError$Type",
    846
  );
idwcag.MultiplexedWebsocketTransport$3methodref$onMessage$Type =
  function MultiplexedWebsocketTransport$3methodref$onMessage$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  847,
  1,
  {},
  idwcag.MultiplexedWebsocketTransport$3methodref$onMessage$Type
);
_.handleEvent = function handleEvent_2(arg0) {
  idwcag.$onMessage(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$3methodref$onMessage$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/3methodref$onMessage$Type",
    847
  );
idwcag.$clinit_MultiplexedWebsocketTransport$ActiveTransport =
  function $clinit_MultiplexedWebsocketTransport$ActiveTransport() {
    idwcag.$clinit_MultiplexedWebsocketTransport$ActiveTransport = emptyMethod;
    idwcag.activeSockets = new ju.HashMap();
  };
idwcag.$$init_27 = function $$init_27(this$static) {};
idwcag.$lambda$1_3 = function $lambda$1_3(this$static, key_1, event_1) {
  var messageEvent, streamId;
  messageEvent = event_1;
  streamId = new $wnd.DataView(
    castToNative(messageEvent.data, $wnd.ArrayBuffer),
    0,
    4
  ).getInt32(0);
  if (streamId == $intern_1) {
    idwcag.$send(this$static.webSocket, $intern_1);
    ju.$removeStringValue(idwcag.activeSockets, key_1);
    this$static.closing = true;
    this$static.activeCount == 0 && this$static.webSocket.close();
  }
};
idwcag.$release = function $release(this$static) {
  --this$static.activeCount;
  this$static.activeCount == 0 &&
    this$static.closing &&
    this$static.webSocket.close();
};
idwcag.MultiplexedWebsocketTransport$ActiveTransport =
  function MultiplexedWebsocketTransport$ActiveTransport(key, actualUrl) {
    idwcag.$clinit_MultiplexedWebsocketTransport$ActiveTransport();
    idwcag.$$init_27(this);
    this.webSocket = new $wnd.WebSocket(
      actualUrl,
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
        $intern_8,
        2,
        6,
        ["grpc-websockets-multiplex", "grpc-websockets"]
      )
    );
    this.webSocket.binaryType = "arraybuffer";
    this.webSocket.addEventListener(
      "message",
      new idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$1$Type(
        this,
        key
      )
    );
    this.webSocket.addEventListener(
      "close",
      new idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$2$Type(
        key
      )
    );
  };
idwcag.get_6 = function get_6(grpcUrl) {
  idwcag.$clinit_MultiplexedWebsocketTransport$ActiveTransport();
  var actualUrl, key, urlWrapper;
  urlWrapper = new $wnd.URL(grpcUrl);
  jl.$equals_12(urlWrapper.protocol, "http:")
    ? (urlWrapper.protocol = "ws:")
    : (urlWrapper.protocol = "wss:");
  actualUrl = toString_7(urlWrapper);
  urlWrapper.pathname = "/";
  key = toString_7(urlWrapper);
  return castTo(
    ju.$computeIfAbsent_0(
      idwcag.activeSockets,
      key,
      new idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$0$Type(
        key,
        actualUrl
      )
    ),
    321
  );
};
idwcag.lambda$2_5 = function lambda$2_5(key_0) {
  idwcag.$clinit_MultiplexedWebsocketTransport$ActiveTransport();
  ju.$removeStringValue(idwcag.activeSockets, key_0);
};
defineClass(
  321,
  1,
  { 321: 1 },
  idwcag.MultiplexedWebsocketTransport$ActiveTransport
);
_.activeCount = 0;
_.closing = false;
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$ActiveTransport_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/ActiveTransport",
    321
  );
idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$0$Type =
  function MultiplexedWebsocketTransport$ActiveTransport$lambda$0$Type(
    key_0,
    actualUrl_1
  ) {
    this.key_0 = key_0;
    this.actualUrl_1 = actualUrl_1;
  };
defineClass(
  840,
  1,
  {},
  idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$0$Type
);
_.apply_1 = function apply_127(arg0) {
  var lastArg;
  return (
    idwcag.$clinit_MultiplexedWebsocketTransport$ActiveTransport(),
    new idwcag.MultiplexedWebsocketTransport$ActiveTransport(
      this.key_0,
      ((lastArg = this.actualUrl_1), castToString(arg0), lastArg)
    )
  );
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$ActiveTransport$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/ActiveTransport/lambda$0$Type",
    840
  );
idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$1$Type =
  function MultiplexedWebsocketTransport$ActiveTransport$lambda$1$Type(
    $$outer_0,
    key_1
  ) {
    this.$$outer_0 = $$outer_0;
    this.key_1 = key_1;
  };
defineClass(
  841,
  1,
  {},
  idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$1$Type
);
_.handleEvent = function handleEvent_3(arg0) {
  idwcag.$lambda$1_3(this.$$outer_0, this.key_1, arg0);
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$ActiveTransport$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/ActiveTransport/lambda$1$Type",
    841
  );
idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$2$Type =
  function MultiplexedWebsocketTransport$ActiveTransport$lambda$2$Type(key_0) {
    this.key_0 = key_0;
  };
defineClass(
  842,
  1,
  {},
  idwcag.MultiplexedWebsocketTransport$ActiveTransport$lambda$2$Type
);
_.handleEvent = function handleEvent_4(arg0) {
  idwcag.lambda$2_5(this.key_0);
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$ActiveTransport$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/ActiveTransport/lambda$2$Type",
    842
  );
idwcag.MultiplexedWebsocketTransport$GrpcMessageFrame =
  function MultiplexedWebsocketTransport$GrpcMessageFrame(msgBytes) {
    this.msgBytes = msgBytes;
  };
defineClass(
  839,
  1,
  { 329: 1 },
  idwcag.MultiplexedWebsocketTransport$GrpcMessageFrame
);
_.send_1 = function send_2(webSocket, streamId) {
  var payload;
  payload = new $wnd.Int8Array(this.msgBytes.byteLength + 5);
  new $wnd.DataView(payload.buffer).setInt32(0, streamId);
  jb.$setAt(payload, 4, 0);
  payload.set(this.msgBytes, 5);
  webSocket.send(payload);
};
_.sendFallback = function sendFallback(transport) {
  transport.sendMessage(this.msgBytes);
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$GrpcMessageFrame_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/GrpcMessageFrame",
    839
  );
idwcag.MultiplexedWebsocketTransport$HeaderFrame =
  function MultiplexedWebsocketTransport$HeaderFrame(path, metadata) {
    this.path_0 = path;
    this.metadata_0 = metadata;
  };
idwcag.lambda$0_5 = function lambda$0_5(str_0, key_1, value_2) {
  jl.$append_9(
    jl.$append_9(
      jl.$append_9(((str_0.string += "" + key_1), str_0), ": "),
      value_2.join(", ")
    ),
    "\r\n"
  );
};
defineClass(
  838,
  1,
  { 329: 1 },
  idwcag.MultiplexedWebsocketTransport$HeaderFrame
);
_.send_1 = function send_3(webSocket, streamId) {
  var headerBytes, payload, str;
  str = new jl.StringBuilder();
  this.metadata_0.append("grpc-websockets-path", this.path_0);
  this.metadata_0.forEach(
    makeLambdaFunction(
      idwcag.MultiplexedWebsocketTransport$HeaderFrame$lambda$0$Type.prototype
        .onInvoke_10,
      idwcag.MultiplexedWebsocketTransport$HeaderFrame$lambda$0$Type,
      [str]
    )
  );
  headerBytes = idwcag.encodeASCII(str.string);
  payload = new $wnd.Int8Array(headerBytes.byteLength + 4);
  new $wnd.DataView(payload.buffer).setInt32(0, streamId);
  payload.set(headerBytes, 4);
  webSocket.send(payload);
};
_.sendFallback = function sendFallback_0(transport) {
  transport.start(this.metadata_0);
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$HeaderFrame_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/HeaderFrame",
    838
  );
idwcag.$getClass_264 = function $getClass_264() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcag.MultiplexedWebsocketTransport$HeaderFrame$lambda$0$Type =
  function MultiplexedWebsocketTransport$HeaderFrame$lambda$0$Type(str_0) {
    this.str_0 = str_0;
  };
defineClass(
  1574,
  $wnd.Function,
  {},
  idwcag.MultiplexedWebsocketTransport$HeaderFrame$lambda$0$Type
);
_.onInvoke_10 = function onInvoke_153(arg0, arg1) {
  idwcag.lambda$0_5(this.str_0, arg0, arg1);
};
idwcag.$send = function $send(webSocket, streamId) {
  var data_0;
  data_0 = new $wnd.Uint8Array(
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.D_classLit, 1),
      $intern_31,
      18,
      15,
      [0, 0, 0, 0, 1]
    )
  );
  streamId = streamId ^ $intern_22;
  new $wnd.DataView(data_0.buffer).setInt32(0, streamId);
  webSocket.send(data_0);
};
idwcag.MultiplexedWebsocketTransport$WebsocketFinishSignal =
  function MultiplexedWebsocketTransport$WebsocketFinishSignal() {};
defineClass(
  366,
  1,
  { 329: 1 },
  idwcag.MultiplexedWebsocketTransport$WebsocketFinishSignal
);
_.send_1 = function send_4(webSocket, streamId) {
  idwcag.$send(webSocket, streamId);
};
_.sendFallback = function sendFallback_1(transport) {
  transport.finishSend();
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$WebsocketFinishSignal_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/WebsocketFinishSignal",
    366
  );
idwcag.MultiplexedWebsocketTransport$lambda$0$Type =
  function MultiplexedWebsocketTransport$lambda$0$Type(options_1) {
    this.options_1 = options_1;
  };
defineClass(843, 1, {}, idwcag.MultiplexedWebsocketTransport$lambda$0$Type);
_.valueOf_0 = function valueOf_23() {
  return idwcag.lambda$0_4(this.options_1);
};
cggl.Lio_deephaven_web_client_api_grpc_MultiplexedWebsocketTransport$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.grpc",
    "MultiplexedWebsocketTransport/lambda$0$Type",
    843
  );
idwcag.$getClass_265 = function $getClass_265() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcag.MultiplexedWebsocketTransport$lambda$5$Type =
  function MultiplexedWebsocketTransport$lambda$5$Type(
    $$outer_0,
    eventName_1,
    listener_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.eventName_1 = eventName_1;
    this.listener_2 = listener_2;
  };
defineClass(
  1573,
  $wnd.Function,
  $intern_49,
  idwcag.MultiplexedWebsocketTransport$lambda$5$Type
);
_.run = function run_25() {
  idwcag.$lambda$5_3(this.$$outer_0, this.eventName_1, this.listener_2);
};
idwcai.$clinit_JsDateTimeFormat = function $clinit_JsDateTimeFormat() {
  idwcai.$clinit_JsDateTimeFormat = emptyMethod;
  idwcai.cache_0 = new ju.HashMap();
};
idwcai.$format_4 = function $format_4(this$static, date, timeZone) {
  var nanos;
  nanos = ju.$orElseThrow_0(
    idwcai.longFromDate(date),
    new idwcai.JsDateTimeFormat$lambda$1$Type(date)
  );
  return idwcai.$formatAsLongNanos(this$static, nanos, timeZone);
};
idwcai.$format_5 = function $format_5(this$static, date, timeZone) {
  var nanos;
  return (
    (nanos = ju.$orElseThrow_0(
      idwcai.longFromDate(date),
      new idwcai.JsDateTimeFormat$lambda$1$Type(date)
    )),
    idwcai.$formatAsLongNanos(this$static, nanos, timeZone)
  );
};
idwcai.$formatAsLongNanos = function $formatAsLongNanos(
  this$static,
  unwrapped,
  timeZone
) {
  var dateWithoutNanos, i, nanoString, nanos, remainingNanoDigits, sb, tz;
  tz = !timeZone ? null : timeZone.tz;
  nanos = toInt_0(mod(unwrapped, $intern_29));
  dateWithoutNanos = new ju.Date_3(div(unwrapped, $intern_37));
  sb = new jl.StringBuilder_1(
    cggis.$format_3(this$static.wrappedStart, dateWithoutNanos, tz)
  );
  if (this$static.nanoCount > 0) {
    remainingNanoDigits = this$static.nanoCount;
    nanoString = "" + nanos;
    if (ji.uncheckedCast(nanoString).length > 9) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    for (i = ji.uncheckedCast(nanoString).length; i < 9; i++) {
      sb.string += "0";
      --remainingNanoDigits;
    }
    sb.string +=
      "" + ji.uncheckedCast(nanoString).substr(0, remainingNanoDigits);
    !!this$static.wrappedEnd &&
      jl.$append_9(
        sb,
        cggis.$format_3(this$static.wrappedEnd, dateWithoutNanos, tz)
      );
  }
  return sb.string;
};
idwcai.$parse_4 = function $parse_4(this$static, text_0, tz) {
  var ch_0, curDate, date, endOfEnd, endOfStart, nano, nanosInParsedText;
  if (tz) {
    return new idwca.DateWrapper(
      idwcai.$parseWithTimezoneAsLong(this$static, text_0, tz.tz, true)
    );
  }
  curDate = new ju.Date_0();
  date = new ju.Date_1(
    curDate.jsdate.getFullYear() - $intern_24,
    curDate.jsdate.getMonth(),
    curDate.jsdate.getDate()
  );
  endOfStart = cggis.$parse_2(this$static.wrappedStart, text_0, 0, date);
  if (endOfStart == 0) {
    throw toJs(new jl.IllegalArgumentException_0(text_0));
  }
  if (
    this$static.nanoCount == 0 &&
    endOfStart < ji.uncheckedCast(text_0).length
  ) {
    throw toJs(new jl.IllegalArgumentException_0(text_0));
  }
  nanosInParsedText = 0;
  if (this$static.nanoCount > 0) {
    for (nano = 0; nano < this$static.nanoCount; nano++) {
      ch_0 =
        (ji.checkCriticalStringElementIndex(
          nano + endOfStart,
          ji.uncheckedCast(text_0).length
        ),
        ji.uncheckedCast(text_0).charCodeAt(nano + endOfStart));
      if (ch_0 < 48 || ch_0 > 57) {
        throw toJs(new jl.IllegalArgumentException_0(text_0));
      }
      nanosInParsedText = nanosInParsedText * 10 + (ch_0 - 48);
    }
    for (; nano < 9; nano++) {
      nanosInParsedText *= 10;
    }
    if (this$static.wrappedEnd) {
      endOfEnd = cggis.$parse_2(
        this$static.wrappedEnd,
        text_0,
        endOfStart + this$static.nanoCount,
        date
      );
      if (
        endOfEnd == 0 ||
        endOfStart + this$static.nanoCount + endOfEnd <
          ji.uncheckedCast(text_0).length
      ) {
        throw toJs(new jl.IllegalArgumentException_0(text_0));
      }
    }
  }
  return new idwca.DateWrapper(
    add_1(
      mul_0(fromDouble_0(date.jsdate.getTime()), $intern_37),
      cggl.createSmallLongEmul0(nanosInParsedText)
    )
  );
};
idwcai.$parseAsDate = function $parseAsDate(this$static, text_0) {
  return new $wnd.Date(
    jl.valueOf_30(
      div(idwcai.$parse_4(this$static, text_0, null).value_0, $intern_37)
    )
  );
};
idwcai.$parseWithTimezoneAsLong = function $parseWithTimezoneAsLong(
  this$static,
  dateTimeString,
  timeZone,
  needsAdjustment
) {
  var adjustment,
    adjustments,
    date,
    diff,
    formatAfterAdjustment,
    index_0,
    millis,
    nanos,
    nextAdjustment,
    nextTransitionMinutes,
    prevAdjustment,
    remainder,
    timeInHours,
    timeInMinutes,
    transitionMinutes,
    transitionPoint,
    transitionPoints;
  nanos = idwcai.$parse_4(this$static, dateTimeString, null).value_0;
  remainder = toInt_0(mod(nanos, $intern_37));
  millis = div(nanos, $intern_37);
  date = new ju.Date_3(millis);
  diff = (date.jsdate.getTimezoneOffset() - timeZone.standardOffset_0) * 60000;
  millis = sub_3(millis, cggl.createSmallLongEmul0(diff));
  transitionPoints = idwcai.getTransitionPoints(timeZone);
  if (needsAdjustment && transitionPoints != null) {
    timeInHours = toInt_0(div(div(millis, $intern_21), 3600));
    index_0 = ju.binarySearch0(
      transitionPoints,
      transitionPoints.length,
      timeInHours
    );
    index_0 < 0 && (index_0 = $wnd.Math.abs(index_0) - 1);
    index_0 = index_0 - 1;
    transitionPoint = index_0 < 0 ? 0 : transitionPoints[index_0];
    adjustments = idwcai.getAdjustments(timeZone);
    adjustment = index_0 < 0 ? 0 : adjustments[index_0];
    millis = sub_3(millis, cggl.createSmallLongEmul0(adjustment * 60000));
    timeInMinutes = toInt_0(div(millis, 60000));
    transitionMinutes = transitionPoint * 60;
    if (
      timeInMinutes > transitionMinutes &&
      timeInMinutes < transitionMinutes + adjustment
    ) {
      formatAfterAdjustment = idwcai.$format_4(
        this$static,
        new idwca.LongWrapper(mul_0(millis, $intern_37)),
        new idwcai.JsTimeZone(timeZone)
      );
      if (!jl.$equals_12(formatAfterAdjustment, dateTimeString)) {
        throw toJs(
          new jl.IllegalArgumentException_0(
            dateTimeString +
              " occurs during a DST transition" +
              " timeInMinutes = " +
              timeInMinutes +
              " transitionMinutes = " +
              transitionMinutes +
              " adjustment = " +
              adjustment
          )
        );
      }
    }
    if (index_0 < transitionPoints.length - 1) {
      nextTransitionMinutes = transitionPoints[index_0 + 1] * 60;
      nextAdjustment = adjustments[index_0 + 1];
      if (
        timeInMinutes > nextTransitionMinutes &&
        timeInMinutes < nextTransitionMinutes + nextAdjustment
      ) {
        formatAfterAdjustment = idwcai.$format_4(
          this$static,
          new idwca.LongWrapper(mul_0(millis, $intern_37)),
          new idwcai.JsTimeZone(timeZone)
        );
        if (!jl.$equals_12(formatAfterAdjustment, dateTimeString)) {
          throw toJs(
            new jl.IllegalArgumentException_0(
              dateTimeString +
                " occurs during a DST transition" +
                " timeInMinutes = " +
                timeInMinutes +
                " nextTransitionMinutes = " +
                nextTransitionMinutes +
                " nextAdjustment = " +
                nextAdjustment
            )
          );
        }
      }
    }
    if (adjustment == 0 && index_0 > 0) {
      prevAdjustment = adjustments[index_0 - 1];
      if (
        timeInMinutes > transitionMinutes &&
        timeInMinutes < transitionMinutes + prevAdjustment
      ) {
        throw toJs(
          new jl.IllegalArgumentException_0(
            dateTimeString +
              " occurs during a DST transition" +
              " timeInMinutes = " +
              timeInMinutes +
              " transitionMinutes = " +
              transitionMinutes +
              " prevAdjustment = " +
              prevAdjustment
          )
        );
      }
    }
    if (index_0 < transitionPoints.length - 1) {
      nextAdjustment = adjustments[index_0 + 1];
      if (nextAdjustment == 0) {
        nextTransitionMinutes = transitionPoints[index_0 + 1] * 60;
        if (
          timeInMinutes < nextTransitionMinutes &&
          timeInMinutes > nextTransitionMinutes - adjustment
        ) {
          throw toJs(
            new jl.IllegalArgumentException_0(
              dateTimeString +
                " occurs during a DST transition" +
                " timeInMinutes = " +
                timeInMinutes +
                " nextTransitionMinutes = " +
                nextTransitionMinutes +
                " adjustment = " +
                adjustment
            )
          );
        }
      }
    }
  }
  return add_1(mul_0(millis, $intern_37), cggl.createSmallLongEmul0(remainder));
};
idwcai.JsDateTimeFormat = function JsDateTimeFormat(pattern) {
  idwcai.$clinit_JsDateTimeFormat();
  var count, i, subsecondOffset;
  count = 0;
  for (i = 0; i < ji.uncheckedCast(pattern).length; i++) {
    ji.checkCriticalStringElementIndex(i, ji.uncheckedCast(pattern).length);
    if (ji.uncheckedCast(pattern).charCodeAt(i) == 83) {
      ++count;
    } else {
      if (count > 0) {
        if (jl.$indexOf_0(pattern, fromCodePoint(83), i) != -1) {
          throw toJs(
            new jl.IllegalArgumentException_0(
              "'S' tokens in pattern not contiguous"
            )
          );
        }
        break;
      }
    }
  }
  this.pattern = pattern;
  if (count <= 3) {
    this.wrappedStart =
      (cggis.$clinit_DateTimeFormat(),
      cggis.getFormat(
        pattern,
        cggic.$getDateTimeFormatInfo(
          (cggic.$clinit_LocaleInfo(),
          cggic.$clinit_LocaleInfo(),
          cggic.instance_0)
        )
      ));
    this.wrappedEnd = null;
    this.nanoCount = 0;
  } else {
    subsecondOffset = jl.$indexOf(pattern, fromCodePoint(83));
    this.wrappedStart =
      (cggis.$clinit_DateTimeFormat(),
      cggis.getFormat(
        ji.uncheckedCast(pattern).substr(0, subsecondOffset),
        cggic.$getDateTimeFormatInfo(
          (cggic.$clinit_LocaleInfo(),
          cggic.$clinit_LocaleInfo(),
          cggic.instance_0)
        )
      ));
    subsecondOffset + count < ji.uncheckedCast(pattern).length
      ? (this.wrappedEnd = cggis.getFormat(
          ji.uncheckedCast(pattern).substr(subsecondOffset + count),
          cggic.$getDateTimeFormatInfo((null, cggic.instance_0))
        ))
      : (this.wrappedEnd = null);
    if (count <= 9) {
      this.nanoCount = count;
    } else {
      throw toJs(
        new jl.IllegalStateException_0(
          "Max of 9 'S' tokens allowed: " + pattern
        )
      );
    }
  }
};
idwcai.format_0 = function format_0(pattern, date, timeZone) {
  idwcai.$clinit_JsDateTimeFormat();
  return idwcai.$format_4(
    castTo(
      ju.$computeIfAbsent_0(
        idwcai.cache_0,
        pattern,
        new idwcai.JsDateTimeFormat$0methodref$ctor$Type()
      ),
      176
    ),
    date,
    timeZone
  );
};
idwcai.getAdjustments = function getAdjustments(tz) {
  return tz.adjustments;
};
idwcai.getFormat_1 = function getFormat_1(pattern) {
  idwcai.$clinit_JsDateTimeFormat();
  return castTo(
    ju.$computeIfAbsent_0(
      idwcai.cache_0,
      pattern,
      new idwcai.JsDateTimeFormat$0methodref$ctor$Type()
    ),
    176
  );
};
idwcai.getTransitionPoints = function getTransitionPoints(tz) {
  return tz.transitionPoints;
};
idwcai.longFromDate = function longFromDate(date) {
  idwcai.$clinit_JsDateTimeFormat();
  var jsNumber;
  if (instanceOfString(date)) {
    return (
      ju.$clinit_OptionalLong(),
      new ju.OptionalLong_0(jl.__parseAndValidateLong(castToString(date)))
    );
  } else if (instanceOfNative(date, $wnd.Date)) {
    return (
      ju.$clinit_OptionalLong(),
      new ju.OptionalLong_0(
        mul_0($intern_37, fromDouble_0(castToNative(date, $wnd.Date).getTime()))
      )
    );
  } else if (instanceOf(date, 39)) {
    return (
      ju.$clinit_OptionalLong(), new ju.OptionalLong_0(castTo(date, 39).value_0)
    );
  } else if (instanceOf(date, 114)) {
    jsNumber = jl.$doubleValue(castToDouble(date));
    $wnd.Math.abs(jsNumber) < $wnd.Math.pow(2, 43) &&
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          [
            "Number passed as date looks suspiciously small, as though it might be millis since Jan 1, 1970, but will be interpreted as if it were nanoseconds since that date.",
          ]
        )
      );
    return (
      ju.$clinit_OptionalLong(), new ju.OptionalLong_0(fromDouble_0(jsNumber))
    );
  } else {
    return ju.$clinit_OptionalLong(), ju.$clinit_OptionalLong(), ju.EMPTY_2;
  }
};
idwcai.parse_2 = function parse_2(pattern, text_0, tz) {
  idwcai.$clinit_JsDateTimeFormat();
  return idwcai.$parse_4(
    castTo(
      ju.$computeIfAbsent_0(
        idwcai.cache_0,
        pattern,
        new idwcai.JsDateTimeFormat$0methodref$ctor$Type()
      ),
      176
    ),
    text_0,
    tz
  );
};
idwcai.parseAsDate_0 = function parseAsDate_0(pattern, text_0) {
  idwcai.$clinit_JsDateTimeFormat();
  return new $wnd.Date(
    jl.valueOf_30(
      div(
        idwcai.$parse_4(
          castTo(
            ju.$computeIfAbsent_0(
              idwcai.cache_0,
              pattern,
              new idwcai.JsDateTimeFormat$0methodref$ctor$Type()
            ),
            176
          ),
          text_0,
          null
        ).value_0,
        $intern_37
      )
    )
  );
};
defineClass(176, 1, { 176: 1 }, idwcai.JsDateTimeFormat);
_.format = function format_1(date, timeZone) {
  return idwcai.$format_5(this, date, timeZone);
};
_.parse = function parse_1(text_0, tz) {
  return idwcai.$parse_4(this, text_0, tz);
};
_.parseAsDate = function parseAsDate(text_0) {
  return idwcai.$parseAsDate(this, text_0);
};
_.toString = function toString_28() {
  return (
    "DateTimeFormat { pattern='" +
    this.pattern +
    "'" +
    ", wrappedStart=" +
    this.wrappedStart +
    ", wrappedEnd=" +
    this.wrappedEnd +
    ", nanoCount=" +
    this.nanoCount +
    " }"
  );
};
_.toString_0 = function () {
  return this.toString();
};
_.nanoCount = 0;
idwcai.NANOS_PER_MILLI = $intern_37;
cggl.Lio_deephaven_web_client_api_i18n_JsDateTimeFormat_2_classLit =
  createForClass("io.deephaven.web.client.api.i18n", "JsDateTimeFormat", 176);
idwcai.JsDateTimeFormat$0methodref$ctor$Type =
  function JsDateTimeFormat$0methodref$ctor$Type() {};
defineClass(258, 1, {}, idwcai.JsDateTimeFormat$0methodref$ctor$Type);
_.apply_1 = function apply_128(arg0) {
  return new idwcai.JsDateTimeFormat(castToString(arg0));
};
cggl.Lio_deephaven_web_client_api_i18n_JsDateTimeFormat$0methodref$ctor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.i18n",
    "JsDateTimeFormat/0methodref$ctor$Type",
    258
  );
idwcai.JsDateTimeFormat$lambda$1$Type = function JsDateTimeFormat$lambda$1$Type(
  date_0
) {
  this.date_0 = date_0;
};
defineClass(346, 1, {}, idwcai.JsDateTimeFormat$lambda$1$Type);
_.get_0 = function get_7() {
  return (
    idwcai.$clinit_JsDateTimeFormat(),
    new jl.IllegalStateException_0(
      "Can't format non-number, non-date value " + this.date_0
    )
  );
};
cggl.Lio_deephaven_web_client_api_i18n_JsDateTimeFormat$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.i18n",
    "JsDateTimeFormat/lambda$1$Type",
    346
  );
idwcai.$clinit_JsNumberFormat = function $clinit_JsNumberFormat() {
  idwcai.$clinit_JsNumberFormat = emptyMethod;
  idwcai.cache_1 = new ju.HashMap();
};
idwcai.$format_6 = function $format_6(this$static, number) {
  ju.requireNonNull(number);
  if (instanceOfDouble(number)) {
    return cggic.$format(
      this$static.wrapped,
      (jb.checkCriticalType_0(typeof number == "number"), jb.asDouble(number))
    );
  } else if (instanceOf(number, 146)) {
    return cggic.$format_1(this$static.wrapped, castTo(number, 146).value_0);
  } else if (instanceOf(number, 147)) {
    return cggic.$format_1(this$static.wrapped, castTo(number, 147).value_0);
  } else if (instanceOf(number, 39)) {
    return cggic.$format_1(
      this$static.wrapped,
      jl.valueOf_30(castTo(number, 39).value_0)
    );
  }
  throw toJs(
    new jl.IllegalStateException_0(
      "Can't format non-number object of type " + typeof number
    )
  );
};
idwcai.$parse_5 = function $parse_5(this$static, text_0) {
  return cggic.$parse_0(this$static.wrapped, text_0);
};
idwcai.JsNumberFormat = function JsNumberFormat(pattern) {
  idwcai.$clinit_JsNumberFormat();
  this.pattern = pattern;
  this.wrapped =
    (cggic.$clinit_NumberFormat(),
    new cggic.NumberFormat_0(pattern, cggic.$getDefaultNative()));
};
idwcai.format_3 = function format_3(pattern, number) {
  idwcai.$clinit_JsNumberFormat();
  return idwcai.$format_6(
    castTo(
      ju.$computeIfAbsent_0(
        idwcai.cache_1,
        pattern,
        new idwcai.JsNumberFormat$0methodref$ctor$Type()
      ),
      211
    ),
    number
  );
};
idwcai.getFormat_2 = function getFormat_2(pattern) {
  idwcai.$clinit_JsNumberFormat();
  return castTo(
    ju.$computeIfAbsent_0(
      idwcai.cache_1,
      pattern,
      new idwcai.JsNumberFormat$0methodref$ctor$Type()
    ),
    211
  );
};
idwcai.parse_4 = function parse_4(pattern, text_0) {
  idwcai.$clinit_JsNumberFormat();
  return idwcai.$parse_5(
    castTo(
      ju.$computeIfAbsent_0(
        idwcai.cache_1,
        pattern,
        new idwcai.JsNumberFormat$0methodref$ctor$Type()
      ),
      211
    ),
    text_0
  );
};
defineClass(211, 1, { 211: 1 }, idwcai.JsNumberFormat);
_.format = function format_2(number) {
  return idwcai.$format_6(this, number);
};
_.parse = function parse_3(text_0) {
  return idwcai.$parse_5(this, text_0);
};
_.toString = function toString_29() {
  return "NumberFormat { pattern='" + this.pattern + "' }";
};
_.toString_0 = function () {
  return this.toString();
};
cggl.Lio_deephaven_web_client_api_i18n_JsNumberFormat_2_classLit =
  createForClass("io.deephaven.web.client.api.i18n", "JsNumberFormat", 211);
idwcai.JsNumberFormat$0methodref$ctor$Type =
  function JsNumberFormat$0methodref$ctor$Type() {};
defineClass(292, 1, {}, idwcai.JsNumberFormat$0methodref$ctor$Type);
_.apply_1 = function apply_129(arg0) {
  return new idwcai.JsNumberFormat(castToString(arg0));
};
cggl.Lio_deephaven_web_client_api_i18n_JsNumberFormat$0methodref$ctor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.i18n",
    "JsNumberFormat/0methodref$ctor$Type",
    292
  );
idwcai.$clinit_JsTimeZone = function $clinit_JsTimeZone() {
  idwcai.$clinit_JsTimeZone = emptyMethod;
  idwcai.timeZones = new ju.HashMap();
  idwcai.initTimeZones();
};
idwcai.JsTimeZone = function JsTimeZone(tz) {
  idwcai.$clinit_JsTimeZone();
  this.tz = tz;
};
idwcai.addMapping = function addMapping(key, tz) {
  if (ju.$hasStringValue(idwcai.timeZones, key)) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Attempting to add the same key twice: " + key
      )
    );
  }
  ju.$putStringValue(idwcai.timeZones, key, tz);
};
idwcai.addMapping_0 = function addMapping_0(key, existingKey) {
  var existing;
  existing = castTo(ju.$getStringValue(idwcai.timeZones, existingKey), 4);
  if (!existing) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Existing key didn't exist " + existingKey
      )
    );
  }
  idwcai.addMapping(key, existing);
};
idwcai.getTimeZone = function getTimeZone(tzCode) {
  idwcai.$clinit_JsTimeZone();
  if (!ju.$hasStringValue(idwcai.timeZones, tzCode)) {
    throw toJs(
      new jl.IllegalArgumentException_0("Unsupported time zone " + tzCode)
    );
  }
  return castTo(ju.$getStringValue(idwcai.timeZones, tzCode), 4);
};
idwcai.initTimeZones = function initTimeZones() {
  var gmtTimeZone,
    tz,
    tz0,
    tz1,
    tz10,
    tz100,
    tz101,
    tz102,
    tz103,
    tz104,
    tz105,
    tz106,
    tz107,
    tz108,
    tz109,
    tz11,
    tz110,
    tz111,
    tz112,
    tz113,
    tz114,
    tz115,
    tz116,
    tz117,
    tz118,
    tz119,
    tz12,
    tz120,
    tz121,
    tz122,
    tz123,
    tz124,
    tz125,
    tz126,
    tz127,
    tz128,
    tz129,
    tz13,
    tz130,
    tz131,
    tz132,
    tz133,
    tz134,
    tz135,
    tz136,
    tz137,
    tz138,
    tz139,
    tz14,
    tz140,
    tz141,
    tz142,
    tz143,
    tz144,
    tz145,
    tz146,
    tz147,
    tz148,
    tz149,
    tz15,
    tz150,
    tz151,
    tz152,
    tz153,
    tz154,
    tz155,
    tz156,
    tz157,
    tz158,
    tz159,
    tz16,
    tz160,
    tz161,
    tz162,
    tz163,
    tz164,
    tz165,
    tz166,
    tz167,
    tz168,
    tz169,
    tz17,
    tz170,
    tz171,
    tz172,
    tz173,
    tz174,
    tz175,
    tz176,
    tz177,
    tz178,
    tz179,
    tz18,
    tz180,
    tz181,
    tz182,
    tz183,
    tz184,
    tz185,
    tz186,
    tz187,
    tz188,
    tz189,
    tz19,
    tz190,
    tz191,
    tz192,
    tz193,
    tz194,
    tz195,
    tz196,
    tz197,
    tz198,
    tz199,
    tz2,
    tz20,
    tz200,
    tz201,
    tz202,
    tz203,
    tz204,
    tz205,
    tz206,
    tz207,
    tz208,
    tz209,
    tz21,
    tz210,
    tz211,
    tz212,
    tz213,
    tz214,
    tz215,
    tz216,
    tz217,
    tz218,
    tz219,
    tz22,
    tz220,
    tz221,
    tz222,
    tz223,
    tz224,
    tz225,
    tz226,
    tz227,
    tz228,
    tz229,
    tz23,
    tz230,
    tz231,
    tz232,
    tz233,
    tz234,
    tz235,
    tz236,
    tz237,
    tz238,
    tz239,
    tz24,
    tz240,
    tz241,
    tz242,
    tz243,
    tz244,
    tz245,
    tz246,
    tz247,
    tz248,
    tz249,
    tz25,
    tz250,
    tz251,
    tz252,
    tz253,
    tz254,
    tz255,
    tz256,
    tz257,
    tz258,
    tz259,
    tz26,
    tz260,
    tz261,
    tz262,
    tz263,
    tz264,
    tz265,
    tz266,
    tz267,
    tz268,
    tz269,
    tz27,
    tz270,
    tz271,
    tz272,
    tz273,
    tz274,
    tz275,
    tz276,
    tz277,
    tz278,
    tz279,
    tz28,
    tz280,
    tz281,
    tz282,
    tz283,
    tz284,
    tz285,
    tz286,
    tz287,
    tz288,
    tz289,
    tz29,
    tz290,
    tz291,
    tz292,
    tz293,
    tz294,
    tz295,
    tz296,
    tz297,
    tz298,
    tz299,
    tz3,
    tz30,
    tz300,
    tz301,
    tz302,
    tz303,
    tz304,
    tz305,
    tz306,
    tz307,
    tz308,
    tz309,
    tz31,
    tz310,
    tz311,
    tz312,
    tz313,
    tz314,
    tz315,
    tz316,
    tz317,
    tz318,
    tz319,
    tz32,
    tz320,
    tz321,
    tz322,
    tz323,
    tz324,
    tz325,
    tz326,
    tz327,
    tz328,
    tz329,
    tz33,
    tz330,
    tz331,
    tz332,
    tz333,
    tz334,
    tz335,
    tz336,
    tz337,
    tz338,
    tz339,
    tz34,
    tz340,
    tz341,
    tz342,
    tz343,
    tz344,
    tz345,
    tz346,
    tz347,
    tz348,
    tz349,
    tz35,
    tz350,
    tz351,
    tz352,
    tz353,
    tz354,
    tz355,
    tz356,
    tz357,
    tz358,
    tz359,
    tz36,
    tz360,
    tz361,
    tz362,
    tz363,
    tz364,
    tz365,
    tz366,
    tz367,
    tz368,
    tz369,
    tz37,
    tz370,
    tz371,
    tz372,
    tz373,
    tz374,
    tz375,
    tz376,
    tz377,
    tz378,
    tz379,
    tz38,
    tz380,
    tz381,
    tz382,
    tz383,
    tz384,
    tz385,
    tz386,
    tz387,
    tz388,
    tz389,
    tz39,
    tz390,
    tz391,
    tz392,
    tz393,
    tz394,
    tz395,
    tz396,
    tz397,
    tz398,
    tz399,
    tz4,
    tz40,
    tz400,
    tz401,
    tz402,
    tz403,
    tz404,
    tz405,
    tz406,
    tz407,
    tz408,
    tz409,
    tz41,
    tz410,
    tz411,
    tz412,
    tz42,
    tz43,
    tz44,
    tz45,
    tz46,
    tz47,
    tz48,
    tz49,
    tz5,
    tz50,
    tz51,
    tz52,
    tz53,
    tz54,
    tz55,
    tz56,
    tz57,
    tz58,
    tz59,
    tz6,
    tz60,
    tz61,
    tz62,
    tz63,
    tz64,
    tz65,
    tz66,
    tz67,
    tz68,
    tz69,
    tz7,
    tz70,
    tz71,
    tz72,
    tz73,
    tz74,
    tz75,
    tz76,
    tz77,
    tz78,
    tz79,
    tz8,
    tz80,
    tz81,
    tz82,
    tz83,
    tz84,
    tz85,
    tz86,
    tz87,
    tz88,
    tz89,
    tz9,
    tz90,
    tz91,
    tz92,
    tz93,
    tz94,
    tz95,
    tz96,
    tz97,
    tz98,
    tz99,
    tzData,
    tzData0,
    tzData1,
    tzData10,
    tzData100,
    tzData101,
    tzData102,
    tzData103,
    tzData104,
    tzData105,
    tzData106,
    tzData107,
    tzData108,
    tzData109,
    tzData11,
    tzData110,
    tzData111,
    tzData112,
    tzData113,
    tzData114,
    tzData115,
    tzData116,
    tzData117,
    tzData118,
    tzData119,
    tzData12,
    tzData120,
    tzData121,
    tzData122,
    tzData123,
    tzData124,
    tzData125,
    tzData126,
    tzData127,
    tzData128,
    tzData129,
    tzData13,
    tzData130,
    tzData131,
    tzData132,
    tzData133,
    tzData134,
    tzData135,
    tzData136,
    tzData137,
    tzData138,
    tzData139,
    tzData14,
    tzData140,
    tzData141,
    tzData142,
    tzData143,
    tzData144,
    tzData145,
    tzData146,
    tzData147,
    tzData148,
    tzData149,
    tzData15,
    tzData150,
    tzData151,
    tzData152,
    tzData153,
    tzData154,
    tzData155,
    tzData156,
    tzData157,
    tzData158,
    tzData159,
    tzData16,
    tzData160,
    tzData161,
    tzData162,
    tzData163,
    tzData164,
    tzData165,
    tzData166,
    tzData167,
    tzData168,
    tzData169,
    tzData17,
    tzData170,
    tzData171,
    tzData172,
    tzData173,
    tzData174,
    tzData175,
    tzData176,
    tzData177,
    tzData178,
    tzData179,
    tzData18,
    tzData180,
    tzData181,
    tzData182,
    tzData183,
    tzData184,
    tzData185,
    tzData186,
    tzData187,
    tzData188,
    tzData189,
    tzData19,
    tzData190,
    tzData191,
    tzData192,
    tzData193,
    tzData194,
    tzData195,
    tzData196,
    tzData197,
    tzData198,
    tzData199,
    tzData2,
    tzData20,
    tzData200,
    tzData201,
    tzData202,
    tzData203,
    tzData204,
    tzData205,
    tzData206,
    tzData207,
    tzData208,
    tzData209,
    tzData21,
    tzData210,
    tzData211,
    tzData212,
    tzData213,
    tzData214,
    tzData215,
    tzData216,
    tzData217,
    tzData218,
    tzData219,
    tzData22,
    tzData220,
    tzData221,
    tzData222,
    tzData223,
    tzData224,
    tzData225,
    tzData226,
    tzData227,
    tzData228,
    tzData229,
    tzData23,
    tzData230,
    tzData231,
    tzData232,
    tzData233,
    tzData234,
    tzData235,
    tzData236,
    tzData237,
    tzData238,
    tzData239,
    tzData24,
    tzData240,
    tzData241,
    tzData242,
    tzData243,
    tzData244,
    tzData245,
    tzData246,
    tzData247,
    tzData248,
    tzData249,
    tzData25,
    tzData250,
    tzData251,
    tzData252,
    tzData253,
    tzData254,
    tzData255,
    tzData256,
    tzData257,
    tzData258,
    tzData259,
    tzData26,
    tzData260,
    tzData261,
    tzData262,
    tzData263,
    tzData264,
    tzData265,
    tzData266,
    tzData267,
    tzData268,
    tzData269,
    tzData27,
    tzData270,
    tzData271,
    tzData272,
    tzData273,
    tzData274,
    tzData275,
    tzData276,
    tzData277,
    tzData278,
    tzData279,
    tzData28,
    tzData280,
    tzData281,
    tzData282,
    tzData283,
    tzData284,
    tzData285,
    tzData286,
    tzData287,
    tzData288,
    tzData289,
    tzData29,
    tzData290,
    tzData291,
    tzData292,
    tzData293,
    tzData294,
    tzData295,
    tzData296,
    tzData297,
    tzData298,
    tzData299,
    tzData3,
    tzData30,
    tzData300,
    tzData301,
    tzData302,
    tzData303,
    tzData304,
    tzData305,
    tzData306,
    tzData307,
    tzData308,
    tzData309,
    tzData31,
    tzData310,
    tzData311,
    tzData312,
    tzData313,
    tzData314,
    tzData315,
    tzData316,
    tzData317,
    tzData318,
    tzData319,
    tzData32,
    tzData320,
    tzData321,
    tzData322,
    tzData323,
    tzData324,
    tzData325,
    tzData326,
    tzData327,
    tzData328,
    tzData329,
    tzData33,
    tzData330,
    tzData331,
    tzData332,
    tzData333,
    tzData334,
    tzData335,
    tzData336,
    tzData337,
    tzData338,
    tzData339,
    tzData34,
    tzData340,
    tzData341,
    tzData342,
    tzData343,
    tzData344,
    tzData345,
    tzData346,
    tzData347,
    tzData348,
    tzData349,
    tzData35,
    tzData350,
    tzData351,
    tzData352,
    tzData353,
    tzData354,
    tzData355,
    tzData356,
    tzData357,
    tzData358,
    tzData359,
    tzData36,
    tzData360,
    tzData361,
    tzData362,
    tzData363,
    tzData364,
    tzData365,
    tzData366,
    tzData367,
    tzData368,
    tzData369,
    tzData37,
    tzData370,
    tzData371,
    tzData372,
    tzData373,
    tzData374,
    tzData375,
    tzData376,
    tzData377,
    tzData378,
    tzData379,
    tzData38,
    tzData380,
    tzData381,
    tzData382,
    tzData383,
    tzData384,
    tzData385,
    tzData386,
    tzData387,
    tzData388,
    tzData389,
    tzData39,
    tzData390,
    tzData391,
    tzData392,
    tzData393,
    tzData394,
    tzData395,
    tzData396,
    tzData397,
    tzData398,
    tzData399,
    tzData4,
    tzData40,
    tzData400,
    tzData401,
    tzData402,
    tzData403,
    tzData404,
    tzData405,
    tzData406,
    tzData407,
    tzData408,
    tzData409,
    tzData41,
    tzData410,
    tzData411,
    tzData412,
    tzData42,
    tzData43,
    tzData44,
    tzData45,
    tzData46,
    tzData47,
    tzData48,
    tzData49,
    tzData5,
    tzData50,
    tzData51,
    tzData52,
    tzData53,
    tzData54,
    tzData55,
    tzData56,
    tzData57,
    tzData58,
    tzData59,
    tzData6,
    tzData60,
    tzData61,
    tzData62,
    tzData63,
    tzData64,
    tzData65,
    tzData66,
    tzData67,
    tzData68,
    tzData69,
    tzData7,
    tzData70,
    tzData71,
    tzData72,
    tzData73,
    tzData74,
    tzData75,
    tzData76,
    tzData77,
    tzData78,
    tzData79,
    tzData8,
    tzData80,
    tzData81,
    tzData82,
    tzData83,
    tzData84,
    tzData85,
    tzData86,
    tzData87,
    tzData88,
    tzData89,
    tzData9,
    tzData90,
    tzData91,
    tzData92,
    tzData93,
    tzData94,
    tzData95,
    tzData96,
    tzData97,
    tzData98,
    tzData99;
  tz0 =
    ((tzData0 = cggcc.safeEval(
      '{"id": "Africa/Abidjan", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData0));
  idwcai.addMapping(tz0.timezoneID, new idwcai.JsTimeZone(tz0));
  tz1 =
    ((tzData1 = cggcc.safeEval(
      '{"id": "Africa/Accra", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData1));
  idwcai.addMapping(tz1.timezoneID, new idwcai.JsTimeZone(tz1));
  tz2 =
    ((tzData2 = cggcc.safeEval(
      '{"id": "Africa/Addis_Ababa", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData2));
  idwcai.addMapping(tz2.timezoneID, new idwcai.JsTimeZone(tz2));
  tz3 =
    ((tzData3 = cggcc.safeEval(
      '{"id": "Africa/Algiers", "transitions": [11519, 60, 15215, 0, 64368, 60, 68399, 0, 72096, 60, 76465, 0, 90408, 60, 94945, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData3));
  idwcai.addMapping(tz3.timezoneID, new idwcai.JsTimeZone(tz3));
  tz4 =
    ((tzData4 = cggcc.safeEval(
      '{"id": "Africa/Asmera", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData4));
  idwcai.addMapping(tz4.timezoneID, new idwcai.JsTimeZone(tz4));
  tz5 =
    ((tzData5 = cggcc.safeEval(
      '{"id": "Africa/Bamako", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData5));
  idwcai.addMapping(tz5.timezoneID, new idwcai.JsTimeZone(tz5));
  tz6 =
    ((tzData6 = cggcc.safeEval(
      '{"id": "Africa/Bangui", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData6));
  idwcai.addMapping(tz6.timezoneID, new idwcai.JsTimeZone(tz6));
  tz7 =
    ((tzData7 = cggcc.safeEval(
      '{"id": "Africa/Banjul", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData7));
  idwcai.addMapping(tz7.timezoneID, new idwcai.JsTimeZone(tz7));
  tz8 =
    ((tzData8 = cggcc.safeEval(
      '{"id": "Africa/Bissau", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData8));
  idwcai.addMapping(tz8.timezoneID, new idwcai.JsTimeZone(tz8));
  tz9 =
    ((tzData9 = cggcc.safeEval(
      '{"id": "Africa/Blantyre", "transitions": [], "names": ["CAT", "Central Africa Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData9));
  idwcai.addMapping(tz9.timezoneID, new idwcai.JsTimeZone(tz9));
  tz10 =
    ((tzData10 = cggcc.safeEval(
      '{"id": "Africa/Brazzaville", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData10));
  idwcai.addMapping(tz10.timezoneID, new idwcai.JsTimeZone(tz10));
  tz11 =
    ((tzData11 = cggcc.safeEval(
      '{"id": "Africa/Bujumbura", "transitions": [], "names": ["CAT", "Central Africa Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData11));
  idwcai.addMapping(tz11.timezoneID, new idwcai.JsTimeZone(tz11));
  tz12 =
    ((tzData12 = cggcc.safeEval(
      '{"id": "Africa/Cairo", "transitions": [2879, 60, 6552, 0, 11639, 60, 15312, 0, 20423, 60, 24096, 0, 29183, 60, 32856, 0, 37943, 60, 41616, 0, 46703, 60, 50376, 0, 55487, 60, 59160, 0, 64247, 60, 67920, 0, 73007, 60, 76680, 0, 81767, 60, 85440, 0, 90551, 60, 94224, 0, 99311, 60, 102984, 0, 110111, 60, 111744, 0, 118559, 60, 120504, 0, 125615, 60, 129288, 0, 134375, 60, 138048, 0, 143135, 60, 146808, 0, 151895, 60, 155568, 0, 160679, 60, 164352, 0, 169559, 60, 173112, 0, 178199, 60, 181872, 0, 186959, 60, 190632, 0, 195743, 60, 199416, 0, 204503, 60, 208176, 0, 213263, 60, 216936, 0, 221950, 60, 225645, 0, 230686, 60, 234381, 0, 239422, 60, 243117, 0, 248158, 60, 251853, 0, 257062, 60, 260757, 0, 265798, 60, 269493, 0, 274534, 60, 278229, 0, 283270, 60, 286965, 0, 292006, 60, 295701, 0, 300910, 60, 304605, 0, 309646, 60, 313341, 0, 318382, 60, 321909, 0, 327118, 60, 330309, 0, 335854, 60, 338877, 0, 344590, 60, 347445, 0, 353494, 60, 355965, 0, 356686, 60, 357189, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData12));
  idwcai.addMapping(tz12.timezoneID, new idwcai.JsTimeZone(tz12));
  tz13 =
    ((tzData13 = cggcc.safeEval(
      '{"id": "Africa/Casablanca", "transitions": [39240, 60, 40895, 0, 55488, 60, 57695, 0, 64248, 60, 67847, 0, 73752, 60, 75287, 0, 336744, 60, 338951, 0, 345504, 60, 347447, 0, 353544, 60, 355895, 0, 361608, 60, 364463, 0, 371018, 60, 372986, 0, 373730, 60, 374714, 0, 379754, 60, 381482, 0, 382202, 60, 383450, 0, 388490, 60, 390002, 0, 390722, 60, 392186, 0, 397226, 60, 398498, 0, 399218, 60, 400922, 0, 405962, 60, 407018, 0, 407738, 60, 409658, 0, 414866, 60, 415514, 0, 416234, 60, 418394, 0, 423602, 60, 424010, 0, 424730, 60, 427298, 0, 432338, 60, 432530, 0, 433250, 60, 436034, 0, 441746, 60, 444770, 0, 450242, 60, 453506, 0, 458762, 60, 462242, 0, 467450, 60, 470978, 0, 476186, 60, 479882, 0, 484922, 60, 488618, 0, 493658, 60, 497354, 0, 502394, 60, 506090, 0, 511298, 60, 514826, 0, 520034, 60, 523730, 0, 528770, 60, 532466, 0, 537506, 60, 541202, 0, 546242, 60, 549938, 0, 554978, 60, 558674, 0, 563882, 60, 567410, 0, 572618, 60, 576314, 0, 581354, 60, 585050, 0, 590090, 60, 593786, 0], "names": ["WET", "Western European Standard Time", "WEST", "Western European Summer Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData13));
  idwcai.addMapping(tz13.timezoneID, new idwcai.JsTimeZone(tz13));
  tz14 =
    ((tzData14 = cggcc.safeEval(
      '{"id": "Africa/Ceuta", "transitions": [39240, 60, 40895, 0, 55488, 60, 57695, 0, 64248, 60, 67847, 0, 73752, 60, 75287, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData14));
  idwcai.addMapping(tz14.timezoneID, new idwcai.JsTimeZone(tz14));
  tz15 =
    ((tzData15 = cggcc.safeEval(
      '{"id": "Africa/Conakry", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData15));
  idwcai.addMapping(tz15.timezoneID, new idwcai.JsTimeZone(tz15));
  tz16 =
    ((tzData16 = cggcc.safeEval(
      '{"id": "Africa/Dakar", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData16));
  idwcai.addMapping(tz16.timezoneID, new idwcai.JsTimeZone(tz16));
  tz17 =
    ((tzData17 = cggcc.safeEval(
      '{"id": "Africa/Dar_es_Salaam", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData17));
  idwcai.addMapping(tz17.timezoneID, new idwcai.JsTimeZone(tz17));
  tz18 =
    ((tzData18 = cggcc.safeEval(
      '{"id": "Africa/Djibouti", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData18));
  idwcai.addMapping(tz18.timezoneID, new idwcai.JsTimeZone(tz18));
  tz19 =
    ((tzData19 = cggcc.safeEval(
      '{"id": "Africa/Douala", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData19));
  idwcai.addMapping(tz19.timezoneID, new idwcai.JsTimeZone(tz19));
  tz20 =
    ((tzData20 = cggcc.safeEval(
      '{"id": "Africa/El_Aaiun", "transitions": [], "names": ["WET", "Western European Standard Time", "WEST", "Western European Summer Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData20));
  idwcai.addMapping(tz20.timezoneID, new idwcai.JsTimeZone(tz20));
  tz21 =
    ((tzData21 = cggcc.safeEval(
      '{"id": "Africa/Freetown", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData21));
  idwcai.addMapping(tz21.timezoneID, new idwcai.JsTimeZone(tz21));
  tz22 =
    ((tzData22 = cggcc.safeEval(
      '{"id": "Africa/Gaborone", "transitions": [], "names": ["CAT", "Central Africa Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData22));
  idwcai.addMapping(tz22.timezoneID, new idwcai.JsTimeZone(tz22));
  tz23 =
    ((tzData23 = cggcc.safeEval(
      '{"id": "Africa/Harare", "transitions": [], "names": ["CAT", "Central Africa Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData23));
  idwcai.addMapping(tz23.timezoneID, new idwcai.JsTimeZone(tz23));
  tz24 =
    ((tzData24 = cggcc.safeEval(
      '{"id": "Africa/Johannesburg", "transitions": [], "names": ["SAST", "South Africa Standard Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData24));
  idwcai.addMapping(tz24.timezoneID, new idwcai.JsTimeZone(tz24));
  tz25 =
    ((tzData25 = cggcc.safeEval(
      '{"id": "Africa/Kampala", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData25));
  idwcai.addMapping(tz25.timezoneID, new idwcai.JsTimeZone(tz25));
  tz26 =
    ((tzData26 = cggcc.safeEval(
      '{"id": "Africa/Khartoum", "transitions": [2878, 60, 6885, 0, 11614, 60, 15645, 0, 20398, 60, 24429, 0, 29134, 60, 33189, 0, 37870, 60, 41949, 0, 46606, 60, 50709, 0, 55342, 60, 59493, 0, 64078, 60, 68253, 0, 72982, 60, 77013, 0, 81718, 60, 85773, 0, 90454, 60, 94557, 0, 99190, 60, 103317, 0, 107926, 60, 112077, 0, 116662, 60, 120837, 0, 125566, 60, 129621, 0, 134302, 60, 138381, 0], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData26));
  idwcai.addMapping(tz26.timezoneID, new idwcai.JsTimeZone(tz26));
  tz27 =
    ((tzData27 = cggcc.safeEval(
      '{"id": "Africa/Kigali", "transitions": [], "names": ["CAT", "Central Africa Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData27));
  idwcai.addMapping(tz27.timezoneID, new idwcai.JsTimeZone(tz27));
  tz28 =
    ((tzData28 = cggcc.safeEval(
      '{"id": "Africa/Kinshasa", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData28));
  idwcai.addMapping(tz28.timezoneID, new idwcai.JsTimeZone(tz28));
  tz29 =
    ((tzData29 = cggcc.safeEval(
      '{"id": "Africa/Lagos", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData29));
  idwcai.addMapping(tz29.timezoneID, new idwcai.JsTimeZone(tz29));
  tz30 =
    ((tzData30 = cggcc.safeEval(
      '{"id": "Africa/Libreville", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData30));
  idwcai.addMapping(tz30.timezoneID, new idwcai.JsTimeZone(tz30));
  tz31 =
    ((tzData31 = cggcc.safeEval(
      '{"id": "Africa/Lome", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData31));
  idwcai.addMapping(tz31.timezoneID, new idwcai.JsTimeZone(tz31));
  tz32 =
    ((tzData32 = cggcc.safeEval(
      '{"id": "Africa/Luanda", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData32));
  idwcai.addMapping(tz32.timezoneID, new idwcai.JsTimeZone(tz32));
  tz33 =
    ((tzData33 = cggcc.safeEval(
      '{"id": "Africa/Lubumbashi", "transitions": [], "names": ["CAT", "Central Africa Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData33));
  idwcai.addMapping(tz33.timezoneID, new idwcai.JsTimeZone(tz33));
  tz34 =
    ((tzData34 = cggcc.safeEval(
      '{"id": "Africa/Lusaka", "transitions": [], "names": ["CAT", "Central Africa Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData34));
  idwcai.addMapping(tz34.timezoneID, new idwcai.JsTimeZone(tz34));
  tz35 =
    ((tzData35 = cggcc.safeEval(
      '{"id": "Africa/Malabo", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData35));
  idwcai.addMapping(tz35.timezoneID, new idwcai.JsTimeZone(tz35));
  tz36 =
    ((tzData36 = cggcc.safeEval(
      '{"id": "Africa/Maputo", "transitions": [], "names": ["CAT", "Central Africa Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData36));
  idwcai.addMapping(tz36.timezoneID, new idwcai.JsTimeZone(tz36));
  tz37 =
    ((tzData37 = cggcc.safeEval(
      '{"id": "Africa/Maseru", "transitions": [], "names": ["SAST", "South Africa Standard Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData37));
  idwcai.addMapping(tz37.timezoneID, new idwcai.JsTimeZone(tz37));
  tz38 =
    ((tzData38 = cggcc.safeEval(
      '{"id": "Africa/Mbabane", "transitions": [], "names": ["SAST", "South Africa Standard Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData38));
  idwcai.addMapping(tz38.timezoneID, new idwcai.JsTimeZone(tz38));
  tz39 =
    ((tzData39 = cggcc.safeEval(
      '{"id": "Africa/Mogadishu", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData39));
  idwcai.addMapping(tz39.timezoneID, new idwcai.JsTimeZone(tz39));
  tz40 =
    ((tzData40 = cggcc.safeEval(
      '{"id": "Africa/Monrovia", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData40));
  idwcai.addMapping(tz40.timezoneID, new idwcai.JsTimeZone(tz40));
  tz41 =
    ((tzData41 = cggcc.safeEval(
      '{"id": "Africa/Nairobi", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData41));
  idwcai.addMapping(tz41.timezoneID, new idwcai.JsTimeZone(tz41));
  tz42 =
    ((tzData42 = cggcc.safeEval(
      '{"id": "Africa/Ndjamena", "transitions": [85751, 60, 89254, 0], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData42));
  idwcai.addMapping(tz42.timezoneID, new idwcai.JsTimeZone(tz42));
  tz43 =
    ((tzData43 = cggcc.safeEval(
      '{"id": "Africa/Niamey", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData43));
  idwcai.addMapping(tz43.timezoneID, new idwcai.JsTimeZone(tz43));
  tz44 =
    ((tzData44 = cggcc.safeEval(
      '{"id": "Africa/Nouakchott", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData44));
  idwcai.addMapping(tz44.timezoneID, new idwcai.JsTimeZone(tz44));
  tz45 =
    ((tzData45 = cggcc.safeEval(
      '{"id": "Africa/Ouagadougou", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData45));
  idwcai.addMapping(tz45.timezoneID, new idwcai.JsTimeZone(tz45));
  tz46 =
    ((tzData46 = cggcc.safeEval(
      '{"id": "Africa/Porto-Novo", "transitions": [], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData46));
  idwcai.addMapping(tz46.timezoneID, new idwcai.JsTimeZone(tz46));
  tz47 =
    ((tzData47 = cggcc.safeEval(
      '{"id": "Africa/Sao_Tome", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData47));
  idwcai.addMapping(tz47.timezoneID, new idwcai.JsTimeZone(tz47));
  tz48 =
    ((tzData48 = cggcc.safeEval(
      '{"id": "Africa/Tripoli", "transitions": [107351, 60, 111742, 0, 116111, 60, 120502, 0, 124895, 60, 129286, 0, 133775, 60, 138046, 0, 142487, 60, 146854, 0, 151175, 60, 155566, 0, 159959, 60, 164350, 0, 168719, 60, 173110, 0, 238919, 60, 243310, 0, 379032, 60, 384072, 0, 387768, 60, 392976, 0, 396504, 60, 401712, 0, 405240, 60, 410448, 0, 414144, 60, 419184, 0, 422880, 60, 427920, 0, 431616, 60, 436656, 0, 440352, 60, 445560, 0, 449088, 60, 454296, 0, 457824, 60, 463032, 0, 466728, 60, 471768, 0, 475464, 60, 480504, 0, 484200, 60, 489408, 0, 492936, 60, 498144, 0, 501672, 60, 506880, 0, 510576, 60, 515616, 0, 519312, 60, 524352, 0, 528048, 60, 533088, 0, 536784, 60, 541992, 0, 545520, 60, 550728, 0, 554256, 60, 559464, 0, 563160, 60, 568200, 0, 571896, 60, 576936, 0, 580632, 60, 585840, 0, 589368, 60, 594576, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData48));
  idwcai.addMapping(tz48.timezoneID, new idwcai.JsTimeZone(tz48));
  tz49 =
    ((tzData49 = cggcc.safeEval(
      '{"id": "Africa/Tunis", "transitions": [64223, 60, 67751, 0, 73007, 60, 76679, 0, 161423, 60, 164207, 0, 168575, 60, 172943, 0, 178199, 60, 181847, 0, 309695, 60, 313344, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData49));
  idwcai.addMapping(tz49.timezoneID, new idwcai.JsTimeZone(tz49));
  tz50 =
    ((tzData50 = cggcc.safeEval(
      '{"id": "Africa/Windhoek", "transitions": [216289, 60, 221328, 0, 225025, 60, 230232, 0, 233761, 60, 238968, 0, 242665, 60, 247704, 0, 251401, 60, 256440, 0, 260137, 60, 265176, 0, 268873, 60, 273912, 0, 277609, 60, 282816, 0, 286345, 60, 291552, 0, 295249, 60, 300288, 0, 303985, 60, 309024, 0, 312721, 60, 317760, 0, 321457, 60, 326496, 0, 330193, 60, 335400, 0, 339097, 60, 344136, 0, 347833, 60, 352872, 0, 356569, 60, 361608, 0, 365305, 60, 370344, 0, 374041, 60, 379248, 0, 382777, 60, 387984, 0, 391681, 60, 396720, 0, 400417, 60, 405456, 0, 409153, 60, 414192, 0, 417889, 60, 422928, 0, 426625, 60, 431832, 0, 435361, 60, 440568, 0, 444265, 60, 449304, 0, 453001, 60, 458040, 0, 461737, 60, 466776, 0, 470473, 60, 475680, 0, 479209, 60, 484416, 0, 488113, 60, 493152, 0, 496849, 60, 501888, 0, 505585, 60, 510624, 0, 514321, 60, 519360, 0, 523057, 60, 528264, 0, 531793, 60, 537000, 0, 540697, 60, 545736, 0, 549433, 60, 554472, 0, 558169, 60, 563208, 0, 566905, 60, 571944, 0, 575641, 60, 580848, 0, 584545, 60, 589584, 0, 593281, 60], "names": ["WAT", "West Africa Standard Time", "WAST", "West Africa Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData50));
  idwcai.addMapping(tz50.timezoneID, new idwcai.JsTimeZone(tz50));
  tz51 =
    ((tzData51 = cggcc.safeEval(
      '{"id": "America/Adak", "transitions": [2773, 60, 7140, 0, 11509, 60, 16044, 0, 20413, 60, 24780, 0, 29149, 60, 33516, 0, 35197, 60, 42252, 0, 45109, 60, 50988, 0, 55357, 60, 59892, 0, 64093, 60, 68628, 0, 72997, 60, 77364, 0, 81733, 60, 86100, 0, 90469, 60, 94836, 0, 99205, 60, 103572, 0, 107941, 60, 112476, 0, 116677, 60, 121212, 0, 125580, 60, 129947, 0, 134316, 60, 138683, 0, 143052, 60, 147419, 0, 151284, 60, 156155, 0, 160020, 60, 165059, 0, 168756, 60, 173795, 0, 177492, 60, 182531, 0, 186396, 60, 191267, 0, 195132, 60, 200003, 0, 203868, 60, 208907, 0, 212604, 60, 217643, 0, 221340, 60, 226379, 0, 230244, 60, 235115, 0, 238980, 60, 243851, 0, 247716, 60, 252587, 0, 256452, 60, 261491, 0, 265188, 60, 270227, 0, 273924, 60, 278963, 0, 282828, 60, 287699, 0, 291564, 60, 296435, 0, 300300, 60, 305339, 0, 309036, 60, 314075, 0, 317772, 60, 322811, 0, 326004, 60, 331715, 0, 334740, 60, 340451, 0, 343476, 60, 349187, 0, 352380, 60, 358091, 0, 361116, 60, 366827, 0, 369852, 60, 375563, 0, 378588, 60, 384299, 0, 387324, 60, 393035, 0, 396060, 60, 401771, 0, 404964, 60, 410675, 0, 413700, 60, 419411, 0, 422436, 60, 428147, 0, 431172, 60, 436883, 0, 439908, 60, 445619, 0, 448812, 60, 454523, 0, 457548, 60, 463259, 0, 466284, 60, 471995, 0, 475020, 60, 480731, 0, 483756, 60, 489467, 0, 492492, 60, 498203, 0, 501396, 60, 507107, 0, 510132, 60, 515843, 0, 518868, 60, 524579, 0, 527604, 60, 533315, 0, 536340, 60, 542051, 0, 545244, 60, 550955, 0, 553980, 60, 559691, 0, 562716, 60, 568427, 0, 571452, 60, 577163, 0, 580188, 60, 585899, 0, 588924, 60, 594635, 0], "names": ["HAST", "Hawaii-Aleutian Standard Time", "HADT", "Hawaii-Aleutian Daylight Time"], "std_offset": -600}'
    )),
    cggic.createTimeZone_0(tzData51));
  idwcai.addMapping(tz51.timezoneID, new idwcai.JsTimeZone(tz51));
  tz52 =
    ((tzData52 = cggcc.safeEval(
      '{"id": "America/Anchorage", "transitions": [2772, 60, 7139, 0, 11508, 60, 16043, 0, 20412, 60, 24779, 0, 29148, 60, 33515, 0, 35196, 60, 42251, 0, 45108, 60, 50987, 0, 55356, 60, 59891, 0, 64092, 60, 68627, 0, 72996, 60, 77363, 0, 81732, 60, 86099, 0, 90468, 60, 94835, 0, 99204, 60, 103571, 0, 107940, 60, 112475, 0, 116676, 60, 121211, 0, 125579, 60, 129946, 0, 134315, 60, 138682, 0, 143051, 60, 147418, 0, 151283, 60, 156154, 0, 160019, 60, 165058, 0, 168755, 60, 173794, 0, 177491, 60, 182530, 0, 186395, 60, 191266, 0, 195131, 60, 200002, 0, 203867, 60, 208906, 0, 212603, 60, 217642, 0, 221339, 60, 226378, 0, 230243, 60, 235114, 0, 238979, 60, 243850, 0, 247715, 60, 252586, 0, 256451, 60, 261490, 0, 265187, 60, 270226, 0, 273923, 60, 278962, 0, 282827, 60, 287698, 0, 291563, 60, 296434, 0, 300299, 60, 305338, 0, 309035, 60, 314074, 0, 317771, 60, 322810, 0, 326003, 60, 331714, 0, 334739, 60, 340450, 0, 343475, 60, 349186, 0, 352379, 60, 358090, 0, 361115, 60, 366826, 0, 369851, 60, 375562, 0, 378587, 60, 384298, 0, 387323, 60, 393034, 0, 396059, 60, 401770, 0, 404963, 60, 410674, 0, 413699, 60, 419410, 0, 422435, 60, 428146, 0, 431171, 60, 436882, 0, 439907, 60, 445618, 0, 448811, 60, 454522, 0, 457547, 60, 463258, 0, 466283, 60, 471994, 0, 475019, 60, 480730, 0, 483755, 60, 489466, 0, 492491, 60, 498202, 0, 501395, 60, 507106, 0, 510131, 60, 515842, 0, 518867, 60, 524578, 0, 527603, 60, 533314, 0, 536339, 60, 542050, 0, 545243, 60, 550954, 0, 553979, 60, 559690, 0, 562715, 60, 568426, 0, 571451, 60, 577162, 0, 580187, 60, 585898, 0, 588923, 60, 594634, 0], "names": ["AKST", "Alaska Standard Time", "AKDT", "Alaska Daylight Time"], "std_offset": -540}'
    )),
    cggic.createTimeZone_0(tzData52));
  idwcai.addMapping(tz52.timezoneID, new idwcai.JsTimeZone(tz52));
  tz53 =
    ((tzData53 = cggcc.safeEval(
      '{"id": "America/Anguilla", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData53));
  idwcai.addMapping(tz53.timezoneID, new idwcai.JsTimeZone(tz53));
  tz54 =
    ((tzData54 = cggcc.safeEval(
      '{"id": "America/Antigua", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData54));
  idwcai.addMapping(tz54.timezoneID, new idwcai.JsTimeZone(tz54));
  tz55 =
    ((tzData55 = cggcc.safeEval(
      '{"id": "America/Araguaina", "transitions": [138819, 60, 142010, 0, 147387, 60, 150074, 0, 156147, 60, 158666, 0, 164715, 60, 167234, 0, 173451, 60, 176306, 0, 226035, 60, 228890, 0, 234603, 60, 237794, 0, 243363, 60, 246866, 0, 252243, 60, 255434, 0, 260811, 60, 264338, 0, 269715, 60, 272906, 0, 278619, 60, 281642, 0, 287859, 60, 290378, 0, 375219, 60, 378074, 0, 383955, 60, 386810, 0, 392691, 60, 395714, 0, 401427, 60, 404450, 0, 410163, 60, 413186, 0, 418899, 60, 421922, 0, 427803, 60, 430658, 0, 436539, 60, 439394, 0, 445275, 60, 448298, 0, 454011, 60, 457034, 0, 462747, 60, 465938, 0, 471483, 60, 474506, 0, 480387, 60, 483242, 0, 489123, 60, 492146, 0, 497859, 60, 500882, 0, 506595, 60, 509618, 0, 515331, 60, 518354, 0, 524235, 60, 527090, 0, 532971, 60, 535826, 0, 541707, 60, 544562, 0, 550443, 60, 553466, 0, 559179, 60, 562370, 0, 567915, 60, 570938, 0, 576819, 60, 579674, 0, 585555, 60, 588578, 0, 594291, 60], "names": ["BRT", "Brasilia Standard Time", "BRST", "Brasilia Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData55));
  idwcai.addMapping(tz55.timezoneID, new idwcai.JsTimeZone(tz55));
  tz56 =
    ((tzData56 = cggcc.safeEval(
      '{"id": "America/Argentina/La_Rioja", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185498, 0, 191091, 60, 194282, 0, 199827, 60, 203186, 0, 260811, 60, 264459, 0, 333051, 60, 334898, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData56));
  idwcai.addMapping(tz56.timezoneID, new idwcai.JsTimeZone(tz56));
  tz57 =
    ((tzData57 = cggcc.safeEval(
      '{"id": "America/Argentina/Rio_Gallegos", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185546, 0, 191091, 60, 194282, 0, 199827, 60, 203186, 0, 260811, 60, 264459, 0, 333051, 60, 334898, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData57));
  idwcai.addMapping(tz57.timezoneID, new idwcai.JsTimeZone(tz57));
  tz58 =
    ((tzData58 = cggcc.safeEval(
      '{"id": "America/Argentina/Salta", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185546, 0, 199827, 60, 203186, 0, 333051, 60, 334898, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData58));
  idwcai.addMapping(tz58.timezoneID, new idwcai.JsTimeZone(tz58));
  tz59 =
    ((tzData59 = cggcc.safeEval(
      '{"id": "America/Argentina/San_Juan", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185498, 0, 191091, 60, 194282, 0, 199827, 60, 203186, 0, 260811, 60, 264459, 0, 333051, 60, 334898, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData59));
  idwcai.addMapping(tz59.timezoneID, new idwcai.JsTimeZone(tz59));
  tz60 =
    ((tzData60 = cggcc.safeEval(
      '{"id": "America/Argentina/San_Luis", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 177050, 0, 182212, 60, 185499, 0, 260811, 60, 264459, 0, 333051, 60, 334731, 0, 339940, 60, 343467, 0, 348676, 60], "names": ["WART", "Western Argentina Standard Time", "Western Argentina Summer Time", "Western Argentina Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData60));
  idwcai.addMapping(tz60.timezoneID, new idwcai.JsTimeZone(tz60));
  tz61 =
    ((tzData61 = cggcc.safeEval(
      '{"id": "America/Argentina/Tucuman", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185546, 0, 199827, 60, 203186, 0, 260811, 60, 264459, 0, 333051, 60, 334898, 0, 340107, 60, 343634, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData61));
  idwcai.addMapping(tz61.timezoneID, new idwcai.JsTimeZone(tz61));
  tz62 =
    ((tzData62 = cggcc.safeEval(
      '{"id": "America/Argentina/Ushuaia", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185546, 0, 191091, 60, 194282, 0, 199827, 60, 203186, 0, 260811, 60, 264459, 0, 333051, 60, 334898, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData62));
  idwcai.addMapping(tz62.timezoneID, new idwcai.JsTimeZone(tz62));
  tz63 =
    ((tzData63 = cggcc.safeEval(
      '{"id": "America/Aruba", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData63));
  idwcai.addMapping(tz63.timezoneID, new idwcai.JsTimeZone(tz63));
  tz64 =
    ((tzData64 = cggcc.safeEval(
      '{"id": "America/Asuncion", "transitions": [50380, 60, 54027, 0, 59164, 60, 62787, 0, 67924, 60, 71547, 0, 76684, 60, 81051, 0, 85444, 60, 89835, 0, 94228, 60, 98595, 0, 102988, 60, 107355, 0, 111748, 60, 116115, 0, 120508, 60, 124899, 0, 129292, 60, 133659, 0, 138052, 60, 142419, 0, 146812, 60, 151179, 0, 155572, 60, 159963, 0, 164356, 60, 168723, 0, 173620, 60, 177483, 0, 181876, 60, 186243, 0, 190756, 60, 194283, 0, 199516, 60, 203763, 0, 208180, 60, 211755, 0, 216940, 60, 220491, 0, 225700, 60, 229347, 0, 234604, 60, 237963, 0, 243340, 60, 246867, 0, 252076, 60, 255771, 0, 260812, 60, 264507, 0, 269548, 60, 273243, 0, 278452, 60, 282819, 0, 286348, 60, 291555, 0, 295252, 60, 300291, 0, 304996, 60, 308523, 0, 313732, 60, 317259, 0, 322468, 60, 325995, 0, 331372, 60, 334731, 0, 340108, 60, 343467, 0, 348844, 60, 353043, 0, 357244, 60, 361779, 0, 365980, 60, 370515, 0, 374884, 60, 378915, 0, 383620, 60, 388155, 0, 392356, 60, 396891, 0, 401092, 60, 405627, 0, 409828, 60, 414363, 0, 418564, 60, 423099, 0, 427468, 60, 432003, 0, 436204, 60, 440739, 0, 444940, 60, 449475, 0, 453676, 60, 458211, 0, 462412, 60, 466947, 0, 471148, 60, 475851, 0, 480052, 60, 484587, 0, 488788, 60, 493323, 0, 497524, 60, 502059, 0, 506260, 60, 510795, 0, 514996, 60, 519531, 0, 523900, 60, 528435, 0, 532636, 60, 537171, 0, 541372, 60, 545907, 0, 550108, 60, 554643, 0, 558844, 60, 563379, 0, 567580, 60, 572115, 0, 576484, 60, 581019, 0, 585220, 60, 589755, 0, 593956, 60], "names": ["PYT", "Paraguay Standard Time", "PYST", "Paraguay Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData64));
  idwcai.addMapping(tz64.timezoneID, new idwcai.JsTimeZone(tz64));
  tz65 =
    ((tzData65 = cggcc.safeEval(
      '{"id": "America/Bahia", "transitions": [138819, 60, 142010, 0, 147387, 60, 150074, 0, 156147, 60, 158666, 0, 164715, 60, 167234, 0, 173451, 60, 176306, 0, 182355, 60, 185210, 0, 191091, 60, 193778, 0, 199995, 60, 202346, 0, 208563, 60, 211586, 0, 217299, 60, 220322, 0, 226035, 60, 228890, 0, 234603, 60, 237794, 0, 243363, 60, 246866, 0, 252243, 60, 255434, 0, 260811, 60, 264338, 0, 269715, 60, 272906, 0, 278619, 60, 281642, 0, 287859, 60, 290378, 0, 366315, 60, 369506, 0], "names": ["BRT", "Brasilia Standard Time", "BRST", "Brasilia Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData65));
  idwcai.addMapping(tz65.timezoneID, new idwcai.JsTimeZone(tz65));
  tz66 =
    ((tzData66 = cggcc.safeEval(
      '{"id": "America/Bahia_Banderas", "transitions": [230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 274761, 60, 278288, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326505, 60, 331544, 0, 335409, 60, 340280, 0, 344145, 60, 349016, 0, 361616, 60, 366655, 0, 370352, 60, 375391, 0, 379256, 60, 384127, 0, 387992, 60, 392863, 0, 396728, 60, 401599, 0, 405464, 60, 410503, 0, 414200, 60, 419239, 0, 422936, 60, 427975, 0, 431840, 60, 436711, 0, 440576, 60, 445447, 0, 449312, 60, 454351, 0, 458048, 60, 463087, 0, 466784, 60, 471823, 0, 475688, 60, 480559, 0, 484424, 60, 489295, 0, 493160, 60, 498031, 0, 501896, 60, 506935, 0, 510632, 60, 515671, 0, 519368, 60, 524407, 0, 528272, 60, 533143, 0, 537008, 60, 541879, 0, 545744, 60, 550783, 0, 554480, 60, 559519, 0, 563216, 60, 568255, 0, 571952, 60, 576991, 0, 580856, 60, 585727, 0, 589592, 60, 594463, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData66));
  idwcai.addMapping(tz66.timezoneID, new idwcai.JsTimeZone(tz66));
  tz67 =
    ((tzData67 = cggcc.safeEval(
      '{"id": "America/Barbados", "transitions": [65262, 60, 67949, 0, 72654, 60, 76685, 0, 81390, 60, 85421, 0, 90294, 60, 94085, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData67));
  idwcai.addMapping(tz67.timezoneID, new idwcai.JsTimeZone(tz67));
  tz68 =
    ((tzData68 = cggcc.safeEval(
      '{"id": "America/Belem", "transitions": [138819, 60, 142010, 0, 147387, 60, 150074, 0, 156147, 60, 158666, 0], "names": ["BRT", "Brasilia Standard Time", "BRST", "Brasilia Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData68));
  idwcai.addMapping(tz68.timezoneID, new idwcai.JsTimeZone(tz68));
  tz69 =
    ((tzData69 = cggcc.safeEval(
      '{"id": "America/Belize", "transitions": [34422, 60, 36005, 0, 113622, 60, 114965, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData69));
  idwcai.addMapping(tz69.timezoneID, new idwcai.JsTimeZone(tz69));
  tz70 =
    ((tzData70 = cggcc.safeEval(
      '{"id": "America/Blanc-Sablon", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData70));
  idwcai.addMapping(tz70.timezoneID, new idwcai.JsTimeZone(tz70));
  tz71 =
    ((tzData71 = cggcc.safeEval(
      '{"id": "America/Boa_Vista", "transitions": [138820, 60, 142011, 0, 147388, 60, 150075, 0, 156148, 60, 158667, 0, 260812, 60, 264339, 0, 269716, 60, 269883, 0], "names": ["AMT", "Amazon Standard Time", "AMST", "Amazon Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData71));
  idwcai.addMapping(tz71.timezoneID, new idwcai.JsTimeZone(tz71));
  tz72 =
    ((tzData72 = cggcc.safeEval(
      '{"id": "America/Bogota", "transitions": [195797, 60, 203860, 0], "names": ["COT", "Colombia Standard Time", "COST", "Colombia Summer Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData72));
  idwcai.addMapping(tz72.timezoneID, new idwcai.JsTimeZone(tz72));
  tz73 =
    ((tzData73 = cggcc.safeEval(
      '{"id": "America/Boise", "transitions": [2769, 60, 7136, 0, 11505, 60, 16040, 0, 20409, 60, 24776, 0, 29145, 60, 33512, 0, 35865, 60, 42248, 0, 45105, 60, 50984, 0, 55353, 60, 59888, 0, 64089, 60, 68624, 0, 72993, 60, 77360, 0, 81729, 60, 86096, 0, 90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326001, 60, 331712, 0, 334737, 60, 340448, 0, 343473, 60, 349184, 0, 352377, 60, 358088, 0, 361113, 60, 366824, 0, 369849, 60, 375560, 0, 378585, 60, 384296, 0, 387321, 60, 393032, 0, 396057, 60, 401768, 0, 404961, 60, 410672, 0, 413697, 60, 419408, 0, 422433, 60, 428144, 0, 431169, 60, 436880, 0, 439905, 60, 445616, 0, 448809, 60, 454520, 0, 457545, 60, 463256, 0, 466281, 60, 471992, 0, 475017, 60, 480728, 0, 483753, 60, 489464, 0, 492489, 60, 498200, 0, 501393, 60, 507104, 0, 510129, 60, 515840, 0, 518865, 60, 524576, 0, 527601, 60, 533312, 0, 536337, 60, 542048, 0, 545241, 60, 550952, 0, 553977, 60, 559688, 0, 562713, 60, 568424, 0, 571449, 60, 577160, 0, 580185, 60, 585896, 0, 588921, 60, 594632, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData73));
  idwcai.addMapping(tz73.timezoneID, new idwcai.JsTimeZone(tz73));
  tz74 =
    ((tzData74 = cggcc.safeEval(
      '{"id": "America/Buenos_Aires", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185546, 0, 191091, 60, 194282, 0, 199827, 60, 203186, 0, 333051, 60, 334898, 0, 340107, 60, 343634, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData74));
  idwcai.addMapping(tz74.timezoneID, new idwcai.JsTimeZone(tz74));
  tz75 =
    ((tzData75 = cggcc.safeEval(
      '{"id": "America/Cambridge_Bay", "transitions": [90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265184, 60, 270223, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326001, 60, 331712, 0, 334737, 60, 340448, 0, 343473, 60, 349184, 0, 352377, 60, 358088, 0, 361113, 60, 366824, 0, 369849, 60, 375560, 0, 378585, 60, 384296, 0, 387321, 60, 393032, 0, 396057, 60, 401768, 0, 404961, 60, 410672, 0, 413697, 60, 419408, 0, 422433, 60, 428144, 0, 431169, 60, 436880, 0, 439905, 60, 445616, 0, 448809, 60, 454520, 0, 457545, 60, 463256, 0, 466281, 60, 471992, 0, 475017, 60, 480728, 0, 483753, 60, 489464, 0, 492489, 60, 498200, 0, 501393, 60, 507104, 0, 510129, 60, 515840, 0, 518865, 60, 524576, 0, 527601, 60, 533312, 0, 536337, 60, 542048, 0, 545241, 60, 550952, 0, 553977, 60, 559688, 0, 562713, 60, 568424, 0, 571449, 60, 577160, 0, 580185, 60, 585896, 0, 588921, 60, 594632, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData75));
  idwcai.addMapping(tz75.timezoneID, new idwcai.JsTimeZone(tz75));
  tz76 =
    ((tzData76 = cggcc.safeEval(
      '{"id": "America/Campo_Grande", "transitions": [138820, 60, 142011, 0, 147388, 60, 150075, 0, 156148, 60, 158667, 0, 164716, 60, 167235, 0, 173452, 60, 176307, 0, 182356, 60, 185211, 0, 191092, 60, 193779, 0, 199996, 60, 202347, 0, 208564, 60, 211587, 0, 217300, 60, 220323, 0, 226036, 60, 228891, 0, 234604, 60, 237795, 0, 243364, 60, 246867, 0, 252244, 60, 255435, 0, 260812, 60, 264339, 0, 269716, 60, 272907, 0, 278620, 60, 281643, 0, 287860, 60, 290379, 0, 296260, 60, 299115, 0, 305380, 60, 308019, 0, 313732, 60, 316755, 0, 322972, 60, 325659, 0, 331204, 60, 334227, 0, 340108, 60, 342963, 0, 348844, 60, 351867, 0, 357580, 60, 360603, 0, 366316, 60, 369507, 0, 375220, 60, 378075, 0, 383956, 60, 386811, 0, 392692, 60, 395715, 0, 401428, 60, 404451, 0, 410164, 60, 413187, 0, 418900, 60, 421923, 0, 427804, 60, 430659, 0, 436540, 60, 439395, 0, 445276, 60, 448299, 0, 454012, 60, 457035, 0, 462748, 60, 465939, 0, 471484, 60, 474507, 0, 480388, 60, 483243, 0, 489124, 60, 492147, 0, 497860, 60, 500883, 0, 506596, 60, 509619, 0, 515332, 60, 518355, 0, 524236, 60, 527091, 0, 532972, 60, 535827, 0, 541708, 60, 544563, 0, 550444, 60, 553467, 0, 559180, 60, 562371, 0, 567916, 60, 570939, 0, 576820, 60, 579675, 0, 585556, 60, 588579, 0, 594292, 60], "names": ["AMT", "Amazon Standard Time", "AMST", "Amazon Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData76));
  idwcai.addMapping(tz76.timezoneID, new idwcai.JsTimeZone(tz76));
  tz77 =
    ((tzData77 = cggcc.safeEval(
      '{"id": "America/Cancun", "transitions": [230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 274760, 60, 278287, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326504, 60, 331543, 0, 335408, 60, 340279, 0, 344144, 60, 349015, 0, 352880, 60, 357919, 0, 361616, 60, 366655, 0, 370352, 60, 375391, 0, 379256, 60, 384127, 0, 387992, 60, 392863, 0, 396728, 60, 401599, 0, 405464, 60, 410503, 0, 414200, 60, 419239, 0, 422936, 60, 427975, 0, 431840, 60, 436711, 0, 440576, 60, 445447, 0, 449312, 60, 454351, 0, 458048, 60, 463087, 0, 466784, 60, 471823, 0, 475688, 60, 480559, 0, 484424, 60, 489295, 0, 493160, 60, 498031, 0, 501896, 60, 506935, 0, 510632, 60, 515671, 0, 519368, 60, 524407, 0, 528272, 60, 533143, 0, 537008, 60, 541879, 0, 545744, 60, 550783, 0, 554480, 60, 559519, 0, 563216, 60, 568255, 0, 571952, 60, 576991, 0, 580856, 60, 585727, 0, 589592, 60, 594463, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData77));
  idwcai.addMapping(tz77.timezoneID, new idwcai.JsTimeZone(tz77));
  tz78 =
    ((tzData78 = cggcc.safeEval(
      '{"id": "America/Caracas", "transitions": [], "names": ["VET", "Venezuela Time"], "std_offset": -270}'
    )),
    cggic.createTimeZone_0(tzData78));
  idwcai.addMapping(tz78.timezoneID, new idwcai.JsTimeZone(tz78));
  tz79 =
    ((tzData79 = cggcc.safeEval(
      '{"id": "America/Catamarca", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185546, 0, 199827, 60, 203186, 0, 260811, 60, 264459, 0, 333051, 60, 334898, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData79));
  idwcai.addMapping(tz79.timezoneID, new idwcai.JsTimeZone(tz79));
  tz80 =
    ((tzData80 = cggcc.safeEval(
      '{"id": "America/Cayenne", "transitions": [], "names": ["GFT", "French Guiana Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData80));
  idwcai.addMapping(tz80.timezoneID, new idwcai.JsTimeZone(tz80));
  tz81 =
    ((tzData81 = cggcc.safeEval(
      '{"id": "America/Cayman", "transitions": [], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData81));
  idwcai.addMapping(tz81.timezoneID, new idwcai.JsTimeZone(tz81));
  tz82 =
    ((tzData82 = cggcc.safeEval(
      '{"id": "America/Chicago", "transitions": [2768, 60, 7135, 0, 11504, 60, 16039, 0, 20408, 60, 24775, 0, 29144, 60, 33511, 0, 35192, 60, 42247, 0, 45104, 60, 50983, 0, 55352, 60, 59887, 0, 64088, 60, 68623, 0, 72992, 60, 77359, 0, 81728, 60, 86095, 0, 90464, 60, 94831, 0, 99200, 60, 103567, 0, 107936, 60, 112471, 0, 116672, 60, 121207, 0, 125576, 60, 129943, 0, 134312, 60, 138679, 0, 143048, 60, 147415, 0, 151280, 60, 156151, 0, 160016, 60, 165055, 0, 168752, 60, 173791, 0, 177488, 60, 182527, 0, 186392, 60, 191263, 0, 195128, 60, 199999, 0, 203864, 60, 208903, 0, 212600, 60, 217639, 0, 221336, 60, 226375, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 273920, 60, 278959, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData82));
  idwcai.addMapping(tz82.timezoneID, new idwcai.JsTimeZone(tz82));
  tz83 =
    ((tzData83 = cggcc.safeEval(
      '{"id": "America/Chihuahua", "transitions": [230240, 60, 235111, 0, 238976, 60, 243847, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 274761, 60, 278288, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326505, 60, 331544, 0, 335409, 60, 340280, 0, 344145, 60, 349016, 0, 352881, 60, 357920, 0, 361617, 60, 366656, 0, 370353, 60, 375392, 0, 379257, 60, 384128, 0, 387993, 60, 392864, 0, 396729, 60, 401600, 0, 405465, 60, 410504, 0, 414201, 60, 419240, 0, 422937, 60, 427976, 0, 431841, 60, 436712, 0, 440577, 60, 445448, 0, 449313, 60, 454352, 0, 458049, 60, 463088, 0, 466785, 60, 471824, 0, 475689, 60, 480560, 0, 484425, 60, 489296, 0, 493161, 60, 498032, 0, 501897, 60, 506936, 0, 510633, 60, 515672, 0, 519369, 60, 524408, 0, 528273, 60, 533144, 0, 537009, 60, 541880, 0, 545745, 60, 550784, 0, 554481, 60, 559520, 0, 563217, 60, 568256, 0, 571953, 60, 576992, 0, 580857, 60, 585728, 0, 589593, 60, 594464, 0], "names": ["MST", "Mexican Pacific Standard Time", "MDT", "Mexican Pacific Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData83));
  idwcai.addMapping(tz83.timezoneID, new idwcai.JsTimeZone(tz83));
  tz84 =
    ((tzData84 = cggcc.safeEval(
      '{"id": "America/Coral_Harbour", "transitions": [], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData84));
  idwcai.addMapping(tz84.timezoneID, new idwcai.JsTimeZone(tz84));
  tz85 =
    ((tzData85 = cggcc.safeEval(
      '{"id": "America/Cordoba", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182355, 60, 185546, 0, 199827, 60, 203186, 0, 333051, 60, 334898, 0, 340107, 60, 343634, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData85));
  idwcai.addMapping(tz85.timezoneID, new idwcai.JsTimeZone(tz85));
  tz86 =
    ((tzData86 = cggcc.safeEval(
      '{"id": "America/Costa_Rica", "transitions": [80214, 60, 82565, 0, 88950, 60, 91301, 0, 184518, 60, 188429, 0, 193254, 60, 194621, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData86));
  idwcai.addMapping(tz86.timezoneID, new idwcai.JsTimeZone(tz86));
  tz87 =
    ((tzData87 = cggcc.safeEval(
      '{"id": "America/Creston", "transitions": [], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData87));
  idwcai.addMapping(tz87.timezoneID, new idwcai.JsTimeZone(tz87));
  tz88 =
    ((tzData88 = cggcc.safeEval(
      '{"id": "America/Cuiaba", "transitions": [138820, 60, 142011, 0, 147388, 60, 150075, 0, 156148, 60, 158667, 0, 164716, 60, 167235, 0, 173452, 60, 176307, 0, 182356, 60, 185211, 0, 191092, 60, 193779, 0, 199996, 60, 202347, 0, 208564, 60, 211587, 0, 217300, 60, 220323, 0, 226036, 60, 228891, 0, 234604, 60, 237795, 0, 243364, 60, 246867, 0, 252244, 60, 255435, 0, 260812, 60, 264339, 0, 269716, 60, 272907, 0, 278620, 60, 281643, 0, 287860, 60, 290379, 0, 305380, 60, 308019, 0, 313732, 60, 316755, 0, 322972, 60, 325659, 0, 331204, 60, 334227, 0, 340108, 60, 342963, 0, 348844, 60, 351867, 0, 357580, 60, 360603, 0, 366316, 60, 369507, 0, 375220, 60, 378075, 0, 383956, 60, 386811, 0, 392692, 60, 395715, 0, 401428, 60, 404451, 0, 410164, 60, 413187, 0, 418900, 60, 421923, 0, 427804, 60, 430659, 0, 436540, 60, 439395, 0, 445276, 60, 448299, 0, 454012, 60, 457035, 0, 462748, 60, 465939, 0, 471484, 60, 474507, 0, 480388, 60, 483243, 0, 489124, 60, 492147, 0, 497860, 60, 500883, 0, 506596, 60, 509619, 0, 515332, 60, 518355, 0, 524236, 60, 527091, 0, 532972, 60, 535827, 0, 541708, 60, 544563, 0, 550444, 60, 553467, 0, 559180, 60, 562371, 0, 567916, 60, 570939, 0, 576820, 60, 579675, 0, 585556, 60, 588579, 0, 594292, 60], "names": ["AMT", "Amazon Standard Time", "AMST", "Amazon Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData88));
  idwcai.addMapping(tz88.timezoneID, new idwcai.JsTimeZone(tz88));
  tz89 =
    ((tzData89 = cggcc.safeEval(
      '{"id": "America/Curacao", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData89));
  idwcai.addMapping(tz89.timezoneID, new idwcai.JsTimeZone(tz89));
  tz90 =
    ((tzData90 = cggcc.safeEval(
      '{"id": "America/Danmarkshavn", "transitions": [89957, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData90));
  idwcai.addMapping(tz90.timezoneID, new idwcai.JsTimeZone(tz90));
  tz91 =
    ((tzData91 = cggcc.safeEval(
      '{"id": "America/Dawson", "transitions": [90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125578, 60, 129945, 0, 134314, 60, 138681, 0, 143050, 60, 147417, 0, 151282, 60, 156153, 0, 160018, 60, 165057, 0, 168754, 60, 173793, 0, 177490, 60, 182529, 0, 186394, 60, 191265, 0, 195130, 60, 200001, 0, 203866, 60, 208905, 0, 212602, 60, 217641, 0, 221338, 60, 226377, 0, 230242, 60, 235113, 0, 238978, 60, 243849, 0, 247714, 60, 252585, 0, 256450, 60, 261489, 0, 265186, 60, 270225, 0, 273922, 60, 278961, 0, 282826, 60, 287697, 0, 291562, 60, 296433, 0, 300298, 60, 305337, 0, 309034, 60, 314073, 0, 317770, 60, 322809, 0, 326002, 60, 331713, 0, 334738, 60, 340449, 0, 343474, 60, 349185, 0, 352378, 60, 358089, 0, 361114, 60, 366825, 0, 369850, 60, 375561, 0, 378586, 60, 384297, 0, 387322, 60, 393033, 0, 396058, 60, 401769, 0, 404962, 60, 410673, 0, 413698, 60, 419409, 0, 422434, 60, 428145, 0, 431170, 60, 436881, 0, 439906, 60, 445617, 0, 448810, 60, 454521, 0, 457546, 60, 463257, 0, 466282, 60, 471993, 0, 475018, 60, 480729, 0, 483754, 60, 489465, 0, 492490, 60, 498201, 0, 501394, 60, 507105, 0, 510130, 60, 515841, 0, 518866, 60, 524577, 0, 527602, 60, 533313, 0, 536338, 60, 542049, 0, 545242, 60, 550953, 0, 553978, 60, 559689, 0, 562714, 60, 568425, 0, 571450, 60, 577161, 0, 580186, 60, 585897, 0, 588922, 60, 594633, 0], "names": ["PST", "Pacific Standard Time", "PDT", "Pacific Daylight Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData91));
  idwcai.addMapping(tz91.timezoneID, new idwcai.JsTimeZone(tz91));
  tz92 =
    ((tzData92 = cggcc.safeEval(
      '{"id": "America/Dawson_Creek", "transitions": [2770, 60, 7137, 0, 11506, 60, 16041, 0, 20410, 60, 23337, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData92));
  idwcai.addMapping(tz92.timezoneID, new idwcai.JsTimeZone(tz92));
  tz93 =
    ((tzData93 = cggcc.safeEval(
      '{"id": "America/Denver", "transitions": [2769, 60, 7136, 0, 11505, 60, 16040, 0, 20409, 60, 24776, 0, 29145, 60, 33512, 0, 35193, 60, 42248, 0, 45105, 60, 50984, 0, 55353, 60, 59888, 0, 64089, 60, 68624, 0, 72993, 60, 77360, 0, 81729, 60, 86096, 0, 90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326001, 60, 331712, 0, 334737, 60, 340448, 0, 343473, 60, 349184, 0, 352377, 60, 358088, 0, 361113, 60, 366824, 0, 369849, 60, 375560, 0, 378585, 60, 384296, 0, 387321, 60, 393032, 0, 396057, 60, 401768, 0, 404961, 60, 410672, 0, 413697, 60, 419408, 0, 422433, 60, 428144, 0, 431169, 60, 436880, 0, 439905, 60, 445616, 0, 448809, 60, 454520, 0, 457545, 60, 463256, 0, 466281, 60, 471992, 0, 475017, 60, 480728, 0, 483753, 60, 489464, 0, 492489, 60, 498200, 0, 501393, 60, 507104, 0, 510129, 60, 515840, 0, 518865, 60, 524576, 0, 527601, 60, 533312, 0, 536337, 60, 542048, 0, 545241, 60, 550952, 0, 553977, 60, 559688, 0, 562713, 60, 568424, 0, 571449, 60, 577160, 0, 580185, 60, 585896, 0, 588921, 60, 594632, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData93));
  idwcai.addMapping(tz93.timezoneID, new idwcai.JsTimeZone(tz93));
  tz94 =
    ((tzData94 = cggcc.safeEval(
      '{"id": "America/Detroit", "transitions": [29143, 60, 33510, 0, 35191, 60, 42246, 0, 46615, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData94));
  idwcai.addMapping(tz94.timezoneID, new idwcai.JsTimeZone(tz94));
  tz95 =
    ((tzData95 = cggcc.safeEval(
      '{"id": "America/Dominica", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData95));
  idwcai.addMapping(tz95.timezoneID, new idwcai.JsTimeZone(tz95));
  tz96 =
    ((tzData96 = cggcc.safeEval(
      '{"id": "America/Edmonton", "transitions": [20409, 60, 24776, 0, 29145, 60, 33512, 0, 37881, 60, 42248, 0, 46617, 60, 50984, 0, 55353, 60, 59888, 0, 64089, 60, 68624, 0, 72993, 60, 77360, 0, 81729, 60, 86096, 0, 90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326001, 60, 331712, 0, 334737, 60, 340448, 0, 343473, 60, 349184, 0, 352377, 60, 358088, 0, 361113, 60, 366824, 0, 369849, 60, 375560, 0, 378585, 60, 384296, 0, 387321, 60, 393032, 0, 396057, 60, 401768, 0, 404961, 60, 410672, 0, 413697, 60, 419408, 0, 422433, 60, 428144, 0, 431169, 60, 436880, 0, 439905, 60, 445616, 0, 448809, 60, 454520, 0, 457545, 60, 463256, 0, 466281, 60, 471992, 0, 475017, 60, 480728, 0, 483753, 60, 489464, 0, 492489, 60, 498200, 0, 501393, 60, 507104, 0, 510129, 60, 515840, 0, 518865, 60, 524576, 0, 527601, 60, 533312, 0, 536337, 60, 542048, 0, 545241, 60, 550952, 0, 553977, 60, 559688, 0, 562713, 60, 568424, 0, 571449, 60, 577160, 0, 580185, 60, 585896, 0, 588921, 60, 594632, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData96));
  idwcai.addMapping(tz96.timezoneID, new idwcai.JsTimeZone(tz96));
  tz97 =
    ((tzData97 = cggcc.safeEval(
      '{"id": "America/Eirunepe", "transitions": [138821, 60, 142012, 0, 147389, 60, 150076, 0, 156149, 60, 158668, 0, 208565, 60, 211588, 0], "names": ["AMT", "Acre Standard Time", "AMST", "Acre Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData97));
  idwcai.addMapping(tz97.timezoneID, new idwcai.JsTimeZone(tz97));
  tz98 =
    ((tzData98 = cggcc.safeEval(
      '{"id": "America/El_Salvador", "transitions": [151950, 60, 155477, 0, 160686, 60, 164213, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData98));
  idwcai.addMapping(tz98.timezoneID, new idwcai.JsTimeZone(tz98));
  tz99 =
    ((tzData99 = cggcc.safeEval(
      '{"id": "America/Fortaleza", "transitions": [138819, 60, 142010, 0, 147387, 60, 150074, 0, 156147, 60, 158666, 0, 164715, 60, 167234, 0, 173451, 60, 176306, 0, 260811, 60, 264338, 0, 269715, 60, 270050, 0, 278619, 60, 281642, 0], "names": ["BRT", "Brasilia Standard Time", "BRST", "Brasilia Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData99));
  idwcai.addMapping(tz99.timezoneID, new idwcai.JsTimeZone(tz99));
  tz100 =
    ((tzData100 = cggcc.safeEval(
      '{"id": "America/Glace_Bay", "transitions": [20406, 60, 24773, 0, 29142, 60, 33509, 0, 37878, 60, 42245, 0, 46614, 60, 50981, 0, 55350, 60, 59885, 0, 64086, 60, 68621, 0, 72990, 60, 77357, 0, 81726, 60, 86093, 0, 90462, 60, 94829, 0, 99198, 60, 103565, 0, 107934, 60, 112469, 0, 116670, 60, 121205, 0, 125574, 60, 129941, 0, 134310, 60, 138677, 0, 143046, 60, 147413, 0, 151278, 60, 156149, 0, 160014, 60, 165053, 0, 168750, 60, 173789, 0, 177486, 60, 182525, 0, 186390, 60, 191261, 0, 195126, 60, 199997, 0, 203862, 60, 208901, 0, 212598, 60, 217637, 0, 221334, 60, 226373, 0, 230238, 60, 235109, 0, 238974, 60, 243845, 0, 247710, 60, 252581, 0, 256446, 60, 261485, 0, 265182, 60, 270221, 0, 273918, 60, 278957, 0, 282822, 60, 287693, 0, 291558, 60, 296429, 0, 300294, 60, 305333, 0, 309030, 60, 314069, 0, 317766, 60, 322805, 0, 325998, 60, 331709, 0, 334734, 60, 340445, 0, 343470, 60, 349181, 0, 352374, 60, 358085, 0, 361110, 60, 366821, 0, 369846, 60, 375557, 0, 378582, 60, 384293, 0, 387318, 60, 393029, 0, 396054, 60, 401765, 0, 404958, 60, 410669, 0, 413694, 60, 419405, 0, 422430, 60, 428141, 0, 431166, 60, 436877, 0, 439902, 60, 445613, 0, 448806, 60, 454517, 0, 457542, 60, 463253, 0, 466278, 60, 471989, 0, 475014, 60, 480725, 0, 483750, 60, 489461, 0, 492486, 60, 498197, 0, 501390, 60, 507101, 0, 510126, 60, 515837, 0, 518862, 60, 524573, 0, 527598, 60, 533309, 0, 536334, 60, 542045, 0, 545238, 60, 550949, 0, 553974, 60, 559685, 0, 562710, 60, 568421, 0, 571446, 60, 577157, 0, 580182, 60, 585893, 0, 588918, 60, 594629, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData100));
  idwcai.addMapping(tz100.timezoneID, new idwcai.JsTimeZone(tz100));
  tz101 =
    ((tzData101 = cggcc.safeEval(
      '{"id": "America/Godthab", "transitions": [89957, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["WGT", "West Greenland Standard Time", "WGST", "West Greenland Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData101));
  idwcai.addMapping(tz101.timezoneID, new idwcai.JsTimeZone(tz101));
  tz102 =
    ((tzData102 = cggcc.safeEval(
      '{"id": "America/Goose_Bay", "transitions": [2766, 60, 7133, 0, 11502, 60, 16037, 0, 20406, 60, 24773, 0, 29142, 60, 33509, 0, 37878, 60, 42245, 0, 46614, 60, 50981, 0, 55350, 60, 59885, 0, 64086, 60, 68621, 0, 72990, 60, 77357, 0, 81726, 60, 86093, 0, 90462, 60, 94829, 0, 99198, 60, 103565, 0, 107934, 60, 112469, 0, 116670, 60, 121205, 0, 125574, 60, 129941, 0, 134310, 60, 138677, 0, 143046, 60, 147413, 0, 151276, 60, 156147, 0, 168748, 60, 173787, 0, 177484, 60, 182523, 0, 186388, 60, 191259, 0, 195124, 60, 199995, 0, 203860, 60, 208899, 0, 212596, 60, 217635, 0, 221332, 60, 226371, 0, 230236, 60, 235107, 0, 238972, 60, 243843, 0, 247708, 60, 252579, 0, 256444, 60, 261483, 0, 265180, 60, 270219, 0, 273916, 60, 278955, 0, 282820, 60, 287691, 0, 291556, 60, 296427, 0, 300292, 60, 305331, 0, 309028, 60, 314067, 0, 317764, 60, 322803, 0, 325996, 60, 331707, 0, 334732, 60, 340443, 0, 343468, 60, 349179, 0, 352372, 60, 358083, 0, 361108, 60, 366821, 0, 369846, 60, 375557, 0, 378582, 60, 384293, 0, 387318, 60, 393029, 0, 396054, 60, 401765, 0, 404958, 60, 410669, 0, 413694, 60, 419405, 0, 422430, 60, 428141, 0, 431166, 60, 436877, 0, 439902, 60, 445613, 0, 448806, 60, 454517, 0, 457542, 60, 463253, 0, 466278, 60, 471989, 0, 475014, 60, 480725, 0, 483750, 60, 489461, 0, 492486, 60, 498197, 0, 501390, 60, 507101, 0, 510126, 60, 515837, 0, 518862, 60, 524573, 0, 527598, 60, 533309, 0, 536334, 60, 542045, 0, 545238, 60, 550949, 0, 553974, 60, 559685, 0, 562710, 60, 568421, 0, 571446, 60, 577157, 0, 580182, 60, 585893, 0, 588918, 60, 594629, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData102));
  idwcai.addMapping(tz102.timezoneID, new idwcai.JsTimeZone(tz102));
  tz103 =
    ((tzData103 = cggcc.safeEval(
      '{"id": "America/Grand_Turk", "transitions": [81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData103));
  idwcai.addMapping(tz103.timezoneID, new idwcai.JsTimeZone(tz103));
  tz104 =
    ((tzData104 = cggcc.safeEval(
      '{"id": "America/Grenada", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData104));
  idwcai.addMapping(tz104.timezoneID, new idwcai.JsTimeZone(tz104));
  tz105 =
    ((tzData105 = cggcc.safeEval(
      '{"id": "America/Guadeloupe", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData105));
  idwcai.addMapping(tz105.timezoneID, new idwcai.JsTimeZone(tz105));
  tz106 =
    ((tzData106 = cggcc.safeEval(
      '{"id": "America/Guatemala", "transitions": [34182, 60, 36365, 0, 117318, 60, 120293, 0, 186030, 60, 190061, 0, 318438, 60, 322133, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData106));
  idwcai.addMapping(tz106.timezoneID, new idwcai.JsTimeZone(tz106));
  tz107 =
    ((tzData107 = cggcc.safeEval(
      '{"id": "America/Guayaquil", "transitions": [], "names": ["ECT", "Ecuador Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData107));
  idwcai.addMapping(tz107.timezoneID, new idwcai.JsTimeZone(tz107));
  tz108 =
    ((tzData108 = cggcc.safeEval(
      '{"id": "America/Guyana", "transitions": [], "names": ["GYT", "Guyana Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData108));
  idwcai.addMapping(tz108.timezoneID, new idwcai.JsTimeZone(tz108));
  tz109 =
    ((tzData109 = cggcc.safeEval(
      '{"id": "America/Halifax", "transitions": [2766, 60, 7133, 0, 11502, 60, 16037, 0, 20406, 60, 24773, 0, 29142, 60, 33509, 0, 37878, 60, 42245, 0, 46614, 60, 50981, 0, 55350, 60, 59885, 0, 64086, 60, 68621, 0, 72990, 60, 77357, 0, 81726, 60, 86093, 0, 90462, 60, 94829, 0, 99198, 60, 103565, 0, 107934, 60, 112469, 0, 116670, 60, 121205, 0, 125574, 60, 129941, 0, 134310, 60, 138677, 0, 143046, 60, 147413, 0, 151278, 60, 156149, 0, 160014, 60, 165053, 0, 168750, 60, 173789, 0, 177486, 60, 182525, 0, 186390, 60, 191261, 0, 195126, 60, 199997, 0, 203862, 60, 208901, 0, 212598, 60, 217637, 0, 221334, 60, 226373, 0, 230238, 60, 235109, 0, 238974, 60, 243845, 0, 247710, 60, 252581, 0, 256446, 60, 261485, 0, 265182, 60, 270221, 0, 273918, 60, 278957, 0, 282822, 60, 287693, 0, 291558, 60, 296429, 0, 300294, 60, 305333, 0, 309030, 60, 314069, 0, 317766, 60, 322805, 0, 325998, 60, 331709, 0, 334734, 60, 340445, 0, 343470, 60, 349181, 0, 352374, 60, 358085, 0, 361110, 60, 366821, 0, 369846, 60, 375557, 0, 378582, 60, 384293, 0, 387318, 60, 393029, 0, 396054, 60, 401765, 0, 404958, 60, 410669, 0, 413694, 60, 419405, 0, 422430, 60, 428141, 0, 431166, 60, 436877, 0, 439902, 60, 445613, 0, 448806, 60, 454517, 0, 457542, 60, 463253, 0, 466278, 60, 471989, 0, 475014, 60, 480725, 0, 483750, 60, 489461, 0, 492486, 60, 498197, 0, 501390, 60, 507101, 0, 510126, 60, 515837, 0, 518862, 60, 524573, 0, 527598, 60, 533309, 0, 536334, 60, 542045, 0, 545238, 60, 550949, 0, 553974, 60, 559685, 0, 562710, 60, 568421, 0, 571446, 60, 577157, 0, 580182, 60, 585893, 0, 588918, 60, 594629, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData109));
  idwcai.addMapping(tz109.timezoneID, new idwcai.JsTimeZone(tz109));
  tz110 =
    ((tzData110 = cggcc.safeEval(
      '{"id": "America/Havana", "transitions": [2765, 60, 7132, 0, 11501, 60, 16036, 0, 20405, 60, 24268, 0, 29141, 60, 33028, 0, 37877, 60, 41788, 0, 46613, 60, 50980, 0, 55349, 60, 59884, 0, 64085, 60, 68620, 0, 73157, 60, 76852, 0, 80717, 60, 85756, 0, 89453, 60, 94492, 0, 99533, 60, 103228, 0, 108269, 60, 111964, 0, 117005, 60, 120700, 0, 125741, 60, 129604, 0, 134477, 60, 138340, 0, 142037, 60, 147076, 0, 150773, 60, 155812, 0, 159677, 60, 164548, 0, 168413, 60, 173284, 0, 177485, 60, 182188, 0, 186389, 60, 190925, 0, 195125, 60, 199661, 0, 203861, 60, 208397, 0, 212597, 60, 217133, 0, 221333, 60, 225869, 0, 230237, 60, 234605, 0, 238973, 60, 243509, 0, 247541, 60, 252581, 0, 256277, 60, 261485, 0, 265181, 60, 270221, 0, 273917, 60, 278957, 0, 282821, 60, 287693, 0, 291557, 60, 296429, 0, 300293, 60, 322805, 0, 325997, 60, 331541, 0, 334901, 60, 340277, 0, 343469, 60, 349013, 0, 352373, 60, 357917, 0, 361277, 60, 366989, 0, 370349, 60, 375557, 0, 378581, 60, 384293, 0, 387317, 60, 393029, 0, 396053, 60, 401765, 0, 404957, 60, 410669, 0, 413693, 60, 419405, 0, 422429, 60, 428141, 0, 431165, 60, 436877, 0, 439901, 60, 445613, 0, 448805, 60, 454517, 0, 457541, 60, 463253, 0, 466277, 60, 471989, 0, 475013, 60, 480725, 0, 483749, 60, 489461, 0, 492485, 60, 498197, 0, 501389, 60, 507101, 0, 510125, 60, 515837, 0, 518861, 60, 524573, 0, 527597, 60, 533309, 0, 536333, 60, 542045, 0, 545237, 60, 550949, 0, 553973, 60, 559685, 0, 562709, 60, 568421, 0, 571445, 60, 577157, 0, 580181, 60, 585893, 0, 588917, 60, 594629, 0], "names": ["CST", "Cuba Standard Time", "CDT", "Cuba Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData110));
  idwcai.addMapping(tz110.timezoneID, new idwcai.JsTimeZone(tz110));
  tz111 =
    ((tzData111 = cggcc.safeEval(
      '{"id": "America/Hermosillo", "transitions": [230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0], "names": ["MST", "Mexican Pacific Standard Time", "MDT", "Mexican Pacific Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData111));
  idwcai.addMapping(tz111.timezoneID, new idwcai.JsTimeZone(tz111));
  tz112 =
    ((tzData112 = cggcc.safeEval(
      '{"id": "America/Indiana/Knox", "transitions": [2768, 60, 7135, 0, 11504, 60, 16039, 0, 20408, 60, 24775, 0, 29144, 60, 33511, 0, 35192, 60, 42247, 0, 45104, 60, 50983, 0, 55352, 60, 59887, 0, 64088, 60, 68623, 0, 72992, 60, 77359, 0, 81728, 60, 86095, 0, 90464, 60, 94831, 0, 99200, 60, 103567, 0, 107936, 60, 112471, 0, 116672, 60, 121207, 0, 125576, 60, 129943, 0, 134312, 60, 138679, 0, 143048, 60, 147415, 0, 151280, 60, 156151, 0, 160016, 60, 165055, 0, 168752, 60, 173791, 0, 177488, 60, 182527, 0, 186392, 60, 191263, 0, 317767, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData112));
  idwcai.addMapping(tz112.timezoneID, new idwcai.JsTimeZone(tz112));
  tz113 =
    ((tzData113 = cggcc.safeEval(
      '{"id": "America/Indiana/Marengo", "transitions": [2767, 60, 7134, 0, 11503, 60, 16038, 0, 20407, 60, 24774, 0, 29143, 60, 33510, 0, 45103, 60, 50982, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData113));
  idwcai.addMapping(tz113.timezoneID, new idwcai.JsTimeZone(tz113));
  tz114 =
    ((tzData114 = cggcc.safeEval(
      '{"id": "America/Indiana/Petersburg", "transitions": [2768, 60, 7135, 0, 11504, 60, 16039, 0, 20408, 60, 24775, 0, 29144, 60, 33511, 0, 35192, 60, 42247, 0, 45104, 60, 50983, 0, 55352, 60, 59887, 0, 64088, 60, 68623, 0, 317767, 60, 322807, 0, 326000, 60, 331711, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData114));
  idwcai.addMapping(tz114.timezoneID, new idwcai.JsTimeZone(tz114));
  tz115 =
    ((tzData115 = cggcc.safeEval(
      '{"id": "America/Indianapolis", "transitions": [2767, 60, 7134, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData115));
  idwcai.addMapping(tz115.timezoneID, new idwcai.JsTimeZone(tz115));
  tz116 =
    ((tzData116 = cggcc.safeEval(
      '{"id": "America/Indiana/Tell_City", "transitions": [2767, 60, 7134, 0, 317767, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData116));
  idwcai.addMapping(tz116.timezoneID, new idwcai.JsTimeZone(tz116));
  tz117 =
    ((tzData117 = cggcc.safeEval(
      '{"id": "America/Indiana/Vevay", "transitions": [2767, 60, 7134, 0, 11503, 60, 16038, 0, 20407, 60, 24774, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData117));
  idwcai.addMapping(tz117.timezoneID, new idwcai.JsTimeZone(tz117));
  tz118 =
    ((tzData118 = cggcc.safeEval(
      '{"id": "America/Indiana/Vincennes", "transitions": [2767, 60, 7134, 0, 317767, 60, 322807, 0, 326000, 60, 331711, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData118));
  idwcai.addMapping(tz118.timezoneID, new idwcai.JsTimeZone(tz118));
  tz119 =
    ((tzData119 = cggcc.safeEval(
      '{"id": "America/Indiana/Winamac", "transitions": [2767, 60, 7134, 0, 317767, 60, 322807, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData119));
  idwcai.addMapping(tz119.timezoneID, new idwcai.JsTimeZone(tz119));
  tz120 =
    ((tzData120 = cggcc.safeEval(
      '{"id": "America/Inuvik", "transitions": [90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326001, 60, 331712, 0, 334737, 60, 340448, 0, 343473, 60, 349184, 0, 352377, 60, 358088, 0, 361113, 60, 366824, 0, 369849, 60, 375560, 0, 378585, 60, 384296, 0, 387321, 60, 393032, 0, 396057, 60, 401768, 0, 404961, 60, 410672, 0, 413697, 60, 419408, 0, 422433, 60, 428144, 0, 431169, 60, 436880, 0, 439905, 60, 445616, 0, 448809, 60, 454520, 0, 457545, 60, 463256, 0, 466281, 60, 471992, 0, 475017, 60, 480728, 0, 483753, 60, 489464, 0, 492489, 60, 498200, 0, 501393, 60, 507104, 0, 510129, 60, 515840, 0, 518865, 60, 524576, 0, 527601, 60, 533312, 0, 536337, 60, 542048, 0, 545241, 60, 550952, 0, 553977, 60, 559688, 0, 562713, 60, 568424, 0, 571449, 60, 577160, 0, 580185, 60, 585896, 0, 588921, 60, 594632, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData120));
  idwcai.addMapping(tz120.timezoneID, new idwcai.JsTimeZone(tz120));
  tz121 =
    ((tzData121 = cggcc.safeEval(
      '{"id": "America/Iqaluit", "transitions": [90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265184, 60, 270223, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData121));
  idwcai.addMapping(tz121.timezoneID, new idwcai.JsTimeZone(tz121));
  tz122 =
    ((tzData122 = cggcc.safeEval(
      '{"id": "America/Jamaica", "transitions": [37879, 60, 42246, 0, 45103, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData122));
  idwcai.addMapping(tz122.timezoneID, new idwcai.JsTimeZone(tz122));
  tz123 =
    ((tzData123 = cggcc.safeEval(
      '{"id": "America/Jujuy", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182524, 60, 185883, 0, 199827, 60, 203186, 0, 333051, 60, 334898, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData123));
  idwcai.addMapping(tz123.timezoneID, new idwcai.JsTimeZone(tz123));
  tz124 =
    ((tzData124 = cggcc.safeEval(
      '{"id": "America/Juneau", "transitions": [2770, 60, 7137, 0, 11506, 60, 16041, 0, 20410, 60, 24777, 0, 29146, 60, 33513, 0, 35194, 60, 42249, 0, 45106, 60, 50985, 0, 55354, 60, 59889, 0, 64090, 60, 68625, 0, 72994, 60, 77361, 0, 81730, 60, 86097, 0, 90466, 60, 94834, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125579, 60, 129946, 0, 134315, 60, 138682, 0, 143051, 60, 147418, 0, 151283, 60, 156154, 0, 160019, 60, 165058, 0, 168755, 60, 173794, 0, 177491, 60, 182530, 0, 186395, 60, 191266, 0, 195131, 60, 200002, 0, 203867, 60, 208906, 0, 212603, 60, 217642, 0, 221339, 60, 226378, 0, 230243, 60, 235114, 0, 238979, 60, 243850, 0, 247715, 60, 252586, 0, 256451, 60, 261490, 0, 265187, 60, 270226, 0, 273923, 60, 278962, 0, 282827, 60, 287698, 0, 291563, 60, 296434, 0, 300299, 60, 305338, 0, 309035, 60, 314074, 0, 317771, 60, 322810, 0, 326003, 60, 331714, 0, 334739, 60, 340450, 0, 343475, 60, 349186, 0, 352379, 60, 358090, 0, 361115, 60, 366826, 0, 369851, 60, 375562, 0, 378587, 60, 384298, 0, 387323, 60, 393034, 0, 396059, 60, 401770, 0, 404963, 60, 410674, 0, 413699, 60, 419410, 0, 422435, 60, 428146, 0, 431171, 60, 436882, 0, 439907, 60, 445618, 0, 448811, 60, 454522, 0, 457547, 60, 463258, 0, 466283, 60, 471994, 0, 475019, 60, 480730, 0, 483755, 60, 489466, 0, 492491, 60, 498202, 0, 501395, 60, 507106, 0, 510131, 60, 515842, 0, 518867, 60, 524578, 0, 527603, 60, 533314, 0, 536339, 60, 542050, 0, 545243, 60, 550954, 0, 553979, 60, 559690, 0, 562715, 60, 568426, 0, 571451, 60, 577162, 0, 580187, 60, 585898, 0, 588923, 60, 594634, 0], "names": ["AKST", "Alaska Standard Time", "AKDT", "Alaska Daylight Time"], "std_offset": -540}'
    )),
    cggic.createTimeZone_0(tzData124));
  idwcai.addMapping(tz124.timezoneID, new idwcai.JsTimeZone(tz124));
  tz125 =
    ((tzData125 = cggcc.safeEval(
      '{"id": "America/Kentucky/Monticello", "transitions": [2768, 60, 7135, 0, 11504, 60, 16039, 0, 20408, 60, 24775, 0, 29144, 60, 33511, 0, 35192, 60, 42247, 0, 45104, 60, 50983, 0, 55352, 60, 59887, 0, 64088, 60, 68623, 0, 72992, 60, 77359, 0, 81728, 60, 86095, 0, 90464, 60, 94831, 0, 99200, 60, 103567, 0, 107936, 60, 112471, 0, 116672, 60, 121207, 0, 125576, 60, 129943, 0, 134312, 60, 138679, 0, 143048, 60, 147415, 0, 151280, 60, 156151, 0, 160016, 60, 165055, 0, 168752, 60, 173791, 0, 177488, 60, 182527, 0, 186392, 60, 191263, 0, 195128, 60, 199999, 0, 203864, 60, 208903, 0, 212600, 60, 217639, 0, 221336, 60, 226375, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData125));
  idwcai.addMapping(tz125.timezoneID, new idwcai.JsTimeZone(tz125));
  tz126 =
    ((tzData126 = cggcc.safeEval(
      '{"id": "America/Kralendijk", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData126));
  idwcai.addMapping(tz126.timezoneID, new idwcai.JsTimeZone(tz126));
  tz127 =
    ((tzData127 = cggcc.safeEval(
      '{"id": "America/La_Paz", "transitions": [], "names": ["BOT", "Bolivia Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData127));
  idwcai.addMapping(tz127.timezoneID, new idwcai.JsTimeZone(tz127));
  tz128 =
    ((tzData128 = cggcc.safeEval(
      '{"id": "America/Lima", "transitions": [140261, 60, 142420, 0, 149021, 60, 151180, 0, 175325, 60, 177484, 0, 210389, 60, 212548, 0], "names": ["PET", "Peru Standard Time", "PEST", "Peru Summer Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData128));
  idwcai.addMapping(tz128.timezoneID, new idwcai.JsTimeZone(tz128));
  tz129 =
    ((tzData129 = cggcc.safeEval(
      '{"id": "America/Los_Angeles", "transitions": [2770, 60, 7137, 0, 11506, 60, 16041, 0, 20410, 60, 24777, 0, 29146, 60, 33513, 0, 35194, 60, 42249, 0, 45106, 60, 50985, 0, 55354, 60, 59889, 0, 64090, 60, 68625, 0, 72994, 60, 77361, 0, 81730, 60, 86097, 0, 90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125578, 60, 129945, 0, 134314, 60, 138681, 0, 143050, 60, 147417, 0, 151282, 60, 156153, 0, 160018, 60, 165057, 0, 168754, 60, 173793, 0, 177490, 60, 182529, 0, 186394, 60, 191265, 0, 195130, 60, 200001, 0, 203866, 60, 208905, 0, 212602, 60, 217641, 0, 221338, 60, 226377, 0, 230242, 60, 235113, 0, 238978, 60, 243849, 0, 247714, 60, 252585, 0, 256450, 60, 261489, 0, 265186, 60, 270225, 0, 273922, 60, 278961, 0, 282826, 60, 287697, 0, 291562, 60, 296433, 0, 300298, 60, 305337, 0, 309034, 60, 314073, 0, 317770, 60, 322809, 0, 326002, 60, 331713, 0, 334738, 60, 340449, 0, 343474, 60, 349185, 0, 352378, 60, 358089, 0, 361114, 60, 366825, 0, 369850, 60, 375561, 0, 378586, 60, 384297, 0, 387322, 60, 393033, 0, 396058, 60, 401769, 0, 404962, 60, 410673, 0, 413698, 60, 419409, 0, 422434, 60, 428145, 0, 431170, 60, 436881, 0, 439906, 60, 445617, 0, 448810, 60, 454521, 0, 457546, 60, 463257, 0, 466282, 60, 471993, 0, 475018, 60, 480729, 0, 483754, 60, 489465, 0, 492490, 60, 498201, 0, 501394, 60, 507105, 0, 510130, 60, 515841, 0, 518866, 60, 524577, 0, 527602, 60, 533313, 0, 536338, 60, 542049, 0, 545242, 60, 550953, 0, 553978, 60, 559689, 0, 562714, 60, 568425, 0, 571450, 60, 577161, 0, 580186, 60, 585897, 0, 588922, 60, 594633, 0], "names": ["PST", "Pacific Standard Time", "PDT", "Pacific Daylight Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData129));
  idwcai.addMapping(tz129.timezoneID, new idwcai.JsTimeZone(tz129));
  tz130 =
    ((tzData130 = cggcc.safeEval(
      '{"id": "America/Louisville", "transitions": [2767, 60, 7134, 0, 11503, 60, 16038, 0, 20407, 60, 24774, 0, 29143, 60, 33510, 0, 45103, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData130));
  idwcai.addMapping(tz130.timezoneID, new idwcai.JsTimeZone(tz130));
  tz131 =
    ((tzData131 = cggcc.safeEval(
      '{"id": "America/Lower_Princes", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData131));
  idwcai.addMapping(tz131.timezoneID, new idwcai.JsTimeZone(tz131));
  tz132 =
    ((tzData132 = cggcc.safeEval(
      '{"id": "America/Maceio", "transitions": [138819, 60, 142010, 0, 147387, 60, 150074, 0, 156147, 60, 158666, 0, 164715, 60, 167234, 0, 173451, 60, 176306, 0, 226035, 60, 228890, 0, 260811, 60, 264338, 0, 269715, 60, 270050, 0, 278619, 60, 281642, 0], "names": ["BRT", "Brasilia Standard Time", "BRST", "Brasilia Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData132));
  idwcai.addMapping(tz132.timezoneID, new idwcai.JsTimeZone(tz132));
  tz133 =
    ((tzData133 = cggcc.safeEval(
      '{"id": "America/Managua", "transitions": [80718, 60, 83093, 0, 89454, 60, 91829, 0, 309198, 60, 313397, 0, 318440, 60, 322134, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData133));
  idwcai.addMapping(tz133.timezoneID, new idwcai.JsTimeZone(tz133));
  tz134 =
    ((tzData134 = cggcc.safeEval(
      '{"id": "America/Manaus", "transitions": [138820, 60, 142011, 0, 147388, 60, 150075, 0, 156148, 60, 158667, 0, 208564, 60, 211587, 0], "names": ["AMT", "Amazon Standard Time", "AMST", "Amazon Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData134));
  idwcai.addMapping(tz134.timezoneID, new idwcai.JsTimeZone(tz134));
  tz135 =
    ((tzData135 = cggcc.safeEval(
      '{"id": "America/Marigot", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData135));
  idwcai.addMapping(tz135.timezoneID, new idwcai.JsTimeZone(tz135));
  tz136 =
    ((tzData136 = cggcc.safeEval(
      '{"id": "America/Martinique", "transitions": [89956, 60, 94155, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData136));
  idwcai.addMapping(tz136.timezoneID, new idwcai.JsTimeZone(tz136));
  tz137 =
    ((tzData137 = cggcc.safeEval(
      '{"id": "America/Matamoros", "transitions": [160016, 60, 165055, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 274760, 60, 278287, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326504, 60, 331543, 0, 335408, 60, 340279, 0, 344144, 60, 349015, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData137));
  idwcai.addMapping(tz137.timezoneID, new idwcai.JsTimeZone(tz137));
  tz138 =
    ((tzData138 = cggcc.safeEval(
      '{"id": "America/Mazatlan", "transitions": [230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 274761, 60, 278288, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326505, 60, 331544, 0, 335409, 60, 340280, 0, 344145, 60, 349016, 0, 352881, 60, 357920, 0, 361617, 60, 366656, 0, 370353, 60, 375392, 0, 379257, 60, 384128, 0, 387993, 60, 392864, 0, 396729, 60, 401600, 0, 405465, 60, 410504, 0, 414201, 60, 419240, 0, 422937, 60, 427976, 0, 431841, 60, 436712, 0, 440577, 60, 445448, 0, 449313, 60, 454352, 0, 458049, 60, 463088, 0, 466785, 60, 471824, 0, 475689, 60, 480560, 0, 484425, 60, 489296, 0, 493161, 60, 498032, 0, 501897, 60, 506936, 0, 510633, 60, 515672, 0, 519369, 60, 524408, 0, 528273, 60, 533144, 0, 537009, 60, 541880, 0, 545745, 60, 550784, 0, 554481, 60, 559520, 0, 563217, 60, 568256, 0, 571953, 60, 576992, 0, 580857, 60, 585728, 0, 589593, 60, 594464, 0], "names": ["MST", "Mexican Pacific Standard Time", "MDT", "Mexican Pacific Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData138));
  idwcai.addMapping(tz138.timezoneID, new idwcai.JsTimeZone(tz138));
  tz139 =
    ((tzData139 = cggcc.safeEval(
      '{"id": "America/Mendoza", "transitions": [35595, 60, 37946, 0, 165819, 60, 168074, 0, 173451, 60, 176810, 0, 182212, 60, 185499, 0, 190972, 60, 194283, 0, 260811, 60, 264459, 0, 333051, 60, 334898, 0], "names": ["ART", "Argentina Standard Time", "ARST", "Argentina Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData139));
  idwcai.addMapping(tz139.timezoneID, new idwcai.JsTimeZone(tz139));
  tz140 =
    ((tzData140 = cggcc.safeEval(
      '{"id": "America/Menominee", "transitions": [29143, 60, 33511, 0, 35192, 60, 42247, 0, 45104, 60, 50983, 0, 55352, 60, 59887, 0, 64088, 60, 68623, 0, 72992, 60, 77359, 0, 81728, 60, 86095, 0, 90464, 60, 94831, 0, 99200, 60, 103567, 0, 107936, 60, 112471, 0, 116672, 60, 121207, 0, 125576, 60, 129943, 0, 134312, 60, 138679, 0, 143048, 60, 147415, 0, 151280, 60, 156151, 0, 160016, 60, 165055, 0, 168752, 60, 173791, 0, 177488, 60, 182527, 0, 186392, 60, 191263, 0, 195128, 60, 199999, 0, 203864, 60, 208903, 0, 212600, 60, 217639, 0, 221336, 60, 226375, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 273920, 60, 278959, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData140));
  idwcai.addMapping(tz140.timezoneID, new idwcai.JsTimeZone(tz140));
  tz141 =
    ((tzData141 = cggcc.safeEval(
      '{"id": "America/Merida", "transitions": [230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 274760, 60, 278287, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326504, 60, 331543, 0, 335408, 60, 340279, 0, 344144, 60, 349015, 0, 352880, 60, 357919, 0, 361616, 60, 366655, 0, 370352, 60, 375391, 0, 379256, 60, 384127, 0, 387992, 60, 392863, 0, 396728, 60, 401599, 0, 405464, 60, 410503, 0, 414200, 60, 419239, 0, 422936, 60, 427975, 0, 431840, 60, 436711, 0, 440576, 60, 445447, 0, 449312, 60, 454351, 0, 458048, 60, 463087, 0, 466784, 60, 471823, 0, 475688, 60, 480559, 0, 484424, 60, 489295, 0, 493160, 60, 498031, 0, 501896, 60, 506935, 0, 510632, 60, 515671, 0, 519368, 60, 524407, 0, 528272, 60, 533143, 0, 537008, 60, 541879, 0, 545744, 60, 550783, 0, 554480, 60, 559519, 0, 563216, 60, 568255, 0, 571952, 60, 576991, 0, 580856, 60, 585727, 0, 589592, 60, 594463, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData141));
  idwcai.addMapping(tz141.timezoneID, new idwcai.JsTimeZone(tz141));
  tz142 =
    ((tzData142 = cggcc.safeEval(
      '{"id": "America/Metlakatla", "transitions": [2770, 60, 7137, 0, 11506, 60, 16041, 0, 20410, 60, 24777, 0, 29146, 60, 33513, 0, 35194, 60, 42249, 0, 45106, 60, 50985, 0, 55354, 60, 59889, 0, 64090, 60, 68625, 0, 72994, 60, 77361, 0, 81730, 60, 86097, 0, 90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0], "names": ["PST", "Pacific Standard Time", "PDT", "Pacific Daylight Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData142));
  idwcai.addMapping(tz142.timezoneID, new idwcai.JsTimeZone(tz142));
  tz143 =
    ((tzData143 = cggcc.safeEval(
      '{"id": "America/Mexico_City", "transitions": [230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 274760, 60, 278287, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326504, 60, 331543, 0, 335408, 60, 340279, 0, 344144, 60, 349015, 0, 352880, 60, 357919, 0, 361616, 60, 366655, 0, 370352, 60, 375391, 0, 379256, 60, 384127, 0, 387992, 60, 392863, 0, 396728, 60, 401599, 0, 405464, 60, 410503, 0, 414200, 60, 419239, 0, 422936, 60, 427975, 0, 431840, 60, 436711, 0, 440576, 60, 445447, 0, 449312, 60, 454351, 0, 458048, 60, 463087, 0, 466784, 60, 471823, 0, 475688, 60, 480559, 0, 484424, 60, 489295, 0, 493160, 60, 498031, 0, 501896, 60, 506935, 0, 510632, 60, 515671, 0, 519368, 60, 524407, 0, 528272, 60, 533143, 0, 537008, 60, 541879, 0, 545744, 60, 550783, 0, 554480, 60, 559519, 0, 563216, 60, 568255, 0, 571952, 60, 576991, 0, 580856, 60, 585727, 0, 589592, 60, 594463, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData143));
  idwcai.addMapping(tz143.timezoneID, new idwcai.JsTimeZone(tz143));
  tz144 =
    ((tzData144 = cggcc.safeEval(
      '{"id": "America/Miquelon", "transitions": [151277, 60, 156148, 0, 160013, 60, 165052, 0, 168749, 60, 173788, 0, 177485, 60, 182524, 0, 186389, 60, 191260, 0, 195125, 60, 199996, 0, 203861, 60, 208900, 0, 212597, 60, 217636, 0, 221333, 60, 226372, 0, 230237, 60, 235108, 0, 238973, 60, 243844, 0, 247709, 60, 252580, 0, 256445, 60, 261484, 0, 265181, 60, 270220, 0, 273917, 60, 278956, 0, 282821, 60, 287692, 0, 291557, 60, 296428, 0, 300293, 60, 305332, 0, 309029, 60, 314068, 0, 317765, 60, 322804, 0, 325997, 60, 331708, 0, 334733, 60, 340444, 0, 343469, 60, 349180, 0, 352373, 60, 358084, 0, 361109, 60, 366820, 0, 369845, 60, 375556, 0, 378581, 60, 384292, 0, 387317, 60, 393028, 0, 396053, 60, 401764, 0, 404957, 60, 410668, 0, 413693, 60, 419404, 0, 422429, 60, 428140, 0, 431165, 60, 436876, 0, 439901, 60, 445612, 0, 448805, 60, 454516, 0, 457541, 60, 463252, 0, 466277, 60, 471988, 0, 475013, 60, 480724, 0, 483749, 60, 489460, 0, 492485, 60, 498196, 0, 501389, 60, 507100, 0, 510125, 60, 515836, 0, 518861, 60, 524572, 0, 527597, 60, 533308, 0, 536333, 60, 542044, 0, 545237, 60, 550948, 0, 553973, 60, 559684, 0, 562709, 60, 568420, 0, 571445, 60, 577156, 0, 580181, 60, 585892, 0, 588917, 60, 594628, 0], "names": ["PMST", "Saint Pierre and Miquelon Standard Time", "PMDT", "Saint Pierre and Miquelon Daylight Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData144));
  idwcai.addMapping(tz144.timezoneID, new idwcai.JsTimeZone(tz144));
  tz145 =
    ((tzData145 = cggcc.safeEval(
      '{"id": "America/Moncton", "transitions": [2766, 60, 7133, 0, 11502, 60, 16037, 0, 20406, 60, 24773, 0, 37878, 60, 42245, 0, 46614, 60, 50981, 0, 55350, 60, 59885, 0, 64086, 60, 68621, 0, 72990, 60, 77357, 0, 81726, 60, 86093, 0, 90462, 60, 94829, 0, 99198, 60, 103565, 0, 107934, 60, 112469, 0, 116670, 60, 121205, 0, 125574, 60, 129941, 0, 134310, 60, 138677, 0, 143046, 60, 147413, 0, 151278, 60, 156149, 0, 160014, 60, 165053, 0, 168750, 60, 173789, 0, 177486, 60, 182525, 0, 186390, 60, 191261, 0, 195126, 60, 199997, 0, 203860, 60, 208899, 0, 212596, 60, 217635, 0, 221332, 60, 226371, 0, 230236, 60, 235107, 0, 238972, 60, 243843, 0, 247708, 60, 252579, 0, 256444, 60, 261483, 0, 265180, 60, 270219, 0, 273916, 60, 278955, 0, 282820, 60, 287691, 0, 291556, 60, 296427, 0, 300292, 60, 305331, 0, 309028, 60, 314067, 0, 317764, 60, 322803, 0, 325998, 60, 331709, 0, 334734, 60, 340445, 0, 343470, 60, 349181, 0, 352374, 60, 358085, 0, 361110, 60, 366821, 0, 369846, 60, 375557, 0, 378582, 60, 384293, 0, 387318, 60, 393029, 0, 396054, 60, 401765, 0, 404958, 60, 410669, 0, 413694, 60, 419405, 0, 422430, 60, 428141, 0, 431166, 60, 436877, 0, 439902, 60, 445613, 0, 448806, 60, 454517, 0, 457542, 60, 463253, 0, 466278, 60, 471989, 0, 475014, 60, 480725, 0, 483750, 60, 489461, 0, 492486, 60, 498197, 0, 501390, 60, 507101, 0, 510126, 60, 515837, 0, 518862, 60, 524573, 0, 527598, 60, 533309, 0, 536334, 60, 542045, 0, 545238, 60, 550949, 0, 553974, 60, 559685, 0, 562710, 60, 568421, 0, 571446, 60, 577157, 0, 580182, 60, 585893, 0, 588918, 60, 594629, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData145));
  idwcai.addMapping(tz145.timezoneID, new idwcai.JsTimeZone(tz145));
  tz146 =
    ((tzData146 = cggcc.safeEval(
      '{"id": "America/Monterrey", "transitions": [160016, 60, 165055, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 274760, 60, 278287, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326504, 60, 331543, 0, 335408, 60, 340279, 0, 344144, 60, 349015, 0, 352880, 60, 357919, 0, 361616, 60, 366655, 0, 370352, 60, 375391, 0, 379256, 60, 384127, 0, 387992, 60, 392863, 0, 396728, 60, 401599, 0, 405464, 60, 410503, 0, 414200, 60, 419239, 0, 422936, 60, 427975, 0, 431840, 60, 436711, 0, 440576, 60, 445447, 0, 449312, 60, 454351, 0, 458048, 60, 463087, 0, 466784, 60, 471823, 0, 475688, 60, 480559, 0, 484424, 60, 489295, 0, 493160, 60, 498031, 0, 501896, 60, 506935, 0, 510632, 60, 515671, 0, 519368, 60, 524407, 0, 528272, 60, 533143, 0, 537008, 60, 541879, 0, 545744, 60, 550783, 0, 554480, 60, 559519, 0, 563216, 60, 568255, 0, 571952, 60, 576991, 0, 580856, 60, 585727, 0, 589592, 60, 594463, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData146));
  idwcai.addMapping(tz146.timezoneID, new idwcai.JsTimeZone(tz146));
  tz147 =
    ((tzData147 = cggcc.safeEval(
      '{"id": "America/Montevideo", "transitions": [20259, 60, 22970, 0, 43586, 60, 59162, 0, 69459, 60, 72290, 0, 85443, 60, 90554, 0, 157347, 60, 159530, 0, 166059, 60, 168242, 0, 173787, 60, 176810, 0, 182355, 60, 185546, 0, 191259, 60, 194282, 0, 199827, 60, 203018, 0, 304323, 60, 308860, 0, 313565, 60, 317260, 0, 322133, 60, 325996, 0, 331037, 60, 334732, 0, 339773, 60, 343468, 0, 348509, 60, 352372, 0, 357245, 60, 361108, 0, 365981, 60, 369844, 0, 374885, 60, 378580, 0, 383621, 60, 387316, 0, 392357, 60, 396052, 0, 401093, 60, 404956, 0, 409829, 60, 413692, 0, 418565, 60, 422428, 0, 427469, 60, 431164, 0, 436205, 60, 439900, 0, 444941, 60, 448804, 0, 453677, 60, 457540, 0, 462413, 60, 466276, 0, 471149, 60, 475012, 0, 480053, 60, 483748, 0, 488789, 60, 492484, 0, 497525, 60, 501388, 0, 506261, 60, 510124, 0, 514997, 60, 518860, 0, 523901, 60, 527596, 0, 532637, 60, 536332, 0, 541373, 60, 545236, 0, 550109, 60, 553972, 0, 558845, 60, 562708, 0, 567581, 60, 571444, 0, 576485, 60, 580180, 0, 585221, 60, 588916, 0, 593957, 60], "names": ["UYT", "Uruguay Standard Time", "UYST", "Uruguay Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData147));
  idwcai.addMapping(tz147.timezoneID, new idwcai.JsTimeZone(tz147));
  tz148 =
    ((tzData148 = cggcc.safeEval(
      '{"id": "America/Montserrat", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData148));
  idwcai.addMapping(tz148.timezoneID, new idwcai.JsTimeZone(tz148));
  tz149 =
    ((tzData149 = cggcc.safeEval(
      '{"id": "America/Nassau", "transitions": [2767, 60, 7134, 0, 11503, 60, 16038, 0, 20407, 60, 24774, 0, 29143, 60, 33510, 0, 37879, 60, 42246, 0, 46615, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData149));
  idwcai.addMapping(tz149.timezoneID, new idwcai.JsTimeZone(tz149));
  tz150 =
    ((tzData150 = cggcc.safeEval(
      '{"id": "America/New_York", "transitions": [2767, 60, 7134, 0, 11503, 60, 16038, 0, 20407, 60, 24774, 0, 29143, 60, 33510, 0, 35191, 60, 42246, 0, 45103, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData150));
  idwcai.addMapping(tz150.timezoneID, new idwcai.JsTimeZone(tz150));
  tz151 =
    ((tzData151 = cggcc.safeEval(
      '{"id": "America/Nipigon", "transitions": [37879, 60, 42246, 0, 46615, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData151));
  idwcai.addMapping(tz151.timezoneID, new idwcai.JsTimeZone(tz151));
  tz152 =
    ((tzData152 = cggcc.safeEval(
      '{"id": "America/Nome", "transitions": [2773, 60, 7140, 0, 11509, 60, 16044, 0, 20413, 60, 24780, 0, 29149, 60, 33516, 0, 35197, 60, 42252, 0, 45109, 60, 50988, 0, 55357, 60, 59892, 0, 64093, 60, 68628, 0, 72997, 60, 77364, 0, 81733, 60, 86100, 0, 90469, 60, 94836, 0, 99205, 60, 103572, 0, 107941, 60, 112476, 0, 116677, 60, 121212, 0, 125579, 60, 129946, 0, 134315, 60, 138682, 0, 143051, 60, 147418, 0, 151283, 60, 156154, 0, 160019, 60, 165058, 0, 168755, 60, 173794, 0, 177491, 60, 182530, 0, 186395, 60, 191266, 0, 195131, 60, 200002, 0, 203867, 60, 208906, 0, 212603, 60, 217642, 0, 221339, 60, 226378, 0, 230243, 60, 235114, 0, 238979, 60, 243850, 0, 247715, 60, 252586, 0, 256451, 60, 261490, 0, 265187, 60, 270226, 0, 273923, 60, 278962, 0, 282827, 60, 287698, 0, 291563, 60, 296434, 0, 300299, 60, 305338, 0, 309035, 60, 314074, 0, 317771, 60, 322810, 0, 326003, 60, 331714, 0, 334739, 60, 340450, 0, 343475, 60, 349186, 0, 352379, 60, 358090, 0, 361115, 60, 366826, 0, 369851, 60, 375562, 0, 378587, 60, 384298, 0, 387323, 60, 393034, 0, 396059, 60, 401770, 0, 404963, 60, 410674, 0, 413699, 60, 419410, 0, 422435, 60, 428146, 0, 431171, 60, 436882, 0, 439907, 60, 445618, 0, 448811, 60, 454522, 0, 457547, 60, 463258, 0, 466283, 60, 471994, 0, 475019, 60, 480730, 0, 483755, 60, 489466, 0, 492491, 60, 498202, 0, 501395, 60, 507106, 0, 510131, 60, 515842, 0, 518867, 60, 524578, 0, 527603, 60, 533314, 0, 536339, 60, 542050, 0, 545243, 60, 550954, 0, 553979, 60, 559690, 0, 562715, 60, 568426, 0, 571451, 60, 577162, 0, 580187, 60, 585898, 0, 588923, 60, 594634, 0], "names": ["AKST", "Alaska Standard Time", "AKDT", "Alaska Daylight Time"], "std_offset": -540}'
    )),
    cggic.createTimeZone_0(tzData152));
  idwcai.addMapping(tz152.timezoneID, new idwcai.JsTimeZone(tz152));
  tz153 =
    ((tzData153 = cggcc.safeEval(
      '{"id": "America/Noronha", "transitions": [138818, 60, 142009, 0, 147386, 60, 150073, 0, 156146, 60, 158665, 0, 164714, 60, 167233, 0, 173450, 60, 176305, 0, 260810, 60, 264337, 0, 269714, 60, 269881, 0, 278618, 60, 281641, 0], "names": ["FNT", "Fernando de Noronha Standard Time", "FNST", "Fernando de Noronha Summer Time"], "std_offset": -120}'
    )),
    cggic.createTimeZone_0(tzData153));
  idwcai.addMapping(tz153.timezoneID, new idwcai.JsTimeZone(tz153));
  tz154 =
    ((tzData154 = cggcc.safeEval(
      '{"id": "America/North_Dakota/Beulah", "transitions": [2769, 60, 7136, 0, 11505, 60, 16040, 0, 20409, 60, 24776, 0, 29145, 60, 33512, 0, 35193, 60, 42248, 0, 45105, 60, 50984, 0, 55353, 60, 59888, 0, 64089, 60, 68624, 0, 72993, 60, 77360, 0, 81729, 60, 86096, 0, 90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326001, 60, 331712, 0, 334737, 60, 340448, 0, 343473, 60, 349184, 0, 352377, 60, 358088, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData154));
  idwcai.addMapping(tz154.timezoneID, new idwcai.JsTimeZone(tz154));
  tz155 =
    ((tzData155 = cggcc.safeEval(
      '{"id": "America/North_Dakota/Center", "transitions": [2769, 60, 7136, 0, 11505, 60, 16040, 0, 20409, 60, 24776, 0, 29145, 60, 33512, 0, 35193, 60, 42248, 0, 45105, 60, 50984, 0, 55353, 60, 59888, 0, 64089, 60, 68624, 0, 72993, 60, 77360, 0, 81729, 60, 86096, 0, 90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203864, 60, 208903, 0, 212600, 60, 217639, 0, 221336, 60, 226375, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 273920, 60, 278959, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData155));
  idwcai.addMapping(tz155.timezoneID, new idwcai.JsTimeZone(tz155));
  tz156 =
    ((tzData156 = cggcc.safeEval(
      '{"id": "America/North_Dakota/New_Salem", "transitions": [2769, 60, 7136, 0, 11505, 60, 16040, 0, 20409, 60, 24776, 0, 29145, 60, 33512, 0, 35193, 60, 42248, 0, 45105, 60, 50984, 0, 55353, 60, 59888, 0, 64089, 60, 68624, 0, 72993, 60, 77360, 0, 81729, 60, 86096, 0, 90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData156));
  idwcai.addMapping(tz156.timezoneID, new idwcai.JsTimeZone(tz156));
  tz157 =
    ((tzData157 = cggcc.safeEval(
      '{"id": "America/Ojinaga", "transitions": [230240, 60, 235111, 0, 238976, 60, 243847, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 274761, 60, 278288, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326505, 60, 331544, 0, 335409, 60, 340280, 0, 344145, 60, 349016, 0, 352377, 60, 358088, 0, 361113, 60, 366824, 0, 369849, 60, 375560, 0, 378585, 60, 384296, 0, 387321, 60, 393032, 0, 396057, 60, 401768, 0, 404961, 60, 410672, 0, 413697, 60, 419408, 0, 422433, 60, 428144, 0, 431169, 60, 436880, 0, 439905, 60, 445616, 0, 448809, 60, 454520, 0, 457545, 60, 463256, 0, 466281, 60, 471992, 0, 475017, 60, 480728, 0, 483753, 60, 489464, 0, 492489, 60, 498200, 0, 501393, 60, 507104, 0, 510129, 60, 515840, 0, 518865, 60, 524576, 0, 527601, 60, 533312, 0, 536337, 60, 542048, 0, 545241, 60, 550952, 0, 553977, 60, 559688, 0, 562713, 60, 568424, 0, 571449, 60, 577160, 0, 580185, 60, 585896, 0, 588921, 60, 594632, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData157));
  idwcai.addMapping(tz157.timezoneID, new idwcai.JsTimeZone(tz157));
  tz158 =
    ((tzData158 = cggcc.safeEval(
      '{"id": "America/Panama", "transitions": [], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData158));
  idwcai.addMapping(tz158.timezoneID, new idwcai.JsTimeZone(tz158));
  tz159 =
    ((tzData159 = cggcc.safeEval(
      '{"id": "America/Pangnirtung", "transitions": [90462, 60, 94829, 0, 99198, 60, 103565, 0, 107934, 60, 112469, 0, 116670, 60, 121205, 0, 125574, 60, 129941, 0, 134310, 60, 138677, 0, 143046, 60, 147413, 0, 151278, 60, 156149, 0, 160014, 60, 165053, 0, 168750, 60, 173789, 0, 177486, 60, 182525, 0, 186390, 60, 191261, 0, 195126, 60, 199997, 0, 203862, 60, 208901, 0, 212598, 60, 217637, 0, 221334, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265184, 60, 270223, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData159));
  idwcai.addMapping(tz159.timezoneID, new idwcai.JsTimeZone(tz159));
  tz160 =
    ((tzData160 = cggcc.safeEval(
      '{"id": "America/Paramaribo", "transitions": [], "names": ["SRT", "Suriname Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData160));
  idwcai.addMapping(tz160.timezoneID, new idwcai.JsTimeZone(tz160));
  tz161 =
    ((tzData161 = cggcc.safeEval(
      '{"id": "America/Phoenix", "transitions": [], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData161));
  idwcai.addMapping(tz161.timezoneID, new idwcai.JsTimeZone(tz161));
  tz162 =
    ((tzData162 = cggcc.safeEval(
      '{"id": "America/Port-au-Prince", "transitions": [117005, 60, 121204, 0, 125573, 60, 129940, 0, 134309, 60, 138676, 0, 143045, 60, 147412, 0, 151781, 60, 156148, 0, 160014, 60, 165054, 0, 168750, 60, 173790, 0, 177486, 60, 182526, 0, 186390, 60, 191262, 0, 195126, 60, 199998, 0, 203862, 60, 208902, 0, 212598, 60, 217638, 0, 221334, 60, 226374, 0, 230238, 60, 235110, 0, 238974, 60, 243846, 0, 309029, 60, 314068, 0, 317765, 60, 322804, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData162));
  idwcai.addMapping(tz162.timezoneID, new idwcai.JsTimeZone(tz162));
  tz163 =
    ((tzData163 = cggcc.safeEval(
      '{"id": "America/Port_of_Spain", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData163));
  idwcai.addMapping(tz163.timezoneID, new idwcai.JsTimeZone(tz163));
  tz164 =
    ((tzData164 = cggcc.safeEval(
      '{"id": "America/Porto_Velho", "transitions": [138820, 60, 142011, 0, 147388, 60, 150075, 0, 156148, 60, 158667, 0], "names": ["AMT", "Amazon Standard Time", "AMST", "Amazon Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData164));
  idwcai.addMapping(tz164.timezoneID, new idwcai.JsTimeZone(tz164));
  tz165 =
    ((tzData165 = cggcc.safeEval(
      '{"id": "America/Puerto_Rico", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData165));
  idwcai.addMapping(tz165.timezoneID, new idwcai.JsTimeZone(tz165));
  tz166 =
    ((tzData166 = cggcc.safeEval(
      '{"id": "America/Rainy_River", "transitions": [37880, 60, 42247, 0, 46616, 60, 50983, 0, 55352, 60, 59887, 0, 64088, 60, 68623, 0, 72992, 60, 77359, 0, 81728, 60, 86095, 0, 90464, 60, 94831, 0, 99200, 60, 103567, 0, 107936, 60, 112471, 0, 116672, 60, 121207, 0, 125576, 60, 129943, 0, 134312, 60, 138679, 0, 143048, 60, 147415, 0, 151280, 60, 156151, 0, 160016, 60, 165055, 0, 168752, 60, 173791, 0, 177488, 60, 182527, 0, 186392, 60, 191263, 0, 195128, 60, 199999, 0, 203864, 60, 208903, 0, 212600, 60, 217639, 0, 221336, 60, 226375, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 273920, 60, 278959, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData166));
  idwcai.addMapping(tz166.timezoneID, new idwcai.JsTimeZone(tz166));
  tz167 =
    ((tzData167 = cggcc.safeEval(
      '{"id": "America/Rankin_Inlet", "transitions": [90464, 60, 94831, 0, 99200, 60, 103567, 0, 107936, 60, 112471, 0, 116672, 60, 121207, 0, 125576, 60, 129943, 0, 134312, 60, 138679, 0, 143048, 60, 147415, 0, 151280, 60, 156151, 0, 160016, 60, 165055, 0, 168752, 60, 173791, 0, 177488, 60, 182527, 0, 186392, 60, 191263, 0, 195128, 60, 199999, 0, 203864, 60, 208903, 0, 212600, 60, 217639, 0, 221336, 60, 226375, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 273920, 60, 278959, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData167));
  idwcai.addMapping(tz167.timezoneID, new idwcai.JsTimeZone(tz167));
  tz168 =
    ((tzData168 = cggcc.safeEval(
      '{"id": "America/Recife", "transitions": [138819, 60, 142010, 0, 147387, 60, 150074, 0, 156147, 60, 158666, 0, 164715, 60, 167234, 0, 173451, 60, 176306, 0, 260811, 60, 264338, 0, 269715, 60, 269882, 0, 278619, 60, 281642, 0], "names": ["BRT", "Brasilia Standard Time", "BRST", "Brasilia Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData168));
  idwcai.addMapping(tz168.timezoneID, new idwcai.JsTimeZone(tz168));
  tz169 =
    ((tzData169 = cggcc.safeEval(
      '{"id": "America/Regina", "transitions": [], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData169));
  idwcai.addMapping(tz169.timezoneID, new idwcai.JsTimeZone(tz169));
  tz170 =
    ((tzData170 = cggcc.safeEval(
      '{"id": "America/Resolute", "transitions": [90464, 60, 94831, 0, 99200, 60, 103567, 0, 107936, 60, 112471, 0, 116672, 60, 121207, 0, 125576, 60, 129943, 0, 134312, 60, 138679, 0, 143048, 60, 147415, 0, 151280, 60, 156151, 0, 160016, 60, 165055, 0, 168752, 60, 173791, 0, 177488, 60, 182527, 0, 186392, 60, 191263, 0, 195128, 60, 199999, 0, 203864, 60, 208903, 0, 212600, 60, 217639, 0, 221336, 60, 226375, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 273920, 60, 278959, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData170));
  idwcai.addMapping(tz170.timezoneID, new idwcai.JsTimeZone(tz170));
  tz171 =
    ((tzData171 = cggcc.safeEval(
      '{"id": "America/Rio_Branco", "transitions": [138821, 60, 142012, 0, 147389, 60, 150076, 0, 156149, 60, 158668, 0], "names": ["AMT", "Acre Standard Time", "AMST", "Acre Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData171));
  idwcai.addMapping(tz171.timezoneID, new idwcai.JsTimeZone(tz171));
  tz172 =
    ((tzData172 = cggcc.safeEval(
      '{"id": "America/Santa_Isabel", "transitions": [55354, 60, 59889, 0, 64090, 60, 68625, 0, 72994, 60, 77361, 0, 81730, 60, 86097, 0, 90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125578, 60, 129945, 0, 134314, 60, 138681, 0, 143050, 60, 147417, 0, 151282, 60, 156153, 0, 160018, 60, 165057, 0, 168754, 60, 173793, 0, 177490, 60, 182529, 0, 186394, 60, 191265, 0, 195130, 60, 200001, 0, 203866, 60, 208905, 0, 212602, 60, 217641, 0, 221338, 60, 226377, 0, 230242, 60, 235113, 0, 238978, 60, 243849, 0, 247714, 60, 252585, 0, 256450, 60, 261489, 0, 265186, 60, 270225, 0, 273922, 60, 278961, 0, 282826, 60, 287697, 0, 291562, 60, 296433, 0, 300298, 60, 305337, 0, 309034, 60, 314073, 0, 317770, 60, 322809, 0, 326506, 60, 331545, 0, 335410, 60, 340281, 0, 344146, 60, 349017, 0, 352882, 60, 357921, 0, 361618, 60, 366657, 0, 370354, 60, 375393, 0, 379258, 60, 384129, 0, 387994, 60, 392865, 0, 396730, 60, 401601, 0, 405466, 60, 410505, 0, 414202, 60, 419241, 0, 422938, 60, 427977, 0, 431842, 60, 436713, 0, 440578, 60, 445449, 0, 449314, 60, 454353, 0, 458050, 60, 463089, 0, 466786, 60, 471825, 0, 475690, 60, 480561, 0, 484426, 60, 489297, 0, 493162, 60, 498033, 0, 501898, 60, 506937, 0, 510634, 60, 515673, 0, 519370, 60, 524409, 0, 528274, 60, 533145, 0, 537010, 60, 541881, 0, 545746, 60, 550785, 0, 554482, 60, 559521, 0, 563218, 60, 568257, 0, 571954, 60, 576993, 0, 580858, 60, 585729, 0, 589594, 60, 594465, 0], "names": ["PST", "Northwest Mexico Standard Time", "PDT", "Northwest Mexico Daylight Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData172));
  idwcai.addMapping(tz172.timezoneID, new idwcai.JsTimeZone(tz172));
  tz173 =
    ((tzData173 = cggcc.safeEval(
      '{"id": "America/Santarem", "transitions": [138820, 60, 142011, 0, 147388, 60, 150075, 0, 156148, 60, 158667, 0], "names": ["BRT", "Brasilia Standard Time", "BRST", "Brasilia Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData173));
  idwcai.addMapping(tz173.timezoneID, new idwcai.JsTimeZone(tz173));
  tz174 =
    ((tzData174 = cggcc.safeEval(
      '{"id": "America/Santiago", "transitions": [6796, 60, 10491, 0, 15532, 60, 19227, 0, 24436, 60, 27963, 0, 32836, 60, 36699, 0, 41908, 60, 45435, 0, 50644, 60, 54339, 0, 59380, 60, 63075, 0, 68116, 60, 71811, 0, 77020, 60, 80547, 0, 85756, 60, 89283, 0, 94492, 60, 98187, 0, 103228, 60, 106923, 0, 111964, 60, 115659, 0, 120700, 60, 124395, 0, 129604, 60, 133131, 0, 138340, 60, 141867, 0, 147076, 60, 151443, 0, 155812, 60, 159507, 0, 164380, 60, 168243, 0, 173452, 60, 177147, 0, 181516, 60, 185715, 0, 190924, 60, 194619, 0, 199660, 60, 203355, 0, 208396, 60, 212091, 0, 217132, 60, 220827, 0, 226036, 60, 229563, 0, 234772, 60, 238803, 0, 243508, 60, 247203, 0, 251908, 60, 256443, 0, 260980, 60, 264675, 0, 269884, 60, 273411, 0, 278620, 60, 282147, 0, 287356, 60, 290883, 0, 296092, 60, 299787, 0, 304828, 60, 308523, 0, 313564, 60, 317259, 0, 322468, 60, 325995, 0, 331204, 60, 335235, 0, 339940, 60, 343635, 0, 348676, 60, 352875, 0, 357412, 60, 362451, 0, 364972, 60, 371019, 0, 374044, 60, 379755, 0, 382948, 60, 388491, 0, 391684, 60, 397227, 0, 400420, 60, 405963, 0, 409156, 60, 414699, 0, 417892, 60, 423603, 0, 426628, 60, 432339, 0, 435532, 60, 441075, 0, 444268, 60, 449811, 0, 453004, 60, 458547, 0, 461740, 60, 467283, 0, 470476, 60, 476187, 0, 479380, 60, 484923, 0, 488116, 60, 493659, 0, 496852, 60, 502395, 0, 505588, 60, 511131, 0, 514324, 60, 520035, 0, 523060, 60, 528771, 0, 531964, 60, 537507, 0, 540700, 60, 546243, 0, 549436, 60, 554979, 0, 558172, 60, 563715, 0, 566908, 60, 572619, 0, 575644, 60, 581355, 0, 584548, 60, 590091, 0, 593284, 60], "names": ["CLT", "Chile Standard Time", "CLST", "Chile Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData174));
  idwcai.addMapping(tz174.timezoneID, new idwcai.JsTimeZone(tz174));
  tz175 =
    ((tzData175 = cggcc.safeEval(
      '{"id": "America/Santo_Domingo", "transitions": [7133, 30, 9220, 0, 16037, 30, 18004, 0, 24773, 30, 26788, 0, 33509, 30, 35548, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData175));
  idwcai.addMapping(tz175.timezoneID, new idwcai.JsTimeZone(tz175));
  tz176 =
    ((tzData176 = cggcc.safeEval(
      '{"id": "America/Sao_Paulo", "transitions": [138819, 60, 142010, 0, 147387, 60, 150074, 0, 156147, 60, 158666, 0, 164715, 60, 167234, 0, 173451, 60, 176306, 0, 182355, 60, 185210, 0, 191091, 60, 193778, 0, 199995, 60, 202346, 0, 208563, 60, 211586, 0, 217299, 60, 220322, 0, 226035, 60, 228890, 0, 234603, 60, 237794, 0, 243363, 60, 246866, 0, 252243, 60, 255434, 0, 260811, 60, 264338, 0, 269715, 60, 272906, 0, 278619, 60, 281642, 0, 287859, 60, 290378, 0, 296259, 60, 299114, 0, 305379, 60, 308018, 0, 313731, 60, 316754, 0, 322971, 60, 325658, 0, 331203, 60, 334226, 0, 340107, 60, 342962, 0, 348843, 60, 351866, 0, 357579, 60, 360602, 0, 366315, 60, 369506, 0, 375219, 60, 378074, 0, 383955, 60, 386810, 0, 392691, 60, 395714, 0, 401427, 60, 404450, 0, 410163, 60, 413186, 0, 418899, 60, 421922, 0, 427803, 60, 430658, 0, 436539, 60, 439394, 0, 445275, 60, 448298, 0, 454011, 60, 457034, 0, 462747, 60, 465938, 0, 471483, 60, 474506, 0, 480387, 60, 483242, 0, 489123, 60, 492146, 0, 497859, 60, 500882, 0, 506595, 60, 509618, 0, 515331, 60, 518354, 0, 524235, 60, 527090, 0, 532971, 60, 535826, 0, 541707, 60, 544562, 0, 550443, 60, 553466, 0, 559179, 60, 562370, 0, 567915, 60, 570938, 0, 576819, 60, 579674, 0, 585555, 60, 588578, 0, 594291, 60], "names": ["BRT", "Brasilia Standard Time", "BRST", "Brasilia Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData176));
  idwcai.addMapping(tz176.timezoneID, new idwcai.JsTimeZone(tz176));
  tz177 =
    ((tzData177 = cggcc.safeEval(
      '{"id": "America/Scoresbysund", "transitions": [89956, 60, 94156, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EGT", "East Greenland Standard Time", "EGST", "East Greenland Summer Time"], "std_offset": -60}'
    )),
    cggic.createTimeZone_0(tzData177));
  idwcai.addMapping(tz177.timezoneID, new idwcai.JsTimeZone(tz177));
  tz178 =
    ((tzData178 = cggcc.safeEval(
      '{"id": "America/Sitka", "transitions": [2770, 60, 7137, 0, 11506, 60, 16041, 0, 20410, 60, 24777, 0, 29146, 60, 33513, 0, 35194, 60, 42249, 0, 45106, 60, 50985, 0, 55354, 60, 59889, 0, 64090, 60, 68625, 0, 72994, 60, 77361, 0, 81730, 60, 86097, 0, 90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125579, 60, 129946, 0, 134315, 60, 138682, 0, 143051, 60, 147418, 0, 151283, 60, 156154, 0, 160019, 60, 165058, 0, 168755, 60, 173794, 0, 177491, 60, 182530, 0, 186395, 60, 191266, 0, 195131, 60, 200002, 0, 203867, 60, 208906, 0, 212603, 60, 217642, 0, 221339, 60, 226378, 0, 230243, 60, 235114, 0, 238979, 60, 243850, 0, 247715, 60, 252586, 0, 256451, 60, 261490, 0, 265187, 60, 270226, 0, 273923, 60, 278962, 0, 282827, 60, 287698, 0, 291563, 60, 296434, 0, 300299, 60, 305338, 0, 309035, 60, 314074, 0, 317771, 60, 322810, 0, 326003, 60, 331714, 0, 334739, 60, 340450, 0, 343475, 60, 349186, 0, 352379, 60, 358090, 0, 361115, 60, 366826, 0, 369851, 60, 375562, 0, 378587, 60, 384298, 0, 387323, 60, 393034, 0, 396059, 60, 401770, 0, 404963, 60, 410674, 0, 413699, 60, 419410, 0, 422435, 60, 428146, 0, 431171, 60, 436882, 0, 439907, 60, 445618, 0, 448811, 60, 454522, 0, 457547, 60, 463258, 0, 466283, 60, 471994, 0, 475019, 60, 480730, 0, 483755, 60, 489466, 0, 492491, 60, 498202, 0, 501395, 60, 507106, 0, 510131, 60, 515842, 0, 518867, 60, 524578, 0, 527603, 60, 533314, 0, 536339, 60, 542050, 0, 545243, 60, 550954, 0, 553979, 60, 559690, 0, 562715, 60, 568426, 0, 571451, 60, 577162, 0, 580187, 60, 585898, 0, 588923, 60, 594634, 0], "names": ["AKST", "Alaska Standard Time", "AKDT", "Alaska Daylight Time"], "std_offset": -540}'
    )),
    cggic.createTimeZone_0(tzData178));
  idwcai.addMapping(tz178.timezoneID, new idwcai.JsTimeZone(tz178));
  tz179 =
    ((tzData179 = cggcc.safeEval(
      '{"id": "America/St_Barthelemy", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData179));
  idwcai.addMapping(tz179.timezoneID, new idwcai.JsTimeZone(tz179));
  tz180 =
    ((tzData180 = cggcc.safeEval(
      '{"id": "America/St_Johns", "transitions": [2765, 60, 7132, 0, 11501, 60, 16036, 0, 20405, 60, 24772, 0, 29141, 60, 33508, 0, 37877, 60, 42244, 0, 46613, 60, 50980, 0, 55349, 60, 59884, 0, 64085, 60, 68620, 0, 72989, 60, 77356, 0, 81725, 60, 86092, 0, 90461, 60, 94828, 0, 99197, 60, 103564, 0, 107933, 60, 112468, 0, 116669, 60, 121204, 0, 125573, 60, 129940, 0, 134309, 60, 138676, 0, 143045, 60, 147412, 0, 151275, 60, 156146, 0, 168747, 60, 173786, 0, 177483, 60, 182522, 0, 186387, 60, 191258, 0, 195123, 60, 199994, 0, 203859, 60, 208898, 0, 212595, 60, 217634, 0, 221331, 60, 226370, 0, 230235, 60, 235106, 0, 238971, 60, 243842, 0, 247707, 60, 252578, 0, 256443, 60, 261482, 0, 265179, 60, 270218, 0, 273915, 60, 278954, 0, 282819, 60, 287690, 0, 291555, 60, 296426, 0, 300291, 60, 305330, 0, 309027, 60, 314066, 0, 317763, 60, 322802, 0, 325995, 60, 331706, 0, 334731, 60, 340442, 0, 343467, 60, 349178, 0, 352371, 60, 358082, 0, 361107, 60, 366820, 0, 369845, 60, 375556, 0, 378581, 60, 384292, 0, 387317, 60, 393028, 0, 396053, 60, 401764, 0, 404957, 60, 410668, 0, 413693, 60, 419404, 0, 422429, 60, 428140, 0, 431165, 60, 436876, 0, 439901, 60, 445612, 0, 448805, 60, 454516, 0, 457541, 60, 463252, 0, 466277, 60, 471988, 0, 475013, 60, 480724, 0, 483749, 60, 489460, 0, 492485, 60, 498196, 0, 501389, 60, 507100, 0, 510125, 60, 515836, 0, 518861, 60, 524572, 0, 527597, 60, 533308, 0, 536333, 60, 542044, 0, 545237, 60, 550948, 0, 553973, 60, 559684, 0, 562709, 60, 568420, 0, 571445, 60, 577156, 0, 580181, 60, 585892, 0, 588917, 60, 594628, 0], "names": ["NST", "Newfoundland Standard Time", "NDT", "Newfoundland Daylight Time"], "std_offset": -210}'
    )),
    cggic.createTimeZone_0(tzData180));
  idwcai.addMapping(tz180.timezoneID, new idwcai.JsTimeZone(tz180));
  tz181 =
    ((tzData181 = cggcc.safeEval(
      '{"id": "America/St_Kitts", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData181));
  idwcai.addMapping(tz181.timezoneID, new idwcai.JsTimeZone(tz181));
  tz182 =
    ((tzData182 = cggcc.safeEval(
      '{"id": "America/St_Lucia", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData182));
  idwcai.addMapping(tz182.timezoneID, new idwcai.JsTimeZone(tz182));
  tz183 =
    ((tzData183 = cggcc.safeEval(
      '{"id": "America/St_Thomas", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData183));
  idwcai.addMapping(tz183.timezoneID, new idwcai.JsTimeZone(tz183));
  tz184 =
    ((tzData184 = cggcc.safeEval(
      '{"id": "America/St_Vincent", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData184));
  idwcai.addMapping(tz184.timezoneID, new idwcai.JsTimeZone(tz184));
  tz185 =
    ((tzData185 = cggcc.safeEval(
      '{"id": "America/Swift_Current", "transitions": [], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData185));
  idwcai.addMapping(tz185.timezoneID, new idwcai.JsTimeZone(tz185));
  tz186 =
    ((tzData186 = cggcc.safeEval(
      '{"id": "America/Tegucigalpa", "transitions": [151950, 60, 155477, 0, 160686, 60, 164213, 0, 318606, 60, 320813, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData186));
  idwcai.addMapping(tz186.timezoneID, new idwcai.JsTimeZone(tz186));
  tz187 =
    ((tzData187 = cggcc.safeEval(
      '{"id": "America/Thule", "transitions": [186222, 60, 190589, 0, 194958, 60, 199325, 0, 203862, 60, 208901, 0, 212598, 60, 217637, 0, 221334, 60, 226373, 0, 230238, 60, 235109, 0, 238974, 60, 243845, 0, 247710, 60, 252581, 0, 256446, 60, 261485, 0, 265182, 60, 270221, 0, 273918, 60, 278957, 0, 282822, 60, 287693, 0, 291558, 60, 296429, 0, 300294, 60, 305333, 0, 309030, 60, 314069, 0, 317766, 60, 322805, 0, 325998, 60, 331709, 0, 334734, 60, 340445, 0, 343470, 60, 349181, 0, 352374, 60, 358085, 0, 361110, 60, 366821, 0, 369846, 60, 375557, 0, 378582, 60, 384293, 0, 387318, 60, 393029, 0, 396054, 60, 401765, 0, 404958, 60, 410669, 0, 413694, 60, 419405, 0, 422430, 60, 428141, 0, 431166, 60, 436877, 0, 439902, 60, 445613, 0, 448806, 60, 454517, 0, 457542, 60, 463253, 0, 466278, 60, 471989, 0, 475014, 60, 480725, 0, 483750, 60, 489461, 0, 492486, 60, 498197, 0, 501390, 60, 507101, 0, 510126, 60, 515837, 0, 518862, 60, 524573, 0, 527598, 60, 533309, 0, 536334, 60, 542045, 0, 545238, 60, 550949, 0, 553974, 60, 559685, 0, 562710, 60, 568421, 0, 571446, 60, 577157, 0, 580182, 60, 585893, 0, 588918, 60, 594629, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData187));
  idwcai.addMapping(tz187.timezoneID, new idwcai.JsTimeZone(tz187));
  tz188 =
    ((tzData188 = cggcc.safeEval(
      '{"id": "America/Thunder_Bay", "transitions": [2767, 60, 7134, 0, 11503, 60, 16038, 0, 20407, 60, 24774, 0, 37879, 60, 42246, 0, 46615, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData188));
  idwcai.addMapping(tz188.timezoneID, new idwcai.JsTimeZone(tz188));
  tz189 =
    ((tzData189 = cggcc.safeEval(
      '{"id": "America/Tijuana", "transitions": [55354, 60, 59889, 0, 64090, 60, 68625, 0, 72994, 60, 77361, 0, 81730, 60, 86097, 0, 90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125578, 60, 129945, 0, 134314, 60, 138681, 0, 143050, 60, 147417, 0, 151282, 60, 156153, 0, 160018, 60, 165057, 0, 168754, 60, 173793, 0, 177490, 60, 182529, 0, 186394, 60, 191265, 0, 195130, 60, 200001, 0, 203866, 60, 208905, 0, 212602, 60, 217641, 0, 221338, 60, 226377, 0, 230242, 60, 235113, 0, 238978, 60, 243849, 0, 247714, 60, 252585, 0, 256450, 60, 261489, 0, 265186, 60, 270225, 0, 273922, 60, 278961, 0, 282826, 60, 287697, 0, 291562, 60, 296433, 0, 300298, 60, 305337, 0, 309034, 60, 314073, 0, 317770, 60, 322809, 0, 326506, 60, 331545, 0, 335410, 60, 340281, 0, 344146, 60, 349017, 0, 352378, 60, 358089, 0, 361114, 60, 366825, 0, 369850, 60, 375561, 0, 378586, 60, 384297, 0, 387322, 60, 393033, 0, 396058, 60, 401769, 0, 404962, 60, 410673, 0, 413698, 60, 419409, 0, 422434, 60, 428145, 0, 431170, 60, 436881, 0, 439906, 60, 445617, 0, 448810, 60, 454521, 0, 457546, 60, 463257, 0, 466282, 60, 471993, 0, 475018, 60, 480729, 0, 483754, 60, 489465, 0, 492490, 60, 498201, 0, 501394, 60, 507105, 0, 510130, 60, 515841, 0, 518866, 60, 524577, 0, 527602, 60, 533313, 0, 536338, 60, 542049, 0, 545242, 60, 550953, 0, 553978, 60, 559689, 0, 562714, 60, 568425, 0, 571450, 60, 577161, 0, 580186, 60, 585897, 0, 588922, 60, 594633, 0], "names": ["PST", "Pacific Standard Time", "PDT", "Pacific Daylight Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData189));
  idwcai.addMapping(tz189.timezoneID, new idwcai.JsTimeZone(tz189));
  tz190 =
    ((tzData190 = cggcc.safeEval(
      '{"id": "America/Toronto", "transitions": [2767, 60, 7134, 0, 11503, 60, 16038, 0, 20407, 60, 24774, 0, 29143, 60, 33510, 0, 37879, 60, 42246, 0, 46615, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData190));
  idwcai.addMapping(tz190.timezoneID, new idwcai.JsTimeZone(tz190));
  tz191 =
    ((tzData191 = cggcc.safeEval(
      '{"id": "America/Tortola", "transitions": [], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData191));
  idwcai.addMapping(tz191.timezoneID, new idwcai.JsTimeZone(tz191));
  tz192 =
    ((tzData192 = cggcc.safeEval(
      '{"id": "America/Vancouver", "transitions": [2770, 60, 7137, 0, 11506, 60, 16041, 0, 20410, 60, 24777, 0, 29146, 60, 33513, 0, 37882, 60, 42249, 0, 46618, 60, 50985, 0, 55354, 60, 59889, 0, 64090, 60, 68625, 0, 72994, 60, 77361, 0, 81730, 60, 86097, 0, 90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125578, 60, 129945, 0, 134314, 60, 138681, 0, 143050, 60, 147417, 0, 151282, 60, 156153, 0, 160018, 60, 165057, 0, 168754, 60, 173793, 0, 177490, 60, 182529, 0, 186394, 60, 191265, 0, 195130, 60, 200001, 0, 203866, 60, 208905, 0, 212602, 60, 217641, 0, 221338, 60, 226377, 0, 230242, 60, 235113, 0, 238978, 60, 243849, 0, 247714, 60, 252585, 0, 256450, 60, 261489, 0, 265186, 60, 270225, 0, 273922, 60, 278961, 0, 282826, 60, 287697, 0, 291562, 60, 296433, 0, 300298, 60, 305337, 0, 309034, 60, 314073, 0, 317770, 60, 322809, 0, 326002, 60, 331713, 0, 334738, 60, 340449, 0, 343474, 60, 349185, 0, 352378, 60, 358089, 0, 361114, 60, 366825, 0, 369850, 60, 375561, 0, 378586, 60, 384297, 0, 387322, 60, 393033, 0, 396058, 60, 401769, 0, 404962, 60, 410673, 0, 413698, 60, 419409, 0, 422434, 60, 428145, 0, 431170, 60, 436881, 0, 439906, 60, 445617, 0, 448810, 60, 454521, 0, 457546, 60, 463257, 0, 466282, 60, 471993, 0, 475018, 60, 480729, 0, 483754, 60, 489465, 0, 492490, 60, 498201, 0, 501394, 60, 507105, 0, 510130, 60, 515841, 0, 518866, 60, 524577, 0, 527602, 60, 533313, 0, 536338, 60, 542049, 0, 545242, 60, 550953, 0, 553978, 60, 559689, 0, 562714, 60, 568425, 0, 571450, 60, 577161, 0, 580186, 60, 585897, 0, 588922, 60, 594633, 0], "names": ["PST", "Pacific Standard Time", "PDT", "Pacific Daylight Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData192));
  idwcai.addMapping(tz192.timezoneID, new idwcai.JsTimeZone(tz192));
  tz193 =
    ((tzData193 = cggcc.safeEval(
      '{"id": "America/Whitehorse", "transitions": [90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125578, 60, 129945, 0, 134314, 60, 138681, 0, 143050, 60, 147417, 0, 151282, 60, 156153, 0, 160018, 60, 165057, 0, 168754, 60, 173793, 0, 177490, 60, 182529, 0, 186394, 60, 191265, 0, 195130, 60, 200001, 0, 203866, 60, 208905, 0, 212602, 60, 217641, 0, 221338, 60, 226377, 0, 230242, 60, 235113, 0, 238978, 60, 243849, 0, 247714, 60, 252585, 0, 256450, 60, 261489, 0, 265186, 60, 270225, 0, 273922, 60, 278961, 0, 282826, 60, 287697, 0, 291562, 60, 296433, 0, 300298, 60, 305337, 0, 309034, 60, 314073, 0, 317770, 60, 322809, 0, 326002, 60, 331713, 0, 334738, 60, 340449, 0, 343474, 60, 349185, 0, 352378, 60, 358089, 0, 361114, 60, 366825, 0, 369850, 60, 375561, 0, 378586, 60, 384297, 0, 387322, 60, 393033, 0, 396058, 60, 401769, 0, 404962, 60, 410673, 0, 413698, 60, 419409, 0, 422434, 60, 428145, 0, 431170, 60, 436881, 0, 439906, 60, 445617, 0, 448810, 60, 454521, 0, 457546, 60, 463257, 0, 466282, 60, 471993, 0, 475018, 60, 480729, 0, 483754, 60, 489465, 0, 492490, 60, 498201, 0, 501394, 60, 507105, 0, 510130, 60, 515841, 0, 518866, 60, 524577, 0, 527602, 60, 533313, 0, 536338, 60, 542049, 0, 545242, 60, 550953, 0, 553978, 60, 559689, 0, 562714, 60, 568425, 0, 571450, 60, 577161, 0, 580186, 60, 585897, 0, 588922, 60, 594633, 0], "names": ["PST", "Pacific Standard Time", "PDT", "Pacific Daylight Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData193));
  idwcai.addMapping(tz193.timezoneID, new idwcai.JsTimeZone(tz193));
  tz194 =
    ((tzData194 = cggcc.safeEval(
      '{"id": "America/Winnipeg", "transitions": [2768, 60, 7136, 0, 11504, 60, 16040, 0, 20408, 60, 24776, 0, 29144, 60, 33512, 0, 37880, 60, 42248, 0, 46616, 60, 50984, 0, 55352, 60, 59888, 0, 64088, 60, 68624, 0, 72992, 60, 77360, 0, 81728, 60, 86096, 0, 90464, 60, 94832, 0, 99200, 60, 103568, 0, 107936, 60, 112472, 0, 116672, 60, 121208, 0, 125576, 60, 129944, 0, 134312, 60, 138680, 0, 143048, 60, 147416, 0, 151280, 60, 156152, 0, 160016, 60, 165056, 0, 168752, 60, 173792, 0, 177488, 60, 182528, 0, 186392, 60, 191264, 0, 195128, 60, 200000, 0, 203864, 60, 208904, 0, 212600, 60, 217640, 0, 221336, 60, 226376, 0, 230240, 60, 235112, 0, 238976, 60, 243848, 0, 247712, 60, 252584, 0, 256448, 60, 261488, 0, 265184, 60, 270224, 0, 273920, 60, 278960, 0, 282824, 60, 287696, 0, 291560, 60, 296432, 0, 300296, 60, 305336, 0, 309032, 60, 314072, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData194));
  idwcai.addMapping(tz194.timezoneID, new idwcai.JsTimeZone(tz194));
  tz195 =
    ((tzData195 = cggcc.safeEval(
      '{"id": "America/Yakutat", "transitions": [2771, 60, 7138, 0, 11507, 60, 16042, 0, 20411, 60, 24778, 0, 29147, 60, 33514, 0, 35195, 60, 42250, 0, 45107, 60, 50986, 0, 55355, 60, 59890, 0, 64091, 60, 68626, 0, 72995, 60, 77362, 0, 81731, 60, 86098, 0, 90467, 60, 94834, 0, 99203, 60, 103570, 0, 107939, 60, 112474, 0, 116675, 60, 121210, 0, 125579, 60, 129946, 0, 134315, 60, 138682, 0, 143051, 60, 147418, 0, 151283, 60, 156154, 0, 160019, 60, 165058, 0, 168755, 60, 173794, 0, 177491, 60, 182530, 0, 186395, 60, 191266, 0, 195131, 60, 200002, 0, 203867, 60, 208906, 0, 212603, 60, 217642, 0, 221339, 60, 226378, 0, 230243, 60, 235114, 0, 238979, 60, 243850, 0, 247715, 60, 252586, 0, 256451, 60, 261490, 0, 265187, 60, 270226, 0, 273923, 60, 278962, 0, 282827, 60, 287698, 0, 291563, 60, 296434, 0, 300299, 60, 305338, 0, 309035, 60, 314074, 0, 317771, 60, 322810, 0, 326003, 60, 331714, 0, 334739, 60, 340450, 0, 343475, 60, 349186, 0, 352379, 60, 358090, 0, 361115, 60, 366826, 0, 369851, 60, 375562, 0, 378587, 60, 384298, 0, 387323, 60, 393034, 0, 396059, 60, 401770, 0, 404963, 60, 410674, 0, 413699, 60, 419410, 0, 422435, 60, 428146, 0, 431171, 60, 436882, 0, 439907, 60, 445618, 0, 448811, 60, 454522, 0, 457547, 60, 463258, 0, 466283, 60, 471994, 0, 475019, 60, 480730, 0, 483755, 60, 489466, 0, 492491, 60, 498202, 0, 501395, 60, 507106, 0, 510131, 60, 515842, 0, 518867, 60, 524578, 0, 527603, 60, 533314, 0, 536339, 60, 542050, 0, 545243, 60, 550954, 0, 553979, 60, 559690, 0, 562715, 60, 568426, 0, 571451, 60, 577162, 0, 580187, 60, 585898, 0, 588923, 60, 594634, 0], "names": ["AKST", "Alaska Standard Time", "AKDT", "Alaska Daylight Time"], "std_offset": -540}'
    )),
    cggic.createTimeZone_0(tzData195));
  idwcai.addMapping(tz195.timezoneID, new idwcai.JsTimeZone(tz195));
  tz196 =
    ((tzData196 = cggcc.safeEval(
      '{"id": "America/Yellowknife", "transitions": [90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326001, 60, 331712, 0, 334737, 60, 340448, 0, 343473, 60, 349184, 0, 352377, 60, 358088, 0, 361113, 60, 366824, 0, 369849, 60, 375560, 0, 378585, 60, 384296, 0, 387321, 60, 393032, 0, 396057, 60, 401768, 0, 404961, 60, 410672, 0, 413697, 60, 419408, 0, 422433, 60, 428144, 0, 431169, 60, 436880, 0, 439905, 60, 445616, 0, 448809, 60, 454520, 0, 457545, 60, 463256, 0, 466281, 60, 471992, 0, 475017, 60, 480728, 0, 483753, 60, 489464, 0, 492489, 60, 498200, 0, 501393, 60, 507104, 0, 510129, 60, 515840, 0, 518865, 60, 524576, 0, 527601, 60, 533312, 0, 536337, 60, 542048, 0, 545241, 60, 550952, 0, 553977, 60, 559688, 0, 562713, 60, 568424, 0, 571449, 60, 577160, 0, 580185, 60, 585896, 0, 588921, 60, 594632, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData196));
  idwcai.addMapping(tz196.timezoneID, new idwcai.JsTimeZone(tz196));
  tz197 =
    ((tzData197 = cggcc.safeEval(
      '{"id": "Antarctica/Casey", "transitions": [], "names": ["AWST", "Australian Western Standard Time", "AWDT", "Australian Western Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData197));
  idwcai.addMapping(tz197.timezoneID, new idwcai.JsTimeZone(tz197));
  tz198 =
    ((tzData198 = cggcc.safeEval(
      '{"id": "Antarctica/Davis", "transitions": [], "names": ["DAVT", "Davis Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData198));
  idwcai.addMapping(tz198.timezoneID, new idwcai.JsTimeZone(tz198));
  tz199 =
    ((tzData199 = cggcc.safeEval(
      '{"id": "Antarctica/DumontDUrville", "transitions": [], "names": ["DDUT", "Dumont-d\u2019Urville Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData199));
  idwcai.addMapping(tz199.timezoneID, new idwcai.JsTimeZone(tz199));
  tz200 =
    ((tzData200 = cggcc.safeEval(
      '{"id": "Antarctica/Macquarie", "transitions": [7120, 60, 10480, 0, 16024, 60, 18880, 0, 24760, 60, 27784, 0, 33496, 60, 36520, 0, 42232, 60, 45256, 0, 50968, 60, 54160, 0, 59872, 60, 62896, 0, 68608, 60, 71632, 0, 77344, 60, 80368, 0, 86080, 60, 89104, 0, 94816, 60, 97840, 0, 103552, 60, 107248, 0, 112456, 60, 115984, 0, 121192, 60, 124216, 0, 129928, 60, 132952, 0, 138664, 60, 141688, 0, 147232, 60, 150760, 0, 156136, 60, 159664, 0, 165040, 60, 168400, 0, 173776, 60, 177136, 0, 182512, 60, 186208, 0, 190744, 60, 194944, 0, 199480, 60, 203680, 0, 208216, 60, 212416, 0, 216952, 60, 221152, 0, 225688, 60, 230056, 0, 234592, 60, 238792, 0, 243328, 60, 247528, 0, 252064, 60, 256264, 0, 260800, 60, 265000, 0, 268696, 60, 273736, 0, 278440, 60, 282640, 0, 287176, 60, 291376, 0, 295912, 60, 300112, 0, 304648, 60, 308848, 0, 313384, 60, 317752, 0, 322120, 60, 326320, 0, 331024, 60, 335392, 0, 339760, 60, 344128, 0, 348496, 60, 352864, 0], "names": ["AEST", "Macquarie Island Time"], "std_offset": 660}'
    )),
    cggic.createTimeZone_0(tzData200));
  idwcai.addMapping(tz200.timezoneID, new idwcai.JsTimeZone(tz200));
  tz201 =
    ((tzData201 = cggcc.safeEval(
      '{"id": "Antarctica/Mawson", "transitions": [], "names": ["MAWT", "Mawson Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData201));
  idwcai.addMapping(tz201.timezoneID, new idwcai.JsTimeZone(tz201));
  tz202 =
    ((tzData202 = cggcc.safeEval(
      '{"id": "Antarctica/McMurdo", "transitions": [42398, 60, 45086, 0, 50966, 60, 54158, 0, 59870, 60, 62894, 0, 68606, 60, 71630, 0, 77342, 60, 80366, 0, 86078, 60, 89102, 0, 94814, 60, 97838, 0, 103550, 60, 106742, 0, 112454, 60, 115478, 0, 121190, 60, 124214, 0, 129926, 60, 132950, 0, 138662, 60, 141686, 0, 147398, 60, 150422, 0, 156134, 60, 159326, 0, 165038, 60, 168062, 0, 173270, 60, 177134, 0, 182006, 60, 185870, 0, 190742, 60, 194606, 0, 199478, 60, 203510, 0, 208214, 60, 212246, 0, 216950, 60, 220982, 0, 225686, 60, 229718, 0, 234590, 60, 238454, 0, 243326, 60, 247190, 0, 252062, 60, 256094, 0, 260798, 60, 264830, 0, 269534, 60, 273566, 0, 278438, 60, 282302, 0, 287174, 60, 291038, 0, 295910, 60, 299942, 0, 304646, 60, 308678, 0, 313382, 60, 317414, 0, 322118, 60, 326150, 0, 330854, 60, 335390, 0, 339590, 60, 344126, 0, 348326, 60, 352862, 0, 357062, 60, 361598, 0, 365798, 60, 370334, 0, 374702, 60, 379238, 0, 383438, 60, 387974, 0, 392174, 60, 396710, 0, 400910, 60, 405446, 0, 409646, 60, 414182, 0, 418382, 60, 422918, 0, 427286, 60, 431822, 0, 436022, 60, 440558, 0, 444758, 60, 449294, 0, 453494, 60, 458030, 0, 462230, 60, 466766, 0, 470966, 60, 475670, 0, 479870, 60, 484406, 0, 488606, 60, 493142, 0, 497342, 60, 501878, 0, 506078, 60, 510614, 0, 514814, 60, 519350, 0, 523718, 60, 528254, 0, 532454, 60, 536990, 0, 541190, 60, 545726, 0, 549926, 60, 554462, 0, 558662, 60, 563198, 0, 567398, 60, 571934, 0, 576302, 60, 580838, 0, 585038, 60, 589574, 0, 593774, 60], "names": ["NZST", "New Zealand Standard Time", "NZDT", "New Zealand Daylight Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData202));
  idwcai.addMapping(tz202.timezoneID, new idwcai.JsTimeZone(tz202));
  tz203 =
    ((tzData203 = cggcc.safeEval(
      '{"id": "Antarctica/Palmer", "transitions": [35595, 60, 37946, 0, 111964, 60, 115659, 0, 120700, 60, 124395, 0, 129604, 60, 133131, 0, 138340, 60, 141867, 0, 147076, 60, 151443, 0, 155812, 60, 159507, 0, 164380, 60, 168243, 0, 173452, 60, 177147, 0, 181516, 60, 185715, 0, 190924, 60, 194619, 0, 199660, 60, 203355, 0, 208396, 60, 212091, 0, 217132, 60, 220827, 0, 226036, 60, 229563, 0, 234772, 60, 238803, 0, 243508, 60, 247203, 0, 251908, 60, 256443, 0, 260980, 60, 264675, 0, 269884, 60, 273411, 0, 278620, 60, 282147, 0, 287356, 60, 290883, 0, 296092, 60, 299787, 0, 304828, 60, 308523, 0, 313564, 60, 317259, 0, 322468, 60, 325995, 0, 331204, 60, 335235, 0, 339940, 60, 343635, 0, 348676, 60, 352875, 0, 357412, 60, 362451, 0, 364972, 60, 371019, 0, 374044, 60, 379755, 0, 382948, 60, 388491, 0, 391684, 60, 397227, 0, 400420, 60, 405963, 0, 409156, 60, 414699, 0, 417892, 60, 423603, 0, 426628, 60, 432339, 0, 435532, 60, 441075, 0, 444268, 60, 449811, 0, 453004, 60, 458547, 0, 461740, 60, 467283, 0, 470476, 60, 476187, 0, 479380, 60, 484923, 0, 488116, 60, 493659, 0, 496852, 60, 502395, 0, 505588, 60, 511131, 0, 514324, 60, 520035, 0, 523060, 60, 528771, 0, 531964, 60, 537507, 0, 540700, 60, 546243, 0, 549436, 60, 554979, 0, 558172, 60, 563715, 0, 566908, 60, 572619, 0, 575644, 60, 581355, 0, 584548, 60, 590091, 0, 593284, 60], "names": ["CLT", "Chile Standard Time", "CLST", "Chile Summer Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData203));
  idwcai.addMapping(tz203.timezoneID, new idwcai.JsTimeZone(tz203));
  tz204 =
    ((tzData204 = cggcc.safeEval(
      '{"id": "Antarctica/Rothera", "transitions": [], "names": ["ROTT", "Rothera Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData204));
  idwcai.addMapping(tz204.timezoneID, new idwcai.JsTimeZone(tz204));
  tz205 =
    ((tzData205 = cggcc.safeEval(
      '{"id": "Antarctica/Syowa", "transitions": [], "names": ["SYOT", "Syowa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData205));
  idwcai.addMapping(tz205.timezoneID, new idwcai.JsTimeZone(tz205));
  tz206 =
    ((tzData206 = cggcc.safeEval(
      '{"id": "Antarctica/Vostok", "transitions": [], "names": ["VOST", "Vostok Time"], "std_offset": 360}'
    )),
    cggic.createTimeZone_0(tzData206));
  idwcai.addMapping(tz206.timezoneID, new idwcai.JsTimeZone(tz206));
  tz207 =
    ((tzData207 = cggcc.safeEval(
      '{"id": "Arctic/Longyearbyen", "transitions": [89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData207));
  idwcai.addMapping(tz207.timezoneID, new idwcai.JsTimeZone(tz207));
  tz208 =
    ((tzData208 = cggcc.safeEval(
      '{"id": "Asia/Aden", "transitions": [], "names": ["AST", "Arabian Standard Time", "ADT", "Arabian Daylight Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData208));
  idwcai.addMapping(tz208.timezoneID, new idwcai.JsTimeZone(tz208));
  tz209 =
    ((tzData209 = cggcc.safeEval(
      '{"id": "Asia/Almaty", "transitions": [98586, 60, 102977, 0, 107346, 60, 111737, 0, 116106, 60, 120497, 0, 124890, 60, 129260, 0, 133628, 60, 137996, 0, 142364, 60, 146732, 0, 151100, 60, 155468, 0, 159836, 60, 164204, 0, 168572, 60, 172940, 0, 177308, 60, 181844, 0, 194945, 60, 199312, 0, 203684, 60, 208052, 0, 212420, 60, 216788, 0, 221156, 60, 225524, 0, 230060, 60, 235100, 0, 238796, 60, 243836, 0, 247532, 60, 252572, 0, 256268, 60, 261476, 0, 265004, 60, 270212, 0, 273740, 60, 278948, 0, 282644, 60, 287684, 0, 291380, 60, 296420, 0, 300116, 60, 305324, 0], "names": ["EKST", "East Kazakhstan Time"], "std_offset": 360}'
    )),
    cggic.createTimeZone_0(tzData209));
  idwcai.addMapping(tz209.timezoneID, new idwcai.JsTimeZone(tz209));
  tz210 =
    ((tzData210 = cggcc.safeEval(
      '{"id": "Asia/Amman", "transitions": [30046, 60, 32853, 0, 37942, 60, 41613, 0, 46702, 60, 50373, 0, 55486, 60, 59901, 0, 64246, 60, 67917, 0, 72982, 60, 76653, 0, 133654, 60, 138045, 0, 142486, 60, 146853, 0, 151222, 60, 155589, 0, 159958, 60, 164493, 0, 169606, 60, 173229, 0, 178102, 60, 181965, 0, 186622, 60, 190533, 0, 195238, 60, 199437, 0, 203806, 60, 208173, 0, 212542, 60, 216573, 0, 221446, 60, 225310, 0, 230182, 60, 234214, 0, 238918, 60, 242950, 0, 247654, 60, 251686, 0, 258550, 60, 260590, 0, 265102, 60, 269494, 0, 273838, 60, 278230, 0, 282598, 60, 286966, 0, 291334, 60, 296374, 0, 300070, 60, 304942, 0, 308974, 60, 313342, 0, 317710, 60, 322750, 0, 326446, 60, 331486, 0, 335182, 60, 340390, 0, 343918, 60, 349126, 0, 352654, 60, 357862, 0, 361558, 60, 366598, 0, 370294, 60, 384070, 0, 387766, 60, 392974, 0, 396502, 60, 401710, 0, 405406, 60, 410446, 0, 414142, 60, 419182, 0, 422878, 60, 427918, 0, 431614, 60, 436654, 0, 440350, 60, 445558, 0, 449086, 60, 454294, 0, 457990, 60, 463030, 0, 466726, 60, 471766, 0, 475462, 60, 480502, 0, 484198, 60, 489406, 0, 492934, 60, 498142, 0, 501670, 60, 506878, 0, 510574, 60, 515614, 0, 519310, 60, 524350, 0, 528046, 60, 533086, 0, 536782, 60, 541990, 0, 545518, 60, 550726, 0, 554422, 60, 559462, 0, 563158, 60, 568198, 0, 571894, 60, 576934, 0, 580630, 60, 585838, 0, 589366, 60, 594574, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData210));
  idwcai.addMapping(tz210.timezoneID, new idwcai.JsTimeZone(tz210));
  tz211 =
    ((tzData211 = cggcc.safeEval(
      '{"id": "Asia/Anadyr", "transitions": [98579, 60, 102970, 0, 107339, 60, 111731, 0, 116100, 60, 120491, 0, 124884, 60, 129254, 0, 133622, 60, 137990, 0, 142358, 60, 146726, 0, 151094, 60, 155462, 0, 159830, 60, 164198, 0, 168566, 60, 172934, 0, 177302, 60, 181838, 0, 186206, 60, 190575, 0, 194939, 60, 199306, 0, 203678, 60, 208046, 0, 212414, 60, 216782, 0, 221150, 60, 225518, 0, 230054, 60, 235094, 0, 238790, 60, 243830, 0, 247526, 60, 252566, 0, 256262, 60, 261470, 0, 264998, 60, 270206, 0, 273734, 60, 278942, 0, 282638, 60, 287678, 0, 291374, 60, 296414, 0, 300110, 60, 305318, 0, 308846, 60, 314054, 0, 317582, 60, 322790, 0, 326318, 60, 331526, 0, 335222, 60, 340262, 0, 343958, 60, 348998, 0, 352694, 60, 357903, 0], "names": ["ANAT", "Magadan Standard Time", "ANAST", "Magadan Summer Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData211));
  idwcai.addMapping(tz211.timezoneID, new idwcai.JsTimeZone(tz211));
  tz212 =
    ((tzData212 = cggcc.safeEval(
      '{"id": "Asia/Aqtau", "transitions": [107346, 60, 111738, 0, 116107, 60, 120498, 0, 124891, 60, 129261, 0, 133629, 60, 137997, 0, 142365, 60, 146733, 0, 151101, 60, 155469, 0, 159837, 60, 164205, 0, 168573, 60, 172941, 0, 177309, 60, 181845, 0, 194946, 60, 199313, 0, 203685, 60, 208053, 0, 212421, 60, 216789, 0, 221157, 60, 225526, 0, 230062, 60, 235102, 0, 238798, 60, 243838, 0, 247534, 60, 252574, 0, 256270, 60, 261478, 0, 265006, 60, 270214, 0, 273742, 60, 278950, 0, 282646, 60, 287686, 0, 291382, 60, 296422, 0, 300118, 60, 305326, 0], "names": ["WKST", "West Kazakhstan Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData212));
  idwcai.addMapping(tz212.timezoneID, new idwcai.JsTimeZone(tz212));
  tz213 =
    ((tzData213 = cggcc.safeEval(
      '{"id": "Asia/Aqtobe", "transitions": [98587, 60, 102978, 0, 107346, 60, 111738, 0, 116107, 60, 120498, 0, 124891, 60, 129261, 0, 133629, 60, 137997, 0, 142365, 60, 146733, 0, 151101, 60, 155469, 0, 159837, 60, 164205, 0, 168573, 60, 172941, 0, 177309, 60, 181845, 0, 194946, 60, 199313, 0, 203685, 60, 208053, 0, 212421, 60, 216789, 0, 221157, 60, 225525, 0, 230061, 60, 235101, 0, 238797, 60, 243837, 0, 247533, 60, 252573, 0, 256269, 60, 261477, 0, 265005, 60, 270213, 0, 273741, 60, 278949, 0, 282645, 60, 287685, 0, 291381, 60, 296421, 0, 300117, 60, 305325, 0], "names": ["WKST", "West Kazakhstan Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData213));
  idwcai.addMapping(tz213.timezoneID, new idwcai.JsTimeZone(tz213));
  tz214 =
    ((tzData214 = cggcc.safeEval(
      '{"id": "Asia/Ashgabat", "transitions": [98587, 60, 102978, 0, 107347, 60, 111738, 0, 116107, 60, 120498, 0, 124891, 60, 129261, 0, 133629, 60, 137997, 0, 142365, 60, 146733, 0, 151101, 60, 155469, 0, 159837, 60, 164205, 0, 168573, 60, 172941, 0, 177309, 60, 181845, 0, 186213, 60, 190582, 0], "names": ["TMT", "Turkmenistan Standard Time", "TMST", "Turkmenistan Summer Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData214));
  idwcai.addMapping(tz214.timezoneID, new idwcai.JsTimeZone(tz214));
  tz215 =
    ((tzData215 = cggcc.safeEval(
      '{"id": "Asia/Baghdad", "transitions": [108069, 60, 111740, 0, 116085, 60, 120500, 0, 124893, 60, 129284, 0, 133653, 60, 137998, 0, 142366, 60, 146734, 0, 151102, 60, 155470, 0, 159838, 60, 164206, 0, 168574, 60, 172942, 0, 177310, 60, 181846, 0, 186240, 60, 190632, 0, 195024, 60, 199416, 0, 203784, 60, 208176, 0, 212544, 60, 216936, 0, 221304, 60, 225696, 0, 230088, 60, 234480, 0, 238848, 60, 243240, 0, 247608, 60, 252000, 0, 256368, 60, 260760, 0, 265152, 60, 269544, 0, 273912, 60, 278304, 0, 282672, 60, 287064, 0, 291432, 60, 295824, 0, 300216, 60, 304608, 0, 308976, 60, 313368, 0, 317736, 60, 322128, 0, 326496, 60, 330888, 0], "names": ["AST", "Arabian Standard Time", "ADT", "Arabian Daylight Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData215));
  idwcai.addMapping(tz215.timezoneID, new idwcai.JsTimeZone(tz215));
  tz216 =
    ((tzData216 = cggcc.safeEval(
      '{"id": "Asia/Bahrain", "transitions": [], "names": ["AST", "Arabian Standard Time", "ADT", "Arabian Daylight Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData216));
  idwcai.addMapping(tz216.timezoneID, new idwcai.JsTimeZone(tz216));
  tz217 =
    ((tzData217 = cggcc.safeEval(
      '{"id": "Asia/Baku", "transitions": [98588, 60, 102979, 0, 107348, 60, 111739, 0, 116108, 60, 120499, 0, 124892, 60, 129262, 0, 133630, 60, 137998, 0, 142366, 60, 146734, 0, 151102, 60, 155470, 0, 159838, 60, 164206, 0, 168574, 60, 172942, 0, 177310, 60, 181846, 0, 186214, 60, 190583, 0, 194948, 60, 199315, 0, 230065, 60, 235105, 0, 238800, 60, 243840, 0, 247536, 60, 252576, 0, 256272, 60, 261480, 0, 265008, 60, 270216, 0, 273744, 60, 278952, 0, 282648, 60, 287688, 0, 291384, 60, 296424, 0, 300120, 60, 305328, 0, 308856, 60, 314064, 0, 317592, 60, 322800, 0, 326328, 60, 331536, 0, 335232, 60, 340272, 0, 343968, 60, 349008, 0, 352704, 60, 357912, 0, 361440, 60, 366648, 0, 370176, 60, 375384, 0, 379080, 60, 384120, 0, 387816, 60, 392856, 0, 396552, 60, 401592, 0, 405288, 60, 410496, 0, 414024, 60, 419232, 0, 422760, 60, 427968, 0, 431664, 60, 436704, 0, 440400, 60, 445440, 0, 449136, 60, 454344, 0, 457872, 60, 463080, 0, 466608, 60, 471816, 0, 475512, 60, 480552, 0, 484248, 60, 489288, 0, 492984, 60, 498024, 0, 501720, 60, 506928, 0, 510456, 60, 515664, 0, 519192, 60, 524400, 0, 528096, 60, 533136, 0, 536832, 60, 541872, 0, 545568, 60, 550776, 0, 554304, 60, 559512, 0, 563040, 60, 568248, 0, 571776, 60, 576984, 0, 580680, 60, 585720, 0, 589416, 60, 594456, 0], "names": ["AZT", "Azerbaijan Standard Time", "AZST", "Azerbaijan Summer Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData217));
  idwcai.addMapping(tz217.timezoneID, new idwcai.JsTimeZone(tz217));
  tz218 =
    ((tzData218 = cggcc.safeEval(
      '{"id": "Asia/Bangkok", "transitions": [], "names": ["ICT", "Indochina Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData218));
  idwcai.addMapping(tz218.timezoneID, new idwcai.JsTimeZone(tz218));
  tz219 =
    ((tzData219 = cggcc.safeEval(
      '{"id": "Asia/Beirut", "transitions": [21670, 60, 24093, 0, 29182, 60, 32853, 0, 37942, 60, 41613, 0, 46702, 60, 50373, 0, 55486, 60, 59157, 0, 64246, 60, 67917, 0, 72982, 60, 76653, 0, 125614, 60, 129645, 0, 134374, 60, 138405, 0, 143134, 60, 147165, 0, 151894, 60, 155925, 0, 161422, 60, 164709, 0, 169654, 60, 173469, 0, 178198, 60, 182229, 0, 186958, 60, 190989, 0, 195742, 60, 199485, 0, 203686, 60, 208053, 0, 212422, 60, 216789, 0, 221158, 60, 225525, 0, 230062, 60, 234429, 0, 238798, 60, 243165, 0, 247534, 60, 251901, 0, 256270, 60, 261477, 0, 265006, 60, 270213, 0, 273742, 60, 278949, 0, 282646, 60, 287685, 0, 291382, 60, 296421, 0, 300118, 60, 305325, 0, 308854, 60, 314061, 0, 317590, 60, 322797, 0, 326326, 60, 331533, 0, 335230, 60, 340269, 0, 343966, 60, 349005, 0, 352702, 60, 357909, 0, 361438, 60, 366645, 0, 370174, 60, 375381, 0, 379078, 60, 384117, 0, 387814, 60, 392853, 0, 396550, 60, 401589, 0, 405286, 60, 410493, 0, 414022, 60, 419229, 0, 422758, 60, 427965, 0, 431662, 60, 436701, 0, 440398, 60, 445437, 0, 449134, 60, 454341, 0, 457870, 60, 463077, 0, 466606, 60, 471813, 0, 475510, 60, 480549, 0, 484246, 60, 489285, 0, 492982, 60, 498021, 0, 501718, 60, 506925, 0, 510454, 60, 515661, 0, 519190, 60, 524397, 0, 528094, 60, 533133, 0, 536830, 60, 541869, 0, 545566, 60, 550773, 0, 554302, 60, 559509, 0, 563038, 60, 568245, 0, 571774, 60, 576981, 0, 580678, 60, 585717, 0, 589414, 60, 594453, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData219));
  idwcai.addMapping(tz219.timezoneID, new idwcai.JsTimeZone(tz219));
  tz220 =
    ((tzData220 = cggcc.safeEval(
      '{"id": "Asia/Bishkek", "transitions": [98586, 60, 102977, 0, 107346, 60, 111737, 0, 116106, 60, 120497, 0, 124890, 60, 129260, 0, 133628, 60, 137996, 0, 142364, 60, 146732, 0, 151100, 60, 155468, 0, 159836, 60, 164204, 0, 168572, 60, 172940, 0, 177308, 60, 181844, 0, 186212, 60, 189884, 0, 195283, 60, 199314, 0, 204019, 60, 208050, 0, 212755, 60, 216786, 0, 221491, 60, 225522, 0, 230227, 60, 234426, 0, 238797, 60, 243836, 0, 247533, 60, 252572, 0, 256269, 60, 261476, 0, 265005, 60, 270212, 0, 273741, 60, 278948, 0, 282645, 60, 287684, 0, 291381, 60, 296420, 0, 300117, 60, 305324, 0, 308853, 60, 312162, 0], "names": ["KGT", "Kyrgystan Time"], "std_offset": 360}'
    )),
    cggic.createTimeZone_0(tzData220));
  idwcai.addMapping(tz220.timezoneID, new idwcai.JsTimeZone(tz220));
  tz221 =
    ((tzData221 = cggcc.safeEval(
      '{"id": "Asia/Brunei", "transitions": [], "names": ["BNT", "Brunei Darussalam Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData221));
  idwcai.addMapping(tz221.timezoneID, new idwcai.JsTimeZone(tz221));
  tz222 =
    ((tzData222 = cggcc.safeEval(
      '{"id": "Asia/Calcutta", "transitions": [], "names": ["IST", "India Standard Time"], "std_offset": 330}'
    )),
    cggic.createTimeZone_0(tzData222));
  idwcai.addMapping(tz222.timezoneID, new idwcai.JsTimeZone(tz222));
  tz223 =
    ((tzData223 = cggcc.safeEval(
      '{"id": "Asia/Choibalsan", "transitions": [124887, 60, 129254, 0, 133623, 60, 137990, 0, 142359, 60, 146726, 0, 151095, 60, 155462, 0, 159831, 60, 164198, 0, 168567, 60, 172934, 0, 177303, 60, 181838, 0, 186207, 60, 190574, 0, 194943, 60, 199310, 0, 203679, 60, 208046, 0, 212415, 60, 216782, 0, 221151, 60, 225518, 0, 230055, 60, 234422, 0, 238791, 60, 243158, 0, 247527, 60, 251894, 0, 274553, 60, 278248, 0, 282617, 60, 286984, 0, 291353, 60, 295720, 0, 300089, 60, 304456, 0, 308825, 60, 313192, 0, 317561, 60, 322096, 0], "names": ["CHOT", "Choibalsan Standard Time", "CHOST", "Choibalsan Summer Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData223));
  idwcai.addMapping(tz223.timezoneID, new idwcai.JsTimeZone(tz223));
  tz224 =
    ((tzData224 = cggcc.safeEval(
      '{"id": "Asia/Chongqing", "transitions": [143200, 60, 146391, 0, 151432, 60, 155127, 0, 160168, 60, 163863, 0, 169072, 60, 172767, 0, 177808, 60, 181503, 0, 186544, 60, 190239, 0], "names": ["CST", "China Standard Time", "CDT", "China Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData224));
  idwcai.addMapping(tz224.timezoneID, new idwcai.JsTimeZone(tz224));
  tz225 =
    ((tzData225 = cggcc.safeEval(
      '{"id": "Asia/Colombo", "transitions": [], "names": ["IST", "India Standard Time"], "std_offset": 330}'
    )),
    cggic.createTimeZone_0(tzData225));
  idwcai.addMapping(tz225.timezoneID, new idwcai.JsTimeZone(tz225));
  tz226 =
    ((tzData226 = cggcc.safeEval(
      '{"id": "Asia/Damascus", "transitions": [2880, 60, 6551, 0, 11640, 60, 15311, 0, 20424, 60, 24095, 0, 29184, 60, 32855, 0, 37944, 60, 41615, 0, 46704, 60, 50375, 0, 55488, 60, 59159, 0, 64248, 60, 67199, 0, 73008, 60, 75959, 0, 116304, 60, 120503, 0, 125088, 60, 129287, 0, 141360, 60, 146999, 0, 150432, 60, 156287, 0, 159552, 60, 165071, 0, 168696, 60, 173111, 0, 177480, 60, 181847, 0, 186238, 60, 190629, 0, 195190, 60, 199413, 0, 203638, 60, 208029, 0, 212542, 60, 216933, 0, 221302, 60, 225693, 0, 230086, 60, 234477, 0, 238822, 60, 243237, 0, 247558, 60, 251997, 0, 256366, 60, 260757, 0, 265150, 60, 269541, 0, 273910, 60, 278301, 0, 282670, 60, 287061, 0, 291430, 60, 295821, 0, 300214, 60, 304605, 0, 308974, 60, 313365, 0, 317734, 60, 321909, 0, 326446, 60, 331653, 0, 335350, 60, 340413, 0, 343918, 60, 349125, 0, 352822, 60, 357861, 0, 361558, 60, 366597, 0, 370294, 60, 375333, 0, 379030, 60, 384069, 0, 387766, 60, 392973, 0, 396502, 60, 401709, 0, 405238, 60, 410445, 0, 414142, 60, 419181, 0, 422878, 60, 427917, 0, 431614, 60, 436653, 0, 440350, 60, 445557, 0, 449086, 60, 454293, 0, 457822, 60, 463029, 0, 466726, 60, 471765, 0, 475462, 60, 480501, 0, 484198, 60, 489405, 0, 492934, 60, 498141, 0, 501670, 60, 506877, 0, 510574, 60, 515613, 0, 519310, 60, 524349, 0, 528046, 60, 533085, 0, 536782, 60, 541989, 0, 545518, 60, 550725, 0, 554254, 60, 559461, 0, 563158, 60, 568197, 0, 571894, 60, 576933, 0, 580630, 60, 585837, 0, 589366, 60, 594573, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData226));
  idwcai.addMapping(tz226.timezoneID, new idwcai.JsTimeZone(tz226));
  tz227 =
    ((tzData227 = cggcc.safeEval(
      '{"id": "Asia/Dhaka", "transitions": [345953, 60, 350632, 0], "names": ["BDT", "Bangladesh Standard Time", "BDST", "Bangladesh Summer Time"], "std_offset": 360}'
    )),
    cggic.createTimeZone_0(tzData227));
  idwcai.addMapping(tz227.timezoneID, new idwcai.JsTimeZone(tz227));
  tz228 =
    ((tzData228 = cggcc.safeEval(
      '{"id": "Asia/Dili", "transitions": [], "names": ["TLT", "East Timor Time"], "std_offset": 540}'
    )),
    cggic.createTimeZone_0(tzData228));
  idwcai.addMapping(tz228.timezoneID, new idwcai.JsTimeZone(tz228));
  tz229 =
    ((tzData229 = cggcc.safeEval(
      '{"id": "Asia/Dubai", "transitions": [], "names": ["GST", "Gulf Standard Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData229));
  idwcai.addMapping(tz229.timezoneID, new idwcai.JsTimeZone(tz229));
  tz230 =
    ((tzData230 = cggcc.safeEval(
      '{"id": "Asia/Dushanbe", "transitions": [98586, 60, 102977, 0, 107346, 60, 111737, 0, 116106, 60, 120497, 0, 124890, 60, 129260, 0, 133628, 60, 137996, 0, 142364, 60, 146732, 0, 151100, 60, 155468, 0, 159836, 60, 164204, 0, 168572, 60, 172940, 0, 177308, 60, 181844, 0, 186212, 60, 190101, 0], "names": ["TJT", "Tajikistan Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData230));
  idwcai.addMapping(tz230.timezoneID, new idwcai.JsTimeZone(tz230));
  tz231 =
    ((tzData231 = cggcc.safeEval(
      '{"id": "Asia/Gaza", "transitions": [39550, 60, 41901, 0, 46438, 60, 49629, 0, 133966, 60, 137661, 0, 143542, 60, 146229, 0, 151510, 60, 155133, 0, 160150, 60, 163677, 0, 169414, 60, 172437, 0, 177310, 60, 181005, 0, 186046, 60, 189909, 0, 194950, 60, 198813, 0, 203806, 60, 207549, 0, 212542, 60, 216117, 0, 221278, 60, 225021, 0, 230182, 60, 234214, 0, 238918, 60, 242950, 0, 247654, 60, 251686, 0, 256726, 60, 261093, 0, 265630, 60, 269997, 0, 274366, 60, 278733, 0, 283102, 60, 287469, 0, 291838, 60, 296205, 0, 300574, 60, 304606, 0, 309310, 60, 313439, 0, 317734, 60, 321909, 0, 326494, 60, 330455, 0, 335278, 60, 338877, 0, 343918, 60, 347783, 0, 352678, 60, 355965, 0, 361594, 60, 364485, 0, 370294, 60, 374494, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData231));
  idwcai.addMapping(tz231.timezoneID, new idwcai.JsTimeZone(tz231));
  tz232 =
    ((tzData232 = cggcc.safeEval(
      '{"id": "Asia/Harbin", "transitions": [143200, 60, 146391, 0, 151432, 60, 155127, 0, 160168, 60, 163863, 0, 169072, 60, 172767, 0, 177808, 60, 181503, 0, 186544, 60, 190239, 0], "names": ["CST", "China Standard Time", "CDT", "China Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData232));
  idwcai.addMapping(tz232.timezoneID, new idwcai.JsTimeZone(tz232));
  tz233 =
    ((tzData233 = cggcc.safeEval(
      '{"id": "Asia/Hong_Kong", "transitions": [2587, 60, 6954, 0, 11323, 60, 15690, 0, 20059, 60, 24594, 0, 28963, 60, 33330, 0, 35011, 60, 42066, 0, 46435, 60, 50802, 0, 55171, 60, 59538, 0, 82051, 60, 85914, 0], "names": ["HKT", "Hong Kong Standard Time", "HKST", "Hong Kong Summer Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData233));
  idwcai.addMapping(tz233.timezoneID, new idwcai.JsTimeZone(tz233));
  tz234 =
    ((tzData234 = cggcc.safeEval(
      '{"id": "Asia/Hovd", "transitions": [116105, 60, 120496, 0, 124889, 60, 129256, 0, 133625, 60, 137992, 0, 142361, 60, 146728, 0, 151097, 60, 155464, 0, 159833, 60, 164200, 0, 168569, 60, 172936, 0, 177305, 60, 181840, 0, 186209, 60, 190576, 0, 194945, 60, 199312, 0, 203681, 60, 208048, 0, 212417, 60, 216784, 0, 221153, 60, 225520, 0, 230057, 60, 234424, 0, 238793, 60, 243160, 0, 247529, 60, 251896, 0, 274555, 60, 278250, 0, 282619, 60, 286986, 0, 291355, 60, 295722, 0, 300091, 60, 304458, 0, 308827, 60, 313194, 0, 317563, 60, 322098, 0], "names": ["HOVT", "Hovd Standard Time", "HOVST", "Hovd Summer Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData234));
  idwcai.addMapping(tz234.timezoneID, new idwcai.JsTimeZone(tz234));
  tz235 =
    ((tzData235 = cggcc.safeEval(
      '{"id": "Asia/Irkutsk", "transitions": [98584, 60, 102975, 0, 107344, 60, 111735, 0, 116104, 60, 120495, 0, 124888, 60, 129258, 0, 133626, 60, 137994, 0, 142362, 60, 146730, 0, 151098, 60, 155466, 0, 159834, 60, 164202, 0, 168570, 60, 172938, 0, 177306, 60, 181842, 0, 186210, 60, 190579, 0, 194943, 60, 199310, 0, 203682, 60, 208050, 0, 212418, 60, 216786, 0, 221154, 60, 225522, 0, 230058, 60, 235098, 0, 238794, 60, 243834, 0, 247530, 60, 252570, 0, 256266, 60, 261474, 0, 265002, 60, 270210, 0, 273738, 60, 278946, 0, 282642, 60, 287682, 0, 291378, 60, 296418, 0, 300114, 60, 305322, 0, 308850, 60, 314058, 0, 317586, 60, 322794, 0, 326322, 60, 331530, 0, 335226, 60, 340266, 0, 343962, 60, 349002, 0, 352698, 60, 357906, 0], "names": ["IRKT", "Irkutsk Standard Time", "IRKST", "Irkutsk Summer Time"], "std_offset": 540}'
    )),
    cggic.createTimeZone_0(tzData235));
  idwcai.addMapping(tz235.timezoneID, new idwcai.JsTimeZone(tz235));
  tz236 =
    ((tzData236 = cggcc.safeEval(
      '{"id": "Asia/Jakarta", "transitions": [], "names": ["WIT", "Western Indonesia Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData236));
  idwcai.addMapping(tz236.timezoneID, new idwcai.JsTimeZone(tz236));
  tz237 =
    ((tzData237 = cggcc.safeEval(
      '{"id": "Asia/Jayapura", "transitions": [], "names": ["EIT", "Eastern Indonesia Time"], "std_offset": 540}'
    )),
    cggic.createTimeZone_0(tzData237));
  idwcai.addMapping(tz237.timezoneID, new idwcai.JsTimeZone(tz237));
  tz238 =
    ((tzData238 = cggcc.safeEval(
      '{"id": "Asia/Jerusalem", "transitions": [39550, 60, 41901, 0, 46438, 60, 49629, 0, 133966, 60, 137661, 0, 143542, 60, 146229, 0, 151510, 60, 155133, 0, 160150, 60, 163677, 0, 169414, 60, 172437, 0, 177310, 60, 181005, 0, 186046, 60, 189909, 0, 194950, 60, 198813, 0, 203806, 60, 207549, 0, 212542, 60, 216117, 0, 221278, 60, 225021, 0, 229678, 60, 234117, 0, 238582, 60, 242829, 0, 247318, 60, 251397, 0, 256392, 60, 260087, 0, 265464, 60, 269662, 0, 274103, 60, 278134, 0, 282599, 60, 287206, 0, 291335, 60, 295870, 0, 300359, 60, 304390, 0, 308976, 60, 313559, 0, 317712, 60, 322127, 0, 326448, 60, 330527, 0, 335184, 60, 339767, 0, 343920, 60, 348335, 0, 352656, 60, 356735, 0, 361560, 60, 365975, 0, 370296, 60, 374543, 0, 379032, 60, 383615, 0, 387768, 60, 392351, 0, 396504, 60, 401087, 0, 405240, 60, 409823, 0, 413976, 60, 418727, 0, 422712, 60, 427463, 0, 431616, 60, 436199, 0, 440352, 60, 444935, 0, 449088, 60, 453671, 0, 457824, 60, 462407, 0, 466560, 60, 471311, 0, 475464, 60, 480047, 0, 484200, 60, 488783, 0, 492936, 60, 497519, 0, 501672, 60, 506279, 0, 510408, 60, 515159, 0, 519144, 60, 523895, 0, 528048, 60, 532631, 0, 536784, 60, 541367, 0, 545520, 60, 550103, 0, 554256, 60, 558839, 0, 562992, 60, 567743, 0, 571728, 60, 576479, 0, 580632, 60, 585215, 0, 589368, 60, 593951, 0], "names": ["IST", "Israel Standard Time", "IDT", "Israel Daylight Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData238));
  idwcai.addMapping(tz238.timezoneID, new idwcai.JsTimeZone(tz238));
  tz239 =
    ((tzData239 = cggcc.safeEval(
      '{"id": "Asia/Kabul", "transitions": [], "names": ["AFT", "Afghanistan Time"], "std_offset": 270}'
    )),
    cggic.createTimeZone_0(tzData239));
  idwcai.addMapping(tz239.timezoneID, new idwcai.JsTimeZone(tz239));
  tz240 =
    ((tzData240 = cggcc.safeEval(
      '{"id": "Asia/Kamchatka", "transitions": [98580, 60, 102971, 0, 107340, 60, 111731, 0, 116100, 60, 120491, 0, 124884, 60, 129254, 0, 133622, 60, 137990, 0, 142358, 60, 146726, 0, 151094, 60, 155462, 0, 159830, 60, 164198, 0, 168566, 60, 172934, 0, 177302, 60, 181838, 0, 186206, 60, 190575, 0, 194939, 60, 199306, 0, 203678, 60, 208046, 0, 212414, 60, 216782, 0, 221150, 60, 225518, 0, 230054, 60, 235094, 0, 238790, 60, 243830, 0, 247526, 60, 252566, 0, 256262, 60, 261470, 0, 264998, 60, 270206, 0, 273734, 60, 278942, 0, 282638, 60, 287678, 0, 291374, 60, 296414, 0, 300110, 60, 305318, 0, 308846, 60, 314054, 0, 317582, 60, 322790, 0, 326318, 60, 331526, 0, 335222, 60, 340262, 0, 343958, 60, 348998, 0, 352694, 60, 357903, 0], "names": ["PETT", "Magadan Standard Time", "PETST", "Magadan Summer Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData240));
  idwcai.addMapping(tz240.timezoneID, new idwcai.JsTimeZone(tz240));
  tz241 =
    ((tzData241 = cggcc.safeEval(
      '{"id": "Asia/Karachi", "transitions": [282811, 60, 287178, 0, 336739, 60, 340410, 0, 344371, 60, 349170, 0], "names": ["PKT", "Pakistan Standard Time", "PKST", "Pakistan Summer Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData241));
  idwcai.addMapping(tz241.timezoneID, new idwcai.JsTimeZone(tz241));
  tz242 =
    ((tzData242 = cggcc.safeEval(
      '{"id": "Asia/Kashgar", "transitions": [143200, 60, 146391, 0, 151432, 60, 155127, 0, 160168, 60, 163863, 0, 169072, 60, 172767, 0, 177808, 60, 181503, 0, 186544, 60, 190239, 0], "names": ["CST", "China Standard Time", "CDT", "China Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData242));
  idwcai.addMapping(tz242.timezoneID, new idwcai.JsTimeZone(tz242));
  tz243 =
    ((tzData243 = cggcc.safeEval(
      '{"id": "Asia/Katmandu", "transitions": [], "names": ["NPT", "Nepal Time"], "std_offset": 345}'
    )),
    cggic.createTimeZone_0(tzData243));
  idwcai.addMapping(tz243.timezoneID, new idwcai.JsTimeZone(tz243));
  tz244 =
    ((tzData244 = cggcc.safeEval(
      '{"id": "Asia/Krasnoyarsk", "transitions": [98585, 60, 102976, 0, 107345, 60, 111736, 0, 116105, 60, 120496, 0, 124889, 60, 129259, 0, 133627, 60, 137995, 0, 142363, 60, 146731, 0, 151099, 60, 155467, 0, 159835, 60, 164203, 0, 168571, 60, 172939, 0, 177307, 60, 181843, 0, 186211, 60, 190580, 0, 194944, 60, 199311, 0, 203683, 60, 208051, 0, 212419, 60, 216787, 0, 221155, 60, 225523, 0, 230059, 60, 235099, 0, 238795, 60, 243835, 0, 247531, 60, 252571, 0, 256267, 60, 261475, 0, 265003, 60, 270211, 0, 273739, 60, 278947, 0, 282643, 60, 287683, 0, 291379, 60, 296419, 0, 300115, 60, 305323, 0, 308851, 60, 314059, 0, 317587, 60, 322795, 0, 326323, 60, 331531, 0, 335227, 60, 340267, 0, 343963, 60, 349003, 0, 352699, 60, 357907, 0], "names": ["KRAT", "Krasnoyarsk Standard Time", "KRAST", "Krasnoyarsk Summer Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData244));
  idwcai.addMapping(tz244.timezoneID, new idwcai.JsTimeZone(tz244));
  tz245 =
    ((tzData245 = cggcc.safeEval(
      '{"id": "Asia/Kuala_Lumpur", "transitions": [], "names": ["MYT", "Malaysia Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData245));
  idwcai.addMapping(tz245.timezoneID, new idwcai.JsTimeZone(tz245));
  tz246 =
    ((tzData246 = cggcc.safeEval(
      '{"id": "Asia/Kuching", "transitions": [], "names": ["MYT", "Malaysia Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData246));
  idwcai.addMapping(tz246.timezoneID, new idwcai.JsTimeZone(tz246));
  tz247 =
    ((tzData247 = cggcc.safeEval(
      '{"id": "Asia/Kuwait", "transitions": [], "names": ["AST", "Arabian Standard Time", "ADT", "Arabian Daylight Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData247));
  idwcai.addMapping(tz247.timezoneID, new idwcai.JsTimeZone(tz247));
  tz248 =
    ((tzData248 = cggcc.safeEval(
      '{"id": "Asia/Macau", "transitions": [2587, 60, 6954, 0, 11323, 60, 15690, 0, 20056, 60, 24423, 0, 28792, 60, 33327, 0, 37696, 60, 42066, 0, 46435, 60, 50802, 0, 55171, 60, 59538, 0, 63907, 60, 68274, 0, 72640, 60, 77007, 0, 81376, 60, 85911, 0, 90280, 60, 94647, 0], "names": ["CST", "China Standard Time", "CDT", "China Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData248));
  idwcai.addMapping(tz248.timezoneID, new idwcai.JsTimeZone(tz248));
  tz249 =
    ((tzData249 = cggcc.safeEval(
      '{"id": "Asia/Magadan", "transitions": [98581, 60, 102972, 0, 107341, 60, 111732, 0, 116101, 60, 120492, 0, 124885, 60, 129255, 0, 133623, 60, 137991, 0, 142359, 60, 146727, 0, 151095, 60, 155463, 0, 159831, 60, 164199, 0, 168567, 60, 172935, 0, 177303, 60, 181839, 0, 186207, 60, 190576, 0, 194940, 60, 199307, 0, 203679, 60, 208047, 0, 212415, 60, 216783, 0, 221151, 60, 225519, 0, 230055, 60, 235095, 0, 238791, 60, 243831, 0, 247527, 60, 252567, 0, 256263, 60, 261471, 0, 264999, 60, 270207, 0, 273735, 60, 278943, 0, 282639, 60, 287679, 0, 291375, 60, 296415, 0, 300111, 60, 305319, 0, 308847, 60, 314055, 0, 317583, 60, 322791, 0, 326319, 60, 331527, 0, 335223, 60, 340263, 0, 343959, 60, 348999, 0, 352695, 60, 357903, 0], "names": ["MAGT", "Magadan Standard Time", "MAGST", "Magadan Summer Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData249));
  idwcai.addMapping(tz249.timezoneID, new idwcai.JsTimeZone(tz249));
  tz250 =
    ((tzData250 = cggcc.safeEval(
      '{"id": "Asia/Makassar", "transitions": [], "names": ["CIT", "Central Indonesia Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData250));
  idwcai.addMapping(tz250.timezoneID, new idwcai.JsTimeZone(tz250));
  tz251 =
    ((tzData251 = cggcc.safeEval(
      '{"id": "Asia/Manila", "transitions": [72040, 60, 76431, 0], "names": ["PHT", "Philippine Standard Time", "PHST", "Philippine Summer Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData251));
  idwcai.addMapping(tz251.timezoneID, new idwcai.JsTimeZone(tz251));
  tz252 =
    ((tzData252 = cggcc.safeEval(
      '{"id": "Asia/Muscat", "transitions": [], "names": ["GST", "Gulf Standard Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData252));
  idwcai.addMapping(tz252.timezoneID, new idwcai.JsTimeZone(tz252));
  tz253 =
    ((tzData253 = cggcc.safeEval(
      '{"id": "Asia/Nicosia", "transitions": [46270, 60, 50637, 0, 55822, 60, 59397, 0, 63574, 60, 67773, 0, 72310, 60, 76701, 0, 81046, 60, 85413, 0, 89950, 60, 94149, 0, 98518, 60, 102885, 0, 107254, 60, 111621, 0, 115990, 60, 120357, 0, 124726, 60, 129261, 0, 133630, 60, 137997, 0, 142366, 60, 146733, 0, 151102, 60, 155469, 0, 159838, 60, 164205, 0, 168574, 60, 172941, 0, 177310, 60, 181845, 0, 186214, 60, 190581, 0, 194950, 60, 199317, 0, 203686, 60, 208053, 0, 212422, 60, 216789, 0, 221158, 60, 225525, 0, 230062, 60, 234429, 0, 238798, 60, 243165, 0, 247534, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData253));
  idwcai.addMapping(tz253.timezoneID, new idwcai.JsTimeZone(tz253));
  tz254 =
    ((tzData254 = cggcc.safeEval(
      '{"id": "Asia/Novokuznetsk", "transitions": [98585, 60, 102976, 0, 107345, 60, 111736, 0, 116105, 60, 120496, 0, 124889, 60, 129259, 0, 133627, 60, 137995, 0, 142363, 60, 146731, 0, 151099, 60, 155467, 0, 159835, 60, 164203, 0, 168571, 60, 172939, 0, 177307, 60, 181843, 0, 186211, 60, 190580, 0, 194944, 60, 199311, 0, 203683, 60, 208051, 0, 212419, 60, 216787, 0, 221155, 60, 225523, 0, 230059, 60, 235099, 0, 238795, 60, 243835, 0, 247531, 60, 252571, 0, 256267, 60, 261475, 0, 265003, 60, 270211, 0, 273739, 60, 278947, 0, 282643, 60, 287683, 0, 291379, 60, 296419, 0, 300115, 60, 305323, 0, 308851, 60, 314059, 0, 317587, 60, 322795, 0, 326323, 60, 331531, 0, 335227, 60, 340267, 0, 343963, 60, 349003, 0, 352699, 60, 357908, 0], "names": ["NOVT", "Novosibirsk Standard Time", "NOVST", "Novosibirsk Summer Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData254));
  idwcai.addMapping(tz254.timezoneID, new idwcai.JsTimeZone(tz254));
  tz255 =
    ((tzData255 = cggcc.safeEval(
      '{"id": "Asia/Novosibirsk", "transitions": [98585, 60, 102976, 0, 107345, 60, 111736, 0, 116105, 60, 120496, 0, 124889, 60, 129259, 0, 133627, 60, 137995, 0, 142363, 60, 146731, 0, 151099, 60, 155467, 0, 159835, 60, 164203, 0, 168571, 60, 172939, 0, 177307, 60, 181843, 0, 186211, 60, 190580, 0, 194944, 60, 199311, 0, 203683, 60, 208052, 0, 212420, 60, 216788, 0, 221156, 60, 225524, 0, 230060, 60, 235100, 0, 238796, 60, 243836, 0, 247532, 60, 252572, 0, 256268, 60, 261476, 0, 265004, 60, 270212, 0, 273740, 60, 278948, 0, 282644, 60, 287684, 0, 291380, 60, 296420, 0, 300116, 60, 305324, 0, 308852, 60, 314060, 0, 317588, 60, 322796, 0, 326324, 60, 331532, 0, 335228, 60, 340268, 0, 343964, 60, 349004, 0, 352700, 60, 357908, 0], "names": ["NOVT", "Novosibirsk Standard Time", "NOVST", "Novosibirsk Summer Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData255));
  idwcai.addMapping(tz255.timezoneID, new idwcai.JsTimeZone(tz255));
  tz256 =
    ((tzData256 = cggcc.safeEval(
      '{"id": "Asia/Omsk", "transitions": [98586, 60, 102977, 0, 107346, 60, 111737, 0, 116106, 60, 120497, 0, 124890, 60, 129260, 0, 133628, 60, 137996, 0, 142364, 60, 146732, 0, 151100, 60, 155468, 0, 159836, 60, 164204, 0, 168572, 60, 172940, 0, 177308, 60, 181844, 0, 186212, 60, 190581, 0, 194945, 60, 199312, 0, 203684, 60, 208052, 0, 212420, 60, 216788, 0, 221156, 60, 225524, 0, 230060, 60, 235100, 0, 238796, 60, 243836, 0, 247532, 60, 252572, 0, 256268, 60, 261476, 0, 265004, 60, 270212, 0, 273740, 60, 278948, 0, 282644, 60, 287684, 0, 291380, 60, 296420, 0, 300116, 60, 305324, 0, 308852, 60, 314060, 0, 317588, 60, 322796, 0, 326324, 60, 331532, 0, 335228, 60, 340268, 0, 343964, 60, 349004, 0, 352700, 60, 357908, 0], "names": ["OMST", "Omsk Standard Time", "OMSST", "Omsk Summer Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData256));
  idwcai.addMapping(tz256.timezoneID, new idwcai.JsTimeZone(tz256));
  tz257 =
    ((tzData257 = cggcc.safeEval(
      '{"id": "Asia/Oral", "transitions": [98587, 60, 102978, 0, 107346, 60, 111738, 0, 116107, 60, 120498, 0, 124891, 60, 129261, 0, 133629, 60, 137997, 0, 142365, 60, 146733, 0, 151101, 60, 155469, 0, 159837, 60, 164205, 0, 168573, 60, 172942, 0, 177310, 60, 181846, 0, 194947, 60, 199314, 0, 203686, 60, 208054, 0, 212422, 60, 216790, 0, 221158, 60, 225526, 0, 230062, 60, 235102, 0, 238798, 60, 243838, 0, 247534, 60, 252574, 0, 256270, 60, 261478, 0, 265006, 60, 270214, 0, 273742, 60, 278950, 0, 282646, 60, 287686, 0, 291382, 60, 296422, 0, 300118, 60, 305326, 0], "names": ["WKST", "West Kazakhstan Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData257));
  idwcai.addMapping(tz257.timezoneID, new idwcai.JsTimeZone(tz257));
  tz258 =
    ((tzData258 = cggcc.safeEval(
      '{"id": "Asia/Phnom_Penh", "transitions": [], "names": ["ICT", "Indochina Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData258));
  idwcai.addMapping(tz258.timezoneID, new idwcai.JsTimeZone(tz258));
  tz259 =
    ((tzData259 = cggcc.safeEval(
      '{"id": "Asia/Pontianak", "transitions": [], "names": ["WIT", "Western Indonesia Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData259));
  idwcai.addMapping(tz259.timezoneID, new idwcai.JsTimeZone(tz259));
  tz260 =
    ((tzData260 = cggcc.safeEval(
      '{"id": "Asia/Pyongyang", "transitions": [], "names": ["KST", "Korean Standard Time", "KDT", "Korean Daylight Time"], "std_offset": 540}'
    )),
    cggic.createTimeZone_0(tzData260));
  idwcai.addMapping(tz260.timezoneID, new idwcai.JsTimeZone(tz260));
  tz261 =
    ((tzData261 = cggcc.safeEval(
      '{"id": "Asia/Qatar", "transitions": [], "names": ["AST", "Arabian Standard Time", "ADT", "Arabian Daylight Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData261));
  idwcai.addMapping(tz261.timezoneID, new idwcai.JsTimeZone(tz261));
  tz262 =
    ((tzData262 = cggcc.safeEval(
      '{"id": "Asia/Qyzylorda", "transitions": [98587, 60, 102978, 0, 107346, 60, 111738, 0, 116107, 60, 120498, 0, 124891, 60, 129261, 0, 133629, 60, 137997, 0, 142365, 60, 146733, 0, 151101, 60, 155469, 0, 159837, 60, 164205, 0, 168573, 60, 172941, 0, 177309, 60, 181845, 0, 194945, 60, 199312, 0, 203684, 60, 208052, 0, 212420, 60, 216788, 0, 221156, 60, 225524, 0, 230060, 60, 235100, 0, 238796, 60, 243836, 0, 247532, 60, 252572, 0, 256268, 60, 261476, 0, 265004, 60, 270212, 0, 273740, 60, 278948, 0, 282644, 60, 287684, 0, 291380, 60, 296420, 0, 300116, 60, 305324, 0], "names": ["EKST", "East Kazakhstan Time"], "std_offset": 360}'
    )),
    cggic.createTimeZone_0(tzData262));
  idwcai.addMapping(tz262.timezoneID, new idwcai.JsTimeZone(tz262));
  tz263 =
    ((tzData263 = cggcc.safeEval(
      '{"id": "Asia/Rangoon", "transitions": [], "names": ["MMT", "Myanmar Time"], "std_offset": 390}'
    )),
    cggic.createTimeZone_0(tzData263));
  idwcai.addMapping(tz263.timezoneID, new idwcai.JsTimeZone(tz263));
  tz264 =
    ((tzData264 = cggcc.safeEval(
      '{"id": "Asia/Riyadh", "transitions": [], "names": ["AST", "Arabian Standard Time", "ADT", "Arabian Daylight Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData264));
  idwcai.addMapping(tz264.timezoneID, new idwcai.JsTimeZone(tz264));
  tz265 =
    ((tzData265 = cggcc.safeEval(
      '{"id": "Asia/Saigon", "transitions": [], "names": ["ICT", "Indochina Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData265));
  idwcai.addMapping(tz265.timezoneID, new idwcai.JsTimeZone(tz265));
  tz266 =
    ((tzData266 = cggcc.safeEval(
      '{"id": "Asia/Sakhalin", "transitions": [98581, 60, 102972, 0, 107341, 60, 111732, 0, 116101, 60, 120492, 0, 124885, 60, 129255, 0, 133623, 60, 137991, 0, 142359, 60, 146727, 0, 151095, 60, 155463, 0, 159831, 60, 164199, 0, 168567, 60, 172935, 0, 177303, 60, 181839, 0, 186207, 60, 190576, 0, 194940, 60, 199307, 0, 203679, 60, 208047, 0, 212415, 60, 216783, 0, 221151, 60, 225519, 0, 230055, 60, 235095, 0, 238791, 60, 243832, 0, 247528, 60, 252568, 0, 256264, 60, 261472, 0, 265000, 60, 270208, 0, 273736, 60, 278944, 0, 282640, 60, 287680, 0, 291376, 60, 296416, 0, 300112, 60, 305320, 0, 308848, 60, 314056, 0, 317584, 60, 322792, 0, 326320, 60, 331528, 0, 335224, 60, 340264, 0, 343960, 60, 349000, 0, 352696, 60, 357904, 0], "names": ["SAKT", "Sakhalin Standard Time", "SAKST", "Sakhalin Summer Time"], "std_offset": 660}'
    )),
    cggic.createTimeZone_0(tzData266));
  idwcai.addMapping(tz266.timezoneID, new idwcai.JsTimeZone(tz266));
  tz267 =
    ((tzData267 = cggcc.safeEval(
      '{"id": "Asia/Samarkand", "transitions": [98587, 60, 102978, 0, 107346, 60, 111738, 0, 116107, 60, 120498, 0, 124891, 60, 129261, 0, 133629, 60, 137997, 0, 142365, 60, 146733, 0, 151101, 60, 155469, 0, 159837, 60, 164205, 0, 168573, 60, 172941, 0, 177309, 60, 181845, 0, 186213, 60, 190581, 0], "names": ["UZT", "Uzbekistan Standard Time", "UZST", "Uzbekistan Summer Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData267));
  idwcai.addMapping(tz267.timezoneID, new idwcai.JsTimeZone(tz267));
  tz268 =
    ((tzData268 = cggcc.safeEval(
      '{"id": "Asia/Seoul", "transitions": [152103, 60, 155798, 0, 160839, 60, 164534, 0], "names": ["KST", "Korean Standard Time", "KDT", "Korean Daylight Time"], "std_offset": 540}'
    )),
    cggic.createTimeZone_0(tzData268));
  idwcai.addMapping(tz268.timezoneID, new idwcai.JsTimeZone(tz268));
  tz269 =
    ((tzData269 = cggcc.safeEval(
      '{"id": "Asia/Shanghai", "transitions": [143200, 60, 146391, 0, 151432, 60, 155127, 0, 160168, 60, 163863, 0, 169072, 60, 172767, 0, 177808, 60, 181503, 0, 186544, 60, 190239, 0], "names": ["CST", "China Standard Time", "CDT", "China Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData269));
  idwcai.addMapping(tz269.timezoneID, new idwcai.JsTimeZone(tz269));
  tz270 =
    ((tzData270 = cggcc.safeEval(
      '{"id": "Asia/Singapore", "transitions": [], "names": ["SGT", "Singapore Standard Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData270));
  idwcai.addMapping(tz270.timezoneID, new idwcai.JsTimeZone(tz270));
  tz271 =
    ((tzData271 = cggcc.safeEval(
      '{"id": "Asia/Taipei", "transitions": [37216, 60, 41607, 0, 45976, 60, 50367, 0, 83200, 60, 85407, 0], "names": ["CST", "Taipei Standard Time", "CDT", "Taipei Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData271));
  idwcai.addMapping(tz271.timezoneID, new idwcai.JsTimeZone(tz271));
  tz272 =
    ((tzData272 = cggcc.safeEval(
      '{"id": "Asia/Tashkent", "transitions": [98586, 60, 102977, 0, 107346, 60, 111737, 0, 116106, 60, 120497, 0, 124890, 60, 129260, 0, 133628, 60, 137996, 0, 142364, 60, 146732, 0, 151100, 60, 155468, 0, 159836, 60, 164204, 0, 168572, 60, 172940, 0, 177308, 60, 181844, 0, 186212, 60, 190581, 0], "names": ["UZT", "Uzbekistan Standard Time", "UZST", "Uzbekistan Summer Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData272));
  idwcai.addMapping(tz272.timezoneID, new idwcai.JsTimeZone(tz272));
  tz273 =
    ((tzData273 = cggcc.safeEval(
      '{"id": "Asia/Tbilisi", "transitions": [98588, 60, 102979, 0, 107348, 60, 111739, 0, 116108, 60, 120499, 0, 124892, 60, 129262, 0, 133630, 60, 137998, 0, 142366, 60, 146734, 0, 151102, 60, 155470, 0, 159838, 60, 164206, 0, 168574, 60, 172942, 0, 177310, 60, 181846, 0, 186214, 60, 190583, 0, 194949, 60, 199316, 0, 203685, 60, 208052, 0, 212421, 60, 216788, 0, 221156, 60, 225523, 0, 230060, 60, 243835, 0, 247532, 60, 252571, 0, 256268, 60, 261475, 0, 265004, 60, 270211, 0, 273740, 60, 278947, 0, 282644, 60, 287683, 0, 291380, 60, 296419, 0, 300116, 60, 305327, 0], "names": ["GET", "Georgia Standard Time", "GEST", "Georgia Summer Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData273));
  idwcai.addMapping(tz273.timezoneID, new idwcai.JsTimeZone(tz273));
  tz274 =
    ((tzData274 = cggcc.safeEval(
      '{"id": "Asia/Tehran", "transitions": [72020, 60, 77155, 0, 80780, 60, 85147, 0, 89564, 60, 94027, 0, 187004, 60, 190411, 0, 194780, 60, 199195, 0, 203540, 60, 207955, 0, 212300, 60, 216715, 0, 221060, 60, 225475, 0, 229820, 60, 234235, 0, 238604, 60, 243019, 0, 247364, 60, 251779, 0, 256124, 60, 260539, 0, 264884, 60, 269299, 0, 273668, 60, 278083, 0, 282428, 60, 286843, 0, 291188, 60, 295603, 0, 299948, 60, 304363, 0, 308732, 60, 313147, 0, 335012, 60, 339427, 0, 343796, 60, 348211, 0, 352556, 60, 356971, 0, 361316, 60, 365731, 0, 370076, 60, 374491, 0, 378860, 60, 383275, 0, 387620, 60, 392035, 0, 396380, 60, 400795, 0, 405140, 60, 409555, 0, 413924, 60, 418339, 0, 422684, 60, 427099, 0, 431444, 60, 435859, 0, 440204, 60, 444619, 0, 448988, 60, 453403, 0, 457748, 60, 462163, 0, 466508, 60, 470923, 0, 475268, 60, 479683, 0, 484052, 60, 488467, 0, 492812, 60, 497227, 0, 501572, 60, 505987, 0, 510332, 60, 514747, 0, 519092, 60, 523507, 0, 527876, 60, 532291, 0, 536636, 60, 541051, 0, 545396, 60, 549811, 0, 554156, 60, 558571, 0, 562940, 60, 567355, 0, 571700, 60, 576115, 0, 580460, 60, 584875, 0, 589220, 60, 593635, 0], "names": ["IRST", "Iran Standard Time", "IRDT", "Iran Daylight Time"], "std_offset": 210}'
    )),
    cggic.createTimeZone_0(tzData274));
  idwcai.addMapping(tz274.timezoneID, new idwcai.JsTimeZone(tz274));
  tz275 =
    ((tzData275 = cggcc.safeEval(
      '{"id": "Asia/Thimphu", "transitions": [], "names": ["BTT", "Bhutan Time"], "std_offset": 360}'
    )),
    cggic.createTimeZone_0(tzData275));
  idwcai.addMapping(tz275.timezoneID, new idwcai.JsTimeZone(tz275));
  tz276 =
    ((tzData276 = cggcc.safeEval(
      '{"id": "Asia/Tokyo", "transitions": [], "names": ["JST", "Japan Standard Time", "JDT", "Japan Daylight Time"], "std_offset": 540}'
    )),
    cggic.createTimeZone_0(tzData276));
  idwcai.addMapping(tz276.timezoneID, new idwcai.JsTimeZone(tz276));
  tz277 =
    ((tzData277 = cggcc.safeEval(
      '{"id": "Asia/Ulaanbaatar", "transitions": [116104, 60, 120495, 0, 124888, 60, 129255, 0, 133624, 60, 137991, 0, 142360, 60, 146727, 0, 151096, 60, 155463, 0, 159832, 60, 164199, 0, 168568, 60, 172935, 0, 177304, 60, 181839, 0, 186208, 60, 190575, 0, 194944, 60, 199311, 0, 203680, 60, 208047, 0, 212416, 60, 216783, 0, 221152, 60, 225519, 0, 230056, 60, 234423, 0, 238792, 60, 243159, 0, 247528, 60, 251895, 0, 274554, 60, 278249, 0, 282618, 60, 286985, 0, 291354, 60, 295721, 0, 300090, 60, 304457, 0, 308826, 60, 313193, 0, 317562, 60, 322097, 0], "names": ["ULAT", "Ulan Bator Standard Time", "ULAST", "Ulan Bator Summer Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData277));
  idwcai.addMapping(tz277.timezoneID, new idwcai.JsTimeZone(tz277));
  tz278 =
    ((tzData278 = cggcc.safeEval(
      '{"id": "Asia/Urumqi", "transitions": [143200, 60, 146391, 0, 151432, 60, 155127, 0, 160168, 60, 163863, 0, 169072, 60, 172767, 0, 177808, 60, 181503, 0, 186544, 60, 190239, 0], "names": ["CST", "China Standard Time", "CDT", "China Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData278));
  idwcai.addMapping(tz278.timezoneID, new idwcai.JsTimeZone(tz278));
  tz279 =
    ((tzData279 = cggcc.safeEval(
      '{"id": "Asia/Vientiane", "transitions": [], "names": ["ICT", "Indochina Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData279));
  idwcai.addMapping(tz279.timezoneID, new idwcai.JsTimeZone(tz279));
  tz280 =
    ((tzData280 = cggcc.safeEval(
      '{"id": "Asia/Vladivostok", "transitions": [98582, 60, 102973, 0, 107342, 60, 111733, 0, 116102, 60, 120493, 0, 124886, 60, 129256, 0, 133624, 60, 137992, 0, 142360, 60, 146728, 0, 151096, 60, 155464, 0, 159832, 60, 164200, 0, 168568, 60, 172936, 0, 177304, 60, 181840, 0, 186208, 60, 190577, 0, 194941, 60, 199308, 0, 203680, 60, 208048, 0, 212416, 60, 216784, 0, 221152, 60, 225520, 0, 230056, 60, 235096, 0, 238792, 60, 243832, 0, 247528, 60, 252568, 0, 256264, 60, 261472, 0, 265000, 60, 270208, 0, 273736, 60, 278944, 0, 282640, 60, 287680, 0, 291376, 60, 296416, 0, 300112, 60, 305320, 0, 308848, 60, 314056, 0, 317584, 60, 322792, 0, 326320, 60, 331528, 0, 335224, 60, 340264, 0, 343960, 60, 349000, 0, 352696, 60, 357904, 0], "names": ["VLAT", "Vladivostok Standard Time", "VLAST", "Vladivostok Summer Time"], "std_offset": 660}'
    )),
    cggic.createTimeZone_0(tzData280));
  idwcai.addMapping(tz280.timezoneID, new idwcai.JsTimeZone(tz280));
  tz281 =
    ((tzData281 = cggcc.safeEval(
      '{"id": "Asia/Yakutsk", "transitions": [98583, 60, 102974, 0, 107343, 60, 111734, 0, 116103, 60, 120494, 0, 124887, 60, 129257, 0, 133625, 60, 137993, 0, 142361, 60, 146729, 0, 151097, 60, 155465, 0, 159833, 60, 164201, 0, 168569, 60, 172937, 0, 177305, 60, 181841, 0, 186209, 60, 190578, 0, 194942, 60, 199309, 0, 203681, 60, 208049, 0, 212417, 60, 216785, 0, 221153, 60, 225521, 0, 230057, 60, 235097, 0, 238793, 60, 243833, 0, 247529, 60, 252569, 0, 256265, 60, 261473, 0, 265001, 60, 270209, 0, 273737, 60, 278945, 0, 282641, 60, 287681, 0, 291377, 60, 296417, 0, 300113, 60, 305321, 0, 308849, 60, 314057, 0, 317585, 60, 322793, 0, 326321, 60, 331529, 0, 335225, 60, 340265, 0, 343961, 60, 349001, 0, 352697, 60, 357905, 0], "names": ["YAKT", "Yakutsk Standard Time", "YAKST", "Yakutsk Summer Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData281));
  idwcai.addMapping(tz281.timezoneID, new idwcai.JsTimeZone(tz281));
  tz282 =
    ((tzData282 = cggcc.safeEval(
      '{"id": "Asia/Yekaterinburg", "transitions": [98587, 60, 102978, 0, 107347, 60, 111738, 0, 116107, 60, 120498, 0, 124891, 60, 129261, 0, 133629, 60, 137997, 0, 142365, 60, 146733, 0, 151101, 60, 155469, 0, 159837, 60, 164205, 0, 168573, 60, 172941, 0, 177309, 60, 181845, 0, 186213, 60, 190582, 0, 194946, 60, 199313, 0, 203685, 60, 208053, 0, 212421, 60, 216789, 0, 221157, 60, 225525, 0, 230061, 60, 235101, 0, 238797, 60, 243837, 0, 247533, 60, 252573, 0, 256269, 60, 261477, 0, 265005, 60, 270213, 0, 273741, 60, 278949, 0, 282645, 60, 287685, 0, 291381, 60, 296421, 0, 300117, 60, 305325, 0, 308853, 60, 314061, 0, 317589, 60, 322797, 0, 326325, 60, 331533, 0, 335229, 60, 340269, 0, 343965, 60, 349005, 0, 352701, 60, 357909, 0], "names": ["YEKT", "Yekaterinburg Standard Time", "YEKST", "Yekaterinburg Summer Time"], "std_offset": 360}'
    )),
    cggic.createTimeZone_0(tzData282));
  idwcai.addMapping(tz282.timezoneID, new idwcai.JsTimeZone(tz282));
  tz283 =
    ((tzData283 = cggcc.safeEval(
      '{"id": "Asia/Yerevan", "transitions": [98588, 60, 102979, 0, 107348, 60, 111739, 0, 116108, 60, 120499, 0, 124892, 60, 129262, 0, 133630, 60, 137998, 0, 142366, 60, 146734, 0, 151102, 60, 155470, 0, 159838, 60, 164206, 0, 168574, 60, 172942, 0, 177310, 60, 181846, 0, 186214, 60, 190583, 0, 194948, 60, 199315, 0, 203687, 60, 208055, 0, 212423, 60, 216791, 0, 221159, 60, 225527, 0, 238798, 60, 243838, 0, 247534, 60, 252574, 0, 256270, 60, 261478, 0, 265006, 60, 270214, 0, 273742, 60, 278950, 0, 282646, 60, 287686, 0, 291382, 60, 296422, 0, 300118, 60, 305326, 0, 308854, 60, 314062, 0, 317590, 60, 322798, 0, 326326, 60, 331534, 0, 335230, 60, 340270, 0, 343966, 60, 349006, 0, 352702, 60, 357910, 0, 361438, 60, 366646, 0], "names": ["AMT", "Armenia Standard Time", "AMST", "Armenia Summer Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData283));
  idwcai.addMapping(tz283.timezoneID, new idwcai.JsTimeZone(tz283));
  tz284 =
    ((tzData284 = cggcc.safeEval(
      '{"id": "Atlantic/Azores", "transitions": [63409, 60, 67777, 0, 72313, 60, 76681, 0, 81049, 60, 85418, 0, 89785, 60, 94154, 0, 98522, 60, 102890, 0, 107258, 60, 111626, 0, 115995, 60, 120362, 0, 124730, 60, 129266, 0, 133634, 60, 138002, 0, 142370, 60, 146738, 0, 151106, 60, 155474, 0, 159842, 60, 164210, 0, 168578, 60, 172946, 0, 177314, 60, 181850, 0, 186218, 60, 190586, 0, 194954, 60, 199322, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["AZOT", "Azores Standard Time", "AZOST", "Azores Summer Time"], "std_offset": -60}'
    )),
    cggic.createTimeZone_0(tzData284));
  idwcai.addMapping(tz284.timezoneID, new idwcai.JsTimeZone(tz284));
  tz285 =
    ((tzData285 = cggcc.safeEval(
      '{"id": "Atlantic/Bermuda", "transitions": [37878, 60, 42245, 0, 46614, 60, 50981, 0, 55350, 60, 59885, 0, 64086, 60, 68621, 0, 72990, 60, 77357, 0, 81726, 60, 86093, 0, 90462, 60, 94829, 0, 99198, 60, 103565, 0, 107934, 60, 112469, 0, 116670, 60, 121205, 0, 125574, 60, 129941, 0, 134310, 60, 138677, 0, 143046, 60, 147413, 0, 151278, 60, 156149, 0, 160014, 60, 165053, 0, 168750, 60, 173789, 0, 177486, 60, 182525, 0, 186390, 60, 191261, 0, 195126, 60, 199997, 0, 203862, 60, 208901, 0, 212598, 60, 217637, 0, 221334, 60, 226373, 0, 230238, 60, 235109, 0, 238974, 60, 243845, 0, 247710, 60, 252581, 0, 256446, 60, 261485, 0, 265182, 60, 270221, 0, 273918, 60, 278957, 0, 282822, 60, 287693, 0, 291558, 60, 296429, 0, 300294, 60, 305333, 0, 309030, 60, 314069, 0, 317766, 60, 322805, 0, 325998, 60, 331709, 0, 334734, 60, 340445, 0, 343470, 60, 349181, 0, 352374, 60, 358085, 0, 361110, 60, 366821, 0, 369846, 60, 375557, 0, 378582, 60, 384293, 0, 387318, 60, 393029, 0, 396054, 60, 401765, 0, 404958, 60, 410669, 0, 413694, 60, 419405, 0, 422430, 60, 428141, 0, 431166, 60, 436877, 0, 439902, 60, 445613, 0, 448806, 60, 454517, 0, 457542, 60, 463253, 0, 466278, 60, 471989, 0, 475014, 60, 480725, 0, 483750, 60, 489461, 0, 492486, 60, 498197, 0, 501390, 60, 507101, 0, 510126, 60, 515837, 0, 518862, 60, 524573, 0, 527598, 60, 533309, 0, 536334, 60, 542045, 0, 545238, 60, 550949, 0, 553974, 60, 559685, 0, 562710, 60, 568421, 0, 571446, 60, 577157, 0, 580182, 60, 585893, 0, 588918, 60, 594629, 0], "names": ["AST", "Atlantic Standard Time", "ADT", "Atlantic Daylight Time"], "std_offset": -240}'
    )),
    cggic.createTimeZone_0(tzData285));
  idwcai.addMapping(tz285.timezoneID, new idwcai.JsTimeZone(tz285));
  tz286 =
    ((tzData286 = cggcc.safeEval(
      '{"id": "Atlantic/Canary", "transitions": [89952, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["WET", "Western European Standard Time", "WEST", "Western European Summer Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData286));
  idwcai.addMapping(tz286.timezoneID, new idwcai.JsTimeZone(tz286));
  tz287 =
    ((tzData287 = cggcc.safeEval(
      '{"id": "Atlantic/Cape_Verde", "transitions": [], "names": ["CVT", "Cape Verde Standard Time", "CVST", "Cape Verde Summer Time"], "std_offset": -60}'
    )),
    cggic.createTimeZone_0(tzData287));
  idwcai.addMapping(tz287.timezoneID, new idwcai.JsTimeZone(tz287));
  tz288 =
    ((tzData288 = cggcc.safeEval(
      '{"id": "Atlantic/Faeroe", "transitions": [98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["WET", "Western European Standard Time", "WEST", "Western European Summer Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData288));
  idwcai.addMapping(tz288.timezoneID, new idwcai.JsTimeZone(tz288));
  tz289 =
    ((tzData289 = cggcc.safeEval(
      '{"id": "Atlantic/Madeira", "transitions": [63408, 60, 67776, 0, 72312, 60, 76680, 0, 81048, 60, 85417, 0, 89784, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115994, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["WET", "Western European Standard Time", "WEST", "Western European Summer Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData289));
  idwcai.addMapping(tz289.timezoneID, new idwcai.JsTimeZone(tz289));
  tz290 =
    ((tzData290 = cggcc.safeEval(
      '{"id": "Atlantic/Reykjavik", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData290));
  idwcai.addMapping(tz290.timezoneID, new idwcai.JsTimeZone(tz290));
  tz291 =
    ((tzData291 = cggcc.safeEval(
      '{"id": "Atlantic/South_Georgia", "transitions": [], "names": ["GST", "South Georgia Time"], "std_offset": -120}'
    )),
    cggic.createTimeZone_0(tzData291));
  idwcai.addMapping(tz291.timezoneID, new idwcai.JsTimeZone(tz291));
  tz292 =
    ((tzData292 = cggcc.safeEval(
      '{"id": "Atlantic/Stanley", "transitions": [120363, 60, 125570, 0, 128931, 60, 134306, 0, 137667, 60, 142875, 0, 146404, 60, 151611, 0, 155140, 60, 160347, 0, 163876, 60, 169083, 0, 172612, 60, 177987, 0, 181348, 60, 186723, 0, 190252, 60, 195459, 0, 198988, 60, 204195, 0, 207724, 60, 212931, 0, 216460, 60, 221667, 0, 225196, 60, 230571, 0, 234100, 60, 239307, 0, 242836, 60, 248043, 0, 251572, 60, 256779, 0, 260308, 60, 265515, 0, 269044, 60, 274253, 0, 277614, 60, 283157, 0, 286350, 60, 291893, 0, 295254, 60, 300629, 0, 303990, 60, 309365, 0, 312726, 60, 318101, 0, 321462, 60, 326837, 0, 330198, 60, 335741, 0, 339102, 60, 344477, 0, 347838, 60, 353213, 0], "names": ["FKT", "Falkland Islands Standard Time", "FKST", "Falkland Islands Summer Time"], "std_offset": -180}'
    )),
    cggic.createTimeZone_0(tzData292));
  idwcai.addMapping(tz292.timezoneID, new idwcai.JsTimeZone(tz292));
  tz293 =
    ((tzData293 = cggcc.safeEval(
      '{"id": "Atlantic/St_Helena", "transitions": [], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData293));
  idwcai.addMapping(tz293.timezoneID, new idwcai.JsTimeZone(tz293));
  tz294 =
    ((tzData294 = cggcc.safeEval(
      '{"id": "Australia/Adelaide", "transitions": [16024, 60, 18880, 0, 24760, 60, 27784, 0, 33496, 60, 36520, 0, 42232, 60, 45256, 0, 50968, 60, 54160, 0, 59872, 60, 62896, 0, 68608, 60, 71632, 0, 77344, 60, 80368, 0, 86080, 60, 89104, 0, 94816, 60, 97840, 0, 103552, 60, 106744, 0, 112456, 60, 115480, 0, 121192, 60, 124216, 0, 129928, 60, 132952, 0, 138664, 60, 142024, 0, 147232, 60, 150760, 0, 156136, 60, 159664, 0, 165040, 60, 168400, 0, 173776, 60, 177136, 0, 182512, 60, 185536, 0, 191248, 60, 194776, 0, 199984, 60, 203176, 0, 208888, 60, 212248, 0, 217624, 60, 221152, 0, 226360, 60, 230056, 0, 235096, 60, 238792, 0, 243832, 60, 247528, 0, 252568, 60, 256264, 0, 261472, 60, 265000, 0, 270208, 60, 273736, 0, 278944, 60, 282640, 0, 287680, 60, 291376, 0, 296416, 60, 300112, 0, 305320, 60, 308848, 0, 314056, 60, 317752, 0, 322792, 60, 326320, 0, 331528, 60, 335392, 0, 339760, 60, 344128, 0, 348496, 60, 352864, 0, 357232, 60, 361600, 0, 365968, 60, 370336, 0, 374872, 60, 379240, 0, 383608, 60, 387976, 0, 392344, 60, 396712, 0, 401080, 60, 405448, 0, 409816, 60, 414184, 0, 418552, 60, 422920, 0, 427456, 60, 431824, 0, 436192, 60, 440560, 0, 444928, 60, 449296, 0, 453664, 60, 458032, 0, 462400, 60, 466768, 0, 471136, 60, 475672, 0, 480040, 60, 484408, 0, 488776, 60, 493144, 0, 497512, 60, 501880, 0, 506248, 60, 510616, 0, 514984, 60, 519352, 0, 523888, 60, 528256, 0, 532624, 60, 536992, 0, 541360, 60, 545728, 0, 550096, 60, 554464, 0, 558832, 60, 563200, 0, 567568, 60, 571936, 0, 576472, 60, 580840, 0, 585208, 60, 589576, 0, 593944, 60], "names": ["ACST", "Australian Central Standard Time", "ACDT", "Australian Central Daylight Time"], "std_offset": 570}'
    )),
    cggic.createTimeZone_0(tzData294));
  idwcai.addMapping(tz294.timezoneID, new idwcai.JsTimeZone(tz294));
  tz295 =
    ((tzData295 = cggcc.safeEval(
      '{"id": "Australia/Brisbane", "transitions": [16024, 60, 18880, 0, 173776, 60, 176800, 0, 182512, 60, 185536, 0, 191248, 60, 194272, 0], "names": ["AEST", "Australian Eastern Standard Time", "AEDT", "Australian Eastern Daylight Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData295));
  idwcai.addMapping(tz295.timezoneID, new idwcai.JsTimeZone(tz295));
  tz296 =
    ((tzData296 = cggcc.safeEval(
      '{"id": "Australia/Broken_Hill", "transitions": [16024, 60, 18880, 0, 24760, 60, 27784, 0, 33496, 60, 36520, 0, 42232, 60, 45256, 0, 50968, 60, 54160, 0, 59872, 60, 62896, 0, 68608, 60, 71632, 0, 77344, 60, 80368, 0, 86080, 60, 89104, 0, 94816, 60, 97840, 0, 103552, 60, 107416, 0, 112456, 60, 115480, 0, 121192, 60, 124216, 0, 129928, 60, 132952, 0, 138664, 60, 142024, 0, 147232, 60, 150760, 0, 156136, 60, 159664, 0, 165040, 60, 168400, 0, 173776, 60, 176800, 0, 182512, 60, 185536, 0, 191248, 60, 194272, 0, 199984, 60, 203176, 0, 208888, 60, 211912, 0, 217624, 60, 220648, 0, 226360, 60, 230056, 0, 235096, 60, 238792, 0, 243832, 60, 247528, 0, 252568, 60, 256264, 0, 261472, 60, 265000, 0, 270208, 60, 273736, 0, 278944, 60, 282640, 0, 287680, 60, 291376, 0, 296416, 60, 300112, 0, 305320, 60, 308848, 0, 314056, 60, 317752, 0, 322792, 60, 326320, 0, 331528, 60, 335392, 0, 339760, 60, 344128, 0, 348496, 60, 352864, 0, 357232, 60, 361600, 0, 365968, 60, 370336, 0, 374872, 60, 379240, 0, 383608, 60, 387976, 0, 392344, 60, 396712, 0, 401080, 60, 405448, 0, 409816, 60, 414184, 0, 418552, 60, 422920, 0, 427456, 60, 431824, 0, 436192, 60, 440560, 0, 444928, 60, 449296, 0, 453664, 60, 458032, 0, 462400, 60, 466768, 0, 471136, 60, 475672, 0, 480040, 60, 484408, 0, 488776, 60, 493144, 0, 497512, 60, 501880, 0, 506248, 60, 510616, 0, 514984, 60, 519352, 0, 523888, 60, 528256, 0, 532624, 60, 536992, 0, 541360, 60, 545728, 0, 550096, 60, 554464, 0, 558832, 60, 563200, 0, 567568, 60, 571936, 0, 576472, 60, 580840, 0, 585208, 60, 589576, 0, 593944, 60], "names": ["ACST", "Australian Central Standard Time", "ACDT", "Australian Central Daylight Time"], "std_offset": 570}'
    )),
    cggic.createTimeZone_0(tzData296));
  idwcai.addMapping(tz296.timezoneID, new idwcai.JsTimeZone(tz296));
  tz297 =
    ((tzData297 = cggcc.safeEval(
      '{"id": "Australia/Currie", "transitions": [16024, 60, 18880, 0, 24760, 60, 27784, 0, 33496, 60, 36520, 0, 42232, 60, 45256, 0, 50968, 60, 54160, 0, 59872, 60, 62896, 0, 68608, 60, 71632, 0, 77344, 60, 80368, 0, 86080, 60, 89104, 0, 94816, 60, 97840, 0, 103552, 60, 107248, 0, 112456, 60, 115984, 0, 121192, 60, 124216, 0, 129928, 60, 132952, 0, 138664, 60, 141688, 0, 147232, 60, 150760, 0, 156136, 60, 159664, 0, 165040, 60, 168400, 0, 173776, 60, 177136, 0, 182512, 60, 186208, 0, 190744, 60, 194944, 0, 199480, 60, 203680, 0, 208216, 60, 212416, 0, 216952, 60, 221152, 0, 225688, 60, 230056, 0, 234592, 60, 238792, 0, 243328, 60, 247528, 0, 252064, 60, 256264, 0, 260800, 60, 265000, 0, 268696, 60, 273736, 0, 278440, 60, 282640, 0, 287176, 60, 291376, 0, 295912, 60, 300112, 0, 304648, 60, 308848, 0, 313384, 60, 317752, 0, 322120, 60, 326320, 0, 331024, 60, 335392, 0, 339760, 60, 344128, 0, 348496, 60, 352864, 0, 357232, 60, 361600, 0, 365968, 60, 370336, 0, 374872, 60, 379240, 0, 383608, 60, 387976, 0, 392344, 60, 396712, 0, 401080, 60, 405448, 0, 409816, 60, 414184, 0, 418552, 60, 422920, 0, 427456, 60, 431824, 0, 436192, 60, 440560, 0, 444928, 60, 449296, 0, 453664, 60, 458032, 0, 462400, 60, 466768, 0, 471136, 60, 475672, 0, 480040, 60, 484408, 0, 488776, 60, 493144, 0, 497512, 60, 501880, 0, 506248, 60, 510616, 0, 514984, 60, 519352, 0, 523888, 60, 528256, 0, 532624, 60, 536992, 0, 541360, 60, 545728, 0, 550096, 60, 554464, 0, 558832, 60, 563200, 0, 567568, 60, 571936, 0, 576472, 60, 580840, 0, 585208, 60, 589576, 0, 593944, 60], "names": ["AEST", "Australian Eastern Standard Time", "AEDT", "Australian Eastern Daylight Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData297));
  idwcai.addMapping(tz297.timezoneID, new idwcai.JsTimeZone(tz297));
  tz298 =
    ((tzData298 = cggcc.safeEval(
      '{"id": "Australia/Darwin", "transitions": [], "names": ["ACST", "Australian Central Standard Time", "ACDT", "Australian Central Daylight Time"], "std_offset": 570}'
    )),
    cggic.createTimeZone_0(tzData298));
  idwcai.addMapping(tz298.timezoneID, new idwcai.JsTimeZone(tz298));
  tz299 =
    ((tzData299 = cggcc.safeEval(
      '{"id": "Australia/Eucla", "transitions": [42233, 60, 45257, 0, 121193, 60, 124217, 0, 191753, 60, 194273, 0, 323633, 60, 326321, 0, 331529, 60, 335225, 0, 340265, 60, 343961, 0], "names": ["ACWST", "Australian Central Western Standard Time", "ACWDT", "Australian Central Western Daylight Time"], "std_offset": 525}'
    )),
    cggic.createTimeZone_0(tzData299));
  idwcai.addMapping(tz299.timezoneID, new idwcai.JsTimeZone(tz299));
  tz300 =
    ((tzData300 = cggcc.safeEval(
      '{"id": "Australia/Hobart", "transitions": [7120, 60, 10480, 0, 16024, 60, 18880, 0, 24760, 60, 27784, 0, 33496, 60, 36520, 0, 42232, 60, 45256, 0, 50968, 60, 54160, 0, 59872, 60, 62896, 0, 68608, 60, 71632, 0, 77344, 60, 80368, 0, 86080, 60, 89104, 0, 94816, 60, 97840, 0, 103552, 60, 107248, 0, 112456, 60, 115984, 0, 121192, 60, 124216, 0, 129928, 60, 132952, 0, 138664, 60, 141688, 0, 147232, 60, 150760, 0, 156136, 60, 159664, 0, 165040, 60, 168400, 0, 173776, 60, 177136, 0, 182512, 60, 186208, 0, 190744, 60, 194944, 0, 199480, 60, 203680, 0, 208216, 60, 212416, 0, 216952, 60, 221152, 0, 225688, 60, 230056, 0, 234592, 60, 238792, 0, 243328, 60, 247528, 0, 252064, 60, 256264, 0, 260800, 60, 265000, 0, 268696, 60, 273736, 0, 278440, 60, 282640, 0, 287176, 60, 291376, 0, 295912, 60, 300112, 0, 304648, 60, 308848, 0, 313384, 60, 317752, 0, 322120, 60, 326320, 0, 331024, 60, 335392, 0, 339760, 60, 344128, 0, 348496, 60, 352864, 0, 357232, 60, 361600, 0, 365968, 60, 370336, 0, 374872, 60, 379240, 0, 383608, 60, 387976, 0, 392344, 60, 396712, 0, 401080, 60, 405448, 0, 409816, 60, 414184, 0, 418552, 60, 422920, 0, 427456, 60, 431824, 0, 436192, 60, 440560, 0, 444928, 60, 449296, 0, 453664, 60, 458032, 0, 462400, 60, 466768, 0, 471136, 60, 475672, 0, 480040, 60, 484408, 0, 488776, 60, 493144, 0, 497512, 60, 501880, 0, 506248, 60, 510616, 0, 514984, 60, 519352, 0, 523888, 60, 528256, 0, 532624, 60, 536992, 0, 541360, 60, 545728, 0, 550096, 60, 554464, 0, 558832, 60, 563200, 0, 567568, 60, 571936, 0, 576472, 60, 580840, 0, 585208, 60, 589576, 0, 593944, 60], "names": ["AEST", "Australian Eastern Standard Time", "AEDT", "Australian Eastern Daylight Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData300));
  idwcai.addMapping(tz300.timezoneID, new idwcai.JsTimeZone(tz300));
  tz301 =
    ((tzData301 = cggcc.safeEval(
      '{"id": "Australia/Lindeman", "transitions": [16024, 60, 18880, 0, 173776, 60, 176800, 0, 182512, 60, 185536, 0, 191248, 60, 194272, 0, 199984, 60, 203176, 0, 208888, 60, 211912, 0], "names": ["AEST", "Australian Eastern Standard Time", "AEDT", "Australian Eastern Daylight Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData301));
  idwcai.addMapping(tz301.timezoneID, new idwcai.JsTimeZone(tz301));
  tz302 =
    ((tzData302 = cggcc.safeEval(
      '{"id": "Australia/Lord_Howe", "transitions": [138663, 30, 142023, 0, 147231, 30, 150759, 0, 156135, 30, 159663, 0, 165039, 30, 168399, 0, 173775, 30, 176799, 0, 182511, 30, 185535, 0, 191247, 30, 194271, 0, 199983, 30, 203175, 0, 208887, 30, 211911, 0, 217623, 30, 220647, 0, 226359, 30, 230055, 0, 235095, 30, 238791, 0, 243831, 30, 247527, 0, 252567, 30, 256263, 0, 261471, 30, 264999, 0, 268695, 30, 273735, 0, 278943, 30, 282639, 0, 287679, 30, 291375, 0, 296415, 30, 300111, 0, 305319, 30, 308847, 0, 314055, 30, 317751, 0, 322791, 30, 326319, 0, 331527, 30, 335391, 0, 339759, 30, 344127, 0, 348495, 30, 352863, 0, 357231, 30, 361599, 0, 365967, 30, 370335, 0, 374871, 30, 379239, 0, 383607, 30, 387975, 0, 392343, 30, 396711, 0, 401079, 30, 405447, 0, 409815, 30, 414183, 0, 418551, 30, 422919, 0, 427455, 30, 431823, 0, 436191, 30, 440559, 0, 444927, 30, 449295, 0, 453663, 30, 458031, 0, 462399, 30, 466767, 0, 471135, 30, 475671, 0, 480039, 30, 484407, 0, 488775, 30, 493143, 0, 497511, 30, 501879, 0, 506247, 30, 510615, 0, 514983, 30, 519351, 0, 523887, 30, 528255, 0, 532623, 30, 536991, 0, 541359, 30, 545727, 0, 550095, 30, 554463, 0, 558831, 30, 563199, 0, 567567, 30, 571935, 0, 576471, 30, 580839, 0, 585207, 30, 589575, 0, 593943, 30], "names": ["LHST", "Lord Howe Standard Time", "LHDT", "Lord Howe Daylight Time"], "std_offset": 630}'
    )),
    cggic.createTimeZone_0(tzData302));
  idwcai.addMapping(tz302.timezoneID, new idwcai.JsTimeZone(tz302));
  tz303 =
    ((tzData303 = cggcc.safeEval(
      '{"id": "Australia/Melbourne", "transitions": [16024, 60, 18880, 0, 24760, 60, 27784, 0, 33496, 60, 36520, 0, 42232, 60, 45256, 0, 50968, 60, 54160, 0, 59872, 60, 62896, 0, 68608, 60, 71632, 0, 77344, 60, 80368, 0, 86080, 60, 89104, 0, 94816, 60, 97840, 0, 103552, 60, 106744, 0, 112456, 60, 115480, 0, 121192, 60, 124216, 0, 129928, 60, 132952, 0, 138664, 60, 142024, 0, 147232, 60, 150760, 0, 155968, 60, 159664, 0, 165040, 60, 168400, 0, 173776, 60, 177136, 0, 182512, 60, 185536, 0, 191248, 60, 194272, 0, 199984, 60, 203176, 0, 208888, 60, 211912, 0, 217624, 60, 221152, 0, 226360, 60, 230056, 0, 235096, 60, 238792, 0, 243832, 60, 247528, 0, 252568, 60, 256264, 0, 261472, 60, 265000, 0, 268696, 60, 273736, 0, 278944, 60, 282640, 0, 287680, 60, 291376, 0, 296416, 60, 300112, 0, 305320, 60, 308848, 0, 314056, 60, 317752, 0, 322792, 60, 326320, 0, 331528, 60, 335392, 0, 339760, 60, 344128, 0, 348496, 60, 352864, 0, 357232, 60, 361600, 0, 365968, 60, 370336, 0, 374872, 60, 379240, 0, 383608, 60, 387976, 0, 392344, 60, 396712, 0, 401080, 60, 405448, 0, 409816, 60, 414184, 0, 418552, 60, 422920, 0, 427456, 60, 431824, 0, 436192, 60, 440560, 0, 444928, 60, 449296, 0, 453664, 60, 458032, 0, 462400, 60, 466768, 0, 471136, 60, 475672, 0, 480040, 60, 484408, 0, 488776, 60, 493144, 0, 497512, 60, 501880, 0, 506248, 60, 510616, 0, 514984, 60, 519352, 0, 523888, 60, 528256, 0, 532624, 60, 536992, 0, 541360, 60, 545728, 0, 550096, 60, 554464, 0, 558832, 60, 563200, 0, 567568, 60, 571936, 0, 576472, 60, 580840, 0, 585208, 60, 589576, 0, 593944, 60], "names": ["AEST", "Australian Eastern Standard Time", "AEDT", "Australian Eastern Daylight Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData303));
  idwcai.addMapping(tz303.timezoneID, new idwcai.JsTimeZone(tz303));
  tz304 =
    ((tzData304 = cggcc.safeEval(
      '{"id": "Australia/Perth", "transitions": [42234, 60, 45258, 0, 121194, 60, 124218, 0, 191754, 60, 194274, 0, 323634, 60, 326322, 0, 331530, 60, 335226, 0, 340266, 60, 343962, 0], "names": ["AWST", "Australian Western Standard Time", "AWDT", "Australian Western Daylight Time"], "std_offset": 480}'
    )),
    cggic.createTimeZone_0(tzData304));
  idwcai.addMapping(tz304.timezoneID, new idwcai.JsTimeZone(tz304));
  tz305 =
    ((tzData305 = cggcc.safeEval(
      '{"id": "Australia/Sydney", "transitions": [16024, 60, 18880, 0, 24760, 60, 27784, 0, 33496, 60, 36520, 0, 42232, 60, 45256, 0, 50968, 60, 54160, 0, 59872, 60, 62896, 0, 68608, 60, 71632, 0, 77344, 60, 80368, 0, 86080, 60, 89104, 0, 94816, 60, 97840, 0, 103552, 60, 107416, 0, 112456, 60, 115480, 0, 121192, 60, 124216, 0, 129928, 60, 132952, 0, 138664, 60, 142024, 0, 147232, 60, 150760, 0, 156136, 60, 159664, 0, 165040, 60, 168400, 0, 173776, 60, 176800, 0, 182512, 60, 185536, 0, 191248, 60, 194272, 0, 199984, 60, 203176, 0, 208888, 60, 211912, 0, 217624, 60, 220648, 0, 226360, 60, 230056, 0, 235096, 60, 238792, 0, 243832, 60, 247528, 0, 252568, 60, 256264, 0, 261472, 60, 265000, 0, 268696, 60, 273736, 0, 278944, 60, 282640, 0, 287680, 60, 291376, 0, 296416, 60, 300112, 0, 305320, 60, 308848, 0, 314056, 60, 317752, 0, 322792, 60, 326320, 0, 331528, 60, 335392, 0, 339760, 60, 344128, 0, 348496, 60, 352864, 0, 357232, 60, 361600, 0, 365968, 60, 370336, 0, 374872, 60, 379240, 0, 383608, 60, 387976, 0, 392344, 60, 396712, 0, 401080, 60, 405448, 0, 409816, 60, 414184, 0, 418552, 60, 422920, 0, 427456, 60, 431824, 0, 436192, 60, 440560, 0, 444928, 60, 449296, 0, 453664, 60, 458032, 0, 462400, 60, 466768, 0, 471136, 60, 475672, 0, 480040, 60, 484408, 0, 488776, 60, 493144, 0, 497512, 60, 501880, 0, 506248, 60, 510616, 0, 514984, 60, 519352, 0, 523888, 60, 528256, 0, 532624, 60, 536992, 0, 541360, 60, 545728, 0, 550096, 60, 554464, 0, 558832, 60, 563200, 0, 567568, 60, 571936, 0, 576472, 60, 580840, 0, 585208, 60, 589576, 0, 593944, 60], "names": ["AEST", "Australian Eastern Standard Time", "AEDT", "Australian Eastern Daylight Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData305));
  idwcai.addMapping(tz305.timezoneID, new idwcai.JsTimeZone(tz305));
  tz306 =
    ((tzData306 = cggcc.safeEval(
      '{"id": "CST6CDT", "transitions": [2768, 60, 7135, 0, 11504, 60, 16039, 0, 20408, 60, 24775, 0, 29144, 60, 33511, 0, 35192, 60, 42247, 0, 45104, 60, 50983, 0, 55352, 60, 59887, 0, 64088, 60, 68623, 0, 72992, 60, 77359, 0, 81728, 60, 86095, 0, 90464, 60, 94831, 0, 99200, 60, 103567, 0, 107936, 60, 112471, 0, 116672, 60, 121207, 0, 125576, 60, 129943, 0, 134312, 60, 138679, 0, 143048, 60, 147415, 0, 151280, 60, 156151, 0, 160016, 60, 165055, 0, 168752, 60, 173791, 0, 177488, 60, 182527, 0, 186392, 60, 191263, 0, 195128, 60, 199999, 0, 203864, 60, 208903, 0, 212600, 60, 217639, 0, 221336, 60, 226375, 0, 230240, 60, 235111, 0, 238976, 60, 243847, 0, 247712, 60, 252583, 0, 256448, 60, 261487, 0, 265184, 60, 270223, 0, 273920, 60, 278959, 0, 282824, 60, 287695, 0, 291560, 60, 296431, 0, 300296, 60, 305335, 0, 309032, 60, 314071, 0, 317768, 60, 322807, 0, 326000, 60, 331711, 0, 334736, 60, 340447, 0, 343472, 60, 349183, 0, 352376, 60, 358087, 0, 361112, 60, 366823, 0, 369848, 60, 375559, 0, 378584, 60, 384295, 0, 387320, 60, 393031, 0, 396056, 60, 401767, 0, 404960, 60, 410671, 0, 413696, 60, 419407, 0, 422432, 60, 428143, 0, 431168, 60, 436879, 0, 439904, 60, 445615, 0, 448808, 60, 454519, 0, 457544, 60, 463255, 0, 466280, 60, 471991, 0, 475016, 60, 480727, 0, 483752, 60, 489463, 0, 492488, 60, 498199, 0, 501392, 60, 507103, 0, 510128, 60, 515839, 0, 518864, 60, 524575, 0, 527600, 60, 533311, 0, 536336, 60, 542047, 0, 545240, 60, 550951, 0, 553976, 60, 559687, 0, 562712, 60, 568423, 0, 571448, 60, 577159, 0, 580184, 60, 585895, 0, 588920, 60, 594631, 0], "names": ["CST", "Central Standard Time", "CDT", "Central Daylight Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData306));
  idwcai.addMapping(tz306.timezoneID, new idwcai.JsTimeZone(tz306));
  tz307 =
    ((tzData307 = cggcc.safeEval(
      '{"id": "EST5EDT", "transitions": [2767, 60, 7134, 0, 11503, 60, 16038, 0, 20407, 60, 24774, 0, 29143, 60, 33510, 0, 35191, 60, 42246, 0, 45103, 60, 50982, 0, 55351, 60, 59886, 0, 64087, 60, 68622, 0, 72991, 60, 77358, 0, 81727, 60, 86094, 0, 90463, 60, 94830, 0, 99199, 60, 103566, 0, 107935, 60, 112470, 0, 116671, 60, 121206, 0, 125575, 60, 129942, 0, 134311, 60, 138678, 0, 143047, 60, 147414, 0, 151279, 60, 156150, 0, 160015, 60, 165054, 0, 168751, 60, 173790, 0, 177487, 60, 182526, 0, 186391, 60, 191262, 0, 195127, 60, 199998, 0, 203863, 60, 208902, 0, 212599, 60, 217638, 0, 221335, 60, 226374, 0, 230239, 60, 235110, 0, 238975, 60, 243846, 0, 247711, 60, 252582, 0, 256447, 60, 261486, 0, 265183, 60, 270222, 0, 273919, 60, 278958, 0, 282823, 60, 287694, 0, 291559, 60, 296430, 0, 300295, 60, 305334, 0, 309031, 60, 314070, 0, 317767, 60, 322806, 0, 325999, 60, 331710, 0, 334735, 60, 340446, 0, 343471, 60, 349182, 0, 352375, 60, 358086, 0, 361111, 60, 366822, 0, 369847, 60, 375558, 0, 378583, 60, 384294, 0, 387319, 60, 393030, 0, 396055, 60, 401766, 0, 404959, 60, 410670, 0, 413695, 60, 419406, 0, 422431, 60, 428142, 0, 431167, 60, 436878, 0, 439903, 60, 445614, 0, 448807, 60, 454518, 0, 457543, 60, 463254, 0, 466279, 60, 471990, 0, 475015, 60, 480726, 0, 483751, 60, 489462, 0, 492487, 60, 498198, 0, 501391, 60, 507102, 0, 510127, 60, 515838, 0, 518863, 60, 524574, 0, 527599, 60, 533310, 0, 536335, 60, 542046, 0, 545239, 60, 550950, 0, 553975, 60, 559686, 0, 562711, 60, 568422, 0, 571447, 60, 577158, 0, 580183, 60, 585894, 0, 588919, 60, 594630, 0], "names": ["EST", "Eastern Standard Time", "EDT", "Eastern Daylight Time"], "std_offset": -300}'
    )),
    cggic.createTimeZone_0(tzData307));
  idwcai.addMapping(tz307.timezoneID, new idwcai.JsTimeZone(tz307));
  tz308 =
    ((tzData308 = cggcc.safeEval(
      '{"id": "Europe/Amsterdam", "transitions": [63577, 60, 67777, 0, 72313, 60, 76681, 0, 81049, 60, 85417, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData308));
  idwcai.addMapping(tz308.timezoneID, new idwcai.JsTimeZone(tz308));
  tz309 =
    ((tzData309 = cggcc.safeEval(
      '{"id": "Europe/Andorra", "transitions": [133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData309));
  idwcai.addMapping(tz309.timezoneID, new idwcai.JsTimeZone(tz309));
  tz310 =
    ((tzData310 = cggcc.safeEval(
      '{"id": "Europe/Athens", "transitions": [46246, 60, 51718, 0, 55008, 60, 59376, 0, 63576, 60, 67800, 0, 72312, 60, 76513, 0, 81055, 60, 85391, 0, 89830, 60, 94149, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData310));
  idwcai.addMapping(tz310.timezoneID, new idwcai.JsTimeZone(tz310));
  tz311 =
    ((tzData311 = cggcc.safeEval(
      '{"id": "Europe/Belgrade", "transitions": [115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData311));
  idwcai.addMapping(tz311.timezoneID, new idwcai.JsTimeZone(tz311));
  tz312 =
    ((tzData312 = cggcc.safeEval(
      '{"id": "Europe/Berlin", "transitions": [89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData312));
  idwcai.addMapping(tz312.timezoneID, new idwcai.JsTimeZone(tz312));
  tz313 =
    ((tzData313 = cggcc.safeEval(
      '{"id": "Europe/Bratislava", "transitions": [81049, 60, 85417, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData313));
  idwcai.addMapping(tz313.timezoneID, new idwcai.JsTimeZone(tz313));
  tz314 =
    ((tzData314 = cggcc.safeEval(
      '{"id": "Europe/Brussels", "transitions": [63577, 60, 67777, 0, 72313, 60, 76681, 0, 81049, 60, 85417, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData314));
  idwcai.addMapping(tz314.timezoneID, new idwcai.JsTimeZone(tz314));
  tz315 =
    ((tzData315 = cggcc.safeEval(
      '{"id": "Europe/Bucharest", "transitions": [82390, 60, 85413, 0, 89949, 60, 94150, 0, 98520, 60, 102888, 0, 107256, 60, 111624, 0, 115992, 60, 120360, 0, 124728, 60, 129264, 0, 133632, 60, 138000, 0, 142368, 60, 146736, 0, 151104, 60, 155472, 0, 159840, 60, 164208, 0, 168576, 60, 172944, 0, 177312, 60, 181848, 0, 186214, 60, 190582, 0, 194950, 60, 199318, 0, 203686, 60, 208054, 0, 212422, 60, 216789, 0, 221158, 60, 225525, 0, 230062, 60, 235101, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData315));
  idwcai.addMapping(tz315.timezoneID, new idwcai.JsTimeZone(tz315));
  tz316 =
    ((tzData316 = cggcc.safeEval(
      '{"id": "Europe/Budapest", "transitions": [89952, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData316));
  idwcai.addMapping(tz316.timezoneID, new idwcai.JsTimeZone(tz316));
  tz317 =
    ((tzData317 = cggcc.safeEval(
      '{"id": "Europe/Chisinau", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 186216, 60, 190584, 0, 194950, 60, 199317, 0, 203686, 60, 208053, 0, 212422, 60, 216789, 0, 221158, 60, 225525, 0, 230062, 60, 235101, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData317));
  idwcai.addMapping(tz317.timezoneID, new idwcai.JsTimeZone(tz317));
  tz318 =
    ((tzData318 = cggcc.safeEval(
      '{"id": "Europe/Copenhagen", "transitions": [89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData318));
  idwcai.addMapping(tz318.timezoneID, new idwcai.JsTimeZone(tz318));
  tz319 =
    ((tzData319 = cggcc.safeEval(
      '{"id": "Europe/Dublin", "transitions": [19394, 60, 24770, 0, 28130, 60, 33506, 0, 36866, 60, 42242, 0, 45602, 60, 50978, 0, 54506, 60, 59714, 0, 63242, 60, 68450, 0, 71978, 60, 77354, 0, 80714, 60, 86090, 0, 89450, 60, 94826, 0, 98521, 60, 103561, 0, 107257, 60, 112297, 0, 115993, 60, 121033, 0, 124729, 60, 129937, 0, 133633, 60, 138673, 0, 142369, 60, 147409, 0, 151105, 60, 156145, 0, 159841, 60, 164881, 0, 168577, 60, 173785, 0, 177313, 60, 182521, 0, 186217, 60, 191257, 0, 194953, 60, 199993, 0, 203689, 60, 208729, 0, 212425, 60, 217465, 0, 221161, 60, 226201, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["GMT", "Greenwich Mean Time", "IST", "Irish Summer Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData319));
  idwcai.addMapping(tz319.timezoneID, new idwcai.JsTimeZone(tz319));
  tz320 =
    ((tzData320 = cggcc.safeEval(
      '{"id": "Europe/Gibraltar", "transitions": [107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData320));
  idwcai.addMapping(tz320.timezoneID, new idwcai.JsTimeZone(tz320));
  tz321 =
    ((tzData321 = cggcc.safeEval(
      '{"id": "Europe/Guernsey", "transitions": [19394, 60, 24770, 0, 28130, 60, 33506, 0, 36866, 60, 42242, 0, 45602, 60, 50978, 0, 54506, 60, 59714, 0, 63242, 60, 68450, 0, 71978, 60, 77354, 0, 80714, 60, 86090, 0, 89450, 60, 94826, 0, 98521, 60, 103561, 0, 107257, 60, 112297, 0, 115993, 60, 121033, 0, 124729, 60, 129937, 0, 133633, 60, 138673, 0, 142369, 60, 147409, 0, 151105, 60, 156145, 0, 159841, 60, 164881, 0, 168577, 60, 173785, 0, 177313, 60, 182521, 0, 186217, 60, 191257, 0, 194953, 60, 199993, 0, 203689, 60, 208729, 0, 212425, 60, 217465, 0, 221161, 60, 226201, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData321));
  idwcai.addMapping(tz321.timezoneID, new idwcai.JsTimeZone(tz321));
  tz322 =
    ((tzData322 = cggcc.safeEval(
      '{"id": "Europe/Helsinki", "transitions": [98520, 60, 102888, 0, 107256, 60, 111624, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData322));
  idwcai.addMapping(tz322.timezoneID, new idwcai.JsTimeZone(tz322));
  tz323 =
    ((tzData323 = cggcc.safeEval(
      '{"id": "Europe/Isle_of_Man", "transitions": [19394, 60, 24770, 0, 28130, 60, 33506, 0, 36866, 60, 42242, 0, 45602, 60, 50978, 0, 54506, 60, 59714, 0, 63242, 60, 68450, 0, 71978, 60, 77354, 0, 80714, 60, 86090, 0, 89450, 60, 94826, 0, 98521, 60, 103561, 0, 107257, 60, 112297, 0, 115993, 60, 121033, 0, 124729, 60, 129937, 0, 133633, 60, 138673, 0, 142369, 60, 147409, 0, 151105, 60, 156145, 0, 159841, 60, 164881, 0, 168577, 60, 173785, 0, 177313, 60, 182521, 0, 186217, 60, 191257, 0, 194953, 60, 199993, 0, 203689, 60, 208729, 0, 212425, 60, 217465, 0, 221161, 60, 226201, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData323));
  idwcai.addMapping(tz323.timezoneID, new idwcai.JsTimeZone(tz323));
  tz324 =
    ((tzData324 = cggcc.safeEval(
      '{"id": "Europe/Istanbul", "transitions": [2926, 60, 6621, 0, 11662, 60, 15357, 0, 20566, 60, 24261, 0, 29975, 60, 33672, 0, 37200, 60, 42410, 0, 45934, 60, 50973, 0, 56230, 60, 59877, 0, 63574, 60, 68277, 0, 72310, 60, 85772, 0, 89952, 60, 94508, 0, 98520, 60, 103244, 0, 107256, 60, 111980, 0, 119013, 60, 120524, 0, 134109, 60, 137973, 0, 142368, 60, 146736, 0, 151104, 60, 155472, 0, 159840, 60, 164208, 0, 168576, 60, 172944, 0, 177312, 60, 181848, 0, 186215, 60, 190583, 0, 194951, 60, 199319, 0, 203687, 60, 208055, 0, 212423, 60, 216791, 0, 221159, 60, 225527, 0, 230063, 60, 235103, 0, 238799, 60, 243839, 0, 247535, 60, 252575, 0, 256271, 60, 261479, 0, 265007, 60, 270215, 0, 273743, 60, 278951, 0, 282647, 60, 287687, 0, 291383, 60, 296423, 0, 300119, 60, 305327, 0, 308855, 60, 314063, 0, 317591, 60, 322799, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361465, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData324));
  idwcai.addMapping(tz324.timezoneID, new idwcai.JsTimeZone(tz324));
  tz325 =
    ((tzData325 = cggcc.safeEval(
      '{"id": "Europe/Jersey", "transitions": [19394, 60, 24770, 0, 28130, 60, 33506, 0, 36866, 60, 42242, 0, 45602, 60, 50978, 0, 54506, 60, 59714, 0, 63242, 60, 68450, 0, 71978, 60, 77354, 0, 80714, 60, 86090, 0, 89450, 60, 94826, 0, 98521, 60, 103561, 0, 107257, 60, 112297, 0, 115993, 60, 121033, 0, 124729, 60, 129937, 0, 133633, 60, 138673, 0, 142369, 60, 147409, 0, 151105, 60, 156145, 0, 159841, 60, 164881, 0, 168577, 60, 173785, 0, 177313, 60, 182521, 0, 186217, 60, 191257, 0, 194953, 60, 199993, 0, 203689, 60, 208729, 0, 212425, 60, 217465, 0, 221161, 60, 226201, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["GMT", "Greenwich Mean Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData325));
  idwcai.addMapping(tz325.timezoneID, new idwcai.JsTimeZone(tz325));
  tz326 =
    ((tzData326 = cggcc.safeEval(
      '{"id": "Europe/Kaliningrad", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 177311, 60, 181847, 0, 186215, 60, 190584, 0, 194949, 60, 199316, 0, 203688, 60, 208056, 0, 212424, 60, 216792, 0, 221160, 60, 225528, 0, 230064, 60, 235104, 0, 238800, 60, 243840, 0, 247536, 60, 252576, 0, 256272, 60, 261480, 0, 265008, 60, 270216, 0, 273744, 60, 278952, 0, 282648, 60, 287688, 0, 291384, 60, 296424, 0, 300120, 60, 305328, 0, 308856, 60, 314064, 0, 317592, 60, 322800, 0, 326328, 60, 331536, 0, 335232, 60, 340272, 0, 343968, 60, 349008, 0, 352704, 60, 357912, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData326));
  idwcai.addMapping(tz326.timezoneID, new idwcai.JsTimeZone(tz326));
  tz327 =
    ((tzData327 = cggcc.safeEval(
      '{"id": "Europe/Kiev", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 194950, 60, 199317, 0, 203686, 60, 208053, 0, 212422, 60, 216789, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData327));
  idwcai.addMapping(tz327.timezoneID, new idwcai.JsTimeZone(tz327));
  tz328 =
    ((tzData328 = cggcc.safeEval(
      '{"id": "Europe/Lisbon", "transitions": [63408, 60, 67776, 0, 72312, 60, 76680, 0, 81048, 60, 85417, 0, 89784, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115994, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["WET", "Western European Standard Time", "WEST", "Western European Summer Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData328));
  idwcai.addMapping(tz328.timezoneID, new idwcai.JsTimeZone(tz328));
  tz329 =
    ((tzData329 = cggcc.safeEval(
      '{"id": "Europe/Ljubljana", "transitions": [115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData329));
  idwcai.addMapping(tz329.timezoneID, new idwcai.JsTimeZone(tz329));
  tz330 =
    ((tzData330 = cggcc.safeEval(
      '{"id": "Europe/London", "transitions": [19394, 60, 24770, 0, 28130, 60, 33506, 0, 36866, 60, 42242, 0, 45602, 60, 50978, 0, 54506, 60, 59714, 0, 63242, 60, 68450, 0, 71978, 60, 77354, 0, 80714, 60, 86090, 0, 89450, 60, 94826, 0, 98521, 60, 103561, 0, 107257, 60, 112297, 0, 115993, 60, 121033, 0, 124729, 60, 129937, 0, 133633, 60, 138673, 0, 142369, 60, 147409, 0, 151105, 60, 156145, 0, 159841, 60, 164881, 0, 168577, 60, 173785, 0, 177313, 60, 182521, 0, 186217, 60, 191257, 0, 194953, 60, 199993, 0, 203689, 60, 208729, 0, 212425, 60, 217465, 0, 221161, 60, 226201, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["GMT", "Greenwich Mean Time", "BST", "British Summer Time"], "std_offset": 0}'
    )),
    cggic.createTimeZone_0(tzData330));
  idwcai.addMapping(tz330.timezoneID, new idwcai.JsTimeZone(tz330));
  tz331 =
    ((tzData331 = cggcc.safeEval(
      '{"id": "Europe/Luxembourg", "transitions": [63577, 60, 67777, 0, 72313, 60, 76681, 0, 81049, 60, 85417, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData331));
  idwcai.addMapping(tz331.timezoneID, new idwcai.JsTimeZone(tz331));
  tz332 =
    ((tzData332 = cggcc.safeEval(
      '{"id": "Europe/Madrid", "transitions": [37534, 60, 41735, 0, 46438, 60, 50471, 0, 54670, 60, 59039, 0, 63574, 60, 67775, 0, 72334, 60, 76679, 0, 81049, 60, 85417, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData332));
  idwcai.addMapping(tz332.timezoneID, new idwcai.JsTimeZone(tz332));
  tz333 =
    ((tzData333 = cggcc.safeEval(
      '{"id": "Europe/Malta", "transitions": [3599, 60, 6454, 0, 12167, 60, 15191, 0, 21071, 60, 24094, 0, 28439, 60, 32807, 0, 37703, 60, 41255, 0, 46441, 60, 50136, 0, 55177, 60, 58872, 0, 63913, 60, 67608, 0, 72649, 60, 76344, 0, 81385, 60, 85080, 0, 89809, 60, 93984, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData333));
  idwcai.addMapping(tz333.timezoneID, new idwcai.JsTimeZone(tz333));
  tz334 =
    ((tzData334 = cggcc.safeEval(
      '{"id": "Europe/Mariehamn", "transitions": [98520, 60, 102888, 0, 107256, 60, 111624, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData334));
  idwcai.addMapping(tz334.timezoneID, new idwcai.JsTimeZone(tz334));
  tz335 =
    ((tzData335 = cggcc.safeEval(
      '{"id": "Europe/Minsk", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 186215, 60, 190584, 0, 194950, 60, 199318, 0, 203688, 60, 208056, 0, 212424, 60, 216792, 0, 221160, 60, 225528, 0, 230064, 60, 235104, 0, 238800, 60, 243840, 0, 247536, 60, 252576, 0, 256272, 60, 261480, 0, 265008, 60, 270216, 0, 273744, 60, 278952, 0, 282648, 60, 287688, 0, 291384, 60, 296424, 0, 300120, 60, 305328, 0, 308856, 60, 314064, 0, 317592, 60, 322800, 0, 326328, 60, 331536, 0, 335232, 60, 340272, 0, 343968, 60, 349008, 0, 352704, 60, 357912, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData335));
  idwcai.addMapping(tz335.timezoneID, new idwcai.JsTimeZone(tz335));
  tz336 =
    ((tzData336 = cggcc.safeEval(
      '{"id": "Europe/Monaco", "transitions": [54672, 60, 59039, 0, 63577, 60, 67777, 0, 72313, 60, 76681, 0, 81049, 60, 85417, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData336));
  idwcai.addMapping(tz336.timezoneID, new idwcai.JsTimeZone(tz336));
  tz337 =
    ((tzData337 = cggcc.safeEval(
      '{"id": "Europe/Moscow", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 177311, 60, 181847, 0, 186215, 60, 190584, 0, 194948, 60, 199315, 0, 203687, 60, 208055, 0, 212423, 60, 216791, 0, 221159, 60, 225527, 0, 230063, 60, 235103, 0, 238799, 60, 243839, 0, 247535, 60, 252575, 0, 256271, 60, 261479, 0, 265007, 60, 270215, 0, 273743, 60, 278951, 0, 282647, 60, 287687, 0, 291383, 60, 296423, 0, 300119, 60, 305327, 0, 308855, 60, 314063, 0, 317591, 60, 322799, 0, 326327, 60, 331535, 0, 335231, 60, 340271, 0, 343967, 60, 349007, 0, 352703, 60, 357911, 0], "names": ["MSK", "Moscow Standard Time", "MSKS", "Moscow Summer Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData337));
  idwcai.addMapping(tz337.timezoneID, new idwcai.JsTimeZone(tz337));
  tz338 =
    ((tzData338 = cggcc.safeEval(
      '{"id": "Europe/Oslo", "transitions": [89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData338));
  idwcai.addMapping(tz338.timezoneID, new idwcai.JsTimeZone(tz338));
  tz339 =
    ((tzData339 = cggcc.safeEval(
      '{"id": "Europe/Paris", "transitions": [54672, 60, 59039, 0, 63577, 60, 67777, 0, 72313, 60, 76681, 0, 81049, 60, 85417, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData339));
  idwcai.addMapping(tz339.timezoneID, new idwcai.JsTimeZone(tz339));
  tz340 =
    ((tzData340 = cggcc.safeEval(
      '{"id": "Europe/Podgorica", "transitions": [115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData340));
  idwcai.addMapping(tz340.timezoneID, new idwcai.JsTimeZone(tz340));
  tz341 =
    ((tzData341 = cggcc.safeEval(
      '{"id": "Europe/Prague", "transitions": [81049, 60, 85417, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData341));
  idwcai.addMapping(tz341.timezoneID, new idwcai.JsTimeZone(tz341));
  tz342 =
    ((tzData342 = cggcc.safeEval(
      '{"id": "Europe/Riga", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172944, 0, 177312, 60, 181848, 0, 186216, 60, 190584, 0, 194952, 60, 199320, 0, 203688, 60, 208056, 0, 212424, 60, 216792, 0, 221160, 60, 225528, 0, 230064, 60, 234432, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData342));
  idwcai.addMapping(tz342.timezoneID, new idwcai.JsTimeZone(tz342));
  tz343 =
    ((tzData343 = cggcc.safeEval(
      '{"id": "Europe/Rome", "transitions": [3599, 60, 6454, 0, 12167, 60, 15191, 0, 21071, 60, 24094, 0, 29975, 60, 32830, 0, 38543, 60, 41566, 0, 47447, 60, 50303, 0, 56183, 60, 59039, 0, 64751, 60, 67775, 0, 73655, 60, 76679, 0, 82391, 60, 85415, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData343));
  idwcai.addMapping(tz343.timezoneID, new idwcai.JsTimeZone(tz343));
  tz344 =
    ((tzData344 = cggcc.safeEval(
      '{"id": "Europe/Samara", "transitions": [98588, 60, 102979, 0, 107348, 60, 111739, 0, 116108, 60, 120499, 0, 124892, 60, 129262, 0, 133630, 60, 137998, 0, 142366, 60, 146734, 0, 151102, 60, 155470, 0, 159838, 60, 164206, 0, 168574, 60, 172943, 0, 177311, 60, 181847, 0, 194947, 60, 199314, 0, 203686, 60, 208054, 0, 212422, 60, 216790, 0, 221158, 60, 225526, 0, 230062, 60, 235102, 0, 238798, 60, 243838, 0, 247534, 60, 252574, 0, 256270, 60, 261478, 0, 265006, 60, 270214, 0, 273742, 60, 278950, 0, 282646, 60, 287686, 0, 291382, 60, 296422, 0, 300118, 60, 305326, 0, 308854, 60, 314062, 0, 317590, 60, 322798, 0, 326326, 60, 331534, 0, 335230, 60, 340270, 0, 343966, 60, 349006, 0, 352702, 60, 357911, 0], "names": ["SAMT", "Moscow Standard Time", "SAMST", "Moscow Summer Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData344));
  idwcai.addMapping(tz344.timezoneID, new idwcai.JsTimeZone(tz344));
  tz345 =
    ((tzData345 = cggcc.safeEval(
      '{"id": "Europe/San_Marino", "transitions": [3599, 60, 6454, 0, 12167, 60, 15191, 0, 21071, 60, 24094, 0, 29975, 60, 32830, 0, 38543, 60, 41566, 0, 47447, 60, 50303, 0, 56183, 60, 59039, 0, 64751, 60, 67775, 0, 73655, 60, 76679, 0, 82391, 60, 85415, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData345));
  idwcai.addMapping(tz345.timezoneID, new idwcai.JsTimeZone(tz345));
  tz346 =
    ((tzData346 = cggcc.safeEval(
      '{"id": "Europe/Sarajevo", "transitions": [115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData346));
  idwcai.addMapping(tz346.timezoneID, new idwcai.JsTimeZone(tz346));
  tz347 =
    ((tzData347 = cggcc.safeEval(
      '{"id": "Europe/Simferopol", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 194950, 60, 199317, 0, 203686, 60, 208053, 0, 212422, 60, 216788, 0, 221157, 60, 225524, 0, 230061, 60, 235104, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Moscow Standard Time", "EEST", "Moscow Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData347));
  idwcai.addMapping(tz347.timezoneID, new idwcai.JsTimeZone(tz347));
  tz348 =
    ((tzData348 = cggcc.safeEval(
      '{"id": "Europe/Skopje", "transitions": [115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData348));
  idwcai.addMapping(tz348.timezoneID, new idwcai.JsTimeZone(tz348));
  tz349 =
    ((tzData349 = cggcc.safeEval(
      '{"id": "Europe/Sofia", "transitions": [81045, 60, 85438, 0, 89949, 60, 94174, 0, 98685, 60, 102887, 0, 107421, 60, 111624, 0, 115992, 60, 120360, 0, 124728, 60, 129264, 0, 133632, 60, 138000, 0, 142368, 60, 146736, 0, 151104, 60, 155472, 0, 159840, 60, 164208, 0, 168576, 60, 172944, 0, 177312, 60, 181848, 0, 186214, 60, 190581, 0, 194950, 60, 199317, 0, 203686, 60, 208053, 0, 212422, 60, 216789, 0, 221158, 60, 225525, 0, 230062, 60, 235101, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData349));
  idwcai.addMapping(tz349.timezoneID, new idwcai.JsTimeZone(tz349));
  tz350 =
    ((tzData350 = cggcc.safeEval(
      '{"id": "Europe/Stockholm", "transitions": [89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData350));
  idwcai.addMapping(tz350.timezoneID, new idwcai.JsTimeZone(tz350));
  tz351 =
    ((tzData351 = cggcc.safeEval(
      '{"id": "Europe/Tallinn", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172944, 0, 177312, 60, 181848, 0, 186216, 60, 190584, 0, 194952, 60, 199320, 0, 203688, 60, 208056, 0, 212424, 60, 216792, 0, 221160, 60, 225528, 0, 230064, 60, 235104, 0, 238800, 60, 243840, 0, 247536, 60, 252577, 0, 256273, 60, 261481, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData351));
  idwcai.addMapping(tz351.timezoneID, new idwcai.JsTimeZone(tz351));
  tz352 =
    ((tzData352 = cggcc.safeEval(
      '{"id": "Europe/Tirane", "transitions": [38015, 60, 41638, 0, 46703, 60, 50398, 0, 55511, 60, 59206, 0, 64415, 60, 67942, 0, 73127, 60, 76678, 0, 81863, 60, 85414, 0, 90599, 60, 94294, 0, 99191, 60, 102886, 0, 108095, 60, 111790, 0, 116519, 60, 120502, 0, 124895, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData352));
  idwcai.addMapping(tz352.timezoneID, new idwcai.JsTimeZone(tz352));
  tz353 =
    ((tzData353 = cggcc.safeEval(
      '{"id": "Europe/Uzhgorod", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 194950, 60, 199317, 0, 203686, 60, 208053, 0, 212422, 60, 216789, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData353));
  idwcai.addMapping(tz353.timezoneID, new idwcai.JsTimeZone(tz353));
  tz354 =
    ((tzData354 = cggcc.safeEval(
      '{"id": "Europe/Vaduz", "transitions": [98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData354));
  idwcai.addMapping(tz354.timezoneID, new idwcai.JsTimeZone(tz354));
  tz355 =
    ((tzData355 = cggcc.safeEval(
      '{"id": "Europe/Vatican", "transitions": [3599, 60, 6454, 0, 12167, 60, 15191, 0, 21071, 60, 24094, 0, 29975, 60, 32830, 0, 38543, 60, 41566, 0, 47447, 60, 50303, 0, 56183, 60, 59039, 0, 64751, 60, 67775, 0, 73655, 60, 76679, 0, 82391, 60, 85415, 0, 89953, 60, 94153, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData355));
  idwcai.addMapping(tz355.timezoneID, new idwcai.JsTimeZone(tz355));
  tz356 =
    ((tzData356 = cggcc.safeEval(
      '{"id": "Europe/Vienna", "transitions": [89951, 60, 94150, 0, 98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData356));
  idwcai.addMapping(tz356.timezoneID, new idwcai.JsTimeZone(tz356));
  tz357 =
    ((tzData357 = cggcc.safeEval(
      '{"id": "Europe/Vilnius", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 177311, 60, 181847, 0, 186215, 60, 190584, 0, 194952, 60, 199320, 0, 203688, 60, 208056, 0, 212424, 60, 216792, 0, 221160, 60, 225528, 0, 230064, 60, 235104, 0, 238800, 60, 243840, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData357));
  idwcai.addMapping(tz357.timezoneID, new idwcai.JsTimeZone(tz357));
  tz358 =
    ((tzData358 = cggcc.safeEval(
      '{"id": "Europe/Volgograd", "transitions": [98588, 60, 102979, 0, 107348, 60, 111739, 0, 116108, 60, 120499, 0, 124892, 60, 129262, 0, 133630, 60, 137998, 0, 142366, 60, 146734, 0, 151102, 60, 155470, 0, 159838, 60, 164206, 0, 168574, 60, 172943, 0, 177311, 60, 181847, 0, 194950, 60, 199315, 0, 203687, 60, 208055, 0, 212423, 60, 216791, 0, 221159, 60, 225527, 0, 230063, 60, 235103, 0, 238799, 60, 243839, 0, 247535, 60, 252575, 0, 256271, 60, 261479, 0, 265007, 60, 270215, 0, 273743, 60, 278951, 0, 282647, 60, 287687, 0, 291383, 60, 296423, 0, 300119, 60, 305327, 0, 308855, 60, 314063, 0, 317591, 60, 322799, 0, 326327, 60, 331535, 0, 335231, 60, 340271, 0, 343967, 60, 349007, 0, 352703, 60, 357911, 0], "names": ["VOLT", "Volgograd Standard Time", "VOLST", "Volgograd Summer Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData358));
  idwcai.addMapping(tz358.timezoneID, new idwcai.JsTimeZone(tz358));
  tz359 =
    ((tzData359 = cggcc.safeEval(
      '{"id": "Europe/Warsaw", "transitions": [63576, 60, 67776, 0, 72312, 60, 76680, 0, 81048, 60, 85416, 0, 89952, 60, 94152, 0, 98520, 60, 102888, 0, 107256, 60, 111624, 0, 115992, 60, 120360, 0, 124728, 60, 129264, 0, 133632, 60, 138000, 0, 142368, 60, 146736, 0, 151104, 60, 155472, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData359));
  idwcai.addMapping(tz359.timezoneID, new idwcai.JsTimeZone(tz359));
  tz360 =
    ((tzData360 = cggcc.safeEval(
      '{"id": "Europe/Zagreb", "transitions": [115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData360));
  idwcai.addMapping(tz360.timezoneID, new idwcai.JsTimeZone(tz360));
  tz361 =
    ((tzData361 = cggcc.safeEval(
      '{"id": "Europe/Zaporozhye", "transitions": [98589, 60, 102980, 0, 107349, 60, 111740, 0, 116109, 60, 120500, 0, 124893, 60, 129263, 0, 133631, 60, 137999, 0, 142367, 60, 146735, 0, 151103, 60, 155471, 0, 159839, 60, 164207, 0, 168575, 60, 172943, 0, 177311, 60, 181847, 0, 186215, 60, 190581, 0, 194950, 60, 199317, 0, 203686, 60, 208053, 0, 212422, 60, 216789, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["EET", "Eastern European Standard Time", "EEST", "Eastern European Summer Time"], "std_offset": 120}'
    )),
    cggic.createTimeZone_0(tzData361));
  idwcai.addMapping(tz361.timezoneID, new idwcai.JsTimeZone(tz361));
  tz362 =
    ((tzData362 = cggcc.safeEval(
      '{"id": "Europe/Zurich", "transitions": [98521, 60, 102889, 0, 107257, 60, 111625, 0, 115993, 60, 120361, 0, 124729, 60, 129265, 0, 133633, 60, 138001, 0, 142369, 60, 146737, 0, 151105, 60, 155473, 0, 159841, 60, 164209, 0, 168577, 60, 172945, 0, 177313, 60, 181849, 0, 186217, 60, 190585, 0, 194953, 60, 199321, 0, 203689, 60, 208057, 0, 212425, 60, 216793, 0, 221161, 60, 225529, 0, 230065, 60, 235105, 0, 238801, 60, 243841, 0, 247537, 60, 252577, 0, 256273, 60, 261481, 0, 265009, 60, 270217, 0, 273745, 60, 278953, 0, 282649, 60, 287689, 0, 291385, 60, 296425, 0, 300121, 60, 305329, 0, 308857, 60, 314065, 0, 317593, 60, 322801, 0, 326329, 60, 331537, 0, 335233, 60, 340273, 0, 343969, 60, 349009, 0, 352705, 60, 357913, 0, 361441, 60, 366649, 0, 370177, 60, 375385, 0, 379081, 60, 384121, 0, 387817, 60, 392857, 0, 396553, 60, 401593, 0, 405289, 60, 410497, 0, 414025, 60, 419233, 0, 422761, 60, 427969, 0, 431665, 60, 436705, 0, 440401, 60, 445441, 0, 449137, 60, 454345, 0, 457873, 60, 463081, 0, 466609, 60, 471817, 0, 475513, 60, 480553, 0, 484249, 60, 489289, 0, 492985, 60, 498025, 0, 501721, 60, 506929, 0, 510457, 60, 515665, 0, 519193, 60, 524401, 0, 528097, 60, 533137, 0, 536833, 60, 541873, 0, 545569, 60, 550777, 0, 554305, 60, 559513, 0, 563041, 60, 568249, 0, 571777, 60, 576985, 0, 580681, 60, 585721, 0, 589417, 60, 594457, 0], "names": ["CET", "Central European Standard Time", "CEST", "Central European Summer Time"], "std_offset": 60}'
    )),
    cggic.createTimeZone_0(tzData362));
  idwcai.addMapping(tz362.timezoneID, new idwcai.JsTimeZone(tz362));
  tz363 =
    ((tzData363 = cggcc.safeEval(
      '{"id": "Indian/Antananarivo", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData363));
  idwcai.addMapping(tz363.timezoneID, new idwcai.JsTimeZone(tz363));
  tz364 =
    ((tzData364 = cggcc.safeEval(
      '{"id": "Indian/Chagos", "transitions": [], "names": ["IOT", "Indian Ocean Time"], "std_offset": 360}'
    )),
    cggic.createTimeZone_0(tzData364));
  idwcai.addMapping(tz364.timezoneID, new idwcai.JsTimeZone(tz364));
  tz365 =
    ((tzData365 = cggcc.safeEval(
      '{"id": "Indian/Christmas", "transitions": [], "names": ["CXT", "Christmas Island Time"], "std_offset": 420}'
    )),
    cggic.createTimeZone_0(tzData365));
  idwcai.addMapping(tz365.timezoneID, new idwcai.JsTimeZone(tz365));
  tz366 =
    ((tzData366 = cggcc.safeEval(
      '{"id": "Indian/Cocos", "transitions": [], "names": ["CCT", "Cocos Islands Time"], "std_offset": 390}'
    )),
    cggic.createTimeZone_0(tzData366));
  idwcai.addMapping(tz366.timezoneID, new idwcai.JsTimeZone(tz366));
  tz367 =
    ((tzData367 = cggcc.safeEval(
      '{"id": "Indian/Comoro", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData367));
  idwcai.addMapping(tz367.timezoneID, new idwcai.JsTimeZone(tz367));
  tz368 =
    ((tzData368 = cggcc.safeEval(
      '{"id": "Indian/Kerguelen", "transitions": [], "names": ["TFT", "French Southern and Antarctic Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData368));
  idwcai.addMapping(tz368.timezoneID, new idwcai.JsTimeZone(tz368));
  tz369 =
    ((tzData369 = cggcc.safeEval(
      '{"id": "Indian/Mahe", "transitions": [], "names": ["SCT", "Seychelles Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData369));
  idwcai.addMapping(tz369.timezoneID, new idwcai.JsTimeZone(tz369));
  tz370 =
    ((tzData370 = cggcc.safeEval(
      '{"id": "Indian/Maldives", "transitions": [], "names": ["MVT", "Maldives Time"], "std_offset": 300}'
    )),
    cggic.createTimeZone_0(tzData370));
  idwcai.addMapping(tz370.timezoneID, new idwcai.JsTimeZone(tz370));
  tz371 =
    ((tzData371 = cggcc.safeEval(
      '{"id": "Indian/Mauritius", "transitions": [111956, 60, 115843, 0, 340270, 60, 343965, 0], "names": ["MUT", "Mauritius Standard Time", "MUST", "Mauritius Summer Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData371));
  idwcai.addMapping(tz371.timezoneID, new idwcai.JsTimeZone(tz371));
  tz372 =
    ((tzData372 = cggcc.safeEval(
      '{"id": "Indian/Mayotte", "transitions": [], "names": ["EAT", "East Africa Time"], "std_offset": 180}'
    )),
    cggic.createTimeZone_0(tzData372));
  idwcai.addMapping(tz372.timezoneID, new idwcai.JsTimeZone(tz372));
  tz373 =
    ((tzData373 = cggcc.safeEval(
      '{"id": "Indian/Reunion", "transitions": [], "names": ["RET", "Reunion Time"], "std_offset": 240}'
    )),
    cggic.createTimeZone_0(tzData373));
  idwcai.addMapping(tz373.timezoneID, new idwcai.JsTimeZone(tz373));
  tz374 =
    ((tzData374 = cggcc.safeEval(
      '{"id": "MST7MDT", "transitions": [2769, 60, 7136, 0, 11505, 60, 16040, 0, 20409, 60, 24776, 0, 29145, 60, 33512, 0, 35193, 60, 42248, 0, 45105, 60, 50984, 0, 55353, 60, 59888, 0, 64089, 60, 68624, 0, 72993, 60, 77360, 0, 81729, 60, 86096, 0, 90465, 60, 94832, 0, 99201, 60, 103568, 0, 107937, 60, 112472, 0, 116673, 60, 121208, 0, 125577, 60, 129944, 0, 134313, 60, 138680, 0, 143049, 60, 147416, 0, 151281, 60, 156152, 0, 160017, 60, 165056, 0, 168753, 60, 173792, 0, 177489, 60, 182528, 0, 186393, 60, 191264, 0, 195129, 60, 200000, 0, 203865, 60, 208904, 0, 212601, 60, 217640, 0, 221337, 60, 226376, 0, 230241, 60, 235112, 0, 238977, 60, 243848, 0, 247713, 60, 252584, 0, 256449, 60, 261488, 0, 265185, 60, 270224, 0, 273921, 60, 278960, 0, 282825, 60, 287696, 0, 291561, 60, 296432, 0, 300297, 60, 305336, 0, 309033, 60, 314072, 0, 317769, 60, 322808, 0, 326001, 60, 331712, 0, 334737, 60, 340448, 0, 343473, 60, 349184, 0, 352377, 60, 358088, 0, 361113, 60, 366824, 0, 369849, 60, 375560, 0, 378585, 60, 384296, 0, 387321, 60, 393032, 0, 396057, 60, 401768, 0, 404961, 60, 410672, 0, 413697, 60, 419408, 0, 422433, 60, 428144, 0, 431169, 60, 436880, 0, 439905, 60, 445616, 0, 448809, 60, 454520, 0, 457545, 60, 463256, 0, 466281, 60, 471992, 0, 475017, 60, 480728, 0, 483753, 60, 489464, 0, 492489, 60, 498200, 0, 501393, 60, 507104, 0, 510129, 60, 515840, 0, 518865, 60, 524576, 0, 527601, 60, 533312, 0, 536337, 60, 542048, 0, 545241, 60, 550952, 0, 553977, 60, 559688, 0, 562713, 60, 568424, 0, 571449, 60, 577160, 0, 580185, 60, 585896, 0, 588921, 60, 594632, 0], "names": ["MST", "Mountain Standard Time", "MDT", "Mountain Daylight Time"], "std_offset": -420}'
    )),
    cggic.createTimeZone_0(tzData374));
  idwcai.addMapping(tz374.timezoneID, new idwcai.JsTimeZone(tz374));
  tz375 =
    ((tzData375 = cggcc.safeEval(
      '{"id": "Pacific/Apia", "transitions": [357083, 60, 361598, 0, 365798, 60, 370334, 0, 374702, 60, 379238, 0, 383438, 60, 387974, 0, 392174, 60, 396710, 0, 400910, 60, 405446, 0, 409646, 60, 414182, 0, 418382, 60, 422918, 0, 427286, 60, 431822, 0, 436022, 60, 440558, 0, 444758, 60, 449294, 0, 453494, 60, 458030, 0, 462230, 60, 466766, 0, 470966, 60, 475670, 0, 479870, 60, 484406, 0, 488606, 60, 493142, 0, 497342, 60, 501878, 0, 506078, 60, 510614, 0, 514814, 60, 519350, 0, 523718, 60, 528254, 0, 532454, 60, 536990, 0, 541190, 60, 545726, 0, 549926, 60, 554462, 0, 558662, 60, 563198, 0, 567398, 60, 571934, 0, 576302, 60, 580838, 0, 585038, 60, 589574, 0, 593774, 60], "names": ["SST", "Samoa Standard Time", "Samoa Daylight Time", "Samoa Daylight Time"], "std_offset": 780}'
    )),
    cggic.createTimeZone_0(tzData375));
  idwcai.addMapping(tz375.timezoneID, new idwcai.JsTimeZone(tz375));
  tz376 =
    ((tzData376 = cggcc.safeEval(
      '{"id": "Pacific/Auckland", "transitions": [42398, 60, 45086, 0, 50966, 60, 54158, 0, 59870, 60, 62894, 0, 68606, 60, 71630, 0, 77342, 60, 80366, 0, 86078, 60, 89102, 0, 94814, 60, 97838, 0, 103550, 60, 106742, 0, 112454, 60, 115478, 0, 121190, 60, 124214, 0, 129926, 60, 132950, 0, 138662, 60, 141686, 0, 147398, 60, 150422, 0, 156134, 60, 159326, 0, 165038, 60, 168062, 0, 173270, 60, 177134, 0, 182006, 60, 185870, 0, 190742, 60, 194606, 0, 199478, 60, 203510, 0, 208214, 60, 212246, 0, 216950, 60, 220982, 0, 225686, 60, 229718, 0, 234590, 60, 238454, 0, 243326, 60, 247190, 0, 252062, 60, 256094, 0, 260798, 60, 264830, 0, 269534, 60, 273566, 0, 278438, 60, 282302, 0, 287174, 60, 291038, 0, 295910, 60, 299942, 0, 304646, 60, 308678, 0, 313382, 60, 317414, 0, 322118, 60, 326150, 0, 330854, 60, 335390, 0, 339590, 60, 344126, 0, 348326, 60, 352862, 0, 357062, 60, 361598, 0, 365798, 60, 370334, 0, 374702, 60, 379238, 0, 383438, 60, 387974, 0, 392174, 60, 396710, 0, 400910, 60, 405446, 0, 409646, 60, 414182, 0, 418382, 60, 422918, 0, 427286, 60, 431822, 0, 436022, 60, 440558, 0, 444758, 60, 449294, 0, 453494, 60, 458030, 0, 462230, 60, 466766, 0, 470966, 60, 475670, 0, 479870, 60, 484406, 0, 488606, 60, 493142, 0, 497342, 60, 501878, 0, 506078, 60, 510614, 0, 514814, 60, 519350, 0, 523718, 60, 528254, 0, 532454, 60, 536990, 0, 541190, 60, 545726, 0, 549926, 60, 554462, 0, 558662, 60, 563198, 0, 567398, 60, 571934, 0, 576302, 60, 580838, 0, 585038, 60, 589574, 0, 593774, 60], "names": ["NZST", "New Zealand Standard Time", "NZDT", "New Zealand Daylight Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData376));
  idwcai.addMapping(tz376.timezoneID, new idwcai.JsTimeZone(tz376));
  tz377 =
    ((tzData377 = cggcc.safeEval(
      '{"id": "Pacific/Chatham", "transitions": [42398, 60, 45086, 0, 50966, 60, 54158, 0, 59870, 60, 62894, 0, 68606, 60, 71630, 0, 77342, 60, 80366, 0, 86078, 60, 89102, 0, 94814, 60, 97838, 0, 103550, 60, 106742, 0, 112454, 60, 115478, 0, 121190, 60, 124214, 0, 129926, 60, 132950, 0, 138662, 60, 141686, 0, 147398, 60, 150422, 0, 156134, 60, 159326, 0, 165038, 60, 168062, 0, 173270, 60, 177134, 0, 182006, 60, 185870, 0, 190742, 60, 194606, 0, 199478, 60, 203510, 0, 208214, 60, 212246, 0, 216950, 60, 220982, 0, 225686, 60, 229718, 0, 234590, 60, 238454, 0, 243326, 60, 247190, 0, 252062, 60, 256094, 0, 260798, 60, 264830, 0, 269534, 60, 273566, 0, 278438, 60, 282302, 0, 287174, 60, 291038, 0, 295910, 60, 299942, 0, 304646, 60, 308678, 0, 313382, 60, 317414, 0, 322118, 60, 326150, 0, 330854, 60, 335390, 0, 339590, 60, 344126, 0, 348326, 60, 352862, 0, 357062, 60, 361598, 0, 365798, 60, 370334, 0, 374702, 60, 379238, 0, 383438, 60, 387974, 0, 392174, 60, 396710, 0, 400910, 60, 405446, 0, 409646, 60, 414182, 0, 418382, 60, 422918, 0, 427286, 60, 431822, 0, 436022, 60, 440558, 0, 444758, 60, 449294, 0, 453494, 60, 458030, 0, 462230, 60, 466766, 0, 470966, 60, 475670, 0, 479870, 60, 484406, 0, 488606, 60, 493142, 0, 497342, 60, 501878, 0, 506078, 60, 510614, 0, 514814, 60, 519350, 0, 523718, 60, 528254, 0, 532454, 60, 536990, 0, 541190, 60, 545726, 0, 549926, 60, 554462, 0, 558662, 60, 563198, 0, 567398, 60, 571934, 0, 576302, 60, 580838, 0, 585038, 60, 589574, 0, 593774, 60], "names": ["CHAST", "Chatham Standard Time", "CHADT", "Chatham Daylight Time"], "std_offset": 765}'
    )),
    cggic.createTimeZone_0(tzData377));
  idwcai.addMapping(tz377.timezoneID, new idwcai.JsTimeZone(tz377));
  tz378 =
    ((tzData378 = cggcc.safeEval(
      '{"id": "Pacific/Easter", "transitions": [6796, 60, 10491, 0, 15532, 60, 19227, 0, 24436, 60, 27963, 0, 32836, 60, 36699, 0, 41908, 60, 45435, 0, 50644, 60, 54339, 0, 59380, 60, 63075, 0, 68116, 60, 71811, 0, 77020, 60, 80547, 0, 85756, 60, 89283, 0, 94492, 60, 98187, 0, 103228, 60, 106923, 0, 111964, 60, 115659, 0, 120700, 60, 124395, 0, 129604, 60, 133131, 0, 138340, 60, 141867, 0, 147076, 60, 151443, 0, 155812, 60, 159507, 0, 164380, 60, 168243, 0, 173452, 60, 177147, 0, 181516, 60, 185715, 0, 190924, 60, 194619, 0, 199660, 60, 203355, 0, 208396, 60, 212091, 0, 217132, 60, 220827, 0, 226036, 60, 229563, 0, 234772, 60, 238803, 0, 243508, 60, 247203, 0, 251908, 60, 256443, 0, 260980, 60, 264675, 0, 269884, 60, 273411, 0, 278620, 60, 282147, 0, 287356, 60, 290883, 0, 296092, 60, 299787, 0, 304828, 60, 308523, 0, 313564, 60, 317259, 0, 322468, 60, 325995, 0, 331204, 60, 335235, 0, 339940, 60, 343635, 0, 348676, 60, 352875, 0, 357412, 60, 362451, 0, 364972, 60, 371019, 0, 374044, 60, 379755, 0, 382948, 60, 388491, 0, 391684, 60, 397227, 0, 400420, 60, 405963, 0, 409156, 60, 414699, 0, 417892, 60, 423603, 0, 426628, 60, 432339, 0, 435532, 60, 441075, 0, 444268, 60, 449811, 0, 453004, 60, 458547, 0, 461740, 60, 467283, 0, 470476, 60, 476187, 0, 479380, 60, 484923, 0, 488116, 60, 493659, 0, 496852, 60, 502395, 0, 505588, 60, 511131, 0, 514324, 60, 520035, 0, 523060, 60, 528771, 0, 531964, 60, 537507, 0, 540700, 60, 546243, 0, 549436, 60, 554979, 0, 558172, 60, 563715, 0, 566908, 60, 572619, 0, 575644, 60, 581355, 0, 584548, 60, 590091, 0, 593284, 60], "names": ["EAST", "Easter Island Standard Time", "EASST", "Easter Island Summer Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData378));
  idwcai.addMapping(tz378.timezoneID, new idwcai.JsTimeZone(tz378));
  tz379 =
    ((tzData379 = cggcc.safeEval(
      '{"id": "Pacific/Efate", "transitions": [120349, 60, 124716, 0, 129805, 60, 133452, 0, 137989, 60, 142188, 0, 146725, 60, 151092, 0, 155461, 60, 159828, 0, 164197, 60, 168564, 0, 172933, 60, 177300, 0, 181669, 60, 186036, 0, 190573, 60, 193428, 0, 199981, 60, 202164, 0], "names": ["VUT", "Vanuatu Standard Time", "VUST", "Vanuatu Summer Time"], "std_offset": 660}'
    )),
    cggic.createTimeZone_0(tzData379));
  idwcai.addMapping(tz379.timezoneID, new idwcai.JsTimeZone(tz379));
  tz380 =
    ((tzData380 = cggcc.safeEval(
      '{"id": "Pacific/Enderbury", "transitions": [], "names": ["PHOT", "Phoenix Islands Time"], "std_offset": 780}'
    )),
    cggic.createTimeZone_0(tzData380));
  idwcai.addMapping(tz380.timezoneID, new idwcai.JsTimeZone(tz380));
  tz381 =
    ((tzData381 = cggcc.safeEval(
      '{"id": "Pacific/Fakaofo", "transitions": [], "names": ["TKT", "Tokelau Time"], "std_offset": 780}'
    )),
    cggic.createTimeZone_0(tzData381));
  idwcai.addMapping(tz381.timezoneID, new idwcai.JsTimeZone(tz381));
  tz382 =
    ((tzData382 = cggcc.safeEval(
      '{"id": "Pacific/Fiji", "transitions": [252734, 60, 255590, 0, 261638, 60, 264326, 0, 349838, 60, 352694, 0, 357734, 60, 360926, 0, 366470, 60, 368654, 0, 375206, 60, 377390, 0, 383942, 60, 386126, 0, 392678, 60, 394862, 0, 401414, 60, 403766, 0, 410318, 60, 412502, 0, 419054, 60, 421238, 0, 427790, 60, 429974, 0, 436526, 60, 438710, 0, 445262, 60, 447614, 0, 454166, 60, 456350, 0, 462902, 60, 465086, 0, 471638, 60, 473822, 0, 480374, 60, 482558, 0, 489110, 60, 491294, 0, 497846, 60, 500198, 0, 506750, 60, 508934, 0, 515486, 60, 517670, 0, 524222, 60, 526406, 0, 532958, 60, 535142, 0, 541694, 60, 543878, 0, 550598, 60, 552782, 0, 559334, 60, 561518, 0, 568070, 60, 570254, 0, 576806, 60, 578990, 0, 585542, 60, 587726, 0, 594278, 60], "names": ["FJT", "Fiji Standard Time", "FJST", "Fiji Summer Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData382));
  idwcai.addMapping(tz382.timezoneID, new idwcai.JsTimeZone(tz382));
  tz383 =
    ((tzData383 = cggcc.safeEval(
      '{"id": "Pacific/Funafuti", "transitions": [], "names": ["TVT", "Tuvalu Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData383));
  idwcai.addMapping(tz383.timezoneID, new idwcai.JsTimeZone(tz383));
  tz384 =
    ((tzData384 = cggcc.safeEval(
      '{"id": "Pacific/Galapagos", "transitions": [], "names": ["GALT", "Galapagos Time"], "std_offset": -360}'
    )),
    cggic.createTimeZone_0(tzData384));
  idwcai.addMapping(tz384.timezoneID, new idwcai.JsTimeZone(tz384));
  tz385 =
    ((tzData385 = cggcc.safeEval(
      '{"id": "Pacific/Gambier", "transitions": [], "names": ["GAMT", "Gambier Time"], "std_offset": -540}'
    )),
    cggic.createTimeZone_0(tzData385));
  idwcai.addMapping(tz385.timezoneID, new idwcai.JsTimeZone(tz385));
  tz386 =
    ((tzData386 = cggcc.safeEval(
      '{"id": "Pacific/Guadalcanal", "transitions": [], "names": ["SBT", "Solomon Islands Time"], "std_offset": 660}'
    )),
    cggic.createTimeZone_0(tzData386));
  idwcai.addMapping(tz386.timezoneID, new idwcai.JsTimeZone(tz386));
  tz387 =
    ((tzData387 = cggcc.safeEval(
      '{"id": "Pacific/Guam", "transitions": [], "names": ["ChST", "Chamorro Standard Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData387));
  idwcai.addMapping(tz387.timezoneID, new idwcai.JsTimeZone(tz387));
  tz388 =
    ((tzData388 = cggcc.safeEval(
      '{"id": "Pacific/Honolulu", "transitions": [], "names": ["HST", "Hawaii-Aleutian Standard Time", "HDT", "Hawaii-Aleutian Daylight Time"], "std_offset": -600}'
    )),
    cggic.createTimeZone_0(tzData388));
  idwcai.addMapping(tz388.timezoneID, new idwcai.JsTimeZone(tz388));
  tz389 =
    ((tzData389 = cggcc.safeEval(
      '{"id": "Pacific/Johnston", "transitions": [], "names": ["HAST", "Hawaii-Aleutian Standard Time", "HADT", "Hawaii-Aleutian Daylight Time"], "std_offset": -600}'
    )),
    cggic.createTimeZone_0(tzData389));
  idwcai.addMapping(tz389.timezoneID, new idwcai.JsTimeZone(tz389));
  tz390 =
    ((tzData390 = cggcc.safeEval(
      '{"id": "Pacific/Kiritimati", "transitions": [], "names": ["LINT", "Line Islands Time"], "std_offset": 840}'
    )),
    cggic.createTimeZone_0(tzData390));
  idwcai.addMapping(tz390.timezoneID, new idwcai.JsTimeZone(tz390));
  tz391 =
    ((tzData391 = cggcc.safeEval(
      '{"id": "Pacific/Kosrae", "transitions": [], "names": ["KOST", "Kosrae Time"], "std_offset": 660}'
    )),
    cggic.createTimeZone_0(tzData391));
  idwcai.addMapping(tz391.timezoneID, new idwcai.JsTimeZone(tz391));
  tz392 =
    ((tzData392 = cggcc.safeEval(
      '{"id": "Pacific/Kwajalein", "transitions": [], "names": ["MHT", "Marshall Islands Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData392));
  idwcai.addMapping(tz392.timezoneID, new idwcai.JsTimeZone(tz392));
  tz393 =
    ((tzData393 = cggcc.safeEval(
      '{"id": "Pacific/Majuro", "transitions": [], "names": ["MHT", "Marshall Islands Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData393));
  idwcai.addMapping(tz393.timezoneID, new idwcai.JsTimeZone(tz393));
  tz394 =
    ((tzData394 = cggcc.safeEval(
      '{"id": "Pacific/Marquesas", "transitions": [], "names": ["MART", "Marquesas Time"], "std_offset": -570}'
    )),
    cggic.createTimeZone_0(tzData394));
  idwcai.addMapping(tz394.timezoneID, new idwcai.JsTimeZone(tz394));
  tz395 =
    ((tzData395 = cggcc.safeEval(
      '{"id": "Pacific/Midway", "transitions": [], "names": ["SST", "Samoa Standard Time", "Samoa Daylight Time", "Samoa Daylight Time"], "std_offset": -660}'
    )),
    cggic.createTimeZone_0(tzData395));
  idwcai.addMapping(tz395.timezoneID, new idwcai.JsTimeZone(tz395));
  tz396 =
    ((tzData396 = cggcc.safeEval(
      '{"id": "Pacific/Nauru", "transitions": [], "names": ["NRT", "Nauru Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData396));
  idwcai.addMapping(tz396.timezoneID, new idwcai.JsTimeZone(tz396));
  tz397 =
    ((tzData397 = cggcc.safeEval(
      '{"id": "Pacific/Niue", "transitions": [], "names": ["NUT", "Niue Time"], "std_offset": -660}'
    )),
    cggic.createTimeZone_0(tzData397));
  idwcai.addMapping(tz397.timezoneID, new idwcai.JsTimeZone(tz397));
  tz398 =
    ((tzData398 = cggcc.safeEval(
      '{"id": "Pacific/Norfolk", "transitions": [], "names": ["NFT", "Norfolk Island Time"], "std_offset": 690}'
    )),
    cggic.createTimeZone_0(tzData398));
  idwcai.addMapping(tz398.timezoneID, new idwcai.JsTimeZone(tz398));
  tz399 =
    ((tzData399 = cggcc.safeEval(
      '{"id": "Pacific/Noumea", "transitions": [69445, 60, 71484, 0, 78181, 60, 80244, 0, 235935, 60, 238119, 0], "names": ["NCT", "New Caledonia Standard Time", "NCST", "New Caledonia Summer Time"], "std_offset": 660}'
    )),
    cggic.createTimeZone_0(tzData399));
  idwcai.addMapping(tz399.timezoneID, new idwcai.JsTimeZone(tz399));
  tz400 =
    ((tzData400 = cggcc.safeEval(
      '{"id": "Pacific/Pago_Pago", "transitions": [], "names": ["SST", "Samoa Standard Time", "Samoa Daylight Time", "Samoa Daylight Time"], "std_offset": -660}'
    )),
    cggic.createTimeZone_0(tzData400));
  idwcai.addMapping(tz400.timezoneID, new idwcai.JsTimeZone(tz400));
  tz401 =
    ((tzData401 = cggcc.safeEval(
      '{"id": "Pacific/Palau", "transitions": [], "names": ["PWT", "Palau Time"], "std_offset": 540}'
    )),
    cggic.createTimeZone_0(tzData401));
  idwcai.addMapping(tz401.timezoneID, new idwcai.JsTimeZone(tz401));
  tz402 =
    ((tzData402 = cggcc.safeEval(
      '{"id": "Pacific/Pitcairn", "transitions": [], "names": ["PNT", "Pitcairn Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData402));
  idwcai.addMapping(tz402.timezoneID, new idwcai.JsTimeZone(tz402));
  tz403 =
    ((tzData403 = cggcc.safeEval(
      '{"id": "Pacific/Ponape", "transitions": [], "names": ["PONT", "Ponape Time"], "std_offset": 660}'
    )),
    cggic.createTimeZone_0(tzData403));
  idwcai.addMapping(tz403.timezoneID, new idwcai.JsTimeZone(tz403));
  tz404 =
    ((tzData404 = cggcc.safeEval(
      '{"id": "Pacific/Port_Moresby", "transitions": [], "names": ["PGT", "Papua New Guinea Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData404));
  idwcai.addMapping(tz404.timezoneID, new idwcai.JsTimeZone(tz404));
  tz405 =
    ((tzData405 = cggcc.safeEval(
      '{"id": "Pacific/Rarotonga", "transitions": [86098, 30, 89121, 0, 94834, 30, 97857, 0, 103570, 30, 106761, 0, 112474, 30, 115497, 0, 121210, 30, 124233, 0, 129946, 30, 132969, 0, 138682, 30, 141705, 0, 147418, 30, 150441, 0, 156154, 30, 159345, 0, 165058, 30, 168081, 0, 173794, 30, 176817, 0, 182530, 30, 185553, 0], "names": ["CKT", "Cook Islands Standard Time", "CKHST", "Cook Islands Half Summer Time"], "std_offset": -600}'
    )),
    cggic.createTimeZone_0(tzData405));
  idwcai.addMapping(tz405.timezoneID, new idwcai.JsTimeZone(tz405));
  tz406 =
    ((tzData406 = cggcc.safeEval(
      '{"id": "Pacific/Saipan", "transitions": [], "names": ["ChST", "Chamorro Standard Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData406));
  idwcai.addMapping(tz406.timezoneID, new idwcai.JsTimeZone(tz406));
  tz407 =
    ((tzData407 = cggcc.safeEval(
      '{"id": "Pacific/Tahiti", "transitions": [], "names": ["TAHT", "Tahiti Time"], "std_offset": -600}'
    )),
    cggic.createTimeZone_0(tzData407));
  idwcai.addMapping(tz407.timezoneID, new idwcai.JsTimeZone(tz407));
  tz408 =
    ((tzData408 = cggcc.safeEval(
      '{"id": "Pacific/Tarawa", "transitions": [], "names": ["GILT", "Gilbert Islands Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData408));
  idwcai.addMapping(tz408.timezoneID, new idwcai.JsTimeZone(tz408));
  tz409 =
    ((tzData409 = cggcc.safeEval(
      '{"id": "Pacific/Tongatapu", "transitions": [260893, 60, 264829, 0, 270373, 60, 272388, 0, 279109, 60, 281124, 0], "names": ["TOT", "Tonga Standard Time", "TOST", "Tonga Summer Time"], "std_offset": 780}'
    )),
    cggic.createTimeZone_0(tzData409));
  idwcai.addMapping(tz409.timezoneID, new idwcai.JsTimeZone(tz409));
  tz410 =
    ((tzData410 = cggcc.safeEval(
      '{"id": "Pacific/Truk", "transitions": [], "names": ["TRUT", "Chuuk Time"], "std_offset": 600}'
    )),
    cggic.createTimeZone_0(tzData410));
  idwcai.addMapping(tz410.timezoneID, new idwcai.JsTimeZone(tz410));
  tz411 =
    ((tzData411 = cggcc.safeEval(
      '{"id": "Pacific/Wake", "transitions": [], "names": ["WAKT", "Wake Island Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData411));
  idwcai.addMapping(tz411.timezoneID, new idwcai.JsTimeZone(tz411));
  tz412 =
    ((tzData412 = cggcc.safeEval(
      '{"id": "Pacific/Wallis", "transitions": [], "names": ["WFT", "Wallis and Futuna Time"], "std_offset": 720}'
    )),
    cggic.createTimeZone_0(tzData412));
  idwcai.addMapping(tz412.timezoneID, new idwcai.JsTimeZone(tz412));
  tz =
    ((tzData = cggcc.safeEval(
      '{"id": "PST8PDT", "transitions": [2770, 60, 7137, 0, 11506, 60, 16041, 0, 20410, 60, 24777, 0, 29146, 60, 33513, 0, 35194, 60, 42249, 0, 45106, 60, 50985, 0, 55354, 60, 59889, 0, 64090, 60, 68625, 0, 72994, 60, 77361, 0, 81730, 60, 86097, 0, 90466, 60, 94833, 0, 99202, 60, 103569, 0, 107938, 60, 112473, 0, 116674, 60, 121209, 0, 125578, 60, 129945, 0, 134314, 60, 138681, 0, 143050, 60, 147417, 0, 151282, 60, 156153, 0, 160018, 60, 165057, 0, 168754, 60, 173793, 0, 177490, 60, 182529, 0, 186394, 60, 191265, 0, 195130, 60, 200001, 0, 203866, 60, 208905, 0, 212602, 60, 217641, 0, 221338, 60, 226377, 0, 230242, 60, 235113, 0, 238978, 60, 243849, 0, 247714, 60, 252585, 0, 256450, 60, 261489, 0, 265186, 60, 270225, 0, 273922, 60, 278961, 0, 282826, 60, 287697, 0, 291562, 60, 296433, 0, 300298, 60, 305337, 0, 309034, 60, 314073, 0, 317770, 60, 322809, 0, 326002, 60, 331713, 0, 334738, 60, 340449, 0, 343474, 60, 349185, 0, 352378, 60, 358089, 0, 361114, 60, 366825, 0, 369850, 60, 375561, 0, 378586, 60, 384297, 0, 387322, 60, 393033, 0, 396058, 60, 401769, 0, 404962, 60, 410673, 0, 413698, 60, 419409, 0, 422434, 60, 428145, 0, 431170, 60, 436881, 0, 439906, 60, 445617, 0, 448810, 60, 454521, 0, 457546, 60, 463257, 0, 466282, 60, 471993, 0, 475018, 60, 480729, 0, 483754, 60, 489465, 0, 492490, 60, 498201, 0, 501394, 60, 507105, 0, 510130, 60, 515841, 0, 518866, 60, 524577, 0, 527602, 60, 533313, 0, 536338, 60, 542049, 0, 545242, 60, 550953, 0, 553978, 60, 559689, 0, 562714, 60, 568425, 0, 571450, 60, 577161, 0, 580186, 60, 585897, 0, 588922, 60, 594633, 0], "names": ["PST", "Pacific Standard Time", "PDT", "Pacific Daylight Time"], "std_offset": -480}'
    )),
    cggic.createTimeZone_0(tzData));
  idwcai.addMapping(tz.timezoneID, new idwcai.JsTimeZone(tz));
  idwcai.addMapping_0("JP", "Asia/Tokyo");
  idwcai.addMapping_0("JST", "Asia/Tokyo");
  idwcai.addMapping_0("KR", "Asia/Seoul");
  idwcai.addMapping_0("KST", "Asia/Seoul");
  idwcai.addMapping_0("HK", "Asia/Hong_Kong");
  idwcai.addMapping_0("HKT", "Asia/Hong_Kong");
  idwcai.addMapping_0("SG", "Asia/Singapore");
  idwcai.addMapping_0("SGT", "Asia/Singapore");
  idwcai.addMapping_0("Asia/Kolkata", "Asia/Calcutta");
  idwcai.addMapping_0("IN", "Asia/Calcutta");
  idwcai.addMapping_0("IST", "Asia/Calcutta");
  idwcai.addMapping_0("TW", "Asia/Taipei");
  idwcai.addMapping_0("NL", "Europe/Amsterdam");
  idwcai.addMapping_0("CE", "Europe/Berlin");
  idwcai.addMapping_0("CES", "Europe/Berlin");
  idwcai.addMapping_0("CEST", "Europe/Berlin");
  idwcai.addMapping_0("LON", "Europe/London");
  idwcai.addMapping_0("BST", "Europe/London");
  idwcai.addMapping_0("CH", "Europe/Zurich");
  idwcai.addMapping_0("BT", "America/Sao_Paulo");
  idwcai.addMapping_0("BRST", "America/Sao_Paulo");
  idwcai.addMapping_0("BRT", "America/Sao_Paulo");
  idwcai.addMapping_0("NF", "America/St_Johns");
  idwcai.addMapping_0("NST", "America/St_Johns");
  idwcai.addMapping_0("NDT", "America/St_Johns");
  idwcai.addMapping_0("AT", "America/Halifax");
  idwcai.addMapping_0("AST", "America/Halifax");
  idwcai.addMapping_0("ADT", "America/Halifax");
  idwcai.addMapping_0("ET", "America/New_York");
  idwcai.addMapping_0("EST", "America/New_York");
  idwcai.addMapping_0("EDT", "America/New_York");
  idwcai.addMapping_0("MN", "America/Chicago");
  idwcai.addMapping_0("CT", "America/Chicago");
  idwcai.addMapping_0("CST", "America/Chicago");
  idwcai.addMapping_0("CDT", "America/Chicago");
  idwcai.addMapping_0("MT", "America/Denver");
  idwcai.addMapping_0("MST", "America/Denver");
  idwcai.addMapping_0("MDT", "America/Denver");
  idwcai.addMapping_0("PT", "America/Los_Angeles");
  idwcai.addMapping_0("PST", "America/Los_Angeles");
  idwcai.addMapping_0("PDT", "America/Los_Angeles");
  idwcai.addMapping_0("AL", "America/Anchorage");
  idwcai.addMapping_0("AKST", "America/Anchorage");
  idwcai.addMapping_0("AKDT", "America/Anchorage");
  idwcai.addMapping_0("HI", "Pacific/Honolulu");
  idwcai.addMapping_0("HST", "Pacific/Honolulu");
  idwcai.addMapping_0("HDT", "Pacific/Honolulu");
  idwcai.addMapping_0("SYD", "Australia/Sydney");
  idwcai.addMapping_0("AEST", "Australia/Sydney");
  idwcai.addMapping_0("AEDT", "Australia/Sydney");
  idwcai.addMapping_0("MOS", "Europe/Moscow");
  idwcai.addMapping_0("SHG", "Asia/Shanghai");
  idwcai.addMapping_0("NY", "America/New_York");
  idwcai.addMapping_0("MTL", "America/Toronto");
  idwcai.addMapping_0("MEX", "America/Mexico_City");
  idwcai.addMapping_0("SKM", "Europe/Stockholm");
  idwcai.addMapping_0("OSL", "Europe/Oslo");
  idwcai.addMapping_0("MAD", "Europe/Madrid");
  idwcai.addMapping_0("JNB", "Africa/Johannesburg");
  idwcai.addMapping_0("KL", "Asia/Kuala_Lumpur");
  gmtTimeZone = cggic.createTimeZone(0);
  idwcai.addMapping("UTC", new idwcai.JsTimeZone(gmtTimeZone));
  idwcai.addMapping("GMT", new idwcai.JsTimeZone(gmtTimeZone));
  idwcai.addMapping("Etc/GMT", new idwcai.JsTimeZone(gmtTimeZone));
  idwcai.addMapping("Z", new idwcai.JsTimeZone(gmtTimeZone));
};
idwcai.needsDstAdjustment = function needsDstAdjustment(timeZoneAbbreviation) {
  idwcai.$clinit_JsTimeZone();
  var suffixlength, suffixlength0, upper;
  if (timeZoneAbbreviation == null) {
    return true;
  }
  upper = ji.uncheckedCast(timeZoneAbbreviation).toUpperCase();
  return (
    (suffixlength0 = ji.uncheckedCast("ST").length),
    !(
      jl.$equals_12(
        ji
          .uncheckedCast(upper)
          .substr(
            ji.uncheckedCast(upper).length - suffixlength0,
            suffixlength0
          ),
        "ST"
      ) ||
      ((suffixlength = ji.uncheckedCast("DT").length),
      jl.$equals_12(
        ji
          .uncheckedCast(upper)
          .substr(ji.uncheckedCast(upper).length - suffixlength, suffixlength),
        "DT"
      ))
    )
  );
};
defineClass(4, 1, { 4: 1 }, idwcai.JsTimeZone);
defineProperties(_, {
  id: {
    get: function getID() {
      return this.tz.timezoneID;
    },
  },
});
defineProperties(_, {
  standardOffset: {
    get: function getStandardOffset() {
      return this.tz.standardOffset_0;
    },
  },
});
cggl.Lio_deephaven_web_client_api_i18n_JsTimeZone_2_classLit = createForClass(
  "io.deephaven.web.client.api.i18n",
  "JsTimeZone",
  4
);
idwcai2.$$init_28 = function $$init_28(this$static) {};
idwcai2.$race = function $race(this$static, racedCall) {
  var raced;
  raced = idwca.$apply_4(racedCall, this$static.ticket_0);
  return new idwcai2.TicketAndPromise(
    this$static.ticket_0,
    $wnd.Promise.all([this$static.promise, raced]).then(
      makeLambdaFunction(
        idwcai2.TicketAndPromise$lambda$0$Type.prototype.onInvoke_5,
        idwcai2.TicketAndPromise$lambda$0$Type,
        [raced]
      )
    ),
    this$static.connection
  );
};
idwcai2.$release_0 = function $release_0(this$static) {
  if (!this$static.released) {
    this$static.released = true;
    idwca.$releaseTicket(this$static.connection, this$static.ticket_0);
  }
};
idwcai2.TicketAndPromise = function TicketAndPromise(
  ticket,
  promise,
  connection
) {
  idwcai2.$$init_28(this);
  this.ticket_0 = ticket;
  this.promise = promise;
  this.connection = connection;
};
idwcai2.TicketAndPromise_0 = function TicketAndPromise_0(ticket, connection) {
  idwcai2.TicketAndPromise.call(
    this,
    ticket,
    $wnd.Promise.resolve(ticket),
    connection
  );
};
defineClass(90, 1, {}, idwcai2.TicketAndPromise, idwcai2.TicketAndPromise_0);
_.then = function then(onFulfilled) {
  return new idwcai2.TicketAndPromise(
    this.ticket_0,
    this.promise.then(onFulfilled),
    this.connection
  );
};
_.then = function then_0(onFulfilled, onRejected) {
  return this.promise.then(onFulfilled, onRejected);
};
_.released = false;
cggl.Lio_deephaven_web_client_api_impl_TicketAndPromise_2_classLit =
  createForClass("io.deephaven.web.client.api.impl", "TicketAndPromise", 90);
idwcai2.$getClass_266 = function $getClass_266() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai2.TicketAndPromise$lambda$0$Type =
  function TicketAndPromise$lambda$0$Type(raced_0) {
    this.raced_0 = raced_0;
  };
defineClass(
  1402,
  $wnd.Function,
  $intern_36,
  idwcai2.TicketAndPromise$lambda$0$Type
);
_.onInvoke_5 = function onInvoke_154(arg0) {
  var lastArg;
  return (lastArg = this.raced_0), castToArray(arg0), lastArg;
};
idwcai3.$addRows = function $addRows(this$static, rows_0, userTimeZone) {
  var columnArray, data_0, i, j, name_0, names, types;
  names = castTo(
    jus.$toArray_6(
      jus.$map_0(
        ju.stream_4(idwca.$lastVisibleState(this$static.table_0).columns_0),
        new idwcai3.JsInputTable$0methodref$getName$Type()
      ),
      new idwcai3.JsInputTable$1methodref$lambda$1$Type()
    ),
    12
  );
  types = castTo(
    jus.$toArray_6(
      jus.$map_0(
        ju.stream_4(idwca.$lastVisibleState(this$static.table_0).columns_0),
        new idwcai3.JsInputTable$2methodref$getType$Type()
      ),
      new idwcai3.JsInputTable$3methodref$lambda$1$Type()
    ),
    12
  );
  data_0 = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_41,
    5,
    names.length,
    3,
    2
  );
  for (i = 0; i < names.length; i++) {
    name_0 = names[i];
    columnArray = initUnidimensionalArray(
      cggl.Ljava_lang_Object_2_classLit,
      $intern_7,
      1,
      rows_0.length,
      5,
      1
    );
    for (j = 0; j < rows_0.length; j++) {
      columnArray[j] = jb.$get_23(rows_0[j], name_0);
    }
    data_0[i] = columnArray;
  }
  return idwca
    .$newTable(
      this$static.table_0.workerConnection,
      names,
      types,
      data_0,
      userTimeZone
    )
    .then(
      makeLambdaFunction(
        idwcai3.JsInputTable$4methodref$addTable$Type.prototype.onInvoke_5,
        idwcai3.JsInputTable$4methodref$addTable$Type,
        [this$static]
      )
    );
};
idwcai3.$addTable = function $addTable(this$static, tableToAdd) {
  return idwcai3.$addTables(
    this$static,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_JsTable_2_classLit,
        1
      ),
      $intern_57,
      13,
      0,
      [tableToAdd]
    )
  );
};
idwcai3.$addTables = function $addTables(this$static, tablesToAdd) {
  var closeIntermediateTable, mergePromise;
  if (tablesToAdd.length == 0) {
    return $wnd.Promise.reject("Must provide at least one table");
  }
  if (tablesToAdd.length == 1) {
    mergePromise = $wnd.Promise.resolve(tablesToAdd[0]);
    closeIntermediateTable = false;
  } else {
    mergePromise = idwca.$mergeTables(
      this$static.table_0.workerConnection,
      tablesToAdd
    );
    closeIntermediateTable = true;
  }
  return mergePromise
    .then(
      makeLambdaFunction(
        idwcai3.JsInputTable$lambda$5$Type.prototype.onInvoke_5,
        idwcai3.JsInputTable$lambda$5$Type,
        [this$static, closeIntermediateTable]
      )
    )
    .then(
      makeLambdaFunction(
        idwcai3.JsInputTable$lambda$10$Type.prototype.onInvoke_5,
        idwcai3.JsInputTable$lambda$10$Type,
        [this$static]
      )
    );
};
idwcai3.$deleteTables = function $deleteTables(this$static, tablesToDelete) {
  var batch,
    cleanups,
    deleteRequest,
    failureToReport,
    i,
    mergeRequest,
    onlyTable,
    ticketToDelete,
    toDelete,
    view;
  if (tablesToDelete.length == 0) {
    return $wnd.Promise.resolve(this$static);
  }
  cleanups = new ju.ArrayList();
  if (tablesToDelete.length == 1) {
    onlyTable = tablesToDelete[0];
    if (
      idwca.$lastVisibleState(onlyTable).columns_0.length ==
        this$static.keys_0.length &&
      idwca.$findColumns(onlyTable, this$static.keys_0).length ==
        this$static.keys_0.length
    ) {
      ticketToDelete = idwca.$makeTicket(idwca.$state(onlyTable).handle);
      failureToReport = $wnd.Promise.resolve(null);
    } else {
      ticketToDelete = idwca.$newTicket(
        this$static.table_0.workerConnection.config
      );
      ju.$add(
        cleanups,
        makeLambdaFunction(
          idwcai3.JsInputTable$lambda$11$Type.prototype.run,
          idwcai3.JsInputTable$lambda$11$Type,
          [this$static, ticketToDelete]
        )
      );
      view =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.SelectOrUpdateRequest();
      view.setSourceId(
        idwca.$makeTableReference(idwca.$state(onlyTable).handle)
      );
      view.setResultId(ticketToDelete);
      view.setColumnSpecsList(this$static.keys_0);
      failureToReport = new $wnd.Promise(
        makeLambdaFunction(
          idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
          idwca.Callbacks$lambda$4$Type,
          [new idwcai3.JsInputTable$lambda$12$Type(this$static, view)]
        )
      );
    }
  } else {
    ticketToDelete = idwca.$newTicket(
      this$static.table_0.workerConnection.config
    );
    ju.$add(
      cleanups,
      makeLambdaFunction(
        idwcai3.JsInputTable$lambda$14$Type.prototype.run,
        idwcai3.JsInputTable$lambda$14$Type,
        [this$static, ticketToDelete]
      )
    );
    batch = new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest();
    for (i = 0; i < tablesToDelete.length; i++) {
      toDelete = tablesToDelete[i];
      view =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.SelectOrUpdateRequest();
      view.setSourceId(
        idwca.$makeTableReference(idwca.$state(toDelete).handle)
      );
      view.setColumnSpecsList(this$static.keys_0);
      batch
        .addOps(
          new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation()
        )
        .setView(view);
    }
    mergeRequest =
      new $wnd.dhinternal.io.deephaven.proto.table_pb.MergeTablesRequest();
    mergeRequest.setSourceIdsList(
      castToJsArray(
        jus
          .range_2(tablesToDelete.length)
          .mapToObj(new idwcai3.JsInputTable$lambda$15$Type())
          .toArray_1(new idwcai3.JsInputTable$7methodref$lambda$16$Type())
      )
    );
    mergeRequest.setResultId(ticketToDelete);
    batch
      .addOps(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest.Operation()
      )
      .setMerge(mergeRequest);
    failureToReport = new $wnd.Promise(
      makeLambdaFunction(
        idwcai3.JsInputTable$lambda$17$Type.prototype.onInvoke_6,
        idwcai3.JsInputTable$lambda$17$Type,
        [this$static, batch]
      )
    );
  }
  deleteRequest =
    new $wnd.dhinternal.io.deephaven.proto.inputtable_pb.DeleteTableRequest();
  deleteRequest.setInputTable(
    idwca.$makeTicket(idwca.$getHeadState(this$static.table_0).handle)
  );
  deleteRequest.setTableToRemove(ticketToDelete);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcai3.JsInputTable$lambda$20$Type(this$static, deleteRequest)]
    )
  ).then(
    makeLambdaFunction(
      idwcai3.JsInputTable$lambda$22$Type.prototype.onInvoke_5,
      idwcai3.JsInputTable$lambda$22$Type,
      [this$static, cleanups]
    ),
    makeLambdaFunction(
      idwcai3.JsInputTable$lambda$23$Type.prototype.onInvoke_5,
      idwcai3.JsInputTable$lambda$23$Type,
      [cleanups, failureToReport]
    )
  );
};
idwcai3.$lambda$11_0 = function $lambda$11_0(this$static, ticketToDelete_1) {
  idwca.$releaseTicket(this$static.table_0.workerConnection, ticketToDelete_1);
};
idwcai3.$lambda$12_1 = function $lambda$12_1(this$static, view_1, c_1) {
  return this$static.table_0.workerConnection.tableServiceClient.view(
    view_1,
    this$static.table_0.workerConnection.metadata_0,
    makeLambdaFunction(
      idwcai3.JsInputTable$6methodref$apply$Type.prototype.onInvoke_59,
      idwcai3.JsInputTable$6methodref$apply$Type,
      [c_1]
    )
  );
};
idwcai3.$lambda$14_0 = function $lambda$14_0(this$static, ticketToDelete_1) {
  idwca.$releaseTicket(this$static.table_0.workerConnection, ticketToDelete_1);
};
idwcai3.$lambda$17_1 = function $lambda$17_1(
  this$static,
  batch_1,
  resolve_1,
  reject_2
) {
  var wrapper;
  wrapper = castToJsObject(
    this$static.table_0.workerConnection.tableServiceClient.batch(
      batch_1,
      this$static.table_0.workerConnection.metadata_0
    )
  );
  wrapper.on(
    "data",
    castToFunction(
      makeLambdaFunction(
        idwcai3.JsInputTable$lambda$18$Type.prototype.apply_3,
        idwcai3.JsInputTable$lambda$18$Type,
        [reject_2]
      )
    )
  );
  wrapper.on(
    "end",
    castToFunction(
      makeLambdaFunction(
        idwcai3.JsInputTable$lambda$19$Type.prototype.apply_3,
        idwcai3.JsInputTable$lambda$19$Type,
        [resolve_1]
      )
    )
  );
};
idwcai3.$lambda$20 = function $lambda$20(this$static, deleteRequest_1, c_1) {
  this$static.table_0.workerConnection.inputTableServiceClient.deleteTableFromInputTable(
    deleteRequest_1,
    this$static.table_0.workerConnection.metadata_0,
    makeLambdaFunction(
      idwcai3.JsInputTable$8methodref$apply$Type.prototype.onInvoke_28,
      idwcai3.JsInputTable$8methodref$apply$Type,
      [c_1]
    )
  );
};
idwcai3.$lambda$22_0 = function $lambda$22_0(this$static, cleanups_1) {
  ju.$forEach_3(cleanups_1, new idwcai3.JsInputTable$9methodref$run$Type());
  return $wnd.Promise.resolve(this$static);
};
idwcai3.$lambda$5_4 = function $lambda$5_4(
  this$static,
  closeIntermediateTable_1,
  merged_1
) {
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcai3.JsInputTable$lambda$6$Type(this$static, merged_1)]
    )
  ).then(
    makeLambdaFunction(
      idwcai3.JsInputTable$lambda$8$Type.prototype.onInvoke_5,
      idwcai3.JsInputTable$lambda$8$Type,
      [closeIntermediateTable_1, merged_1]
    ),
    makeLambdaFunction(
      idwcai3.JsInputTable$lambda$9$Type.prototype.onInvoke_5,
      idwcai3.JsInputTable$lambda$9$Type,
      [closeIntermediateTable_1, merged_1]
    )
  );
};
idwcai3.$lambda$6_2 = function $lambda$6_2(this$static, merged_1, c_1) {
  var addTableRequest;
  addTableRequest =
    new $wnd.dhinternal.io.deephaven.proto.inputtable_pb.AddTableRequest();
  addTableRequest.setInputTable(
    idwca.$makeTicket(idwca.$getHeadState(this$static.table_0).handle)
  );
  addTableRequest.setTableToAdd(
    idwca.$makeTicket(idwca.$getHeadState(merged_1).handle)
  );
  this$static.table_0.workerConnection.inputTableServiceClient.addTableToInputTable(
    addTableRequest,
    this$static.table_0.workerConnection.metadata_0,
    makeLambdaFunction(
      idwcai3.JsInputTable$5methodref$apply$Type.prototype.onInvoke_27,
      idwcai3.JsInputTable$5methodref$apply$Type,
      [c_1]
    )
  );
};
idwcai3.JsInputTable = function JsInputTable(from, keys_0, values) {
  this.table_0 = from;
  this.keys_0 = castTo($wnd.Object.freeze(keys_0), 12);
  this.values_0 = castTo($wnd.Object.freeze(values), 12);
};
idwcai3.lambda$15_2 = function lambda$15_2(i_0) {
  var ref;
  ref = new $wnd.dhinternal.io.deephaven.proto.table_pb.TableReference();
  ref.setBatchOffset(i_0);
  return ref;
};
idwcai3.lambda$18 = function lambda$18(reject_0, response_1) {
  response_1.getSuccess() || reject_0(response_1.getErrorInfo());
};
idwcai3.lambda$23 = function lambda$23(cleanups_0, failureToReport_1, err_2) {
  ju.$forEach_3(cleanups_0, new idwcai3.JsInputTable$10methodref$run$Type());
  return failureToReport_1.then(
    makeLambdaFunction(
      idwcai3.JsInputTable$lambda$26$Type.prototype.onInvoke_5,
      idwcai3.JsInputTable$lambda$26$Type,
      [err_2]
    )
  );
};
idwcai3.lambda$8_1 = function lambda$8_1(
  closeIntermediateTable_0,
  merged_1,
  success_2
) {
  closeIntermediateTable_0 && idwca.$close_0(merged_1);
  return $wnd.Promise.resolve(success_2);
};
idwcai3.lambda$9_0 = function lambda$9_0(
  closeIntermediateTable_0,
  merged_1,
  failure_2
) {
  closeIntermediateTable_0 && idwca.$close_0(merged_1);
  return $wnd.Promise.reject(failure_2);
};
defineClass(753, 1, {}, idwcai3.JsInputTable);
_.addRow = function addRow(row, userTimeZone) {
  return idwcai3.$addRows(this, [row], userTimeZone);
};
_.addRows = function addRows(rows_0, userTimeZone) {
  return idwcai3.$addRows(this, rows_0, userTimeZone);
};
_.addTable = function addTable(tableToAdd) {
  return idwcai3.$addTable(this, tableToAdd);
};
_.addTables = function addTables(tablesToAdd) {
  return idwcai3.$addTables(this, tablesToAdd);
};
_.deleteTable = function deleteTable(tableToDelete) {
  return idwcai3.$deleteTables(
    this,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_JsTable_2_classLit,
        1
      ),
      $intern_57,
      13,
      0,
      [tableToDelete]
    )
  );
};
_.deleteTables = function deleteTables(tablesToDelete) {
  return idwcai3.$deleteTables(this, tablesToDelete);
};
defineProperties(_, {
  keyColumns: {
    get: function getKeyColumns_0() {
      return idwca.$findColumns(this.table_0, this.keys_0);
    },
  },
});
defineProperties(_, {
  keys: {
    get: function getKeys_0() {
      return this.keys_0;
    },
  },
});
defineProperties(_, {
  table: {
    get: function getTable_0() {
      return this.table_0;
    },
  },
});
defineProperties(_, {
  valueColumns: {
    get: function getValueColumns() {
      return idwca.$findColumns(this.table_0, this.values_0);
    },
  },
});
defineProperties(_, {
  values: {
    get: function getValues() {
      return this.values_0;
    },
  },
});
cggl.Lio_deephaven_web_client_api_input_JsInputTable_2_classLit =
  createForClass("io.deephaven.web.client.api.input", "JsInputTable", 753);
idwcai3.JsInputTable$0methodref$getName$Type =
  function JsInputTable$0methodref$getName$Type() {};
defineClass(754, 1, {}, idwcai3.JsInputTable$0methodref$getName$Type);
_.apply_1 = function apply_130(arg0) {
  return castTo(arg0, 21).name_0;
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$0methodref$getName$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/0methodref$getName$Type",
    754
  );
idwcai3.JsInputTable$10methodref$run$Type =
  function JsInputTable$10methodref$run$Type() {};
defineClass(764, 1, $intern_19, idwcai3.JsInputTable$10methodref$run$Type);
_.accept = function accept_43(arg0) {
  castToFunction(arg0)();
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$10methodref$run$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/10methodref$run$Type",
    764
  );
idwcai3.JsInputTable$1methodref$lambda$1$Type =
  function JsInputTable$1methodref$lambda$1$Type() {};
defineClass(755, 1, {}, idwcai3.JsInputTable$1methodref$lambda$1$Type);
_.apply_2 = function apply_131(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$1methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/1methodref$lambda$1$Type",
    755
  );
idwcai3.JsInputTable$2methodref$getType$Type =
  function JsInputTable$2methodref$getType$Type() {};
defineClass(756, 1, {}, idwcai3.JsInputTable$2methodref$getType$Type);
_.apply_1 = function apply_132(arg0) {
  return castTo(arg0, 21).type_0;
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$2methodref$getType$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/2methodref$getType$Type",
    756
  );
idwcai3.JsInputTable$3methodref$lambda$1$Type =
  function JsInputTable$3methodref$lambda$1$Type() {};
defineClass(757, 1, {}, idwcai3.JsInputTable$3methodref$lambda$1$Type);
_.apply_2 = function apply_133(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$3methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/3methodref$lambda$1$Type",
    757
  );
idwcai3.$getClass_267 = function $getClass_267() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$4methodref$addTable$Type =
  function JsInputTable$4methodref$addTable$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1547,
  $wnd.Function,
  $intern_36,
  idwcai3.JsInputTable$4methodref$addTable$Type
);
_.onInvoke_5 = function onInvoke_155(arg0) {
  return idwcai3.$addTables(
    this.$$outer_0,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_JsTable_2_classLit,
        1
      ),
      $intern_57,
      13,
      0,
      [castTo(arg0, 13)]
    )
  );
};
idwcai3.$getClass_268 = function $getClass_268() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$5methodref$apply$Type =
  function JsInputTable$5methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1559,
  $wnd.Function,
  {},
  idwcai3.JsInputTable$5methodref$apply$Type
);
_.onInvoke_27 = function onInvoke_156(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcai3.$getClass_269 = function $getClass_269() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$6methodref$apply$Type =
  function JsInputTable$6methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1560,
  $wnd.Function,
  {},
  idwcai3.JsInputTable$6methodref$apply$Type
);
_.onInvoke_59 = function onInvoke_157(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcai3.JsInputTable$7methodref$lambda$16$Type =
  function JsInputTable$7methodref$lambda$16$Type() {};
defineClass(761, 1, {}, idwcai3.JsInputTable$7methodref$lambda$16$Type);
_.apply_2 = function apply_134(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$7methodref$lambda$16$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/7methodref$lambda$16$Type",
    761
  );
idwcai3.$getClass_270 = function $getClass_270() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$8methodref$apply$Type =
  function JsInputTable$8methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1563,
  $wnd.Function,
  {},
  idwcai3.JsInputTable$8methodref$apply$Type
);
_.onInvoke_28 = function onInvoke_158(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcai3.JsInputTable$9methodref$run$Type =
  function JsInputTable$9methodref$run$Type() {};
defineClass(763, 1, $intern_19, idwcai3.JsInputTable$9methodref$run$Type);
_.accept = function accept_44(arg0) {
  castToFunction(arg0)();
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$9methodref$run$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/9methodref$run$Type",
    763
  );
idwcai3.$getClass_271 = function $getClass_271() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$10$Type = function JsInputTable$lambda$10$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(
  1549,
  $wnd.Function,
  $intern_36,
  idwcai3.JsInputTable$lambda$10$Type
);
_.onInvoke_5 = function onInvoke_159(arg0) {
  return $wnd.Promise.resolve(this.$$outer_0);
};
idwcai3.$getClass_272 = function $getClass_272() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$11$Type = function JsInputTable$lambda$11$Type(
  $$outer_0,
  ticketToDelete_1
) {
  this.$$outer_0 = $$outer_0;
  this.ticketToDelete_1 = ticketToDelete_1;
};
defineClass(
  1550,
  $wnd.Function,
  $intern_49,
  idwcai3.JsInputTable$lambda$11$Type
);
_.run = function run_26() {
  idwcai3.$lambda$11_0(this.$$outer_0, this.ticketToDelete_1);
};
idwcai3.JsInputTable$lambda$12$Type = function JsInputTable$lambda$12$Type(
  $$outer_0,
  view_1
) {
  this.$$outer_0 = $$outer_0;
  this.view_1 = view_1;
};
defineClass(759, 1, $intern_19, idwcai3.JsInputTable$lambda$12$Type);
_.accept = function accept_45(arg0) {
  idwcai3.$lambda$12_1(this.$$outer_0, this.view_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$lambda$12$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/lambda$12$Type",
    759
  );
idwcai3.$getClass_273 = function $getClass_273() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$14$Type = function JsInputTable$lambda$14$Type(
  $$outer_0,
  ticketToDelete_1
) {
  this.$$outer_0 = $$outer_0;
  this.ticketToDelete_1 = ticketToDelete_1;
};
defineClass(
  1551,
  $wnd.Function,
  $intern_49,
  idwcai3.JsInputTable$lambda$14$Type
);
_.run = function run_27() {
  idwcai3.$lambda$14_0(this.$$outer_0, this.ticketToDelete_1);
};
idwcai3.JsInputTable$lambda$15$Type = function JsInputTable$lambda$15$Type() {};
defineClass(760, 1, {}, idwcai3.JsInputTable$lambda$15$Type);
_.apply_2 = function apply_135(arg0) {
  return idwcai3.lambda$15_2(arg0);
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$lambda$15$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/lambda$15$Type",
    760
  );
idwcai3.$getClass_274 = function $getClass_274() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$17$Type = function JsInputTable$lambda$17$Type(
  $$outer_0,
  batch_1
) {
  this.$$outer_0 = $$outer_0;
  this.batch_1 = batch_1;
};
defineClass(1552, $wnd.Function, {}, idwcai3.JsInputTable$lambda$17$Type);
_.onInvoke_6 = function onInvoke_160(arg0, arg1) {
  idwcai3.$lambda$17_1(this.$$outer_0, this.batch_1, arg0, arg1);
};
idwcai3.$getClass_275 = function $getClass_275() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$18$Type = function JsInputTable$lambda$18$Type(
  reject_0
) {
  this.reject_0 = reject_0;
};
defineClass(
  1561,
  $wnd.Function,
  $intern_48,
  idwcai3.JsInputTable$lambda$18$Type
);
_.apply_3 = function apply_136(arg0) {
  idwcai3.lambda$18(
    this.reject_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableCreationResponse
    )
  );
};
idwcai3.$getClass_276 = function $getClass_276() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$19$Type = function JsInputTable$lambda$19$Type(
  resolve_0
) {
  this.resolve_0 = resolve_0;
};
defineClass(
  1562,
  $wnd.Function,
  $intern_48,
  idwcai3.JsInputTable$lambda$19$Type
);
_.apply_3 = function apply_137(arg0) {
  var lastArg;
  ((lastArg = this.resolve_0), arg0, lastArg)(null);
};
idwcai3.JsInputTable$lambda$20$Type = function JsInputTable$lambda$20$Type(
  $$outer_0,
  deleteRequest_1
) {
  this.$$outer_0 = $$outer_0;
  this.deleteRequest_1 = deleteRequest_1;
};
defineClass(762, 1, $intern_19, idwcai3.JsInputTable$lambda$20$Type);
_.accept = function accept_46(arg0) {
  idwcai3.$lambda$20(
    this.$$outer_0,
    this.deleteRequest_1,
    castToFunction(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$lambda$20$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/lambda$20$Type",
    762
  );
idwcai3.$getClass_277 = function $getClass_277() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$22$Type = function JsInputTable$lambda$22$Type(
  $$outer_0,
  cleanups_1
) {
  this.$$outer_0 = $$outer_0;
  this.cleanups_1 = cleanups_1;
};
defineClass(
  1554,
  $wnd.Function,
  $intern_36,
  idwcai3.JsInputTable$lambda$22$Type
);
_.onInvoke_5 = function onInvoke_161(arg0) {
  return idwcai3.$lambda$22_0(this.$$outer_0, this.cleanups_1);
};
idwcai3.$getClass_278 = function $getClass_278() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$23$Type = function JsInputTable$lambda$23$Type(
  cleanups_0,
  failureToReport_1
) {
  this.cleanups_0 = cleanups_0;
  this.failureToReport_1 = failureToReport_1;
};
defineClass(1555, $wnd.Function, {}, idwcai3.JsInputTable$lambda$23$Type);
_.onInvoke_5 = function onInvoke_162(arg0) {
  return idwcai3.lambda$23(this.cleanups_0, this.failureToReport_1, arg0);
};
idwcai3.$getClass_279 = function $getClass_279() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$26$Type = function JsInputTable$lambda$26$Type(
  err_0
) {
  this.err_0 = err_0;
};
defineClass(
  1564,
  $wnd.Function,
  $intern_36,
  idwcai3.JsInputTable$lambda$26$Type
);
_.onInvoke_5 = function onInvoke_163(arg0) {
  return $wnd.Promise.reject(this.err_0);
};
idwcai3.$getClass_280 = function $getClass_280() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$5$Type = function JsInputTable$lambda$5$Type(
  $$outer_0,
  closeIntermediateTable_1
) {
  this.$$outer_0 = $$outer_0;
  this.closeIntermediateTable_1 = closeIntermediateTable_1;
};
defineClass(
  1548,
  $wnd.Function,
  $intern_36,
  idwcai3.JsInputTable$lambda$5$Type
);
_.onInvoke_5 = function onInvoke_164(arg0) {
  return idwcai3.$lambda$5_4(
    this.$$outer_0,
    this.closeIntermediateTable_1,
    castTo(arg0, 13)
  );
};
_.closeIntermediateTable_1 = false;
idwcai3.JsInputTable$lambda$6$Type = function JsInputTable$lambda$6$Type(
  $$outer_0,
  merged_1
) {
  this.$$outer_0 = $$outer_0;
  this.merged_1 = merged_1;
};
defineClass(758, 1, $intern_19, idwcai3.JsInputTable$lambda$6$Type);
_.accept = function accept_47(arg0) {
  idwcai3.$lambda$6_2(this.$$outer_0, this.merged_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_input_JsInputTable$lambda$6$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.input",
    "JsInputTable/lambda$6$Type",
    758
  );
idwcai3.$getClass_281 = function $getClass_281() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$8$Type = function JsInputTable$lambda$8$Type(
  closeIntermediateTable_0,
  merged_1
) {
  this.closeIntermediateTable_0 = closeIntermediateTable_0;
  this.merged_1 = merged_1;
};
defineClass(
  1556,
  $wnd.Function,
  $intern_36,
  idwcai3.JsInputTable$lambda$8$Type
);
_.onInvoke_5 = function onInvoke_165(arg0) {
  return idwcai3.lambda$8_1(this.closeIntermediateTable_0, this.merged_1, arg0);
};
_.closeIntermediateTable_0 = false;
idwcai3.$getClass_282 = function $getClass_282() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcai3.JsInputTable$lambda$9$Type = function JsInputTable$lambda$9$Type(
  closeIntermediateTable_0,
  merged_1
) {
  this.closeIntermediateTable_0 = closeIntermediateTable_0;
  this.merged_1 = merged_1;
};
defineClass(1557, $wnd.Function, {}, idwcai3.JsInputTable$lambda$9$Type);
_.onInvoke_5 = function onInvoke_166(arg0) {
  return idwcai3.lambda$9_0(this.closeIntermediateTable_0, this.merged_1, arg0);
};
_.closeIntermediateTable_0 = false;
idwcal.$getClass_283 = function $getClass_283() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcal.HasLifecycle$lambda$0$Type = function HasLifecycle$lambda$0$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1201, $wnd.Function, {}, idwcal.HasLifecycle$lambda$0$Type);
_.onInvoke_6 = function onInvoke_167(arg0, arg1) {
  idwcal.$lambda$0(this.$$outer_0, arg0, arg1);
};
idwcal.$getClass_284 = function $getClass_284() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcal.HasLifecycle$lambda$1$Type = function HasLifecycle$lambda$1$Type(
  resolve_0
) {
  this.resolve_0 = resolve_0;
};
defineClass(1202, $wnd.Function, $intern_35, idwcal.HasLifecycle$lambda$1$Type);
_.onEvent = function onEvent_14(arg0) {
  this.resolve_0.call(null, null);
};
idwcal.$getClass_285 = function $getClass_285() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcal.HasLifecycle$lambda$2$Type = function HasLifecycle$lambda$2$Type(
  reject_0
) {
  this.reject_0 = reject_0;
};
defineClass(1203, $wnd.Function, $intern_35, idwcal.HasLifecycle$lambda$2$Type);
_.onEvent = function onEvent_15(arg0) {
  this.reject_0.call(null, arg0.detail);
};
idwcal.$getClass_286 = function $getClass_286() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcal.HasLifecycle$lambda$3$Type = function HasLifecycle$lambda$3$Type(
  reject_0
) {
  this.reject_0 = reject_0;
};
defineClass(1204, $wnd.Function, $intern_35, idwcal.HasLifecycle$lambda$3$Type);
_.onEvent = function onEvent_16(arg0) {
  this.reject_0.call(null, arg0.detail);
};
idwcap.$clinit_JsDataHandler = function $clinit_JsDataHandler() {
  idwcap.$clinit_JsDataHandler = emptyMethod;
  idwcap.STRING_0 = new idwcap.JsDataHandler$1(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Utf8,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["java.lang.String", "string"]
    )
  );
  idwcap.DATE_TIME = new idwcap.JsDataHandler$2(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Int,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["java.time.Instant", "datetime", "java.time.ZonedDateTime"]
    )
  );
  idwcap.INTEGER = new idwcap.JsDataHandler$3(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Int,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["int"]
    )
  );
  idwcap.SHORT = new idwcap.JsDataHandler$4(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Int,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["short"]
    )
  );
  idwcap.LONG_0 = new idwcap.JsDataHandler$5(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Int,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["long"]
    )
  );
  idwcap.BYTE = new idwcap.JsDataHandler$6(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Int,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["byte"]
    )
  );
  idwcap.CHAR = new idwcap.JsDataHandler$7(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Int,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["char"]
    )
  );
  idwcap.FLOAT = new idwcap.JsDataHandler$8(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.FloatingPoint,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["float"]
    )
  );
  idwcap.DOUBLE_0 = new idwcap.JsDataHandler$9(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.FloatingPoint,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["double"]
    )
  );
  idwcap.BOOLEAN_0 = new idwcap.JsDataHandler$10(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Bool,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["boolean", "bool", "java.lang.Boolean"]
    )
  );
  idwcap.BIG_DECIMAL = new idwcap.JsDataHandler$11(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Binary,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["java.util.BigDecimal"]
    )
  );
  idwcap.BIG_INTEGER = new idwcap.JsDataHandler$12(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.Binary,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["java.util.BigInteger"]
    )
  );
  idwcap.LOCAL_DATE = new idwcap.JsDataHandler$13(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.FixedSizeBinary,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["java.time.LocalDate", "localdate"]
    )
  );
  idwcap.LOCAL_TIME = new idwcap.JsDataHandler$14(
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Type.FixedSizeBinary,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
      $intern_8,
      2,
      6,
      ["java.time.LocalTime", "localtime"]
    )
  );
  idwcap.EMPTY = new $wnd.Uint8Array(0);
  idwcap.SEPARATOR_INDEX = jl.$indexOf(
    "yyyy-MM-dd'T'HH:mm:ss",
    fromCodePoint(84)
  );
};
idwcap.JsDataHandler = function JsDataHandler(
  enum$name,
  enum$ordinal,
  arrowTypeType,
  typeNames
) {
  var existing, i;
  Enum.call(this, enum$name, enum$ordinal);
  this.arrowTypeType = arrowTypeType;
  if (typeNames.length <= 0) {
    debugger;
    throw toJs(new jl.AssertionError_0("Must have at least one name"));
  }
  this.deephavenType = typeNames[0];
  for (i = 0; i < typeNames.length; i++) {
    existing = castTo(
      ju.$putStringValue(
        (idwcap.$clinit_JsDataHandler$HandlersHolder(), idwcap.HANDLERS),
        typeNames[i],
        this
      ),
      42
    );
    if (existing) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "Handler already registered for type " +
            typeNames[i] +
            ": " +
            (this.name_0 != null ? this.name_0 : "" + this.ordinal_0)
        )
      );
    }
  }
};
idwcap.bufferFromBitset = function bufferFromBitset(elementCount, bitset) {
  var expectedByteLength, nullsAsByteArray, nullsAsTypedArray;
  nullsAsByteArray = ju.$toByteArray(bitset);
  expectedByteLength = ((elementCount + 7) / 8) | 0;
  nullsAsTypedArray = idwcap.makeBuffer(expectedByteLength);
  nullsAsTypedArray.set(nullsAsByteArray);
  return nullsAsTypedArray;
};
idwcap.doubleFromData_0 = function doubleFromData_0(data_0) {
  var asString;
  if (data_0 == null) {
    return null;
  }
  if (jl.$equals_12(typeof data_0, "number")) {
    return ji.uncheckedCast(
      (jb.checkCriticalType_0(typeof data_0 == "number"), jb.asDouble(data_0))
    );
  }
  if (instanceOf(data_0, 39)) {
    return ji.uncheckedCast(toDouble_0(castTo(data_0, 39).value_0));
  }
  asString = jl.$replaceAll(jl.$trim(toString_7(data_0)), ",", "");
  if (ji.uncheckedCast(asString).length == 0) {
    return null;
  }
  return ji.uncheckedCast(jl.__parseAndValidateDouble(asString));
};
idwcap.lambda$0_6 = function lambda$0_6(type_0) {
  idwcap.$clinit_JsDataHandler();
  throw toJs(
    new jl.IllegalStateException_0("No handler registered for type " + type_0)
  );
};
idwcap.makeBuffer = function makeBuffer(length_0) {
  idwcap.$clinit_JsDataHandler();
  var bytesExtended;
  bytesExtended = length_0 & 7;
  bytesExtended > 0 && (length_0 += 8 - bytesExtended);
  return new $wnd.Uint8Array(length_0);
};
idwcap.makeBuffer_0 = function makeBuffer_0(
  elementCount,
  bytesPerElement,
  constructor_0
) {
  return constructor_0(
    idwcap.makeBuffer(elementCount * round_int(bytesPerElement)).buffer
  );
};
idwcap.makeValidityBuffer = function makeValidityBuffer(
  nullCount,
  elementCount,
  nulls
) {
  return nullCount != 0
    ? idwcap.bufferFromBitset(elementCount, nulls)
    : idwcap.EMPTY;
};
idwcap.values_3 = function values_3() {
  idwcap.$clinit_JsDataHandler();
  return stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lio_deephaven_web_client_api_parse_JsDataHandler_2_classLit,
      1
    ),
    $intern_17,
    42,
    0,
    [
      idwcap.STRING_0,
      idwcap.DATE_TIME,
      idwcap.INTEGER,
      idwcap.SHORT,
      idwcap.LONG_0,
      idwcap.BYTE,
      idwcap.CHAR,
      idwcap.FLOAT,
      idwcap.DOUBLE_0,
      idwcap.BOOLEAN_0,
      idwcap.BIG_DECIMAL,
      idwcap.BIG_INTEGER,
      idwcap.LOCAL_DATE,
      idwcap.LOCAL_TIME,
    ]
  );
};
idwcap.writeSimpleNumbers = function writeSimpleNumbers(
  data_0,
  addNode,
  addBuffer,
  bytesPerElement,
  nullValue,
  bufferConstructor
) {
  var doubleFromData, i, nullCount, payload, validity;
  nullCount = 0;
  validity = new ju.BitSet_0(data_0.length);
  payload = idwcap.makeBuffer_0(
    data_0.length,
    bytesPerElement,
    bufferConstructor
  );
  for (i = 0; i < data_0.length; i++) {
    doubleFromData = idwcap.doubleFromData_0(data_0[i]);
    if (doubleFromData == null) {
      jb.$setAt(payload, i, nullValue);
      ++nullCount;
    } else {
      jb.$setAt(payload, i, doubleFromData);
      ju.$set(validity, i);
    }
  }
  idwca.$apply_3(
    addBuffer,
    idwcap.makeValidityBuffer(nullCount, data_0.length, validity)
  );
  idwca.$apply_3(addBuffer, new $wnd.Uint8Array(payload.buffer));
  idwca.$apply_2(
    addNode,
    new idwcap.JsDataHandler$Node(data_0.length, nullCount)
  );
};
defineClass(42, 37, $intern_58);
_.write_0 = function write_1(data_0, context, addNode, addBuffer) {
  throw toJs(
    new jl.UnsupportedOperationException_0(
      "Can't parse " + (this.name_0 != null ? this.name_0 : "" + this.ordinal_0)
    )
  );
};
_.arrowTypeType = 0;
idwcap.SEPARATOR_INDEX = 0;
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler",
    42,
    idwcap.values_3
  );
idwcap.JsDataHandler$1 = function JsDataHandler$1($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "STRING", 0, $anonymous0, $anonymous1);
};
defineClass(855, 42, $intern_58, idwcap.JsDataHandler$1);
_.write_0 = function write_2(data_0, context, addNode, addBuffer) {
  var bytes,
    i,
    lastArg,
    lastOffset,
    nullCount,
    payload,
    positions,
    str,
    validity;
  nullCount = 0;
  validity = new ju.BitSet_0(data_0.length);
  positions = castToNative(
    idwcap.makeBuffer_0(
      data_0.length + 1,
      4,
      makeLambdaFunction(
        idwcap.JsDataHandler$1$1methodref$ctor$Type.prototype.apply_1,
        idwcap.JsDataHandler$1$1methodref$ctor$Type,
        []
      )
    ),
    $wnd.Int32Array
  );
  payload = new idwcap.JsDataHandler$1$AppendableBuffer();
  lastOffset = 0;
  for (i = 0; i < data_0.length; i++) {
    if (data_0[i] == null) {
      ++nullCount;
      jb.$setAt(positions, i, lastOffset);
      continue;
    }
    ju.$set(validity, i);
    str = toString_7(data_0[i]);
    jb.$setAt(positions, i, lastOffset);
    bytes = ji.$getBytes_0(
      ((lastArg = str), jnc.$clinit_StandardCharsets(), lastArg)
    );
    idwcap.$append_0(payload, bytes);
    lastOffset += bytes.length;
  }
  jb.$setAt(positions, data_0.length, lastOffset);
  idwca.$apply_3(
    addBuffer,
    idwcap.makeValidityBuffer(nullCount, data_0.length, validity)
  );
  idwca.$apply_3(addBuffer, new $wnd.Uint8Array(positions.buffer));
  idwca.$apply_3(addBuffer, idwcap.$build(payload));
  idwca.$apply_2(
    addNode,
    new idwcap.JsDataHandler$Node(data_0.length, nullCount)
  );
};
_.writeType = function writeType(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Utf8.createUtf8(
    builder
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$1_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/1",
    855,
    null
  );
idwcap.$getClass_287 = function $getClass_287() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcap.JsDataHandler$1$1methodref$ctor$Type =
  function JsDataHandler$1$1methodref$ctor$Type() {};
defineClass(
  1587,
  $wnd.Function,
  $intern_34,
  idwcap.JsDataHandler$1$1methodref$ctor$Type
);
_.apply_1 = function apply_138(arg0) {
  return new $wnd.Int32Array(castToNative(arg0, $wnd.ArrayBuffer));
};
idwcap.$$init_29 = function $$init_29(this$static) {
  this$static.buffers_0 = new ju.ArrayList();
};
idwcap.$append_0 = function $append_0(this$static, bytes) {
  var bytesWritten, current, remaining, result, toWrite;
  bytesWritten = 0;
  remaining = bytes.length;
  while (remaining > 0) {
    current = castTo(
      ju.$get_18(this$static.buffers_0, this$static.buffers_0.array.length - 1),
      103
    );
    toWrite = $wnd.Math.min(remaining, current.limit - current.position_0);
    jn.$put_0(current, bytes, bytesWritten, toWrite);
    current.limit - current.position_0 == 0 &&
      ju.$add(
        this$static.buffers_0,
        ((result = jn.allocateDirect($intern_9)), result)
      );
    bytesWritten += toWrite;
    remaining -= toWrite;
  }
  if (remaining != 0) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
};
idwcap.$build = function $build(this$static) {
  var bb, buffer, i, payload, position, totalSize;
  totalSize = toInt_0(
    jus.$collect(
      jus.$mapToInt(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(this$static.buffers_0, 16)
        ),
        new idwcap.JsDataHandler$1$AppendableBuffer$0methodref$position$Type()
      )
    ).sum_0
  );
  payload = idwcap.makeBuffer(totalSize);
  position = 0;
  for (i = 0; i < this$static.buffers_0.array.length; i++) {
    bb = castTo(ju.$get_18(this$static.buffers_0, i), 103);
    buffer = new $wnd.Uint8Array(bb.byteArray.buffer, 0, bb.position_0);
    payload.set(buffer, position);
    position += buffer.length;
  }
  this$static.buffers_0.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  return payload;
};
idwcap.JsDataHandler$1$AppendableBuffer =
  function JsDataHandler$1$AppendableBuffer() {
    var result;
    idwcap.$$init_29(this);
    ju.$add(this.buffers_0, ((result = jn.allocateDirect($intern_9)), result));
  };
defineClass(856, 1, {}, idwcap.JsDataHandler$1$AppendableBuffer);
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$1$AppendableBuffer_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/1/AppendableBuffer",
    856
  );
idwcap.JsDataHandler$1$AppendableBuffer$0methodref$position$Type =
  function JsDataHandler$1$AppendableBuffer$0methodref$position$Type() {};
defineClass(
  857,
  1,
  {},
  idwcap.JsDataHandler$1$AppendableBuffer$0methodref$position$Type
);
_.applyAsInt = function applyAsInt_0(arg0) {
  return castTo(arg0, 120).position_0;
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$1$AppendableBuffer$0methodref$position$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/1/AppendableBuffer/0methodref$position$Type",
    857
  );
idwcap.JsDataHandler$10 = function JsDataHandler$10($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "BOOLEAN", 9, $anonymous0, $anonymous1);
};
defineClass(866, 42, $intern_58, idwcap.JsDataHandler$10);
_.write_0 = function write_3(data_0, context, addNode, addBuffer) {
  var boolValue, i, nullCount, payload, str, t, val, validity;
  nullCount = 0;
  validity = new ju.BitSet_0(data_0.length);
  payload = new ju.BitSet_0(data_0.length);
  for (i = 0; i < data_0.length; i++) {
    val = data_0[i];
    if (val == null) {
      boolValue = $intern_53;
    } else {
      t = typeof val;
      switch (t) {
        case "boolean":
          boolValue = jb.isFalsy(val) ? 0 : 1;
          break;
        case "number":
          boolValue = jb.asByte_0(val);
          break;
        case "string":
          str = (jb.checkCriticalType_0(typeof val == "string"), val);
          switch (ji.uncheckedCast(str).toLowerCase()) {
            case "true":
              boolValue = 1;
              break;
            case "false":
              boolValue = 0;
              break;
            case "null":
              boolValue = $intern_53;
              break;
            default:
              boolValue =
                (jl.__parseAndValidateInt(str, $intern_53, 127) << 24) >> 24;
          }

          break;
        default:
          throw toJs(
            new jl.IllegalArgumentException_0(
              "Unsupported type to handle as a boolean value " + t
            )
          );
      }
    }
    if (boolValue != 0 && boolValue != 1 && boolValue != $intern_53) {
      throw toJs(
        new jl.IllegalArgumentException_0(
          "Can't handle " + val + " as a boolean value"
        )
      );
    }
    if (boolValue != $intern_53) {
      ju.$set(validity, i);
      boolValue == 1 && ju.$set(payload, i);
    } else {
      ++nullCount;
    }
  }
  idwca.$apply_3(
    addBuffer,
    idwcap.makeValidityBuffer(nullCount, data_0.length, validity)
  );
  idwca.$apply_3(addBuffer, idwcap.bufferFromBitset(data_0.length, payload));
  idwca.$apply_2(
    addNode,
    new idwcap.JsDataHandler$Node(data_0.length, nullCount)
  );
};
_.writeType = function writeType_0(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Int.createInt(
    builder,
    8,
    true
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$10_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/10",
    866,
    null
  );
idwcap.JsDataHandler$11 = function JsDataHandler$11($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "BIG_DECIMAL", 10, $anonymous0, $anonymous1);
};
defineClass(867, 42, $intern_58, idwcap.JsDataHandler$11);
_.writeType = function writeType_1(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Binary.createBinary(
    builder
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$11_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/11",
    867,
    null
  );
idwcap.JsDataHandler$12 = function JsDataHandler$12($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "BIG_INTEGER", 11, $anonymous0, $anonymous1);
};
defineClass(868, 42, $intern_58, idwcap.JsDataHandler$12);
_.writeType = function writeType_2(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Binary.createBinary(
    builder
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$12_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/12",
    868,
    null
  );
idwcap.JsDataHandler$13 = function JsDataHandler$13($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "LOCAL_DATE", 12, $anonymous0, $anonymous1);
};
defineClass(869, 42, $intern_58, idwcap.JsDataHandler$13);
_.writeType = function writeType_3(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.FixedSizeBinary.createFixedSizeBinary(
    builder,
    6
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$13_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/13",
    869,
    null
  );
idwcap.JsDataHandler$14 = function JsDataHandler$14($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "LOCAL_TIME", 13, $anonymous0, $anonymous1);
};
defineClass(870, 42, $intern_58, idwcap.JsDataHandler$14);
_.writeType = function writeType_4(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.FixedSizeBinary.createFixedSizeBinary(
    builder,
    7
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$14_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/14",
    870,
    null
  );
idwcap.$ensureSeparator = function $ensureSeparator(s) {
  var stringBuilder;
  if (jl.$charAt_0(s, idwcap.SEPARATOR_INDEX) == 32) {
    stringBuilder = new jl.StringBuilder_1(s);
    jl.$setCharAt(stringBuilder, idwcap.SEPARATOR_INDEX, 84);
    return stringBuilder.string;
  }
  return s;
};
idwcap.$getSubsecondPattern = function $getSubsecondPattern(s) {
  var decimalIndex, i, numDigits, stringBuilder;
  decimalIndex = jl.$indexOf(s, fromCodePoint(46));
  if (decimalIndex == -1) {
    return "yyyy-MM-dd'T'HH:mm:ss";
  }
  numDigits = ji.uncheckedCast(s).length - decimalIndex - 1;
  stringBuilder = new jl.StringBuilder_0();
  for (i = 0; i < numDigits; i++) {
    stringBuilder.string += "S";
  }
  return "yyyy-MM-dd'T'HH:mm:ss." + stringBuilder;
};
idwcap.$parseDateString = function $parseDateString(str, context) {
  var dateTimeString,
    needsAdjustment,
    s,
    spaceIndex,
    suffixlength,
    timeZone,
    timeZoneString;
  s = idwcap.$ensureSeparator(str);
  spaceIndex = jl.$indexOf(s, fromCodePoint(32));
  if (spaceIndex == -1) {
    suffixlength = ji.uncheckedCast("Z").length;
    if (
      jl.$equals_12(
        ji
          .uncheckedCast(s)
          .substr(ji.uncheckedCast(s).length - suffixlength, suffixlength),
        "Z"
      )
    ) {
      dateTimeString = jl.$substring_0(s, 0, ji.uncheckedCast(s).length - 1);
      timeZoneString = "Z";
    } else {
      dateTimeString = s;
      timeZoneString = null;
    }
  } else {
    dateTimeString = ji.uncheckedCast(s).substr(0, spaceIndex);
    timeZoneString = ji.uncheckedCast(s).substr(spaceIndex + 1);
  }
  timeZone =
    timeZoneString == null
      ? context.timeZone_0.tz
      : idwcai.getTimeZone(timeZoneString).tz;
  needsAdjustment = idwcai.needsDstAdjustment(timeZoneString);
  try {
    return idwcai.$parseWithTimezoneAsLong(
      idwcai.getFormat_1(context.dateTimePattern),
      dateTimeString,
      timeZone,
      needsAdjustment
    );
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 19)) {
      context.dateTimePattern = idwcap.$getSubsecondPattern(dateTimeString);
      return idwcai.$parseWithTimezoneAsLong(
        idwcai.getFormat_1(context.dateTimePattern),
        dateTimeString,
        timeZone,
        needsAdjustment
      );
    } else throw toJs($e0);
  }
};
idwcap.JsDataHandler$2 = function JsDataHandler$2($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "DATE_TIME", 1, $anonymous0, $anonymous1);
};
defineClass(858, 42, $intern_58, idwcap.JsDataHandler$2);
_.write_0 = function write_4(data_0, context, addNode, addBuffer) {
  var dateValue, i, nullCount, payload, result, str, validity;
  nullCount = 0;
  validity = new ju.BitSet_0(data_0.length);
  payload = ((result = jn.allocateDirect(8 * data_0.length)), result);
  jn.$order(payload, (jn.$clinit_ByteOrder(), jn.LITTLE_ENDIAN));
  for (i = 0; i < data_0.length; i++) {
    if (data_0[i] == null) {
      dateValue = $intern_59;
    } else if (instanceOf(data_0[i], 39)) {
      dateValue = castTo(data_0[i], 39).value_0;
    } else if (instanceOfNative(data_0[i], $wnd.Date)) {
      dateValue = mul_0(
        $intern_37,
        fromInt(castToNative(data_0[i], $wnd.Date).getDate())
      );
    } else {
      str = jl.$trim(toString_7(data_0[i]));
      ji.uncheckedCast(str).length == 0
        ? (dateValue = $intern_59)
        : (dateValue = idwcap.$parseDateString(str, context));
    }
    eq(dateValue, $intern_59) ? ++nullCount : ju.$set(validity, i);
    jn.$putLong(payload, i * 8, dateValue);
  }
  idwca.$apply_3(
    addBuffer,
    idwcap.makeValidityBuffer(nullCount, data_0.length, validity)
  );
  idwca.$apply_3(addBuffer, new $wnd.Uint8Array(payload.byteArray.buffer));
  idwca.$apply_2(
    addNode,
    new idwcap.JsDataHandler$Node(data_0.length, nullCount)
  );
};
_.writeType = function writeType_5(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Int.createInt(
    builder,
    64,
    true
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$2_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/2",
    858,
    null
  );
idwcap.JsDataHandler$3 = function JsDataHandler$3($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "INTEGER", 2, $anonymous0, $anonymous1);
};
defineClass(859, 42, $intern_58, idwcap.JsDataHandler$3);
_.write_0 = function write_5(data_0, context, addNode, addBuffer) {
  idwcap.writeSimpleNumbers(
    data_0,
    addNode,
    addBuffer,
    (ec.$clinit_Int32Array(), ec.BYTES_PER_ELEMENT_2),
    $intern_22,
    makeLambdaFunction(
      idwcap.JsDataHandler$3$2methodref$ctor$Type.prototype.apply_1,
      idwcap.JsDataHandler$3$2methodref$ctor$Type,
      []
    )
  );
};
_.writeType = function writeType_6(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Int.createInt(
    builder,
    32,
    true
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$3_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/3",
    859,
    null
  );
idwcap.$getClass_288 = function $getClass_288() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcap.JsDataHandler$3$2methodref$ctor$Type =
  function JsDataHandler$3$2methodref$ctor$Type() {};
defineClass(
  1588,
  $wnd.Function,
  $intern_34,
  idwcap.JsDataHandler$3$2methodref$ctor$Type
);
_.apply_1 = function apply_139(arg0) {
  return new $wnd.Int32Array(castToNative(arg0, $wnd.ArrayBuffer));
};
idwcap.JsDataHandler$4 = function JsDataHandler$4($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "SHORT", 3, $anonymous0, $anonymous1);
};
defineClass(860, 42, $intern_58, idwcap.JsDataHandler$4);
_.write_0 = function write_6(data_0, context, addNode, addBuffer) {
  idwcap.writeSimpleNumbers(
    data_0,
    addNode,
    addBuffer,
    (ec.$clinit_Int16Array(), ec.BYTES_PER_ELEMENT_1),
    $intern_54,
    makeLambdaFunction(
      idwcap.JsDataHandler$4$3methodref$ctor$Type.prototype.apply_1,
      idwcap.JsDataHandler$4$3methodref$ctor$Type,
      []
    )
  );
};
_.writeType = function writeType_7(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Int.createInt(
    builder,
    16,
    true
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$4_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/4",
    860,
    null
  );
idwcap.$getClass_289 = function $getClass_289() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcap.JsDataHandler$4$3methodref$ctor$Type =
  function JsDataHandler$4$3methodref$ctor$Type() {};
defineClass(
  1589,
  $wnd.Function,
  $intern_34,
  idwcap.JsDataHandler$4$3methodref$ctor$Type
);
_.apply_1 = function apply_140(arg0) {
  return new $wnd.Int16Array(castToNative(arg0, $wnd.ArrayBuffer));
};
idwcap.JsDataHandler$5 = function JsDataHandler$5($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "LONG", 4, $anonymous0, $anonymous1);
};
defineClass(861, 42, $intern_58, idwcap.JsDataHandler$5);
_.write_0 = function write_7(data_0, context, addNode, addBuffer) {
  var i, nullCount, payload, result, str, validity, value_0;
  nullCount = 0;
  validity = new ju.BitSet_0(data_0.length);
  payload = ((result = jn.allocateDirect(8 * data_0.length)), result);
  jn.$order(payload, (jn.$clinit_ByteOrder(), jn.LITTLE_ENDIAN));
  for (i = 0; i < data_0.length; i++) {
    if (data_0[i] == null) {
      value_0 = $intern_59;
    } else if (instanceOf(data_0[i], 39)) {
      value_0 = castTo(data_0[i], 39).value_0;
    } else if (jl.$equals_12(typeof data_0[i], "string")) {
      str = jl.$replaceAll(jl.$trim(castToString(data_0[i])), ",", "");
      ji.uncheckedCast(str).length == 0
        ? (value_0 = $intern_59)
        : (value_0 = jl.__parseAndValidateLong(str));
    } else {
      value_0 = fromDouble_0(
        jl.$doubleValue(idwcap.doubleFromData_0(data_0[i]))
      );
    }
    if (eq(value_0, $intern_59)) {
      ++nullCount;
      continue;
    }
    ju.$set(validity, i);
    jn.$putLong(payload, i * 8, value_0);
  }
  idwca.$apply_3(
    addBuffer,
    idwcap.makeValidityBuffer(nullCount, data_0.length, validity)
  );
  idwca.$apply_3(addBuffer, new $wnd.Uint8Array(payload.byteArray.buffer));
  idwca.$apply_2(
    addNode,
    new idwcap.JsDataHandler$Node(data_0.length, nullCount)
  );
};
_.writeType = function writeType_8(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Int.createInt(
    builder,
    64,
    true
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$5_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/5",
    861,
    null
  );
idwcap.JsDataHandler$6 = function JsDataHandler$6($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "BYTE", 5, $anonymous0, $anonymous1);
};
defineClass(862, 42, $intern_58, idwcap.JsDataHandler$6);
_.write_0 = function write_8(data_0, context, addNode, addBuffer) {
  idwcap.writeSimpleNumbers(
    data_0,
    addNode,
    addBuffer,
    (ec.$clinit_Int8Array(), ec.BYTES_PER_ELEMENT_3),
    $intern_53,
    makeLambdaFunction(
      idwcap.JsDataHandler$6$4methodref$ctor$Type.prototype.apply_1,
      idwcap.JsDataHandler$6$4methodref$ctor$Type,
      []
    )
  );
};
_.writeType = function writeType_9(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Int.createInt(
    builder,
    8,
    true
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$6_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/6",
    862,
    null
  );
idwcap.$getClass_290 = function $getClass_290() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcap.JsDataHandler$6$4methodref$ctor$Type =
  function JsDataHandler$6$4methodref$ctor$Type() {};
defineClass(
  1590,
  $wnd.Function,
  $intern_34,
  idwcap.JsDataHandler$6$4methodref$ctor$Type
);
_.apply_1 = function apply_141(arg0) {
  return new $wnd.Int8Array(castToNative(arg0, $wnd.ArrayBuffer));
};
idwcap.JsDataHandler$7 = function JsDataHandler$7($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "CHAR", 6, $anonymous0, $anonymous1);
};
defineClass(863, 42, $intern_58, idwcap.JsDataHandler$7);
_.write_0 = function write_9(data_0, context, addNode, addBuffer) {
  idwcap.writeSimpleNumbers(
    data_0,
    addNode,
    addBuffer,
    (ec.$clinit_Uint16Array(), ec.BYTES_PER_ELEMENT_4),
    $intern_10,
    makeLambdaFunction(
      idwcap.JsDataHandler$7$5methodref$ctor$Type.prototype.apply_1,
      idwcap.JsDataHandler$7$5methodref$ctor$Type,
      []
    )
  );
};
_.writeType = function writeType_10(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.Int.createInt(
    builder,
    16,
    false
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$7_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/7",
    863,
    null
  );
idwcap.$getClass_291 = function $getClass_291() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcap.JsDataHandler$7$5methodref$ctor$Type =
  function JsDataHandler$7$5methodref$ctor$Type() {};
defineClass(
  1591,
  $wnd.Function,
  $intern_34,
  idwcap.JsDataHandler$7$5methodref$ctor$Type
);
_.apply_1 = function apply_142(arg0) {
  return new $wnd.Uint16Array(castToNative(arg0, $wnd.ArrayBuffer));
};
idwcap.JsDataHandler$8 = function JsDataHandler$8($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "FLOAT", 7, $anonymous0, $anonymous1);
};
defineClass(864, 42, $intern_58, idwcap.JsDataHandler$8);
_.write_0 = function write_10(data_0, context, addNode, addBuffer) {
  idwcap.writeSimpleNumbers(
    data_0,
    addNode,
    addBuffer,
    (ec.$clinit_Float32Array(), ec.BYTES_PER_ELEMENT),
    $intern_60,
    makeLambdaFunction(
      idwcap.JsDataHandler$8$6methodref$ctor$Type.prototype.apply_1,
      idwcap.JsDataHandler$8$6methodref$ctor$Type,
      []
    )
  );
};
_.writeType = function writeType_11(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.FloatingPoint.createFloatingPoint(
    builder,
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow
      .flatbuf.Precision.SINGLE
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$8_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/8",
    864,
    null
  );
idwcap.$getClass_292 = function $getClass_292() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcap.JsDataHandler$8$6methodref$ctor$Type =
  function JsDataHandler$8$6methodref$ctor$Type() {};
defineClass(
  1592,
  $wnd.Function,
  $intern_34,
  idwcap.JsDataHandler$8$6methodref$ctor$Type
);
_.apply_1 = function apply_143(arg0) {
  return new $wnd.Float32Array(castToNative(arg0, $wnd.ArrayBuffer));
};
idwcap.JsDataHandler$9 = function JsDataHandler$9($anonymous0, $anonymous1) {
  idwcap.JsDataHandler.call(this, "DOUBLE", 8, $anonymous0, $anonymous1);
};
defineClass(865, 42, $intern_58, idwcap.JsDataHandler$9);
_.write_0 = function write_11(data_0, context, addNode, addBuffer) {
  idwcap.writeSimpleNumbers(
    data_0,
    addNode,
    addBuffer,
    (ec.$clinit_Float64Array(), ec.BYTES_PER_ELEMENT_0),
    $intern_61,
    makeLambdaFunction(
      idwcap.JsDataHandler$9$7methodref$ctor$Type.prototype.apply_1,
      idwcap.JsDataHandler$9$7methodref$ctor$Type,
      []
    )
  );
};
_.writeType = function writeType_12(builder) {
  return $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow.flatbuf.FloatingPoint.createFloatingPoint(
    builder,
    $wnd.dhinternal.arrow.flight.flatbuf.Schema_generated.org.apache.arrow
      .flatbuf.Precision.DOUBLE
  );
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$9_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/9",
    865,
    null
  );
idwcap.$getClass_293 = function $getClass_293() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcap.JsDataHandler$9$7methodref$ctor$Type =
  function JsDataHandler$9$7methodref$ctor$Type() {};
defineClass(
  1593,
  $wnd.Function,
  $intern_34,
  idwcap.JsDataHandler$9$7methodref$ctor$Type
);
_.apply_1 = function apply_144(arg0) {
  return new $wnd.Float64Array(castToNative(arg0, $wnd.ArrayBuffer));
};
idwcap.$clinit_JsDataHandler$HandlersHolder =
  function $clinit_JsDataHandler$HandlersHolder() {
    idwcap.$clinit_JsDataHandler$HandlersHolder = emptyMethod;
    idwcap.HANDLERS = new ju.HashMap();
  };
idwcap.JsDataHandler$Node = function JsDataHandler$Node(length_0, nullCount) {
  this.length_0 = length_0;
  this.nullCount_0 = nullCount;
};
defineClass(136, 1, { 136: 1 }, idwcap.JsDataHandler$Node);
_.length_0 = 0;
_.nullCount_0 = 0;
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$Node_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/Node",
    136
  );
idwcap.$$init_30 = function $$init_30(this$static) {};
idwcap.JsDataHandler$ParseContext = function JsDataHandler$ParseContext() {
  idwcap.$$init_30(this);
};
defineClass(854, 1, {}, idwcap.JsDataHandler$ParseContext);
_.dateTimePattern = "yyyy-MM-dd'T'HH:mm:ss";
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$ParseContext_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/ParseContext",
    854
  );
idwcap.JsDataHandler$lambda$0$Type = function JsDataHandler$lambda$0$Type() {};
defineClass(871, 1, {}, idwcap.JsDataHandler$lambda$0$Type);
_.apply_1 = function apply_145(arg0) {
  return idwcap.lambda$0_6(castToString(arg0));
};
cggl.Lio_deephaven_web_client_api_parse_JsDataHandler$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.parse",
    "JsDataHandler/lambda$0$Type",
    871
  );
idwcas.$$init_31 = function $$init_31(this$static) {
  this$static.allStates = new ju.HashMap();
};
idwcas.$create_0 = function $create_0(this$static, handle, factory) {
  if (handle.state != (idwca.$clinit_TableTicket$State(), idwca.PENDING)) {
    throw toJs(new jl.IllegalStateException_0("Should be pending " + handle));
  }
  if (ju.$containsKey(this$static.allStates, handle)) {
    throw toJs(new jl.IllegalStateException_0("already exists " + handle));
  }
  return castTo(
    ju.$computeIfAbsent_0(this$static.allStates, handle, factory),
    14
  );
};
idwcas.$get_7 = function $get_7(this$static, handle) {
  return ju.ofNullable(castTo(ju.$get_16(this$static.allStates, handle), 14));
};
idwcas.$release_1 = function $release_1(this$static, state) {
  var was;
  was = castTo(ju.$remove_0(this$static.allStates, state.handle), 14);
  if (!(!was || was == state)) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Released a state with the same handle but a different instance than expected"
      )
    );
  }
};
idwcas.StateCache = function StateCache() {
  idwcas.$$init_31(this);
};
defineClass(638, 1, {}, idwcas.StateCache);
cggl.Lio_deephaven_web_client_api_state_StateCache_2_classLit = createForClass(
  "io.deephaven.web.client.api.state",
  "StateCache",
  638
);
idwcas2.$arrayBuffer = function $arrayBuffer(this$static) {
  return idwcas2
    .$contents(this$static)
    .then(
      makeLambdaFunction(
        idwcas2.JsFileContents$1methodref$arrayBuffer$Type.prototype.onInvoke_5,
        idwcas2.JsFileContents$1methodref$arrayBuffer$Type,
        []
      )
    );
};
idwcas2.$contents = function $contents(this$static) {
  if (this$static.data_0 != null) {
    return $wnd.Promise.resolve(this$static.data_0);
  }
  return $wnd.Promise.reject("No contents available, please use provided etag");
};
idwcas2.JsFileContents = function JsFileContents(data_0, etag) {
  this.data_0 = data_0;
  this.etag_0 = etag;
};
idwcas2.JsFileContents_0 = function JsFileContents_0(etag) {
  this.data_0 = null;
  this.etag_0 = etag;
};
idwcas2.arrayBuffers = function arrayBuffers() {
  var $i, buffers;
  buffers = newArray_0(arguments.length);
  for ($i = 0; $i < arguments.length; $i++) {
    setCheck(buffers, $i, arguments[$i]);
  }
  return new idwcas2.JsFileContents(
    new $wnd.Blob($wnd.Array.from(buffers)),
    null
  );
};
idwcas2.blob_0 = function blob_0(blob) {
  ju.requireNonNull_0(blob, "Blob cannot be null");
  return new idwcas2.JsFileContents(blob, null);
};
idwcas2.text_2 = function text_2() {
  var $i, text_0;
  text_0 = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arguments.length,
    6,
    1
  );
  for ($i = 0; $i < arguments.length; $i++) {
    text_0[$i] = arguments[$i];
  }
  return new idwcas2.JsFileContents(
    new $wnd.Blob($wnd.Array.from(text_0)),
    null
  );
};
defineClass(179, 1, {}, idwcas2.JsFileContents, idwcas2.JsFileContents_0);
_.arrayBuffer = function arrayBuffer() {
  return idwcas2.$arrayBuffer(this);
};
defineProperties(_, {
  etag: {
    get: function getEtag() {
      return this.etag_0;
    },
  },
});
_.text = function text_1() {
  return idwcas2
    .$contents(this)
    .then(
      makeLambdaFunction(
        idwcas2.JsFileContents$0methodref$text$Type.prototype.onInvoke_5,
        idwcas2.JsFileContents$0methodref$text$Type,
        []
      )
    );
};
cggl.Lio_deephaven_web_client_api_storage_JsFileContents_2_classLit =
  createForClass("io.deephaven.web.client.api.storage", "JsFileContents", 179);
idwcas2.$getClass_294 = function $getClass_294() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsFileContents$0methodref$text$Type =
  function JsFileContents$0methodref$text$Type() {};
defineClass(
  1499,
  $wnd.Function,
  $intern_36,
  idwcas2.JsFileContents$0methodref$text$Type
);
_.onInvoke_5 = function onInvoke_168(arg0) {
  return castToNative(arg0, $wnd.Blob).text();
};
idwcas2.$getClass_295 = function $getClass_295() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsFileContents$1methodref$arrayBuffer$Type =
  function JsFileContents$1methodref$arrayBuffer$Type() {};
defineClass(
  942,
  $wnd.Function,
  $intern_36,
  idwcas2.JsFileContents$1methodref$arrayBuffer$Type
);
_.onInvoke_5 = function onInvoke_169(arg0) {
  return castToNative(arg0, $wnd.Blob).arrayBuffer();
};
idwcas2.JsItemDetails = function JsItemDetails(path, kind, size_0, etag) {
  this.path_0 = path;
  this.type_0 = kind;
  this.size_0 = size_0;
  this.etag_0 = etag;
};
defineClass(872, 1, {}, idwcas2.JsItemDetails);
defineProperties(_, {
  basename: {
    get: function getBasename() {
      return jl.$substring(
        this.path_0,
        jl.$lastIndexOf(this.path_0, fromCodePoint(47)) + 1
      );
    },
  },
});
defineProperties(_, {
  dirname: {
    get: function getDirname() {
      return jl.$substring_0(
        this.path_0,
        0,
        jl.$lastIndexOf(this.path_0, fromCodePoint(47))
      );
    },
  },
});
defineProperties(_, {
  etag: {
    get: function getEtag_0() {
      return this.etag_0;
    },
  },
});
defineProperties(_, {
  filename: {
    get: function getFilename() {
      return this.path_0;
    },
  },
});
defineProperties(_, {
  size: {
    get: function getSize_2() {
      return this.size_0 == null ? 0 : jl.__parseAndValidateDouble(this.size_0);
    },
  },
});
defineProperties(_, {
  type: {
    get: function getType_4() {
      return this.type_0 ==
        $wnd.dhinternal.io.deephaven.proto.storage_pb.ItemType.DIRECTORY
        ? "directory"
        : "file";
    },
  },
});
_.type_0 = 0;
cggl.Lio_deephaven_web_client_api_storage_JsItemDetails_2_classLit =
  createForClass("io.deephaven.web.client.api.storage", "JsItemDetails", 872);
idwcas2.JsItemType = function JsItemType() {};
defineClass(916, 1, {}, idwcas2.JsItemType);
idwcas2.DIRECTORY = "directory";
idwcas2.FILE = "file";
cggl.Lio_deephaven_web_client_api_storage_JsItemType_2_classLit =
  createForClass("io.deephaven.web.client.api.storage", "JsItemType", 916);
idwcas2.$lambda$0_4 = function $lambda$0_4(this$static, req_1, c_1) {
  return this$static.connection.storageServiceClient.listItems(
    req_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcas2.JsStorageService$0methodref$apply$Type.prototype.onInvoke_38,
      idwcas2.JsStorageService$0methodref$apply$Type,
      [c_1]
    )
  );
};
idwcas2.$lambda$10_1 = function $lambda$10_1(
  this$static,
  path_1,
  allowOverwrite_2,
  ab_2
) {
  var req;
  req = new $wnd.dhinternal.io.deephaven.proto.storage_pb.SaveFileRequest();
  req.setContents(new $wnd.Uint8Array(ab_2));
  req.setPath(path_1);
  allowOverwrite_2 != null &&
    req.setAllowOverwrite(
      ji.unsafeCastToBoolean(
        (ji.checkCriticalNotNull(allowOverwrite_2), allowOverwrite_2)
      )
    );
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcas2.JsStorageService$lambda$11$Type(this$static, req)]
    )
  ).then(
    makeLambdaFunction(
      idwcas2.JsStorageService$lambda$13$Type.prototype.onInvoke_5,
      idwcas2.JsStorageService$lambda$13$Type,
      []
    )
  );
};
idwcas2.$lambda$11_1 = function $lambda$11_1(this$static, req_1, c_1) {
  return this$static.connection.storageServiceClient.saveFile(
    req_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcas2.JsStorageService$3methodref$apply$Type.prototype.onInvoke_40,
      idwcas2.JsStorageService$3methodref$apply$Type,
      [c_1]
    )
  );
};
idwcas2.$lambda$14_1 = function $lambda$14_1(this$static, req_1, c_1) {
  return this$static.connection.storageServiceClient.moveItem(
    req_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcas2.JsStorageService$4methodref$apply$Type.prototype.onInvoke_39,
      idwcas2.JsStorageService$4methodref$apply$Type,
      [c_1]
    )
  );
};
idwcas2.$lambda$17_2 = function $lambda$17_2(this$static, req_1, c_1) {
  return this$static.connection.storageServiceClient.createDirectory(
    req_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcas2.JsStorageService$5methodref$apply$Type.prototype.onInvoke_35,
      idwcas2.JsStorageService$5methodref$apply$Type,
      [c_1]
    )
  );
};
idwcas2.$lambda$4_1 = function $lambda$4_1(this$static, req_1, c_1) {
  return this$static.connection.storageServiceClient.fetchFile(
    req_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcas2.JsStorageService$1methodref$apply$Type.prototype.onInvoke_37,
      idwcas2.JsStorageService$1methodref$apply$Type,
      [c_1]
    )
  );
};
idwcas2.$lambda$7_1 = function $lambda$7_1(this$static, req_1, c_1) {
  return this$static.connection.storageServiceClient.deleteItem(
    req_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcas2.JsStorageService$2methodref$apply$Type.prototype.onInvoke_36,
      idwcas2.JsStorageService$2methodref$apply$Type,
      [c_1]
    )
  );
};
idwcas2.JsStorageService = function JsStorageService(connection) {
  this.connection = connection;
};
idwcas2.lambda$3_0 = function lambda$3_0(item_0) {
  return new idwcas2.JsItemDetails(
    item_0.getPath(),
    item_0.getType(),
    item_0.getSize(),
    item_0.getEtag()
  );
};
idwcas2.lambda$6_2 = function lambda$6_2(etag_0, response_1) {
  var contents;
  if (response_1.hasEtag() && jl.$equals_12(response_1.getEtag(), etag_0)) {
    return $wnd.Promise.resolve(new idwcas2.JsFileContents_0(etag_0));
  }
  contents = new $wnd.Blob(
    $wnd.Array.of(response_1.getContents_asU8().slice().buffer)
  );
  return $wnd.Promise.resolve(
    new idwcas2.JsFileContents(contents, response_1.getEtag())
  );
};
defineClass(406, 1, {}, idwcas2.JsStorageService);
_.createDirectory = function createDirectory(path) {
  var req;
  req =
    new $wnd.dhinternal.io.deephaven.proto.storage_pb.CreateDirectoryRequest();
  req.setPath(path);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcas2.JsStorageService$lambda$17$Type(this, req)]
    )
  ).then(
    makeLambdaFunction(
      idwcas2.JsStorageService$lambda$19$Type.prototype.onInvoke_5,
      idwcas2.JsStorageService$lambda$19$Type,
      []
    )
  );
};
_.deleteItem = function deleteItem(path) {
  var req;
  req = new $wnd.dhinternal.io.deephaven.proto.storage_pb.DeleteItemRequest();
  req.setPath(path);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcas2.JsStorageService$lambda$7$Type(this, req)]
    )
  ).then(
    makeLambdaFunction(
      idwcas2.JsStorageService$lambda$9$Type.prototype.onInvoke_5,
      idwcas2.JsStorageService$lambda$9$Type,
      []
    )
  );
};
_.listItems = function listItems(path, glob) {
  var req;
  req = new $wnd.dhinternal.io.deephaven.proto.storage_pb.ListItemsRequest();
  req.setPath(path);
  req.setFilterGlob(glob);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcas2.JsStorageService$lambda$0$Type(this, req)]
    )
  ).then(
    makeLambdaFunction(
      idwcas2.JsStorageService$lambda$2$Type.prototype.onInvoke_5,
      idwcas2.JsStorageService$lambda$2$Type,
      []
    )
  );
};
_.loadFile = function loadFile(path, etag) {
  var req;
  req = new $wnd.dhinternal.io.deephaven.proto.storage_pb.FetchFileRequest();
  req.setPath(path);
  etag != null && req.setEtag(etag);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcas2.JsStorageService$lambda$4$Type(this, req)]
    )
  ).then(
    makeLambdaFunction(
      idwcas2.JsStorageService$lambda$6$Type.prototype.onInvoke_5,
      idwcas2.JsStorageService$lambda$6$Type,
      [etag]
    )
  );
};
_.moveItem = function moveItem(oldPath, newPath, allowOverwrite) {
  var req;
  req = new $wnd.dhinternal.io.deephaven.proto.storage_pb.MoveItemRequest();
  req.setOldPath(oldPath);
  req.setNewPath(newPath);
  allowOverwrite != null &&
    req.setAllowOverwrite(
      ji.unsafeCastToBoolean(
        (ji.checkCriticalNotNull(allowOverwrite), allowOverwrite)
      )
    );
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcas2.JsStorageService$lambda$14$Type(this, req)]
    )
  ).then(
    makeLambdaFunction(
      idwcas2.JsStorageService$lambda$16$Type.prototype.onInvoke_5,
      idwcas2.JsStorageService$lambda$16$Type,
      []
    )
  );
};
_.saveFile = function saveFile(path, contents, allowOverwrite) {
  return idwcas2
    .$contents(contents)
    .then(
      makeLambdaFunction(
        idwcas2.JsFileContents$1methodref$arrayBuffer$Type.prototype.onInvoke_5,
        idwcas2.JsFileContents$1methodref$arrayBuffer$Type,
        []
      )
    )
    .then(
      makeLambdaFunction(
        idwcas2.JsStorageService$lambda$10$Type.prototype.onInvoke_5,
        idwcas2.JsStorageService$lambda$10$Type,
        [this, path, allowOverwrite]
      )
    );
};
cggl.Lio_deephaven_web_client_api_storage_JsStorageService_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.storage",
    "JsStorageService",
    406
  );
idwcas2.$getClass_296 = function $getClass_296() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$0methodref$apply$Type =
  function JsStorageService$0methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1036,
  $wnd.Function,
  {},
  idwcas2.JsStorageService$0methodref$apply$Type
);
_.onInvoke_38 = function onInvoke_170(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcas2.$getClass_297 = function $getClass_297() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$1methodref$apply$Type =
  function JsStorageService$1methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1037,
  $wnd.Function,
  {},
  idwcas2.JsStorageService$1methodref$apply$Type
);
_.onInvoke_37 = function onInvoke_171(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcas2.$getClass_298 = function $getClass_298() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$2methodref$apply$Type =
  function JsStorageService$2methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1038,
  $wnd.Function,
  {},
  idwcas2.JsStorageService$2methodref$apply$Type
);
_.onInvoke_36 = function onInvoke_172(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcas2.$getClass_299 = function $getClass_299() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$3methodref$apply$Type =
  function JsStorageService$3methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1041,
  $wnd.Function,
  {},
  idwcas2.JsStorageService$3methodref$apply$Type
);
_.onInvoke_40 = function onInvoke_173(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcas2.$getClass_300 = function $getClass_300() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$4methodref$apply$Type =
  function JsStorageService$4methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1042,
  $wnd.Function,
  {},
  idwcas2.JsStorageService$4methodref$apply$Type
);
_.onInvoke_39 = function onInvoke_174(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcas2.$getClass_301 = function $getClass_301() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$5methodref$apply$Type =
  function JsStorageService$5methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1043,
  $wnd.Function,
  {},
  idwcas2.JsStorageService$5methodref$apply$Type
);
_.onInvoke_35 = function onInvoke_175(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcas2.JsStorageService$lambda$0$Type =
  function JsStorageService$lambda$0$Type($$outer_0, req_1) {
    this.$$outer_0 = $$outer_0;
    this.req_1 = req_1;
  };
defineClass(407, 1, $intern_19, idwcas2.JsStorageService$lambda$0$Type);
_.accept = function accept_48(arg0) {
  idwcas2.$lambda$0_4(this.$$outer_0, this.req_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_storage_JsStorageService$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.storage",
    "JsStorageService/lambda$0$Type",
    407
  );
idwcas2.$getClass_302 = function $getClass_302() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$lambda$10$Type =
  function JsStorageService$lambda$10$Type(
    $$outer_0,
    path_1,
    allowOverwrite_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.path_1 = path_1;
    this.allowOverwrite_2 = allowOverwrite_2;
  };
defineClass(
  1031,
  $wnd.Function,
  $intern_36,
  idwcas2.JsStorageService$lambda$10$Type
);
_.onInvoke_5 = function onInvoke_176(arg0) {
  return idwcas2.$lambda$10_1(
    this.$$outer_0,
    this.path_1,
    this.allowOverwrite_2,
    castToNative(arg0, $wnd.ArrayBuffer)
  );
};
idwcas2.JsStorageService$lambda$11$Type =
  function JsStorageService$lambda$11$Type($$outer_0, req_1) {
    this.$$outer_0 = $$outer_0;
    this.req_1 = req_1;
  };
defineClass(410, 1, $intern_19, idwcas2.JsStorageService$lambda$11$Type);
_.accept = function accept_49(arg0) {
  idwcas2.$lambda$11_1(this.$$outer_0, this.req_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_storage_JsStorageService$lambda$11$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.storage",
    "JsStorageService/lambda$11$Type",
    410
  );
idwcas2.$getClass_303 = function $getClass_303() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$lambda$13$Type =
  function JsStorageService$lambda$13$Type() {};
defineClass(
  1040,
  $wnd.Function,
  $intern_36,
  idwcas2.JsStorageService$lambda$13$Type
);
_.onInvoke_5 = function onInvoke_177(arg0) {
  return $wnd.Promise.resolve(
    new idwcas2.JsFileContents_0(
      castToNative(
        arg0,
        $wnd.dhinternal.io.deephaven.proto.storage_pb.SaveFileResponse
      ).getEtag()
    )
  );
};
idwcas2.JsStorageService$lambda$14$Type =
  function JsStorageService$lambda$14$Type($$outer_0, req_1) {
    this.$$outer_0 = $$outer_0;
    this.req_1 = req_1;
  };
defineClass(411, 1, $intern_19, idwcas2.JsStorageService$lambda$14$Type);
_.accept = function accept_50(arg0) {
  idwcas2.$lambda$14_1(this.$$outer_0, this.req_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_storage_JsStorageService$lambda$14$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.storage",
    "JsStorageService/lambda$14$Type",
    411
  );
idwcas2.$getClass_304 = function $getClass_304() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$lambda$16$Type =
  function JsStorageService$lambda$16$Type() {};
defineClass(
  1033,
  $wnd.Function,
  $intern_36,
  idwcas2.JsStorageService$lambda$16$Type
);
_.onInvoke_5 = function onInvoke_178(arg0) {
  return (
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.storage_pb.MoveItemResponse
    ),
    $wnd.Promise.resolve(null)
  );
};
idwcas2.JsStorageService$lambda$17$Type =
  function JsStorageService$lambda$17$Type($$outer_0, req_1) {
    this.$$outer_0 = $$outer_0;
    this.req_1 = req_1;
  };
defineClass(412, 1, $intern_19, idwcas2.JsStorageService$lambda$17$Type);
_.accept = function accept_51(arg0) {
  idwcas2.$lambda$17_2(this.$$outer_0, this.req_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_storage_JsStorageService$lambda$17$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.storage",
    "JsStorageService/lambda$17$Type",
    412
  );
idwcas2.$getClass_305 = function $getClass_305() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$lambda$19$Type =
  function JsStorageService$lambda$19$Type() {};
defineClass(
  1035,
  $wnd.Function,
  $intern_36,
  idwcas2.JsStorageService$lambda$19$Type
);
_.onInvoke_5 = function onInvoke_179(arg0) {
  return (
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.storage_pb.CreateDirectoryResponse
    ),
    $wnd.Promise.resolve(null)
  );
};
idwcas2.$getClass_306 = function $getClass_306() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$lambda$2$Type =
  function JsStorageService$lambda$2$Type() {};
defineClass(
  1026,
  $wnd.Function,
  $intern_36,
  idwcas2.JsStorageService$lambda$2$Type
);
_.onInvoke_5 = function onInvoke_180(arg0) {
  return $wnd.Promise.resolve(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.storage_pb.ListItemsResponse
    )
      .getItemsList()
      .map(
        makeLambdaFunction(
          idwcas2.JsStorageService$lambda$3$Type.prototype.onInvoke,
          idwcas2.JsStorageService$lambda$3$Type,
          []
        )
      )
  );
};
idwcas2.$getClass_307 = function $getClass_307() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$lambda$3$Type =
  function JsStorageService$lambda$3$Type() {};
defineClass(1044, $wnd.Function, {}, idwcas2.JsStorageService$lambda$3$Type);
_.onInvoke = function onInvoke_181(arg0, arg1, arg2) {
  return idwcas2.lambda$3_0(
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.storage_pb.ItemInfo)
  );
};
idwcas2.JsStorageService$lambda$4$Type =
  function JsStorageService$lambda$4$Type($$outer_0, req_1) {
    this.$$outer_0 = $$outer_0;
    this.req_1 = req_1;
  };
defineClass(408, 1, $intern_19, idwcas2.JsStorageService$lambda$4$Type);
_.accept = function accept_52(arg0) {
  idwcas2.$lambda$4_1(this.$$outer_0, this.req_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_storage_JsStorageService$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.storage",
    "JsStorageService/lambda$4$Type",
    408
  );
idwcas2.$getClass_308 = function $getClass_308() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$lambda$6$Type =
  function JsStorageService$lambda$6$Type(etag_0) {
    this.etag_0 = etag_0;
  };
defineClass(
  1028,
  $wnd.Function,
  $intern_36,
  idwcas2.JsStorageService$lambda$6$Type
);
_.onInvoke_5 = function onInvoke_182(arg0) {
  return idwcas2.lambda$6_2(
    this.etag_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.storage_pb.FetchFileResponse
    )
  );
};
idwcas2.JsStorageService$lambda$7$Type =
  function JsStorageService$lambda$7$Type($$outer_0, req_1) {
    this.$$outer_0 = $$outer_0;
    this.req_1 = req_1;
  };
defineClass(409, 1, $intern_19, idwcas2.JsStorageService$lambda$7$Type);
_.accept = function accept_53(arg0) {
  idwcas2.$lambda$7_1(this.$$outer_0, this.req_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_storage_JsStorageService$lambda$7$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.storage",
    "JsStorageService/lambda$7$Type",
    409
  );
idwcas2.$getClass_309 = function $getClass_309() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas2.JsStorageService$lambda$9$Type =
  function JsStorageService$lambda$9$Type() {};
defineClass(
  1030,
  $wnd.Function,
  $intern_36,
  idwcas2.JsStorageService$lambda$9$Type
);
_.onInvoke_5 = function onInvoke_183(arg0) {
  return (
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.storage_pb.DeleteItemResponse
    ),
    $wnd.Promise.resolve(null)
  );
};
idwcas3.$arrayCopyFuncForColumn = function $arrayCopyFuncForColumn(column) {
  var type_0;
  type_0 = column ? column.type_0 : "";
  switch (type_0) {
    case "long":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$7$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$7$Type,
        []
      );
    case "java.time.Instant":
    case "java.time.ZonedDateTime":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$8$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$8$Type,
        []
      );
    case "java.math.BigDecimal":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$9$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$9$Type,
        []
      );
    case "java.math.BigInteger":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$10$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$10$Type,
        []
      );
    case "java.time.LocalDate":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$11$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$11$Type,
        []
      );
    case "java.time.LocalTime":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$12$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$12$Type,
        []
      );
    case "java.lang.Boolean":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$13$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$13$Type,
        []
      );
    case "int":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$14$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$14$Type,
        []
      );
    case "byte":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$15$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$15$Type,
        []
      );
    case "short":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$16$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$16$Type,
        []
      );
    case "double":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$17$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$17$Type,
        []
      );
    case "float":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$18$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$18$Type,
        []
      );
    case "char":
      return makeLambdaFunction(
        idwcas3.SubscriptionTableData$lambda$19$Type.prototype.copyTo,
        idwcas3.SubscriptionTableData$lambda$19$Type,
        []
      );
  }
  return makeLambdaFunction(
    idwcas3.SubscriptionTableData$lambda$20$Type.prototype.copyTo,
    idwcas3.SubscriptionTableData$lambda$20$Type,
    []
  );
};
idwcas3.$freeRows = function $freeRows(this$static, required) {
  var created,
    existingSlotsToReuse,
    iterator,
    nextIndex,
    reused,
    stillUnused,
    taken,
    value_0;
  if (compare_1(required, 0) == 0) {
    return new idwsd.RangeSet();
  }
  existingSlotsToReuse = jus.$collect_0(
    jus.$mapToLong(
      ju.stream_4(this$static.reusableDestinations.sortedRanges),
      new idwsd.RangeSet$0methodref$size$Type()
    )
  ).sum_0;
  if (compare_1(existingSlotsToReuse, required) > 0) {
    reused = new idwsd.RangeSet();
    taken = 0;
    stillUnused = new idwsd.RangeSet();
    iterator = jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(this$static.reusableDestinations.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    );
    while (compare_1(taken, required) < 0) {
      iterator.hasElement ||
        (iterator.hasElement = iterator.spliterator.tryAdvance_0(iterator));
      if (!iterator.hasElement) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      value_0 = ju.$nextLong(iterator);
      idwsd.$addRange(reused, new idwsd.Range_0(value_0, value_0));
      taken = add_1(taken, 1);
    }
    if (compare_1(taken, required) != 0) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    while (
      (iterator.hasElement ||
        (iterator.hasElement = iterator.spliterator.tryAdvance_0(iterator)),
      iterator.hasElement)
    ) {
      value_0 = ju.$nextLong(iterator);
      idwsd.$addRange(stillUnused, new idwsd.Range_0(value_0, value_0));
    }
    this$static.reusableDestinations = stillUnused;
    if (
      neq(
        required,
        jus.$collect_0(
          jus.$mapToLong(
            ju.stream_4(reused.sortedRanges),
            new idwsd.RangeSet$0methodref$size$Type()
          )
        ).sum_0
      )
    ) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    return reused;
  }
  created = this$static.reusableDestinations;
  if (compare_1(existingSlotsToReuse, required) < 0) {
    created.sortedRanges.length == 0
      ? this$static.index_0.sortedRanges.length == 0
        ? (nextIndex = 0)
        : (nextIndex = fromInt(this$static.redirectedIndexes.size_0))
      : this$static.index_0.sortedRanges.length == 0
      ? (nextIndex = add_1(
          created.sortedRanges[created.sortedRanges.length - 1].last_0,
          1
        ))
      : (nextIndex = add_1(
          jl.max_1(
            created.sortedRanges[created.sortedRanges.length - 1].last_0,
            idwsd.$getLastRow(this$static.index_0)
          ),
          1
        ));
    idwsd.$addRange(
      created,
      new idwsd.Range_0(
        nextIndex,
        sub_3(sub_3(add_1(nextIndex, required), existingSlotsToReuse), 1)
      )
    );
  }
  this$static.reusableDestinations = new idwsd.RangeSet();
  if (
    neq(
      required,
      jus.$collect_0(
        jus.$mapToLong(
          ju.stream_4(created.sortedRanges),
          new idwsd.RangeSet$0methodref$size$Type()
        )
      ).sum_0
    )
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return created;
};
idwcas3.$handleDelta = function $handleDelta(this$static, delta) {
  var addedColumn,
    addedDestination,
    addedIndexes,
    additions,
    allModified,
    arrayCopy,
    column,
    dest,
    destIter,
    entry,
    entryIterator,
    hasReverseShift,
    i,
    i0,
    i1,
    i2,
    j,
    key,
    key$iterator,
    modifications,
    modifiedColumn,
    modifiedIndexes,
    offset,
    old,
    oldValue,
    origIndex,
    reusableHelper,
    shiftedKey,
    shiftedRange,
    shiftedRanges,
    shifter,
    toMove;
  reusableHelper = new idwcas3.SubscriptionTableData$RangeSetAppendHelper(
    this$static.reusableDestinations
  );
  ju.$forEachRemaining_4(
    jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(delta.removed_0.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    ),
    new idwcas3.SubscriptionTableData$lambda$1$Type(this$static, reusableHelper)
  );
  idwcas3.$flush_0(reusableHelper);
  ju.$forEachRemaining_0(
    new ju.AbstractList$IteratorImpl(
      new ju.Arrays$ArrayList(delta.removed_0.sortedRanges)
    ),
    new idwcas3.SubscriptionTableData$0methodref$removeRange$Type(
      this$static.index_0
    )
  );
  hasReverseShift = false;
  shiftedRanges = delta.shiftedRanges;
  shifter = new idwcas3.SubscriptionTableData$RangeSetAppendHelper(
    this$static.index_0
  );
  for (i0 = shiftedRanges.length - 1; i0 >= 0; --i0) {
    shiftedRange = shiftedRanges[i0];
    offset = shiftedRange.delta;
    if (compare_1(offset, 0) < 0) {
      hasReverseShift = true;
      continue;
    }
    idwsd.$removeRange(this$static.index_0, shiftedRange.range_0);
    toMove = ju.$subSet(
      new ju.AbstractNavigableMap$NavigableKeySet(
        this$static.redirectedIndexes
      ),
      jl.valueOf_30(shiftedRange.range_0.first_0),
      jl.valueOf_30(shiftedRange.range_0.last_0)
    );
    for (
      key$iterator =
        ((entryIterator = new ju.AbstractNavigableMap$NavigableKeySet(
          toMove.map_0.descendingMap()
        ).map_0
          .entrySet_0()
          .this$01_0.entryIterator()),
        new ju.AbstractNavigableMap$NavigableKeySet$1(entryIterator));
      key$iterator.val$entryIterator2.hasNext_1();

    ) {
      key =
        ((entry = castTo(key$iterator.val$entryIterator2.next_1(), 27)),
        castTo(entry.getKey(), 66));
      shiftedKey = add_1(key.value_0, offset);
      oldValue = castTo(
        ju.$put_7(
          this$static.redirectedIndexes,
          jl.valueOf_30(shiftedKey),
          castTo(ju.$remove_13(this$static.redirectedIndexes, key), 66)
        ),
        66
      );
      if (oldValue) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            toString_6(shiftedKey) + " already has a value, " + oldValue
          )
        );
      }
      idwcas3.$append_1(shifter, shiftedKey);
    }
  }
  if (hasReverseShift) {
    for (i1 = 0; i1 < shiftedRanges.length; ++i1) {
      shiftedRange = shiftedRanges[i1];
      offset = shiftedRange.delta;
      if (compare_1(offset, 0) > 0) {
        continue;
      }
      idwsd.$removeRange(this$static.index_0, shiftedRange.range_0);
      toMove = ju.$subSet(
        new ju.AbstractNavigableMap$NavigableKeySet(
          this$static.redirectedIndexes
        ),
        jl.valueOf_30(shiftedRange.range_0.first_0),
        jl.valueOf_30(shiftedRange.range_0.last_0)
      );
      for (
        key$iterator =
          ((entryIterator = toMove.map_0
            .entrySet_0()
            .this$01_0.entryIterator()),
          new ju.AbstractNavigableMap$NavigableKeySet$1(entryIterator));
        key$iterator.val$entryIterator2.hasNext_1();

      ) {
        key =
          ((entry = castTo(key$iterator.val$entryIterator2.next_1(), 27)),
          castTo(entry.getKey(), 66));
        shiftedKey = add_1(key.value_0, offset);
        oldValue = castTo(
          ju.$put_7(
            this$static.redirectedIndexes,
            jl.valueOf_30(shiftedKey),
            castTo(ju.$remove_13(this$static.redirectedIndexes, key), 66)
          ),
          66
        );
        if (oldValue) {
          debugger;
          throw toJs(
            new jl.AssertionError_0(
              toString_6(shiftedKey) + " already has a value, " + oldValue
            )
          );
        }
        idwcas3.$append_1(shifter, shiftedKey);
      }
    }
  }
  idwcas3.$flush_0(shifter);
  addedDestination = idwcas3.$freeRows(
    this$static,
    jus.$collect_0(
      jus.$mapToLong(
        ju.stream_4(delta.added_0.sortedRanges),
        new idwsd.RangeSet$0methodref$size$Type()
      )
    ).sum_0
  );
  additions = delta.serializedAdditions;
  for (i2 = 0; i2 < additions.length; i2++) {
    addedColumn = delta.serializedAdditions[i2];
    column = castTo(
      this$static.columns_0.find(
        makeLambdaFunction(
          idwcas3.SubscriptionTableData$lambda$3$Type.prototype.onInvoke_0,
          idwcas3.SubscriptionTableData$lambda$3$Type,
          [addedColumn]
        )
      ),
      21
    );
    arrayCopy = idwcas3.$arrayCopyFuncForColumn(column);
    addedIndexes = jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(delta.added_0.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    );
    destIter = jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(addedDestination.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    );
    j = 0;
    while (
      (addedIndexes.hasElement ||
        (addedIndexes.hasElement =
          addedIndexes.spliterator.tryAdvance_0(addedIndexes)),
      addedIndexes.hasElement)
    ) {
      origIndex = ju.$nextLong(addedIndexes);
      if (
        !idwsd.$includesAllOf(
          delta.includedAdditions,
          idwsd.ofItems_0(
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.J_classLit, 1),
              $intern_43,
              18,
              14,
              [origIndex]
            )
          )
        )
      ) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      destIter.hasElement ||
        (destIter.hasElement = destIter.spliterator.tryAdvance_0(destIter));
      if (!destIter.hasElement) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      dest = ju.$nextLong(destIter);
      old = castTo(
        ju.$put_7(
          this$static.redirectedIndexes,
          jl.valueOf_30(origIndex),
          jl.valueOf_30(dest)
        ),
        66
      );
      if (!(!old || eq(old.value_0, dest))) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      arrayCopy(
        this$static.data_0[addedColumn.columnIndex],
        dest,
        addedColumn.values_0.getData_2(),
        j++
      );
    }
  }
  ju.$forEachRemaining_0(
    new ju.AbstractList$IteratorImpl(
      new ju.Arrays$ArrayList(delta.added_0.sortedRanges)
    ),
    new idwcas3.SubscriptionTableData$1methodref$addRange$Type(
      this$static.index_0
    )
  );
  modifications = delta.serializedModifications;
  allModified = new idwsd.RangeSet();
  for (i = 0; i < modifications.length; ++i) {
    modifiedColumn = modifications[i];
    if (!modifiedColumn) {
      continue;
    }
    ju.$forEachRemaining_0(
      new ju.AbstractList$IteratorImpl(
        new ju.Arrays$ArrayList(modifiedColumn.rowsIncluded.sortedRanges)
      ),
      new idwcas3.SubscriptionTableData$2methodref$addRange$Type(allModified)
    );
    column = castTo(
      this$static.columns_0.find(
        makeLambdaFunction(
          idwcas3.SubscriptionTableData$lambda$6$Type.prototype.onInvoke_0,
          idwcas3.SubscriptionTableData$lambda$6$Type,
          [modifiedColumn]
        )
      ),
      21
    );
    arrayCopy = idwcas3.$arrayCopyFuncForColumn(column);
    modifiedIndexes = jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(modifiedColumn.rowsIncluded.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    );
    j = 0;
    while (
      (modifiedIndexes.hasElement ||
        (modifiedIndexes.hasElement =
          modifiedIndexes.spliterator.tryAdvance_0(modifiedIndexes)),
      modifiedIndexes.hasElement)
    ) {
      origIndex = ju.$nextLong(modifiedIndexes);
      arrayCopy(
        this$static.data_0[modifiedColumn.columnIndex],
        castTo(
          ju.$get_17(this$static.redirectedIndexes, jl.valueOf_30(origIndex)),
          66
        ).value_0,
        modifiedColumn.values_0.getData_2(),
        j++
      );
    }
  }
  if (
    neq(
      fromInt(this$static.redirectedIndexes.size_0),
      jus.$collect_0(
        jus.$mapToLong(
          ju.stream_4(this$static.index_0.sortedRanges),
          new idwsd.RangeSet$0methodref$size$Type()
        )
      ).sum_0
    )
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return idwcas3.$notifyUpdates(
    this$static,
    delta.added_0,
    delta.removed_0,
    allModified
  );
};
idwcas3.$handleSnapshot_1 = function $handleSnapshot_1(this$static, snapshot) {
  var arrayCopy,
    column,
    dataColumn,
    dataColumns,
    dest,
    destIter,
    destination,
    i,
    includedRowCount,
    index_0,
    indexIter,
    j,
    localCopy;
  dataColumns = snapshot.dataColumns;
  this$static.data_0 = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    dataColumns.length,
    5,
    1
  );
  this$static.reusableDestinations = new idwsd.RangeSet();
  this$static.redirectedIndexes = new ju.TreeMap();
  this$static.index_0 = snapshot.includedRows;
  includedRowCount = jus.$collect_0(
    jus.$mapToLong(
      ju.stream_4(snapshot.includedRows.sortedRanges),
      new idwsd.RangeSet$0methodref$size$Type()
    )
  ).sum_0;
  destination = idwcas3.$freeRows(this$static, includedRowCount);
  for (index_0 = 0; index_0 < dataColumns.length; index_0++) {
    dataColumn = dataColumns[index_0];
    if (!dataColumn) {
      continue;
    }
    i = index_0;
    column = castTo(
      this$static.columns_0.find(
        makeLambdaFunction(
          idwcas3.SubscriptionTableData$lambda$0$Type.prototype.onInvoke_0,
          idwcas3.SubscriptionTableData$lambda$0$Type,
          [i]
        )
      ),
      21
    );
    arrayCopy = idwcas3.$arrayCopyFuncForColumn(column);
    localCopy = initUnidimensionalArray(
      cggl.Ljava_lang_Object_2_classLit,
      $intern_7,
      1,
      toInt_0(includedRowCount),
      5,
      1
    );
    this$static.data_0[index_0] = localCopy;
    destIter = jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(destination.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    );
    indexIter = jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(snapshot.includedRows.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    );
    j = 0;
    while (
      (indexIter.hasElement ||
        (indexIter.hasElement = indexIter.spliterator.tryAdvance_0(indexIter)),
      indexIter.hasElement)
    ) {
      destIter.hasElement ||
        (destIter.hasElement = destIter.spliterator.tryAdvance_0(destIter));
      if (!destIter.hasElement) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      dest = ju.$nextLong(destIter);
      ju.$put_7(
        this$static.redirectedIndexes,
        jl.valueOf_30(ju.$nextLong(indexIter)),
        jl.valueOf_30(dest)
      );
      arrayCopy(localCopy, dest, dataColumn.getData_2(), j++);
    }
    destIter.hasElement ||
      (destIter.hasElement = destIter.spliterator.tryAdvance_0(destIter));
    if (destIter.hasElement) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
  }
  return idwcas3.$notifyUpdates(
    this$static,
    this$static.index_0,
    new idwsd.RangeSet(),
    new idwsd.RangeSet()
  );
};
idwcas3.$lambda$1_4 = function $lambda$1_4(
  this$static,
  reusableHelper_1,
  index_1
) {
  var dest;
  dest = castTo(
    ju.$remove_13(this$static.redirectedIndexes, jl.valueOf_30(index_1)),
    66
  ).value_0;
  idwcas3.$append_1(reusableHelper_1, dest);
};
idwcas3.$notifyUpdates = function $notifyUpdates(
  this$static,
  added,
  removed,
  modified
) {
  var detail, event_0;
  detail = new idwcas3.SubscriptionTableData$UpdateEventData(
    this$static,
    added,
    removed,
    modified
  );
  if (this$static.evented) {
    event_0 = jb.emptyObjectLiteral();
    event_0.detail = detail;
    idwca.$fireEvent_1(this$static.evented, "updated", event_0);
  }
  return detail;
};
idwcas3.SubscriptionTableData = function SubscriptionTableData(
  columns,
  rowStyleColumn,
  evented
) {
  this.columns_0 = columns;
  this.rowStyleColumn = rowStyleColumn;
  this.evented = evented;
};
idwcas3.lambda$0_7 = function lambda$0_7(i_0, c_1) {
  return c_1.index_0 == i_0;
};
idwcas3.lambda$10_2 = function lambda$10_2(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = castTo(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAt(srcArray_2, srcPos_3)),
    28
  );
  !value_0
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(
        destArray_0,
        toInt_0(destPos_1),
        new idwca.BigIntegerWrapper(value_0)
      ));
};
idwcas3.lambda$11_4 = function lambda$11_4(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = castTo(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAt(srcArray_2, srcPos_3)),
    217
  );
  !value_0
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(
        destArray_0,
        toInt_0(destPos_1),
        new idwca.LocalDateWrapper_0(value_0)
      ));
};
idwcas3.lambda$12_2 = function lambda$12_2(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = castTo(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAt(srcArray_2, srcPos_3)),
    218
  );
  !value_0
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(
        destArray_0,
        toInt_0(destPos_1),
        new idwca.LocalTimeWrapper(value_0)
      ));
};
idwcas3.lambda$13_0 = function lambda$13_0(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 =
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3));
  value_0 == null
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(typeof value_0 == "boolean"),
      jb.asBoolean(value_0)
        ? (jb.checkCriticalType_0(
            destArray_0 == null || jb.hasLength(destArray_0)
          ),
          jb.$setAt(destArray_0, toInt_0(destPos_1), true))
        : (jb.checkCriticalType_0(
            destArray_0 == null || jb.hasLength(destArray_0)
          ),
          jb.$setAt(destArray_0, toInt_0(destPos_1), false)));
};
idwcas3.lambda$14_3 = function lambda$14_3(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = jb.$asInt(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3))
  );
  value_0 == $intern_22
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), value_0));
};
idwcas3.lambda$15_3 = function lambda$15_3(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = jb.asByte_0(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3))
  );
  value_0 == $intern_53
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), value_0));
};
idwcas3.lambda$16_2 = function lambda$16_2(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = jb.asShort_0(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3))
  );
  value_0 == $intern_54
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), value_0));
};
idwcas3.lambda$17 = function lambda$17(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = jb.$asDouble(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3))
  );
  value_0 == $intern_61
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), value_0));
};
idwcas3.lambda$18_0 = function lambda$18_0(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = jb.asDouble_0(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3))
  );
  value_0 == $intern_60
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), value_0));
};
idwcas3.lambda$19_0 = function lambda$19_0(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = jb.asChar_0(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3))
  );
  value_0 == $intern_10
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), value_0));
};
idwcas3.lambda$3_1 = function lambda$3_1(addedColumn_0, c_1) {
  return c_1.index_0 == addedColumn_0.columnIndex;
};
idwcas3.lambda$6_3 = function lambda$6_3(modifiedColumn_0, c_1) {
  return c_1.index_0 == modifiedColumn_0.columnIndex;
};
idwcas3.lambda$7_2 = function lambda$7_2(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = jb.$asLong(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3))
  );
  eq(value_0, $intern_59)
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(
        destArray_0,
        toInt_0(destPos_1),
        new idwca.LongWrapper(value_0)
      ));
};
idwcas3.lambda$8_2 = function lambda$8_2(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = jb.$asLong(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAtAsAny(srcArray_2, srcPos_3))
  );
  eq(value_0, $intern_59)
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(
        destArray_0,
        toInt_0(destPos_1),
        new idwca.DateWrapper(value_0)
      ));
};
idwcas3.lambda$9_1 = function lambda$9_1(
  destArray_0,
  destPos_1,
  srcArray_2,
  srcPos_3
) {
  var value_0;
  value_0 = castTo(
    (jb.checkCriticalType_0(srcArray_2 == null || jb.hasLength(srcArray_2)),
    jb.$getAt(srcArray_2, srcPos_3)),
    50
  );
  !value_0
    ? (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(destArray_0, toInt_0(destPos_1), null))
    : (jb.checkCriticalType_0(destArray_0 == null || jb.hasLength(destArray_0)),
      jb.$setAt(
        destArray_0,
        toInt_0(destPos_1),
        new idwca.BigDecimalWrapper(value_0)
      ));
};
defineClass(341, 1, {}, idwcas3.SubscriptionTableData);
_.rowStyleColumn = 0;
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData",
    341
  );
idwcas3.SubscriptionTableData$0methodref$removeRange$Type =
  function SubscriptionTableData$0methodref$removeRange$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  563,
  1,
  $intern_19,
  idwcas3.SubscriptionTableData$0methodref$removeRange$Type
);
_.accept = function accept_54(arg0) {
  idwsd.$removeRange(this.$$outer_0, castTo(arg0, 24));
};
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData$0methodref$removeRange$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData/0methodref$removeRange$Type",
    563
  );
idwcas3.SubscriptionTableData$1methodref$addRange$Type =
  function SubscriptionTableData$1methodref$addRange$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  564,
  1,
  $intern_19,
  idwcas3.SubscriptionTableData$1methodref$addRange$Type
);
_.accept = function accept_55(arg0) {
  idwsd.$addRange(this.$$outer_0, castTo(arg0, 24));
};
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData$1methodref$addRange$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData/1methodref$addRange$Type",
    564
  );
idwcas3.SubscriptionTableData$2methodref$addRange$Type =
  function SubscriptionTableData$2methodref$addRange$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  565,
  1,
  $intern_19,
  idwcas3.SubscriptionTableData$2methodref$addRange$Type
);
_.accept = function accept_56(arg0) {
  idwsd.$addRange(this.$$outer_0, castTo(arg0, 24));
};
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData$2methodref$addRange$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData/2methodref$addRange$Type",
    565
  );
idwcas3.$$init_32 = function $$init_32(this$static) {};
idwcas3.$append_1 = function $append_1(this$static, key) {
  if (compare_1(key, 0) < 0) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  if (eq(this$static.currentFirst, -1)) {
    this$static.currentFirst = key;
    this$static.currentLast = key;
    return;
  }
  if (eq(key, add_1(this$static.currentLast, 1))) {
    this$static.currentLast = key;
  } else if (eq(key, sub_3(this$static.currentFirst, 1))) {
    this$static.currentFirst = key;
  } else {
    idwsd.$addRange(
      this$static.rangeSet,
      new idwsd.Range_0(this$static.currentFirst, this$static.currentLast)
    );
    this$static.currentFirst = key;
    this$static.currentLast = key;
  }
};
idwcas3.$flush_0 = function $flush_0(this$static) {
  if (neq(this$static.currentFirst, -1)) {
    idwsd.$addRange(
      this$static.rangeSet,
      new idwsd.Range_0(this$static.currentFirst, this$static.currentLast)
    );
    this$static.currentFirst = -1;
  }
};
idwcas3.SubscriptionTableData$RangeSetAppendHelper =
  function SubscriptionTableData$RangeSetAppendHelper(rangeSet) {
    idwcas3.$$init_32(this);
    this.rangeSet = rangeSet;
  };
defineClass(342, 1, {}, idwcas3.SubscriptionTableData$RangeSetAppendHelper);
_.currentFirst = -1;
_.currentLast = 0;
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData$RangeSetAppendHelper_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData/RangeSetAppendHelper",
    342
  );
idwcas3.SubscriptionTableData$SubscriptionRow =
  function SubscriptionTableData$SubscriptionRow(this$0, index_0) {
    this.this$01 = this$0;
    this.index_0 = index_0;
  };
defineClass(
  246,
  1,
  { 165: 1, 246: 1 },
  idwcas3.SubscriptionTableData$SubscriptionRow
);
_.get = function get_8(column) {
  var columnData, redirectedIndex;
  redirectedIndex = toInt_0(
    castTo(
      ju.$get_17(this.this$01.redirectedIndexes, jl.valueOf_30(this.index_0)),
      66
    ).value_0
  );
  columnData = jb.asArrayLike(this.this$01.data_0[column.index_0]);
  return jb.$getAtAsAny(columnData, redirectedIndex);
};
_.getFormat = function getFormat_3(column) {
  var cellColors,
    colors,
    formatString,
    formatStrings,
    numberFormat,
    redirectedIndex,
    rowColors,
    rowStyle;
  cellColors = 0;
  rowColors = 0;
  numberFormat = null;
  formatString = null;
  redirectedIndex = toInt_0(
    castTo(
      ju.$get_17(this.this$01.redirectedIndexes, jl.valueOf_30(this.index_0)),
      66
    ).value_0
  );
  if (column.styleColumnIndex) {
    colors = this.this$01.data_0[column.styleColumnIndex.value_0];
    cellColors = jb.$asLong(jb.$getAtAsAny(colors, redirectedIndex));
  }
  if (this.this$01.rowStyleColumn != -1) {
    rowStyle = this.this$01.data_0[this.this$01.rowStyleColumn];
    rowColors = jb.$asLong(jb.$getAtAsAny(rowStyle, redirectedIndex));
  }
  if (column.formatColumnIndex) {
    formatStrings = this.this$01.data_0[column.formatColumnIndex.value_0];
    numberFormat = jb.$asString_2(
      jb.$getAtAsAny(formatStrings, redirectedIndex)
    );
  }
  if (column.formatStringColumnIndex) {
    formatStrings = this.this$01.data_0[column.formatStringColumnIndex.value_0];
    formatString = jb.$asString_2(
      jb.$getAtAsAny(formatStrings, redirectedIndex)
    );
  }
  return new idwca.Format(cellColors, rowColors, numberFormat, formatString);
};
defineProperties(_, {
  index: {
    get: function getIndex() {
      !this.indexCached &&
        (this.indexCached = new idwca.LongWrapper(this.index_0));
      return this.indexCached;
    },
  },
});
_.index_0 = 0;
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData$SubscriptionRow_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData/SubscriptionRow",
    246
  );
idwcas3.$get_8 = function $get_8(this$static, index_0) {
  return new idwcas3.SubscriptionTableData$SubscriptionRow(
    this$static.this$01,
    index_0
  );
};
idwcas3.$getAdded = function $getAdded(this$static) {
  return this$static.added_0;
};
idwcas3.$getColumns_0 = function $getColumns_0(this$static) {
  return this$static.this$01.columns_0;
};
idwcas3.$getData_0 = function $getData_0(this$static, index_0, column) {
  var columnData, redirectedIndex;
  redirectedIndex = toInt_0(
    castTo(
      ju.$get_17(this$static.this$01.redirectedIndexes, jl.valueOf_30(index_0)),
      66
    ).value_0
  );
  columnData = jb.asArrayLike(this$static.this$01.data_0[column.index_0]);
  return jb.$getAtAsAny(columnData, redirectedIndex);
};
idwcas3.$getFormat_0 = function $getFormat_0(this$static, index_0, column) {
  var cellColors,
    colors,
    formatString,
    formatStrings,
    numberFormat,
    redirectedIndex,
    rowColors,
    rowStyle;
  cellColors = 0;
  rowColors = 0;
  numberFormat = null;
  formatString = null;
  redirectedIndex = toInt_0(
    castTo(
      ju.$get_17(this$static.this$01.redirectedIndexes, jl.valueOf_30(index_0)),
      66
    ).value_0
  );
  if (column.styleColumnIndex) {
    colors = this$static.this$01.data_0[column.styleColumnIndex.value_0];
    cellColors = jb.$asLong(jb.$getAtAsAny(colors, redirectedIndex));
  }
  if (this$static.this$01.rowStyleColumn != -1) {
    rowStyle = this$static.this$01.data_0[this$static.this$01.rowStyleColumn];
    rowColors = jb.$asLong(jb.$getAtAsAny(rowStyle, redirectedIndex));
  }
  if (column.formatColumnIndex) {
    formatStrings =
      this$static.this$01.data_0[column.formatColumnIndex.value_0];
    numberFormat = jb.$asString_2(
      jb.$getAtAsAny(formatStrings, redirectedIndex)
    );
  }
  if (column.formatStringColumnIndex) {
    formatStrings =
      this$static.this$01.data_0[column.formatStringColumnIndex.value_0];
    formatString = jb.$asString_2(
      jb.$getAtAsAny(formatStrings, redirectedIndex)
    );
  }
  return new idwca.Format(cellColors, rowColors, numberFormat, formatString);
};
idwcas3.$getFullIndex = function $getFullIndex(this$static) {
  return new idwca.JsRangeSet(this$static.this$01.index_0);
};
idwcas3.$getModified = function $getModified(this$static) {
  return this$static.modified_0;
};
idwcas3.$getRemoved = function $getRemoved(this$static) {
  return this$static.removed_0;
};
idwcas3.$getRows = function $getRows(this$static) {
  if (this$static.allRows == null) {
    this$static.allRows = new $wnd.Array();
    ju.$forEachRemaining_4(
      jus.$iterator_19(
        jus.$flatMapToLong(
          ju.stream_4(this$static.this$01.index_0.sortedRanges),
          new idwsd.RangeSet$lambda$0$Type()
        )
      ),
      new idwcas3.SubscriptionTableData$UpdateEventData$lambda$0$Type(
        this$static
      )
    );
  }
  return this$static.allRows;
};
idwcas3.$lambda$0_5 = function $lambda$0_5(this$static, index_0) {
  this$static.allRows.push(
    new idwcas3.SubscriptionTableData$SubscriptionRow(
      this$static.this$01,
      index_0
    )
  );
};
idwcas3.SubscriptionTableData$UpdateEventData =
  function SubscriptionTableData$UpdateEventData(
    this$0,
    added,
    removed,
    modified
  ) {
    this.this$01 = this$0;
    this.added_0 = new idwca.JsRangeSet(added);
    this.removed_0 = new idwca.JsRangeSet(removed);
    this.modified_0 = new idwca.JsRangeSet(modified);
  };
defineClass(
  247,
  1,
  { 368: 1, 247: 1 },
  idwcas3.SubscriptionTableData$UpdateEventData
);
_.get_2 = function get_10(index_0) {
  return new idwcas3.SubscriptionTableData$SubscriptionRow(
    this.this$01,
    index_0
  );
};
_.get = function get_11(index_0) {
  return idwca.$get_3(this, index_0);
};
_.getData = function getData_1(index_0, column) {
  return idwca.$getData(this, index_0, column);
};
_.getFormat = function getFormat_6(index_0, column) {
  return idwca.$getFormat(this, index_0, column);
};
_.get_1 = function get_9(index_0) {
  return idwcas3.$get_8(this, cggl.createSmallLongEmul0(index_0));
};
defineProperties(_, {
  added: {
    get: function getAdded() {
      return idwcas3.$getAdded(this);
    },
  },
});
defineProperties(_, {
  columns: {
    get: function getColumns_3() {
      return idwcas3.$getColumns_0(this);
    },
  },
});
_.getData_0 = function getData(index_0, column) {
  return idwcas3.$getData_0(this, cggl.createSmallLongEmul0(index_0), column);
};
_.getData_1 = function getData_0(index_0, column) {
  return idwcas3.$getData_0(this, index_0, column);
};
_.getFormat_0 = function getFormat_4(index_0, column) {
  return idwcas3.$getFormat_0(this, cggl.createSmallLongEmul0(index_0), column);
};
_.getFormat_1 = function getFormat_5(index_0, column) {
  return idwcas3.$getFormat_0(this, index_0, column);
};
defineProperties(_, {
  fullIndex: {
    get: function getFullIndex() {
      return idwcas3.$getFullIndex(this);
    },
  },
});
defineProperties(_, {
  modified: {
    get: function getModified() {
      return idwcas3.$getModified(this);
    },
  },
});
defineProperties(_, {
  removed: {
    get: function getRemoved_0() {
      return idwcas3.$getRemoved(this);
    },
  },
});
defineProperties(_, {
  rows: {
    get: function getRows() {
      return idwcas3.$getRows(this);
    },
  },
});
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData$UpdateEventData_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData/UpdateEventData",
    247
  );
idwcas3.SubscriptionTableData$UpdateEventData$lambda$0$Type =
  function SubscriptionTableData$UpdateEventData$lambda$0$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  561,
  1,
  $intern_42,
  idwcas3.SubscriptionTableData$UpdateEventData$lambda$0$Type
);
_.accept_0 = function accept_57(arg0) {
  idwcas3.$lambda$0_5(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData$UpdateEventData$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData/UpdateEventData/lambda$0$Type",
    561
  );
idwcas3.$getClass_310 = function $getClass_310() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$0$Type =
  function SubscriptionTableData$lambda$0$Type(i_0) {
    this.i_0 = i_0;
  };
defineClass(
  1326,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$0$Type
);
_.onInvoke_0 = function onInvoke_184(arg0, arg1, arg2) {
  return idwcas3.lambda$0_7(this.i_0, castTo(arg0, 21));
};
_.i_0 = 0;
idwcas3.SubscriptionTableData$lambda$1$Type =
  function SubscriptionTableData$lambda$1$Type($$outer_0, reusableHelper_1) {
    this.$$outer_0 = $$outer_0;
    this.reusableHelper_1 = reusableHelper_1;
  };
defineClass(562, 1, $intern_42, idwcas3.SubscriptionTableData$lambda$1$Type);
_.accept_0 = function accept_58(arg0) {
  idwcas3.$lambda$1_4(this.$$outer_0, this.reusableHelper_1, arg0);
};
cggl.Lio_deephaven_web_client_api_subscription_SubscriptionTableData$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "SubscriptionTableData/lambda$1$Type",
    562
  );
idwcas3.$getClass_311 = function $getClass_311() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$10$Type =
  function SubscriptionTableData$lambda$10$Type() {};
defineClass(
  1332,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$10$Type
);
_.copyTo = function copyTo(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$10_2(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_312 = function $getClass_312() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$11$Type =
  function SubscriptionTableData$lambda$11$Type() {};
defineClass(
  1333,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$11$Type
);
_.copyTo = function copyTo_0(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$11_4(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_313 = function $getClass_313() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$12$Type =
  function SubscriptionTableData$lambda$12$Type() {};
defineClass(
  1334,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$12$Type
);
_.copyTo = function copyTo_1(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$12_2(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_314 = function $getClass_314() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$13$Type =
  function SubscriptionTableData$lambda$13$Type() {};
defineClass(
  1335,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$13$Type
);
_.copyTo = function copyTo_2(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$13_0(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_315 = function $getClass_315() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$14$Type =
  function SubscriptionTableData$lambda$14$Type() {};
defineClass(
  1336,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$14$Type
);
_.copyTo = function copyTo_3(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$14_3(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_316 = function $getClass_316() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$15$Type =
  function SubscriptionTableData$lambda$15$Type() {};
defineClass(
  1337,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$15$Type
);
_.copyTo = function copyTo_4(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$15_3(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_317 = function $getClass_317() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$16$Type =
  function SubscriptionTableData$lambda$16$Type() {};
defineClass(
  1338,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$16$Type
);
_.copyTo = function copyTo_5(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$16_2(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_318 = function $getClass_318() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$17$Type =
  function SubscriptionTableData$lambda$17$Type() {};
defineClass(
  1339,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$17$Type
);
_.copyTo = function copyTo_6(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$17(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_319 = function $getClass_319() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$18$Type =
  function SubscriptionTableData$lambda$18$Type() {};
defineClass(
  1340,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$18$Type
);
_.copyTo = function copyTo_7(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$18_0(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_320 = function $getClass_320() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$19$Type =
  function SubscriptionTableData$lambda$19$Type() {};
defineClass(
  1341,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$19$Type
);
_.copyTo = function copyTo_8(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$19_0(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_321 = function $getClass_321() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$20$Type =
  function SubscriptionTableData$lambda$20$Type() {};
defineClass(
  1342,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$20$Type
);
_.copyTo = function copyTo_9(destArray, destPos, srcArray, srcPos) {
  jb.checkCriticalType_0(destArray == null || jb.hasLength(destArray));
  jb.$setAt(
    destArray,
    toInt_0(destPos),
    (jb.checkCriticalType_0(srcArray == null || jb.hasLength(srcArray)),
    jb.$getAt(srcArray, srcPos))
  );
};
idwcas3.$getClass_322 = function $getClass_322() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$3$Type =
  function SubscriptionTableData$lambda$3$Type(addedColumn_0) {
    this.addedColumn_0 = addedColumn_0;
  };
defineClass(
  1327,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$3$Type
);
_.onInvoke_0 = function onInvoke_185(arg0, arg1, arg2) {
  return idwcas3.lambda$3_1(this.addedColumn_0, castTo(arg0, 21));
};
idwcas3.$getClass_323 = function $getClass_323() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$6$Type =
  function SubscriptionTableData$lambda$6$Type(modifiedColumn_0) {
    this.modifiedColumn_0 = modifiedColumn_0;
  };
defineClass(
  1328,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$6$Type
);
_.onInvoke_0 = function onInvoke_186(arg0, arg1, arg2) {
  return idwcas3.lambda$6_3(this.modifiedColumn_0, castTo(arg0, 21));
};
idwcas3.$getClass_324 = function $getClass_324() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$7$Type =
  function SubscriptionTableData$lambda$7$Type() {};
defineClass(
  1329,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$7$Type
);
_.copyTo = function copyTo_10(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$7_2(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_325 = function $getClass_325() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$8$Type =
  function SubscriptionTableData$lambda$8$Type() {};
defineClass(
  1330,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$8$Type
);
_.copyTo = function copyTo_11(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$8_2(destArray, destPos, srcArray, srcPos);
};
idwcas3.$getClass_326 = function $getClass_326() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.SubscriptionTableData$lambda$9$Type =
  function SubscriptionTableData$lambda$9$Type() {};
defineClass(
  1331,
  $wnd.Function,
  {},
  idwcas3.SubscriptionTableData$lambda$9$Type
);
_.copyTo = function copyTo_12(destArray, destPos, srcArray, srcPos) {
  idwcas3.lambda$9_1(destArray, destPos, srcArray, srcPos);
};
idwcas3.$close_2 = function $close_2(this$static) {
  this$static.copy_0.then(
    makeLambdaFunction(
      idwcas3.TableSubscription$lambda$4$Type.prototype.onInvoke_5,
      idwcas3.TableSubscription$lambda$4$Type,
      []
    )
  );
};
idwcas3.$getColumns_1 = function $getColumns_1(this$static) {
  return this$static.columns_0;
};
idwcas3.$handleDelta_0 = function $handleDelta_0(this$static, delta) {
  idwcas3.$handleDelta(this$static.data_0, delta);
};
idwcas3.$handleSnapshot_2 = function $handleSnapshot_2(this$static, snapshot) {
  idwcas3.$handleSnapshot_1(this$static.data_0, snapshot);
};
idwcas3.$lambda$0_6 = function $lambda$0_6(this$static, columns_1, table_1) {
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcas3.TableSubscription$lambda$1$Type.prototype.onInvoke_6,
      idwcas3.TableSubscription$lambda$1$Type,
      [this$static, table_1, columns_1]
    )
  );
};
idwcas3.$lambda$1_5 = function $lambda$1_5(
  this$static,
  table_1,
  columns_2,
  resolve_2
) {
  idwcs.$onRunning_0(
    idwca.$state(table_1),
    makeLambdaFunction(
      idwcas3.TableSubscription$lambda$2$Type.prototype.apply_3,
      idwcas3.TableSubscription$lambda$2$Type,
      [this$static, table_1, columns_2, resolve_2]
    ),
    makeLambdaFunction(
      idwcas3.TableSubscription$0methodref$close$Type.prototype.run,
      idwcas3.TableSubscription$0methodref$close$Type,
      [table_1]
    )
  );
};
idwcas3.$lambda$2_1 = function $lambda$2_1(
  this$static,
  table_1,
  columns_2,
  resolve_3
) {
  idwca.$internalSubscribe(table_1, columns_2, this$static);
  resolve_3(table_1);
};
idwcas3.TableSubscription = function TableSubscription(columns, existingTable) {
  var rowStyleColumn;
  idwca.HasEventHandling.call(this);
  this.copy_0 = $wnd.Promise.resolve(new idwca.JsTable(existingTable)).then(
    makeLambdaFunction(
      idwcas3.TableSubscription$lambda$0$Type.prototype.onInvoke_5,
      idwcas3.TableSubscription$lambda$0$Type,
      [this, columns]
    )
  );
  this.columns_0 = columns;
  rowStyleColumn = jl.valueOf_29(
    !idwca.$state(existingTable).rowFormatColumn
      ? -1
      : idwca.$state(existingTable).rowFormatColumn.index_0
  );
  this.data_0 = new idwcas3.SubscriptionTableData(
    columns,
    rowStyleColumn.value_0,
    this
  );
};
idwcas3.lambda$4_6 = function lambda$4_6(table_0) {
  idwca.$close_0(table_0);
  return $wnd.Promise.resolve(table_0);
};
defineClass(286, 57, { 57: 1, 286: 1 }, idwcas3.TableSubscription);
_.close = function close_3() {
  idwcas3.$close_2(this);
};
defineProperties(_, {
  columns: {
    get: function getColumns_4() {
      return idwcas3.$getColumns_1(this);
    },
  },
});
idwcas3.EVENT_UPDATED_0 = "updated";
cggl.Lio_deephaven_web_client_api_subscription_TableSubscription_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "TableSubscription",
    286
  );
idwcas3.$getClass_327 = function $getClass_327() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableSubscription$0methodref$close$Type =
  function TableSubscription$0methodref$close$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1363,
  $wnd.Function,
  $intern_49,
  idwcas3.TableSubscription$0methodref$close$Type
);
_.run = function run_28() {
  idwca.$close_0(this.$$outer_0);
};
idwcas3.$getClass_328 = function $getClass_328() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableSubscription$lambda$0$Type =
  function TableSubscription$lambda$0$Type($$outer_0, columns_1) {
    this.$$outer_0 = $$outer_0;
    this.columns_1 = columns_1;
  };
defineClass(
  1360,
  $wnd.Function,
  $intern_36,
  idwcas3.TableSubscription$lambda$0$Type
);
_.onInvoke_5 = function onInvoke_187(arg0) {
  return idwcas3.$lambda$0_6(this.$$outer_0, this.columns_1, castTo(arg0, 13));
};
idwcas3.$getClass_329 = function $getClass_329() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableSubscription$lambda$1$Type =
  function TableSubscription$lambda$1$Type($$outer_0, table_1, columns_2) {
    this.$$outer_0 = $$outer_0;
    this.table_1 = table_1;
    this.columns_2 = columns_2;
  };
defineClass(1361, $wnd.Function, {}, idwcas3.TableSubscription$lambda$1$Type);
_.onInvoke_6 = function onInvoke_188(arg0, arg1) {
  idwcas3.$lambda$1_5(this.$$outer_0, this.table_1, this.columns_2, arg0);
};
idwcas3.$getClass_330 = function $getClass_330() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableSubscription$lambda$2$Type =
  function TableSubscription$lambda$2$Type(
    $$outer_0,
    table_1,
    columns_2,
    resolve_3
  ) {
    this.$$outer_0 = $$outer_0;
    this.table_1 = table_1;
    this.columns_2 = columns_2;
    this.resolve_3 = resolve_3;
  };
defineClass(
  1362,
  $wnd.Function,
  $intern_48,
  idwcas3.TableSubscription$lambda$2$Type
);
_.apply_3 = function apply_146(arg0) {
  var lastArg;
  idwcas3.$lambda$2_1(
    this.$$outer_0,
    this.table_1,
    this.columns_2,
    ((lastArg = this.resolve_3), castTo(arg0, 14), lastArg)
  );
};
idwcas3.$getClass_331 = function $getClass_331() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableSubscription$lambda$4$Type =
  function TableSubscription$lambda$4$Type() {};
defineClass(
  374,
  $wnd.Function,
  $intern_36,
  idwcas3.TableSubscription$lambda$4$Type
);
_.onInvoke_5 = function onInvoke_189(arg0) {
  return idwcas3.lambda$4_6(castTo(arg0, 13));
};
idwcas3.$$init_33 = function $$init_33(this$static) {
  this$static.status_0 =
    (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.STARTING);
};
idwcas3.$getStatus = function $getStatus(this$static) {
  if (!this$static.realized) {
    if (
      this$static.status_0 ==
      (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.ACTIVE)
    ) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "when the realized table is null, status should only be DONE or STARTING, instead is " +
            this$static.status_0
        )
      );
    }
  } else {
    if (this$static.realized.currentState) {
      if (
        this$static.status_0 !=
        (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.ACTIVE)
      ) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "realized table is alive, expected status ACTIVE, instead is " +
              this$static.status_0
          )
        );
      }
    } else {
      if (
        this$static.status_0 !=
        (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.DONE)
      ) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "realized table is closed, expected status DONE, instead is " +
              this$static.status_0
          )
        );
      }
    }
  }
  return this$static.status_0;
};
idwcas3.$internalClose = function $internalClose(this$static) {
  this$static.originalActive = false;
  if (
    this$static.retained ||
    this$static.status_0 ==
      (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.DONE)
  ) {
    return;
  }
  this$static.status_0 =
    (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.DONE);
  this$static.realized = null;
  this$static.copy_0.then(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$12$Type.prototype.onInvoke_5,
      idwcas3.TableViewportSubscription$lambda$12$Type,
      []
    )
  );
};
idwcas3.$lambda$0_7 = function $lambda$0_7(
  this$static,
  columns_1,
  firstRow_2,
  lastRow_4,
  table_3
) {
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$1$Type.prototype.onInvoke_6,
      idwcas3.TableViewportSubscription$lambda$1$Type,
      [this$static, table_3, columns_1, firstRow_2, lastRow_4]
    )
  );
};
idwcas3.$lambda$1_6 = function $lambda$1_6(
  this$static,
  table_1,
  columns_2,
  firstRow_3,
  lastRow_5,
  resolve_4
) {
  idwcs.$onRunning_0(
    this$static.originalState,
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$2$Type.prototype.apply_3,
      idwcas3.TableViewportSubscription$lambda$2$Type,
      [this$static, table_1, columns_2, firstRow_3, lastRow_5, resolve_4]
    ),
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$6methodref$close$Type.prototype.run,
      idwcas3.TableViewportSubscription$6methodref$close$Type,
      [table_1]
    )
  );
};
idwcas3.$lambda$14_2 = function $lambda$14_2(
  this$static,
  columns_1,
  rows_2,
  table_2
) {
  var columnBitset, columnTypes, state;
  state = idwca.$lastVisibleState(table_2);
  columnTypes = castTo(
    jus.$toArray_6(
      jus.$map_0(
        ju.stream_4(state.tableDef.columns_0),
        new idwcas3.TableViewportSubscription$8methodref$getType$Type()
      ),
      new idwcas3.TableViewportSubscription$9methodref$lambda$16$Type()
    ),
    12
  );
  columnBitset = idwcs.$makeBitset(idwca.$lastVisibleState(table_2), columns_1);
  return idwca
    .promise_2(
      this$static,
      new idwcas3.TableViewportSubscription$lambda$17$Type(
        table_2,
        columnBitset,
        rows_2,
        state,
        columnTypes
      )
    )
    .then(
      makeLambdaFunction(
        idwcas3.TableViewportSubscription$lambda$25$Type.prototype.onInvoke_5,
        idwcas3.TableViewportSubscription$lambda$25$Type,
        []
      )
    )
    .then(
      makeLambdaFunction(
        idwcas3.TableViewportSubscription$lambda$24$Type.prototype.onInvoke_5,
        idwcas3.TableViewportSubscription$lambda$24$Type,
        [columns_1, state]
      )
    )
    .then(
      makeLambdaFunction(
        idwcas3.TableViewportSubscription$lambda$25$Type.prototype.onInvoke_5,
        idwcas3.TableViewportSubscription$lambda$25$Type,
        []
      )
    );
};
idwcas3.$lambda$2_2 = function $lambda$2_2(
  this$static,
  table_1,
  columns_2,
  firstRow_3,
  lastRow_5,
  resolve_7,
  newState_5
) {
  var columnsToSub, init, originalSize;
  if (
    this$static.status_0 ==
    (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.DONE)
  ) {
    idwca.$close_0(table_1);
    return;
  }
  idwca.$batch(
    table_1,
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$4$Type.prototype.apply_3,
      idwcas3.TableViewportSubscription$lambda$4$Type,
      [newState_5]
    )
  );
  columnsToSub = table_1.isBlinkTable_0
    ? idwca.$lastVisibleState(table_1).columns_0
    : columns_2;
  idwca.$setInternalViewport(table_1, firstRow_3, lastRow_5, columnsToSub);
  idwca.$addEventListener(
    table_1,
    "updated",
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$0methodref$refire$Type.prototype
        .onEvent,
      idwcas3.TableViewportSubscription$0methodref$refire$Type,
      [this$static]
    )
  );
  idwca.$addEventListener(
    table_1,
    "rowadded",
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$1methodref$refire$Type.prototype
        .onEvent,
      idwcas3.TableViewportSubscription$1methodref$refire$Type,
      [this$static]
    )
  );
  idwca.$addEventListener(
    table_1,
    "rowremoved",
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$2methodref$refire$Type.prototype
        .onEvent,
      idwcas3.TableViewportSubscription$2methodref$refire$Type,
      [this$static]
    )
  );
  idwca.$addEventListener(
    table_1,
    "rowupdated",
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$3methodref$refire$Type.prototype
        .onEvent,
      idwcas3.TableViewportSubscription$3methodref$refire$Type,
      [this$static]
    )
  );
  idwca.$addEventListener(
    table_1,
    "sizechanged",
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$4methodref$refire$Type.prototype
        .onEvent,
      idwcas3.TableViewportSubscription$4methodref$refire$Type,
      [this$static]
    )
  );
  idwca.$addEventListener(
    table_1,
    "requestfailed",
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$5methodref$refire$Type.prototype
        .onEvent,
      idwcas3.TableViewportSubscription$5methodref$refire$Type,
      [this$static]
    )
  );
  originalSize = toDouble_0(newState_5.size_0);
  this$static.realized = table_1;
  this$static.status_0 = idwcas3.ACTIVE;
  if (idwca.$getSize(this$static.realized) != originalSize) {
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
      $intern_7,
      1,
      5,
      [
        "firing size changed to transition between table managing its own size changes and viewport sub taking over",
        ji.uncheckedCast(idwca.$getSize(this$static.realized)),
      ]
    );
    init = jb.emptyObjectLiteral();
    init.detail = ji.uncheckedCast(idwca.$getSize(this$static.realized));
    idwcas3.$refire(this$static, new $wnd.CustomEvent("sizechanged", init));
  }
  resolve_7(table_1);
};
idwcas3.$refire = function $refire(this$static, e) {
  idwca.$fireEvent_0(this$static, e.type, e);
  this$static.originalActive &&
    this$static.originalState == idwca.$state(this$static.original) &&
    idwca.$fireEvent_0(this$static.original, e.type, e);
};
idwcas3.$setInternalViewport_0 = function $setInternalViewport_0(
  this$static,
  firstRow,
  lastRow,
  columns,
  updateIntervalMs
) {
  if (
    updateIntervalMs != null &&
    this$static.refresh_0 !=
      ji.unsafeCastToDouble(
        (ji.checkCriticalNotNull(updateIntervalMs), updateIntervalMs)
      )
  ) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Can't change refreshIntervalMs on a later call to setViewport, it must be consistent or omitted"
      )
    );
  }
  this$static.copy_0.then(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$11$Type.prototype.onInvoke_5,
      idwcas3.TableViewportSubscription$lambda$11$Type,
      [firstRow, lastRow, columns]
    )
  );
};
idwcas3.$size = function $size(this$static) {
  if (
    idwcas3.$getStatus(this$static) !=
    (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.ACTIVE)
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return idwca.$getSize(this$static.realized);
};
idwcas3.$totalSize = function $totalSize(this$static) {
  if (
    idwcas3.$getStatus(this$static) !=
    (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.ACTIVE)
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return idwca.$getTotalSize(this$static.realized);
};
idwcas3.TableViewportSubscription = function TableViewportSubscription(
  firstRow,
  lastRow,
  columns,
  updateIntervalMs,
  existingTable
) {
  idwca.HasEventHandling.call(this);
  idwcas3.$$init_33(this);
  this.refresh_0 =
    updateIntervalMs == null
      ? $intern_21
      : ji.unsafeCastToDouble(
          (ji.checkCriticalNotNull(updateIntervalMs), updateIntervalMs)
        );
  this.original = existingTable;
  this.originalState = idwca.$state(this.original);
  this.copy_0 = $wnd.Promise.resolve(new idwca.JsTable(existingTable)).then(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$0$Type.prototype.onInvoke_5,
      idwcas3.TableViewportSubscription$lambda$0$Type,
      [this, columns, firstRow, lastRow]
    )
  );
};
idwcas3.lambda$11_5 = function lambda$11_5(
  firstRow_0,
  lastRow_2,
  columns_4,
  table_3
) {
  table_3.isBlinkTable_0 ||
    idwca.$setInternalViewport(table_3, firstRow_0, lastRow_2, columns_4);
  return $wnd.Promise.resolve(table_3);
};
idwcas3.lambda$12_3 = function lambda$12_3(table_0) {
  idwca.$close_0(table_0);
  return $wnd.Promise.resolve(table_0);
};
idwcas3.lambda$17_0 = function lambda$17_0(
  table_0,
  columnBitset_1,
  rows_2,
  state_3,
  columnTypes_4,
  callback_5
) {
  var columnsOffset,
    connection,
    doGetRequest,
    request,
    serializationOptionsOffset,
    stream,
    tableTicketOffset,
    viewportOffset;
  connection = table_0.workerConnection;
  stream = idwcabs.$create(
    new idwcabs.BiDiStream$Factory(
      new idwca.WorkerConnection$25methodref$metadata$Type(connection),
      new idwca.WorkerConnection$26methodref$newTicketInt$Type(
        connection.config
      )
    ),
    new idwcas3.TableViewportSubscription$lambda$18$Type(connection),
    new idwcas3.TableViewportSubscription$lambda$19$Type(connection),
    new idwcas3.TableViewportSubscription$lambda$20$Type(connection),
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData()
  );
  doGetRequest = new $wnd.dhinternal.flatbuffers.Builder(1024);
  columnsOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.createColumnsVector(
      doGetRequest,
      idwcab.makeUint8ArrayFromBitset(columnBitset_1)
    );
  viewportOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.createViewportVector(
      doGetRequest,
      idwcab.serializeRanges(ju.singleton(rows_2.range_0))
    );
  serializationOptionsOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotOptions.createBarrageSnapshotOptions(
      doGetRequest,
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io
        .deephaven.barrage.flatbuf.ColumnConversionMode.Stringify,
      true,
      0,
      0
    );
  tableTicketOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.createTicketVector(
      doGetRequest,
      state_3.handle.ticket_0
    );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.startBarrageSnapshotRequest(
    doGetRequest
  );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.addTicket(
    doGetRequest,
    tableTicketOffset
  );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.addColumns(
    doGetRequest,
    columnsOffset
  );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.addSnapshotOptions(
    doGetRequest,
    serializationOptionsOffset
  );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.addViewport(
    doGetRequest,
    viewportOffset
  );
  doGetRequest.finish(
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSnapshotRequest.endBarrageSnapshotRequest(
      doGetRequest
    )
  );
  request = new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData();
  request.setAppMetadata(
    idwcab.wrapMessage(
      doGetRequest,
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io
        .deephaven.barrage.flatbuf.BarrageMessageType.BarrageSnapshotRequest
    )
  );
  stream.send_0(request);
  stream.end_0();
  stream.onData(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$22$Type.prototype.apply_3,
      idwcas3.TableViewportSubscription$lambda$22$Type,
      [columnTypes_4, rows_2, callback_5]
    )
  );
  stream.onStatus(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$23$Type.prototype.apply_3,
      idwcas3.TableViewportSubscription$lambda$23$Type,
      [callback_5]
    )
  );
};
idwcas3.lambda$18_1 = function lambda$18_1(connection_0, headers_1) {
  return connection_0.flightServiceClient.doExchange(headers_1);
};
idwcas3.lambda$19_1 = function lambda$19_1(connection_0, first_1, headers_2) {
  return connection_0.browserFlightServiceClient.openDoExchange(
    first_1,
    headers_2
  );
};
idwcas3.lambda$20_0 = function lambda$20_0(
  connection_0,
  next_1,
  headers_2,
  c_3
) {
  return connection_0.browserFlightServiceClient.nextDoExchange(
    next_1,
    headers_2,
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$10methodref$apply$Type.prototype
        .onInvoke_7,
      idwcas3.TableViewportSubscription$10methodref$apply$Type,
      [c_3]
    )
  );
};
idwcas3.lambda$22 = function lambda$22(
  columnTypes_0,
  rows_1,
  callback_2,
  flightData_3
) {
  var appMetadataBytes,
    barrageMessageWrapper,
    end,
    expectedCount,
    header,
    message,
    range,
    rangeIterator,
    snapshot,
    update;
  message =
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.Message.getRootAsMessage(
      new $wnd.dhinternal.flatbuffers.ByteBuffer(
        flightData_3.getDataHeader_asU8()
      )
    );
  if (
    message.headerType() ==
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.MessageHeader.Schema
  ) {
    return;
  }
  if (
    message.headerType() !=
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.MessageHeader.RecordBatch
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  header = castToNative(
    message.header(
      new $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch()
    ),
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.RecordBatch
  );
  appMetadataBytes = flightData_3.getAppMetadata_asU8();
  update = null;
  if (appMetadataBytes.length != 0) {
    barrageMessageWrapper =
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageMessageWrapper.getRootAsBarrageMessageWrapper(
        new $wnd.dhinternal.flatbuffers.ByteBuffer(appMetadataBytes)
      );
    update =
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageUpdateMetadata.getRootAsBarrageUpdateMetadata(
        new $wnd.dhinternal.flatbuffers.ByteBuffer(
          new $wnd.Uint8Array(barrageMessageWrapper.msgPayloadArray())
        )
      );
  }
  snapshot = idwcab.createSnapshot(
    header,
    idwcab.typedArrayToLittleEndianByteBuffer_0(
      flightData_3.getDataBody_asU8()
    ),
    update,
    true,
    columnTypes_0
  );
  rangeIterator = new ju.AbstractList$IteratorImpl(
    new ju.Arrays$ArrayList(rows_1.range_0.sortedRanges)
  );
  expectedCount = 0;
  while (rangeIterator.i < rangeIterator.this$01_0.size()) {
    range =
      (ji.checkCriticalElement(
        rangeIterator.i < rangeIterator.this$01_0.size()
      ),
      castTo(
        rangeIterator.this$01_0.getAtIndex(
          (rangeIterator.last_0 = rangeIterator.i++)
        ),
        24
      ));
    if (gte_0(range.first_0, snapshot.tableSize)) {
      break;
    }
    end = jl.min_1(range.last_0, snapshot.tableSize);
    expectedCount = add_1(expectedCount, add_1(sub_3(end, range.first_0), 1));
  }
  neq(
    expectedCount,
    jus.$collect_0(
      jus.$mapToLong(
        ju.stream_4(snapshot.includedRows.sortedRanges),
        new idwsd.RangeSet$0methodref$size$Type()
      )
    ).sum_0
  )
    ? callback_2.onFailure(
        "Server did not send expected number of rows, expected " +
          toString_6(expectedCount) +
          ", actual " +
          toString_6(
            jus.$collect_0(
              jus.$mapToLong(
                ju.stream_4(snapshot.includedRows.sortedRanges),
                new idwsd.RangeSet$0methodref$size$Type()
              )
            ).sum_0
          )
      )
    : callback_2.onSuccess(snapshot);
};
idwcas3.lambda$23_0 = function lambda$23_0(callback_0, status_1) {
  idwcabs.$isOk(status_1) || callback_0.onFailure(status_1.details);
};
idwcas3.lambda$24_0 = function lambda$24_0(columns_0, state_1, snapshot_2) {
  var data_0, pretendSubscription;
  pretendSubscription = new idwcas3.SubscriptionTableData(
    columns_0,
    !state_1.rowFormatColumn ? -1 : state_1.rowFormatColumn.index_0,
    null
  );
  data_0 = idwcas3.$handleSnapshot_1(pretendSubscription, snapshot_2);
  return $wnd.Promise.resolve(data_0);
};
idwcas3.lambda$26 = function lambda$26(val_0, resolve_1) {
  $wnd.goog.global.setTimeout(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$27$Type.prototype.onInvoke_4,
      idwcas3.TableViewportSubscription$lambda$27$Type,
      [resolve_1, val_0]
    ),
    0
  );
};
idwcas3.lambda$4_7 = function lambda$4_7(newState_0, batcher_1) {
  idwcab2.$customColumns(
    batcher_1,
    new ju.ArrayList_1(newState_0.customColumns_0)
  );
  idwcab2.$filter(batcher_1, new ju.ArrayList_1(newState_0.filters));
  idwcab2.$sort(batcher_1, new ju.ArrayList_1(newState_0.sorts));
  idwcab2.$setFlat(batcher_1.builder, true);
};
defineClass(117, 57, { 57: 1, 117: 1 }, idwcas3.TableViewportSubscription);
_.close = function close_4() {
  this.status_0 ==
    (idwcas3.$clinit_TableViewportSubscription$Status(), idwcas3.DONE) &&
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "TableViewportSubscription.close called on subscription that's already done.",
        ]
      )
    );
  this.retained = false;
  idwcas3.$internalClose(this);
};
_.getViewportData = function getViewportData_1() {
  this.retained = true;
  return this.copy_0.then(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$7methodref$getInternalViewportData$Type
        .prototype.onInvoke_5,
      idwcas3.TableViewportSubscription$7methodref$getInternalViewportData$Type,
      []
    )
  );
};
_.setViewport = function setViewport_1(
  firstRow,
  lastRow,
  columns,
  updateIntervalMs
) {
  this.retained = true;
  idwcas3.$setInternalViewport_0(
    this,
    firstRow,
    lastRow,
    columns,
    updateIntervalMs
  );
};
_.snapshot = function snapshot_5(rows_0, columns) {
  this.retained = true;
  return this.copy_0.then(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$14$Type.prototype.onInvoke_5,
      idwcas3.TableViewportSubscription$lambda$14$Type,
      [this, columns, rows_0]
    )
  );
};
_.originalActive = true;
_.refresh_0 = 0;
_.retained = false;
cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "TableViewportSubscription",
    117
  );
idwcas3.$getClass_332 = function $getClass_332() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$0methodref$refire$Type =
  function TableViewportSubscription$0methodref$refire$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1411,
  $wnd.Function,
  $intern_35,
  idwcas3.TableViewportSubscription$0methodref$refire$Type
);
_.onEvent = function onEvent_17(arg0) {
  idwcas3.$refire(this.$$outer_0, arg0);
};
idwcas3.$getClass_333 = function $getClass_333() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$10methodref$apply$Type =
  function TableViewportSubscription$10methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1420,
  $wnd.Function,
  {},
  idwcas3.TableViewportSubscription$10methodref$apply$Type
);
_.onInvoke_7 = function onInvoke_190(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcas3.$getClass_334 = function $getClass_334() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$1methodref$refire$Type =
  function TableViewportSubscription$1methodref$refire$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1412,
  $wnd.Function,
  $intern_35,
  idwcas3.TableViewportSubscription$1methodref$refire$Type
);
_.onEvent = function onEvent_18(arg0) {
  idwcas3.$refire(this.$$outer_0, arg0);
};
idwcas3.$getClass_335 = function $getClass_335() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$2methodref$refire$Type =
  function TableViewportSubscription$2methodref$refire$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1413,
  $wnd.Function,
  $intern_35,
  idwcas3.TableViewportSubscription$2methodref$refire$Type
);
_.onEvent = function onEvent_19(arg0) {
  idwcas3.$refire(this.$$outer_0, arg0);
};
idwcas3.$getClass_336 = function $getClass_336() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$3methodref$refire$Type =
  function TableViewportSubscription$3methodref$refire$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1414,
  $wnd.Function,
  $intern_35,
  idwcas3.TableViewportSubscription$3methodref$refire$Type
);
_.onEvent = function onEvent_20(arg0) {
  idwcas3.$refire(this.$$outer_0, arg0);
};
idwcas3.$getClass_337 = function $getClass_337() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$4methodref$refire$Type =
  function TableViewportSubscription$4methodref$refire$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1415,
  $wnd.Function,
  $intern_35,
  idwcas3.TableViewportSubscription$4methodref$refire$Type
);
_.onEvent = function onEvent_21(arg0) {
  idwcas3.$refire(this.$$outer_0, arg0);
};
idwcas3.$getClass_338 = function $getClass_338() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$5methodref$refire$Type =
  function TableViewportSubscription$5methodref$refire$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1416,
  $wnd.Function,
  $intern_35,
  idwcas3.TableViewportSubscription$5methodref$refire$Type
);
_.onEvent = function onEvent_22(arg0) {
  idwcas3.$refire(this.$$outer_0, arg0);
};
idwcas3.$getClass_339 = function $getClass_339() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$6methodref$close$Type =
  function TableViewportSubscription$6methodref$close$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1409,
  $wnd.Function,
  $intern_49,
  idwcas3.TableViewportSubscription$6methodref$close$Type
);
_.run = function run_29() {
  idwca.$close_0(this.$$outer_0);
};
idwcas3.$getClass_340 = function $getClass_340() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$7methodref$getInternalViewportData$Type =
  function TableViewportSubscription$7methodref$getInternalViewportData$Type() {};
defineClass(
  976,
  $wnd.Function,
  $intern_36,
  idwcas3.TableViewportSubscription$7methodref$getInternalViewportData$Type
);
_.onInvoke_5 = function onInvoke_191(arg0) {
  return idwca.$getInternalViewportData(castTo(arg0, 13));
};
idwcas3.TableViewportSubscription$8methodref$getType$Type =
  function TableViewportSubscription$8methodref$getType$Type() {};
defineClass(
  622,
  1,
  {},
  idwcas3.TableViewportSubscription$8methodref$getType$Type
);
_.apply_1 = function apply_147(arg0) {
  return castTo(arg0, 83).type_0;
};
cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription$8methodref$getType$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "TableViewportSubscription/8methodref$getType$Type",
    622
  );
idwcas3.TableViewportSubscription$9methodref$lambda$16$Type =
  function TableViewportSubscription$9methodref$lambda$16$Type() {};
defineClass(
  623,
  1,
  {},
  idwcas3.TableViewportSubscription$9methodref$lambda$16$Type
);
_.apply_2 = function apply_148(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription$9methodref$lambda$16$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "TableViewportSubscription/9methodref$lambda$16$Type",
    623
  );
idwcas3.$clinit_TableViewportSubscription$Status =
  function $clinit_TableViewportSubscription$Status() {
    idwcas3.$clinit_TableViewportSubscription$Status = emptyMethod;
    idwcas3.STARTING = new idwcas3.TableViewportSubscription$Status(
      "STARTING",
      0
    );
    idwcas3.ACTIVE = new idwcas3.TableViewportSubscription$Status("ACTIVE", 1);
    idwcas3.DONE = new idwcas3.TableViewportSubscription$Status("DONE", 2);
  };
idwcas3.TableViewportSubscription$Status =
  function TableViewportSubscription$Status(enum$name, enum$ordinal) {
    Enum.call(this, enum$name, enum$ordinal);
  };
idwcas3.values_4 = function values_4() {
  idwcas3.$clinit_TableViewportSubscription$Status();
  return stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription$Status_2_classLit,
      1
    ),
    $intern_17,
    202,
    0,
    [idwcas3.STARTING, idwcas3.ACTIVE, idwcas3.DONE]
  );
};
defineClass(
  202,
  37,
  { 202: 1, 3: 1, 33: 1, 37: 1 },
  idwcas3.TableViewportSubscription$Status
);
cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription$Status_2_classLit =
  createForEnum(
    "io.deephaven.web.client.api.subscription",
    "TableViewportSubscription/Status",
    202,
    idwcas3.values_4
  );
idwcas3.$getClass_341 = function $getClass_341() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$0$Type =
  function TableViewportSubscription$lambda$0$Type(
    $$outer_0,
    columns_1,
    firstRow_2,
    lastRow_4
  ) {
    this.$$outer_0 = $$outer_0;
    this.columns_1 = columns_1;
    this.firstRow_2 = firstRow_2;
    this.lastRow_4 = lastRow_4;
  };
defineClass(
  1403,
  $wnd.Function,
  $intern_36,
  idwcas3.TableViewportSubscription$lambda$0$Type
);
_.onInvoke_5 = function onInvoke_192(arg0) {
  return idwcas3.$lambda$0_7(
    this.$$outer_0,
    this.columns_1,
    this.firstRow_2,
    this.lastRow_4,
    castTo(arg0, 13)
  );
};
_.firstRow_2 = 0;
_.lastRow_4 = 0;
idwcas3.$getClass_342 = function $getClass_342() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$1$Type =
  function TableViewportSubscription$lambda$1$Type(
    $$outer_0,
    table_1,
    columns_2,
    firstRow_3,
    lastRow_5
  ) {
    this.$$outer_0 = $$outer_0;
    this.table_1 = table_1;
    this.columns_2 = columns_2;
    this.firstRow_3 = firstRow_3;
    this.lastRow_5 = lastRow_5;
  };
defineClass(
  1407,
  $wnd.Function,
  {},
  idwcas3.TableViewportSubscription$lambda$1$Type
);
_.onInvoke_6 = function onInvoke_193(arg0, arg1) {
  idwcas3.$lambda$1_6(
    this.$$outer_0,
    this.table_1,
    this.columns_2,
    this.firstRow_3,
    this.lastRow_5,
    arg0
  );
};
_.firstRow_3 = 0;
_.lastRow_5 = 0;
idwcas3.$getClass_343 = function $getClass_343() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$11$Type =
  function TableViewportSubscription$lambda$11$Type(
    firstRow_0,
    lastRow_2,
    columns_4
  ) {
    this.firstRow_0 = firstRow_0;
    this.lastRow_2 = lastRow_2;
    this.columns_4 = columns_4;
  };
defineClass(
  1404,
  $wnd.Function,
  $intern_36,
  idwcas3.TableViewportSubscription$lambda$11$Type
);
_.onInvoke_5 = function onInvoke_194(arg0) {
  return idwcas3.lambda$11_5(
    this.firstRow_0,
    this.lastRow_2,
    this.columns_4,
    castTo(arg0, 13)
  );
};
_.firstRow_0 = 0;
_.lastRow_2 = 0;
idwcas3.$getClass_344 = function $getClass_344() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$12$Type =
  function TableViewportSubscription$lambda$12$Type() {};
defineClass(
  1405,
  $wnd.Function,
  $intern_36,
  idwcas3.TableViewportSubscription$lambda$12$Type
);
_.onInvoke_5 = function onInvoke_195(arg0) {
  return idwcas3.lambda$12_3(castTo(arg0, 13));
};
idwcas3.$getClass_345 = function $getClass_345() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$14$Type =
  function TableViewportSubscription$lambda$14$Type(
    $$outer_0,
    columns_1,
    rows_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.columns_1 = columns_1;
    this.rows_2 = rows_2;
  };
defineClass(
  1406,
  $wnd.Function,
  $intern_36,
  idwcas3.TableViewportSubscription$lambda$14$Type
);
_.onInvoke_5 = function onInvoke_196(arg0) {
  return idwcas3.$lambda$14_2(
    this.$$outer_0,
    this.columns_1,
    this.rows_2,
    castTo(arg0, 13)
  );
};
idwcas3.TableViewportSubscription$lambda$17$Type =
  function TableViewportSubscription$lambda$17$Type(
    table_0,
    columnBitset_1,
    rows_2,
    state_3,
    columnTypes_4
  ) {
    this.table_0 = table_0;
    this.columnBitset_1 = columnBitset_1;
    this.rows_2 = rows_2;
    this.state_3 = state_3;
    this.columnTypes_4 = columnTypes_4;
  };
defineClass(
  627,
  1,
  $intern_19,
  idwcas3.TableViewportSubscription$lambda$17$Type
);
_.accept = function accept_59(arg0) {
  idwcas3.lambda$17_0(
    this.table_0,
    this.columnBitset_1,
    this.rows_2,
    this.state_3,
    this.columnTypes_4,
    castTo(arg0, 227)
  );
};
cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription$lambda$17$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "TableViewportSubscription/lambda$17$Type",
    627
  );
idwcas3.TableViewportSubscription$lambda$18$Type =
  function TableViewportSubscription$lambda$18$Type(connection_0) {
    this.connection_0 = connection_0;
  };
defineClass(624, 1, {}, idwcas3.TableViewportSubscription$lambda$18$Type);
_.openBiDiStream = function openBiDiStream_2(arg0) {
  return idwcas3.lambda$18_1(this.connection_0, arg0);
};
cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription$lambda$18$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "TableViewportSubscription/lambda$18$Type",
    624
  );
idwcas3.TableViewportSubscription$lambda$19$Type =
  function TableViewportSubscription$lambda$19$Type(connection_0) {
    this.connection_0 = connection_0;
  };
defineClass(625, 1, {}, idwcas3.TableViewportSubscription$lambda$19$Type);
_.openStream = function openStream_2(arg0, arg1) {
  return idwcas3.lambda$19_1(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    ),
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription$lambda$19$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "TableViewportSubscription/lambda$19$Type",
    625
  );
idwcas3.$getClass_346 = function $getClass_346() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$2$Type =
  function TableViewportSubscription$lambda$2$Type(
    $$outer_0,
    table_1,
    columns_2,
    firstRow_3,
    lastRow_5,
    resolve_7
  ) {
    this.$$outer_0 = $$outer_0;
    this.table_1 = table_1;
    this.columns_2 = columns_2;
    this.firstRow_3 = firstRow_3;
    this.lastRow_5 = lastRow_5;
    this.resolve_7 = resolve_7;
  };
defineClass(
  1408,
  $wnd.Function,
  $intern_48,
  idwcas3.TableViewportSubscription$lambda$2$Type
);
_.apply_3 = function apply_149(arg0) {
  idwcas3.$lambda$2_2(
    this.$$outer_0,
    this.table_1,
    this.columns_2,
    this.firstRow_3,
    this.lastRow_5,
    this.resolve_7,
    castTo(arg0, 14)
  );
};
_.firstRow_3 = 0;
_.lastRow_5 = 0;
idwcas3.TableViewportSubscription$lambda$20$Type =
  function TableViewportSubscription$lambda$20$Type(connection_0) {
    this.connection_0 = connection_0;
  };
defineClass(626, 1, {}, idwcas3.TableViewportSubscription$lambda$20$Type);
_.nextStreamMessage = function nextStreamMessage_2(arg0, arg1, arg2) {
  idwcas3.lambda$20_0(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    ),
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_subscription_TableViewportSubscription$lambda$20$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "TableViewportSubscription/lambda$20$Type",
    626
  );
idwcas3.$getClass_347 = function $getClass_347() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$22$Type =
  function TableViewportSubscription$lambda$22$Type(
    columnTypes_0,
    rows_1,
    callback_2
  ) {
    this.columnTypes_0 = columnTypes_0;
    this.rows_1 = rows_1;
    this.callback_2 = callback_2;
  };
defineClass(
  1418,
  $wnd.Function,
  $intern_48,
  idwcas3.TableViewportSubscription$lambda$22$Type
);
_.apply_3 = function apply_150(arg0) {
  idwcas3.lambda$22(
    this.columnTypes_0,
    this.rows_1,
    this.callback_2,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    )
  );
};
idwcas3.$getClass_348 = function $getClass_348() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$23$Type =
  function TableViewportSubscription$lambda$23$Type(callback_0) {
    this.callback_0 = callback_0;
  };
defineClass(
  1419,
  $wnd.Function,
  $intern_48,
  idwcas3.TableViewportSubscription$lambda$23$Type
);
_.apply_3 = function apply_151(arg0) {
  idwcas3.lambda$23_0(this.callback_0, arg0);
};
idwcas3.$getClass_349 = function $getClass_349() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$24$Type =
  function TableViewportSubscription$lambda$24$Type(columns_0, state_1) {
    this.columns_0 = columns_0;
    this.state_1 = state_1;
  };
defineClass(
  1417,
  $wnd.Function,
  $intern_36,
  idwcas3.TableViewportSubscription$lambda$24$Type
);
_.onInvoke_5 = function onInvoke_197(arg0) {
  return idwcas3.lambda$24_0(this.columns_0, this.state_1, castTo(arg0, 287));
};
idwcas3.$getClass_350 = function $getClass_350() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$25$Type =
  function TableViewportSubscription$lambda$25$Type() {};
defineClass(
  985,
  $wnd.Function,
  $intern_36,
  idwcas3.TableViewportSubscription$lambda$25$Type
);
_.onInvoke_5 = function onInvoke_198(arg0) {
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcas3.TableViewportSubscription$lambda$26$Type.prototype.onInvoke_6,
      idwcas3.TableViewportSubscription$lambda$26$Type,
      [arg0]
    )
  );
};
idwcas3.$getClass_351 = function $getClass_351() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$26$Type =
  function TableViewportSubscription$lambda$26$Type(val_0) {
    this.val_0 = val_0;
  };
defineClass(
  1422,
  $wnd.Function,
  {},
  idwcas3.TableViewportSubscription$lambda$26$Type
);
_.onInvoke_6 = function onInvoke_199(arg0, arg1) {
  idwcas3.lambda$26(this.val_0, arg0);
};
idwcas3.$getClass_352 = function $getClass_352() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$27$Type =
  function TableViewportSubscription$lambda$27$Type(resolve_0, val_1) {
    this.resolve_0 = resolve_0;
    this.val_1 = val_1;
  };
defineClass(
  1421,
  $wnd.Function,
  {},
  idwcas3.TableViewportSubscription$lambda$27$Type
);
_.onInvoke_4 = function onInvoke_200(arg0) {
  this.resolve_0.call(null, this.val_1);
};
idwcas3.$getClass_353 = function $getClass_353() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.TableViewportSubscription$lambda$4$Type =
  function TableViewportSubscription$lambda$4$Type(newState_0) {
    this.newState_0 = newState_0;
  };
defineClass(
  1410,
  $wnd.Function,
  $intern_48,
  idwcas3.TableViewportSubscription$lambda$4$Type
);
_.apply_3 = function apply_152(arg0) {
  idwcas3.lambda$4_7(this.newState_0, castTo(arg0, 129));
};
idwcas3.$clinit_ViewportData = function $clinit_ViewportData() {
  idwcas3.$clinit_ViewportData = emptyMethod;
  idwcas3.NULL_SENTINEL = new $wnd.Object();
};
idwcas3.$dataContainsNullSentinels = function $dataContainsNullSentinels(
  this$static
) {
  var existingColumnData, i, j;
  for (i = 0; i < this$static.data_0.length; i++) {
    existingColumnData = this$static.data_0[i];
    if (existingColumnData == null) {
      continue;
    }
    for (j = 0; j < this$static.length_0; ++j) {
      if (
        maskUndefined(jb.$getAt(existingColumnData, j)) ===
        maskUndefined(idwcas3.NULL_SENTINEL)
      ) {
        return true;
      }
    }
  }
  return false;
};
idwcas3.$getRows_0 = function $getRows_0(this$static) {
  var i;
  if (this$static.rows_0.length != this$static.length_0) {
    this$static.rows_0 = new $wnd.Array();
    for (i = 0; i < this$static.length_0; i++) {
      this$static.rows_0.push(
        new idwcas3.ViewportRow(
          i,
          this$static.data_0,
          this$static.data_0[this$static.rowFormatColumn]
        )
      );
    }
    $wnd.Object.freeze(this$static.rows_0);
  }
  return this$static.rows_0;
};
idwcas3.$lambda$6_3 = function $lambda$6_3(
  this$static,
  updated_1,
  removedIndex_1
) {
  var existingColumnData, i, internalOffset;
  internalOffset = toInt_0(sub_3(removedIndex_1, this$static.offset_0));
  if (internalOffset < 0 || internalOffset >= this$static.length_0) {
    return;
  }
  for (i = 0; i < this$static.data_0.length; i++) {
    existingColumnData = this$static.data_0[i];
    if (existingColumnData == null) {
      continue;
    }
    jb.$setAt(existingColumnData, internalOffset, idwcas3.NULL_SENTINEL);
  }
  ju.$add_0(updated_1.removed_0, jl.valueOf_29(internalOffset));
};
idwcas3.$merge = function $merge(this$static, updates) {
  var addedColIndex,
    addedColumn,
    addedColumnData,
    addedOffset,
    begin,
    beginAsLong,
    column,
    end,
    entry,
    existing,
    existingColumnData,
    hasReverseShift,
    i,
    ii,
    internalOffset,
    internalOffsetAsLong,
    it,
    it0,
    j,
    modifiedColIndex,
    modifiedColumn,
    modifiedOffset,
    outerIter,
    serializedAdditions,
    serializedModifications,
    shiftDelta,
    shiftedRange,
    shiftedRanges,
    si,
    si0,
    toMove,
    updated,
    updatedColumnData;
  eq(this$static.offset_0, -1) &&
    gt(
      jus.$collect_0(
        jus.$mapToLong(
          ju.stream_4(updates.includedAdditions.sortedRanges),
          new idwsd.RangeSet$0methodref$size$Type()
        )
      ).sum_0,
      0
    ) &&
    (this$static.offset_0 = updates.includedAdditions.sortedRanges[0].first_0);
  updated = new idwcas3.ViewportData$MergeResults();
  ju.$forEachRemaining_4(
    jus.$iterator_19(
      jus.$flatMapToLong(
        ju.stream_4(updates.removed_0.sortedRanges),
        new idwsd.RangeSet$lambda$0$Type()
      )
    ),
    new idwcas3.ViewportData$lambda$6$Type(this$static, updated)
  );
  hasReverseShift = false;
  shiftedRanges = updates.shiftedRanges;
  for (si0 = shiftedRanges.length - 1; si0 >= 0; --si0) {
    shiftedRange = shiftedRanges[si0];
    shiftDelta = shiftedRange.delta;
    if (compare_1(shiftDelta, 0) < 0) {
      hasReverseShift = true;
      continue;
    }
    beginAsLong = jl.max_1(
      sub_3(shiftedRange.range_0.first_0, this$static.offset_0),
      0
    );
    end = toInt_0(
      jl.min_1(
        sub_3(shiftedRange.range_0.last_0, this$static.offset_0),
        fromInt(this$static.length_0 - 1)
      )
    );
    if (lt(cggl.createSmallLongEmul0(end), beginAsLong)) {
      continue;
    }
    begin = toInt_0(beginAsLong);
    for (j = end; j >= begin; --j) {
      for (i = 0; i < this$static.data_0.length; ++i) {
        existingColumnData = this$static.data_0[i];
        if (existingColumnData == null) {
          continue;
        }
        internalOffsetAsLong = add_1(cggl.createSmallLongEmul0(j), shiftDelta);
        if (
          compare_1(internalOffsetAsLong, 0) >= 0 &&
          lt(internalOffsetAsLong, fromInt(this$static.maxLength))
        ) {
          internalOffset = toInt_0(internalOffsetAsLong);
          ju.$add_0(updated.added_0, jl.valueOf_29(internalOffset));
          toMove = jb.$getAt(existingColumnData, j);
          jb.$setAt(existingColumnData, internalOffset, toMove);
        }
        ju.$add_0(updated.removed_0, jl.valueOf_29(j));
        jb.$setAt(existingColumnData, j, idwcas3.NULL_SENTINEL);
      }
    }
  }
  if (hasReverseShift) {
    for (si = 0; si < shiftedRanges.length; ++si) {
      shiftedRange = shiftedRanges[si];
      shiftDelta = shiftedRange.delta;
      if (compare_1(shiftDelta, 0) > 0) {
        continue;
      }
      begin = jl.max_1(
        sub_3(shiftedRange.range_0.first_0, this$static.offset_0),
        0
      );
      end = toInt_0(
        jl.min_1(
          sub_3(shiftedRange.range_0.last_0, this$static.offset_0),
          fromInt(this$static.length_0 - 1)
        )
      );
      if (lt(cggl.createSmallLongEmul0(end), begin)) {
        continue;
      }
      for (j = toInt_0(begin); j <= end; ++j) {
        for (i = 0; i < this$static.data_0.length; ++i) {
          existingColumnData = this$static.data_0[i];
          if (existingColumnData == null) {
            continue;
          }
          internalOffsetAsLong = add_1(
            cggl.createSmallLongEmul0(j),
            shiftDelta
          );
          if (
            compare_1(internalOffsetAsLong, 0) >= 0 &&
            lt(internalOffsetAsLong, fromInt(this$static.maxLength))
          ) {
            internalOffset = toInt_0(internalOffsetAsLong);
            ju.$add_0(updated.added_0, jl.valueOf_29(internalOffset));
            jb.$setAt(
              existingColumnData,
              internalOffset,
              jb.$getAt(existingColumnData, j)
            );
          }
          ju.$add_0(updated.removed_0, jl.valueOf_29(j));
          jb.$setAt(existingColumnData, j, idwcas3.NULL_SENTINEL);
        }
      }
    }
  }
  serializedModifications = updates.serializedModifications;
  for (
    modifiedColIndex = 0;
    modifiedColIndex < serializedModifications.length;
    modifiedColIndex++
  ) {
    modifiedColumn = serializedModifications[modifiedColIndex];
    it0 = !modifiedColumn
      ? null
      : jus.$iterator_19(
          jus.$flatMapToLong(
            ju.stream_4(modifiedColumn.rowsIncluded.sortedRanges),
            new idwsd.RangeSet$lambda$0$Type()
          )
        );
    if (
      !it0 ||
      (it0.hasElement || (it0.hasElement = it0.spliterator.tryAdvance_0(it0)),
      !it0.hasElement)
    ) {
      continue;
    }
    column = castTo(
      this$static.columns_0.find(
        makeLambdaFunction(
          idwcas3.ViewportData$lambda$7$Type.prototype.onInvoke_0,
          idwcas3.ViewportData$lambda$7$Type,
          [modifiedColumn]
        )
      ),
      21
    );
    updatedColumnData = idwcas3.cleanData_0(
      modifiedColumn.values_0.getData_2(),
      column
    );
    existingColumnData = this$static.data_0[modifiedColumn.columnIndex];
    if (updatedColumnData.length == 0) {
      continue;
    }
    i = 0;
    while (
      (it0.hasElement || (it0.hasElement = it0.spliterator.tryAdvance_0(it0)),
      it0.hasElement)
    ) {
      modifiedOffset = ju.$nextLong(it0);
      internalOffset = toInt_0(sub_3(modifiedOffset, this$static.offset_0));
      if (internalOffset < 0 || internalOffset >= this$static.maxLength) {
        ++i;
        continue;
      }
      jb.$setAt(
        existingColumnData,
        internalOffset,
        jb.$getAtAsAny(updatedColumnData, i)
      );
      ju.$add_0(updated.modified_0, jl.valueOf_29(internalOffset));
      ++i;
    }
  }
  if (updates.includedAdditions.sortedRanges.length != 0) {
    serializedAdditions = updates.serializedAdditions;
    for (
      addedColIndex = 0;
      addedColIndex < serializedAdditions.length;
      addedColIndex++
    ) {
      addedColumn = serializedAdditions[addedColIndex];
      column = castTo(
        this$static.columns_0.find(
          makeLambdaFunction(
            idwcas3.ViewportData$lambda$8$Type.prototype.onInvoke_0,
            idwcas3.ViewportData$lambda$8$Type,
            [addedColumn]
          )
        ),
        21
      );
      addedColumnData = idwcas3.cleanData_0(
        addedColumn.values_0.getData_2(),
        column
      );
      existingColumnData = this$static.data_0[addedColumn.columnIndex];
      if (addedColumnData.length == 0) {
        continue;
      }
      i = 0;
      it0 = jus.$iterator_19(
        jus.$flatMapToLong(
          ju.stream_4(updates.includedAdditions.sortedRanges),
          new idwsd.RangeSet$lambda$0$Type()
        )
      );
      while (
        (it0.hasElement || (it0.hasElement = it0.spliterator.tryAdvance_0(it0)),
        it0.hasElement)
      ) {
        addedOffset = ju.$nextLong(it0);
        internalOffset = toInt_0(sub_3(addedOffset, this$static.offset_0));
        if (internalOffset < 0 || internalOffset >= this$static.maxLength) {
          ++i;
          continue;
        }
        if (internalOffset >= existingColumnData.length) {
          debugger;
          throw toJs(new jl.AssertionError());
        }
        existing = jb.$getAt(existingColumnData, internalOffset);
        maskUndefined(existing) === maskUndefined(idwcas3.NULL_SENTINEL) ||
        internalOffset >= this$static.length_0
          ? ju.$add_0(updated.added_0, jl.valueOf_29(internalOffset))
          : ju.$add_0(updated.modified_0, jl.valueOf_29(internalOffset));
        jb.$setAt(
          existingColumnData,
          internalOffset,
          jb.$getAtAsAny(addedColumnData, i)
        );
        ++i;
      }
    }
  }
  ju.$removeAll(updated.modified_0, updated.added_0);
  for (
    it =
      ((outerIter = new ju.AbstractMap$1(updated.removed_0.map_0).this$01
        .entrySet_0()
        .iterator_0()),
      new ju.AbstractMap$1$1(outerIter));
    it.val$outerIter2.hasNext_1();

  ) {
    ii = ((entry = castTo(it.val$outerIter2.next_1(), 27)),
    castTo(entry.getKey(), 98)).value_0;
    if (ju.$remove_7(updated.added_0, jl.valueOf_29(ii))) {
      it.val$outerIter2.remove_0();
      ju.$add_0(updated.modified_0, jl.valueOf_29(ii));
    }
  }
  this$static.length_0 =
    this$static.length_0 +
    updated.added_0.map_0.size() -
    updated.removed_0.map_0.size();
  if (
    !(
      0 <= this$static.length_0 && this$static.length_0 <= this$static.maxLength
    )
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  if (idwcas3.$dataContainsNullSentinels(this$static)) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return updated;
};
idwcas3.ViewportData = function ViewportData(
  includedRows,
  dataColumns,
  columns,
  rowFormatColumn,
  maxLength
) {
  idwcas3.$clinit_ViewportData();
  var c, existingColumnData, i, i0, i1, index_0, range, rangeIterator;
  if (compare_1(maxLength, $intern_1) > 0) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  this.maxLength = toInt_0(maxLength);
  rangeIterator = new ju.AbstractList$IteratorImpl(
    new ju.Arrays$ArrayList(includedRows.sortedRanges)
  );
  this.data_0 = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    dataColumns.length,
    5,
    1
  );
  if (rangeIterator.i < rangeIterator.this$01_0.size()) {
    range =
      (ji.checkCriticalElement(
        rangeIterator.i < rangeIterator.this$01_0.size()
      ),
      castTo(
        rangeIterator.this$01_0.getAtIndex(
          (rangeIterator.last_0 = rangeIterator.i++)
        ),
        24
      ));
    if (rangeIterator.i < rangeIterator.this$01_0.size()) {
      debugger;
      throw toJs(new jl.AssertionError_0("Snapshot only supports one range"));
    }
    this.offset_0 = range.first_0;
    this.length_0 = toInt_0(add_1(sub_3(range.last_0, range.first_0), 1));
    if (
      neq(fromInt(this.length_0), add_1(sub_3(range.last_0, range.first_0), 1))
    ) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
  } else {
    this.offset_0 = -1;
  }
  for (i0 = 0; i0 < columns.length; i0++) {
    c = castTo(jb.$getAt(columns, i0), 21);
    index_0 = c.index_0;
    if (dataColumns[index_0] == null) {
      continue;
    }
    this.data_0[index_0] = idwcas3.cleanData_0(dataColumns[index_0], c);
    !!c.styleColumnIndex &&
      (this.data_0[c.styleColumnIndex.value_0] =
        dataColumns[c.styleColumnIndex.value_0]);
    !!c.formatStringColumnIndex &&
      (this.data_0[c.formatStringColumnIndex.value_0] =
        dataColumns[c.formatStringColumnIndex.value_0]);
  }
  this.rowFormatColumn = rowFormatColumn;
  rowFormatColumn != -1 &&
    (this.data_0[rowFormatColumn] = dataColumns[rowFormatColumn]);
  if (lt(fromInt(this.length_0), maxLength)) {
    for (i1 = 0; i1 < this.data_0.length; i1++) {
      if (this.data_0[i1] != null) {
        existingColumnData = this.data_0[i1];
        existingColumnData.length = this.maxLength;
        existingColumnData.fill(
          idwcas3.NULL_SENTINEL,
          this.length_0,
          this.maxLength
        );
      }
    }
  }
  this.rows_0 = new $wnd.Array();
  for (i = 0; i < this.length_0; i++) {
    this.rows_0.push(
      new idwcas3.ViewportRow(i, this.data_0, this.data_0[rowFormatColumn])
    );
  }
  this.columns_0 = castToJsArray($wnd.Object.freeze(columns.slice()));
};
idwcas3.cleanData_0 = function cleanData_0(dataColumn, column) {
  idwcas3.$clinit_ViewportData();
  var cleanData, dataCleaner, i, value_0, values;
  if (dataColumn == null) {
    return null;
  }
  if (!column) {
    return dataColumn;
  }
  switch (column.type_0) {
    case "long": {
      values = dataColumn;
      cleanData = initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_LongWrapper_2_classLit,
        $intern_7,
        39,
        values.length,
        0,
        1
      );
      for (i = 0; i < values.length; i++) {
        value_0 = jb.$asLong(jb.$getAtAsAny(values, i));
        eq(value_0, $intern_59)
          ? (cleanData[i] = null)
          : (cleanData[i] = new idwca.LongWrapper(value_0));
      }
      return cleanData;
    }

    case "java.time.Instant":
    case "java.time.ZonedDateTime": {
      values = dataColumn;
      cleanData = initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_DateWrapper_2_classLit,
        $intern_7,
        91,
        values.length,
        0,
        1
      );
      for (i = 0; i < values.length; i++) {
        value_0 = jb.$asLong(jb.$getAtAsAny(values, i));
        eq(value_0, $intern_59)
          ? (cleanData[i] = null)
          : (cleanData[i] = new idwca.DateWrapper(value_0));
      }
      return cleanData;
    }

    case "java.math.BigDecimal": {
      values = dataColumn;
      cleanData = initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_BigDecimalWrapper_2_classLit,
        $intern_7,
        146,
        values.length,
        0,
        1
      );
      for (i = 0; i < values.length; i++) {
        value_0 = castTo(jb.$getAt(values, i), 50);
        !value_0
          ? (cleanData[i] = null)
          : (cleanData[i] = new idwca.BigDecimalWrapper(value_0));
      }
      return cleanData;
    }

    case "java.math.BigInteger": {
      values = dataColumn;
      cleanData = initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_BigIntegerWrapper_2_classLit,
        $intern_7,
        147,
        values.length,
        0,
        1
      );
      for (i = 0; i < values.length; i++) {
        value_0 = castTo(jb.$getAt(values, i), 28);
        !value_0
          ? (cleanData[i] = null)
          : (cleanData[i] = new idwca.BigIntegerWrapper(value_0));
      }
      return cleanData;
    }

    case "java.time.LocalDate": {
      values = dataColumn;
      cleanData = initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_LocalDateWrapper_2_classLit,
        $intern_7,
        209,
        values.length,
        0,
        1
      );
      for (i = 0; i < values.length; i++) {
        value_0 = castTo(jb.$getAt(values, i), 217);
        !value_0
          ? (cleanData[i] = null)
          : (cleanData[i] = new idwca.LocalDateWrapper_0(value_0));
      }
      return cleanData;
    }

    case "java.time.LocalTime": {
      values = dataColumn;
      cleanData = initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_LocalTimeWrapper_2_classLit,
        $intern_7,
        256,
        values.length,
        0,
        1
      );
      for (i = 0; i < values.length; i++) {
        value_0 = castTo(jb.$getAt(values, i), 218);
        !value_0
          ? (cleanData[i] = null)
          : (cleanData[i] = new idwca.LocalTimeWrapper(value_0));
      }
      return cleanData;
    }

    default:
      dataCleaner = idwcas3.getDataCleanerForColumnType(column.type_0);
      if (dataCleaner != null) {
        values = dataColumn;
        cleanData = $wnd.Array.from(values);
        for (i = 0; i < values.length; i++) {
          dataCleaner(cleanData, i);
        }
        return cleanData;
      } else {
        return dataColumn;
      }
  }
};
idwcas3.getDataCleanerForColumnType = function getDataCleanerForColumnType(
  columnType
) {
  switch (columnType) {
    case "int":
      return makeLambdaFunction(
        idwcas3.ViewportData$lambda$0$Type.prototype.clean,
        idwcas3.ViewportData$lambda$0$Type,
        []
      );
    case "byte":
      return makeLambdaFunction(
        idwcas3.ViewportData$lambda$1$Type.prototype.clean,
        idwcas3.ViewportData$lambda$1$Type,
        []
      );
    case "short":
      return makeLambdaFunction(
        idwcas3.ViewportData$lambda$2$Type.prototype.clean,
        idwcas3.ViewportData$lambda$2$Type,
        []
      );
    case "double":
      return makeLambdaFunction(
        idwcas3.ViewportData$lambda$3$Type.prototype.clean,
        idwcas3.ViewportData$lambda$3$Type,
        []
      );
    case "float":
      return makeLambdaFunction(
        idwcas3.ViewportData$lambda$4$Type.prototype.clean,
        idwcas3.ViewportData$lambda$4$Type,
        []
      );
    case "char":
      return makeLambdaFunction(
        idwcas3.ViewportData$lambda$5$Type.prototype.clean,
        idwcas3.ViewportData$lambda$5$Type,
        []
      );
    default:
      return null;
  }
};
idwcas3.lambda$0_8 = function lambda$0_8(data_0, i_1) {
  idwcas3.$clinit_ViewportData();
  var value_0;
  value_0 = jb.$asInt(jb.$getAtAsAny(data_0, i_1));
  value_0 == $intern_22 && jb.$setAt(data_0, i_1, null);
};
idwcas3.lambda$1_4 = function lambda$1_4(data_0, i_1) {
  idwcas3.$clinit_ViewportData();
  var value_0;
  value_0 = jb.asByte_0(jb.$getAtAsAny(data_0, i_1));
  value_0 == $intern_53 && jb.$setAt(data_0, i_1, null);
};
idwcas3.lambda$2_6 = function lambda$2_6(data_0, i_1) {
  idwcas3.$clinit_ViewportData();
  var value_0;
  value_0 = jb.asShort_0(jb.$getAtAsAny(data_0, i_1));
  value_0 == $intern_54 && jb.$setAt(data_0, i_1, null);
};
idwcas3.lambda$3_2 = function lambda$3_2(data_0, i_1) {
  idwcas3.$clinit_ViewportData();
  var value_0;
  value_0 = jb.$asDouble(jb.$getAtAsAny(data_0, i_1));
  value_0 == $intern_61 && jb.$setAt(data_0, i_1, null);
};
idwcas3.lambda$4_8 = function lambda$4_8(data_0, i_1) {
  idwcas3.$clinit_ViewportData();
  var value_0;
  value_0 = jb.asDouble_0(jb.$getAtAsAny(data_0, i_1));
  value_0 == $intern_60 && jb.$setAt(data_0, i_1, null);
};
idwcas3.lambda$5_5 = function lambda$5_5(data_0, i_1) {
  idwcas3.$clinit_ViewportData();
  var value_0;
  value_0 = jb.asChar_0(jb.$getAtAsAny(data_0, i_1));
  value_0 == $intern_10 && jb.$setAt(data_0, i_1, null);
};
idwcas3.lambda$7_3 = function lambda$7_3(modifiedColumn_0, c_1) {
  idwcas3.$clinit_ViewportData();
  return c_1.index_0 == modifiedColumn_0.columnIndex;
};
idwcas3.lambda$8_3 = function lambda$8_3(addedColumn_0, c_1) {
  idwcas3.$clinit_ViewportData();
  return c_1.index_0 == addedColumn_0.columnIndex;
};
defineClass(345, 1, { 368: 1 }, idwcas3.ViewportData);
_.get = function get_14(index_0) {
  return idwca.$get_3(this, index_0);
};
_.getData = function getData_4(index_0, column) {
  return idwca.$getData(this, index_0, column);
};
_.getFormat = function getFormat_9(index_0, column) {
  return idwca.$getFormat(this, index_0, column);
};
_.get_1 = function get_12(index_0) {
  return castTo(jb.$getAt(idwcas3.$getRows_0(this), index_0), 165);
};
_.get_2 = function get_13(index_0) {
  return castTo(jb.$getAt(idwcas3.$getRows_0(this), toInt_0(index_0)), 165);
};
defineProperties(_, {
  columns: {
    get: function getColumns_5() {
      return this.columns_0;
    },
  },
});
_.getData_0 = function getData_2(index_0, column) {
  return idwcas3.$get_9(
    castTo(jb.$getAt(idwcas3.$getRows_0(this), index_0), 89),
    column
  );
};
_.getData_1 = function getData_3(index_0, column) {
  return idwcas3.$get_9(
    castTo(jb.$getAt(idwcas3.$getRows_0(this), toInt_0(index_0)), 89),
    column
  );
};
_.getFormat_0 = function getFormat_7(index_0, column) {
  return idwcas3.$getFormat_1(
    castTo(jb.$getAt(idwcas3.$getRows_0(this), index_0), 89),
    column
  );
};
_.getFormat_1 = function getFormat_8(index_0, column) {
  return idwcas3.$getFormat_1(
    castTo(jb.$getAt(idwcas3.$getRows_0(this), toInt_0(index_0)), 89),
    column
  );
};
defineProperties(_, {
  offset: {
    get: function getOffset() {
      return toDouble_0(this.offset_0);
    },
  },
});
defineProperties(_, {
  rows: {
    get: function getRows_0() {
      return idwcas3.$getRows_0(this);
    },
  },
});
_.length_0 = 0;
_.maxLength = 0;
_.offset_0 = 0;
_.rowFormatColumn = 0;
cggl.Lio_deephaven_web_client_api_subscription_ViewportData_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "ViewportData",
    345
  );
idwcas3.$$init_34 = function $$init_34(this$static) {
  this$static.added_0 = new ju.HashSet();
  this$static.modified_0 = new ju.HashSet();
  this$static.removed_0 = new ju.HashSet();
};
idwcas3.ViewportData$MergeResults = function ViewportData$MergeResults() {
  idwcas3.$$init_34(this);
};
defineClass(660, 1, {}, idwcas3.ViewportData$MergeResults);
cggl.Lio_deephaven_web_client_api_subscription_ViewportData$MergeResults_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "ViewportData/MergeResults",
    660
  );
idwcas3.$getClass_354 = function $getClass_354() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.ViewportData$lambda$0$Type = function ViewportData$lambda$0$Type() {};
defineClass(1446, $wnd.Function, {}, idwcas3.ViewportData$lambda$0$Type);
_.clean = function clean(data_0, index_0) {
  idwcas3.lambda$0_8(data_0, index_0);
};
idwcas3.$getClass_355 = function $getClass_355() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.ViewportData$lambda$1$Type = function ViewportData$lambda$1$Type() {};
defineClass(1447, $wnd.Function, {}, idwcas3.ViewportData$lambda$1$Type);
_.clean = function clean_0(data_0, index_0) {
  idwcas3.lambda$1_4(data_0, index_0);
};
idwcas3.$getClass_356 = function $getClass_356() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.ViewportData$lambda$2$Type = function ViewportData$lambda$2$Type() {};
defineClass(1448, $wnd.Function, {}, idwcas3.ViewportData$lambda$2$Type);
_.clean = function clean_1(data_0, index_0) {
  idwcas3.lambda$2_6(data_0, index_0);
};
idwcas3.$getClass_357 = function $getClass_357() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.ViewportData$lambda$3$Type = function ViewportData$lambda$3$Type() {};
defineClass(1449, $wnd.Function, {}, idwcas3.ViewportData$lambda$3$Type);
_.clean = function clean_2(data_0, index_0) {
  idwcas3.lambda$3_2(data_0, index_0);
};
idwcas3.$getClass_358 = function $getClass_358() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.ViewportData$lambda$4$Type = function ViewportData$lambda$4$Type() {};
defineClass(1450, $wnd.Function, {}, idwcas3.ViewportData$lambda$4$Type);
_.clean = function clean_3(data_0, index_0) {
  idwcas3.lambda$4_8(data_0, index_0);
};
idwcas3.$getClass_359 = function $getClass_359() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.ViewportData$lambda$5$Type = function ViewportData$lambda$5$Type() {};
defineClass(1451, $wnd.Function, {}, idwcas3.ViewportData$lambda$5$Type);
_.clean = function clean_4(data_0, index_0) {
  idwcas3.lambda$5_5(data_0, index_0);
};
idwcas3.ViewportData$lambda$6$Type = function ViewportData$lambda$6$Type(
  $$outer_0,
  updated_1
) {
  this.$$outer_0 = $$outer_0;
  this.updated_1 = updated_1;
};
defineClass(661, 1, $intern_42, idwcas3.ViewportData$lambda$6$Type);
_.accept_0 = function accept_60(arg0) {
  idwcas3.$lambda$6_3(this.$$outer_0, this.updated_1, arg0);
};
cggl.Lio_deephaven_web_client_api_subscription_ViewportData$lambda$6$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.subscription",
    "ViewportData/lambda$6$Type",
    661
  );
idwcas3.$getClass_360 = function $getClass_360() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.ViewportData$lambda$7$Type = function ViewportData$lambda$7$Type(
  modifiedColumn_0
) {
  this.modifiedColumn_0 = modifiedColumn_0;
};
defineClass(1452, $wnd.Function, {}, idwcas3.ViewportData$lambda$7$Type);
_.onInvoke_0 = function onInvoke_201(arg0, arg1, arg2) {
  return idwcas3.lambda$7_3(this.modifiedColumn_0, castTo(arg0, 21));
};
idwcas3.$getClass_361 = function $getClass_361() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcas3.ViewportData$lambda$8$Type = function ViewportData$lambda$8$Type(
  addedColumn_0
) {
  this.addedColumn_0 = addedColumn_0;
};
defineClass(1453, $wnd.Function, {}, idwcas3.ViewportData$lambda$8$Type);
_.onInvoke_0 = function onInvoke_202(arg0, arg1, arg2) {
  return idwcas3.lambda$8_3(this.addedColumn_0, castTo(arg0, 21));
};
idwcas3.$get_9 = function $get_9(this$static, column) {
  var uncheckedData;
  uncheckedData = this$static.dataColumns[column.index_0];
  if (uncheckedData == null) {
    throw toJs(
      new ju.NoSuchElementException_0(
        "Column " +
          column.name_0 +
          " not found in row, was it specified in the viewport?"
      )
    );
  }
  return jb.$getAtAsAny(uncheckedData, this$static.offsetInSnapshot);
};
idwcas3.$getFormat_1 = function $getFormat_1(this$static, column) {
  var cellColors, colors, formatString, formatStrings, numberFormat, rowColors;
  cellColors = 0;
  rowColors = 0;
  numberFormat = null;
  formatString = null;
  if (column.styleColumnIndex) {
    colors = this$static.dataColumns[column.styleColumnIndex.value_0];
    cellColors = jb.$asLong(
      jb.$getAtAsAny(colors, this$static.offsetInSnapshot)
    );
  }
  this$static.rowStyleColumn != null &&
    (rowColors = jb.$asLong(
      jb.$getAtAsAny(this$static.rowStyleColumn, this$static.offsetInSnapshot)
    ));
  if (column.formatColumnIndex) {
    formatStrings = this$static.dataColumns[column.formatColumnIndex.value_0];
    numberFormat = jb.$asString_2(
      jb.$getAtAsAny(formatStrings, this$static.offsetInSnapshot)
    );
  }
  if (column.formatStringColumnIndex) {
    formatStrings =
      this$static.dataColumns[column.formatStringColumnIndex.value_0];
    formatString = jb.$asString_2(
      jb.$getAtAsAny(formatStrings, this$static.offsetInSnapshot)
    );
  }
  return new idwca.Format(cellColors, rowColors, numberFormat, formatString);
};
idwcas3.ViewportRow = function ViewportRow(
  offsetInSnapshot,
  dataColumns,
  rowStyleColumn
) {
  this.offsetInSnapshot = offsetInSnapshot;
  this.dataColumns = dataColumns;
  this.rowStyleColumn = rowStyleColumn;
};
defineClass(89, 1, { 165: 1, 89: 1 }, idwcas3.ViewportRow);
_.get = function get_15(column) {
  return idwcas3.$get_9(this, column);
};
_.getFormat = function getFormat_10(column) {
  return idwcas3.$getFormat_1(this, column);
};
defineProperties(_, {
  index: {
    get: function getIndex_0() {
      throw toJs(
        new jl.UnsupportedOperationException_0(
          "Viewports don't currently represent their position with an index"
        )
      );
    },
  },
});
_.offsetInSnapshot = 0;
cggl.Lio_deephaven_web_client_api_subscription_ViewportRow_2_classLit =
  createForClass("io.deephaven.web.client.api.subscription", "ViewportRow", 89);
idwcat.$$init_35 = function $$init_35(this$static) {
  this$static.aggregations = $wnd.Object.create(null);
};
idwcat.$buildRequest_1 = function $buildRequest_1(this$static, tableColumns) {
  var aggregations, aggs, colsNeedingCompoundNames, request, seenColNames;
  request =
    new $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb.RollupRequest();
  request.setGroupByColumnsList(this$static.groupingColumns);
  request.setIncludeConstituents(this$static.includeConstituents);
  aggregations = new $wnd.Array();
  request.setAggregationsList(aggregations);
  aggs = new ju.HashMap();
  colsNeedingCompoundNames = new ju.ArrayList();
  seenColNames = new ju.HashSet();
  this$static.groupingColumns.forEach(
    makeLambdaFunction(
      idwcat.JsRollupConfig$lambda$0$Type.prototype.onInvoke,
      idwcat.JsRollupConfig$lambda$0$Type,
      [seenColNames]
    )
  );
  jb.$forEach_7(
    this$static.aggregations,
    makeLambdaFunction(
      idwcat.JsRollupConfig$lambda$1$Type.prototype.onKey,
      idwcat.JsRollupConfig$lambda$1$Type,
      [this$static, seenColNames, colsNeedingCompoundNames, aggs]
    )
  );
  ju.$forEach_4(
    aggs,
    new idwcat.JsRollupConfig$lambda$3$Type(
      colsNeedingCompoundNames,
      tableColumns,
      aggregations
    )
  );
  aggregations.length != 0 && request.setAggregationsList(aggregations);
  return request;
};
idwcat.$lambda$1_7 = function $lambda$1_7(
  this$static,
  seenColNames_1,
  colsNeedingCompoundNames_2,
  aggs_3,
  key_3
) {
  var cols_0;
  cols_0 = new ju.LinkedHashSet();
  castToJsArray(jb.$get_23(this$static.aggregations, key_3)).forEach(
    makeLambdaFunction(
      idwcat.JsRollupConfig$lambda$2$Type.prototype.onInvoke,
      idwcat.JsRollupConfig$lambda$2$Type,
      [cols_0, seenColNames_1, colsNeedingCompoundNames_2]
    )
  );
  key_3 == null
    ? ju.$put_4(aggs_3.hashCodeMap, null, cols_0)
    : ju.$put_5(aggs_3.stringMap, key_3, cols_0);
};
idwcat.$lambda$3_2 = function $lambda$3_2(
  colsNeedingCompoundNames_1,
  tableColumns_2,
  aggregations_3,
  aggregationType_3,
  cols_4
) {
  var agg, aggColumns, columns, count, spec;
  agg = new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation();
  aggColumns = castToJsArray(
    jus.$collect_1(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(cols_4, 1)
        ),
        new idwcat.JsRollupConfig$lambda$4$Type(
          colsNeedingCompoundNames_1,
          aggregationType_3
        )
      ),
      jus.of_4(
        new idwcat.JsRollupConfig$0methodref$ctor$Type(),
        new idwcat.JsRollupConfig$1methodref$push$Type(),
        new idwcat.JsRollupConfig$lambda$7$Type(),
        stampJavaTypeInfo(
          getClassLiteralForArray(
            cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
            1
          ),
          $intern_17,
          48,
          0,
          []
        )
      )
    )
  );
  columns = null;
  switch (aggregationType_3) {
    case "Count": {
      count =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationCount();
      count.setColumnName(
        idwcat.$unusedColumnName(
          tableColumns_2,
          stampJavaTypeInfo(
            getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
            $intern_8,
            2,
            6,
            ["Count", "count", "RollupCount"]
          )
        )
      );
      agg.setCount(count);
      break;
    }

    case "CountDistinct": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setCountDistinct(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecCountDistinct()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Distinct": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setDistinct(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecDistinct()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Min": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setMin(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecMin()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Max": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setMax(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecMax()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Sum": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setSum(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecSum()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "AbsSum": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setAbsSum(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecAbsSum()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Var": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setVar(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecVar()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Avg": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setAvg(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecAvg()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Std": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setStd(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecStd()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "First": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setFirst(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecFirst()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Last": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setLast(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecLast()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Unique": {
      spec = new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec();
      spec.setUnique(
        new $wnd.dhinternal.io.deephaven.proto.table_pb.AggSpec.AggSpecUnique()
      );
      columns =
        new $wnd.dhinternal.io.deephaven.proto.table_pb.Aggregation.AggregationColumns();
      columns.setSpec(spec);
      agg.setColumns(columns);
      columns.setMatchPairsList(aggColumns);
      break;
    }

    case "Skip": {
      return;
    }

    default:
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          ["Aggregation " + aggregationType_3 + " not supported, ignoring"]
        )
      );
  }
  (columns == null || columns.getMatchPairsList().length > 0) &&
    aggregations_3.push(agg);
};
idwcat.$unusedColumnName = function $unusedColumnName(
  existingColumns,
  suggestedNames
) {
  var suggestedName,
    suggestedName$array,
    suggestedName$array0,
    suggestedName$array1,
    suggestedName$index,
    suggestedName$index0,
    suggestedName$index1,
    suggestedName$max,
    suggestedName$max0,
    suggestedName$max1;
  for (
    suggestedName$array0 = suggestedNames,
      suggestedName$index0 = 0,
      suggestedName$max0 = suggestedName$array0.length;
    suggestedName$index0 < suggestedName$max0;
    ++suggestedName$index0
  ) {
    suggestedName = suggestedName$array0[suggestedName$index0];
    if (
      !existingColumns.some(
        makeLambdaFunction(
          idwcat.JsRollupConfig$lambda$8$Type.prototype.onInvoke,
          idwcat.JsRollupConfig$lambda$8$Type,
          [suggestedName]
        )
      )
    ) {
      return suggestedName;
    }
  }
  for (
    suggestedName$array1 = suggestedNames,
      suggestedName$index1 = 0,
      suggestedName$max1 = suggestedName$array1.length;
    suggestedName$index1 < suggestedName$max1;
    ++suggestedName$index1
  ) {
    suggestedName = suggestedName$array1[suggestedName$index1];
    if (
      !existingColumns.some(
        makeLambdaFunction(
          idwcat.JsRollupConfig$lambda$9$Type.prototype.onInvoke,
          idwcat.JsRollupConfig$lambda$9$Type,
          [suggestedName]
        )
      )
    ) {
      return suggestedName + "_";
    }
  }
  for (
    suggestedName$array = suggestedNames,
      suggestedName$index = 0,
      suggestedName$max = suggestedName$array.length;
    suggestedName$index < suggestedName$max;
    ++suggestedName$index
  ) {
    suggestedName = suggestedName$array[suggestedName$index];
    if (
      !existingColumns.some(
        makeLambdaFunction(
          idwcat.JsRollupConfig$lambda$10$Type.prototype.onInvoke,
          idwcat.JsRollupConfig$lambda$10$Type,
          [suggestedName]
        )
      )
    ) {
      return (
        suggestedName +
        "_" +
        toString_6((jl.$clinit_System(), fromDouble_0(Date.now())))
      );
    }
  }
  throw toJs(new jl.IllegalStateException_0("Failed to generate a name"));
};
idwcat.JsRollupConfig = function JsRollupConfig() {
  idwcat.$$init_35(this);
};
idwcat.JsRollupConfig_0 = function JsRollupConfig_0(source) {
  idwcat.JsRollupConfig.call(this);
  jb.$has(source, "aggregations") &&
    (this.aggregations = jb.$getAsAny(source, "aggregations"));
  jb.$has(source, "groupingColumns") &&
    (this.groupingColumns = castToJsArray(
      jb.$getAsAny(source, "groupingColumns")
    ));
  jb.$has(source, "includeConstituents") &&
    (this.includeConstituents = jb.$asBoolean(
      jb.$getAsAny(source, "includeConstituents")
    ));
  if (jb.$has(source, "includeOriginalColumns")) {
    this.includeOriginalColumns = jb.$asBoolean(
      jb.$getAsAny(source, "includeOriginalColumns")
    );
    this.includeOriginalColumns ||
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          ["includeOriginalColumns=false will be ignored"]
        )
      );
  }
  if (jb.$has(source, "includeDescriptions")) {
    this.includeDescriptions = jb.$asBoolean(
      jb.$getAsAny(source, "includeDescriptions")
    );
    this.includeDescriptions ||
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          ["includeDescriptions=false will be ignored"]
        )
      );
  }
};
idwcat.lambda$0_9 = function lambda$0_9(seenColNames_0, col_1) {
  return (
    jl.$clinit_Boolean(),
    ju.$add_0(seenColNames_0, castToString(col_1))
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
idwcat.lambda$10_3 = function lambda$10_3(suggestedName_0, p0_1) {
  return (
    jl.$clinit_Boolean(),
    jl.$equals_12(
      p0_1.name_0,
      suggestedName_0 +
        "_" +
        toString_6((jl.$clinit_System(), fromDouble_0(Date.now())))
    )
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
idwcat.lambda$2_7 = function lambda$2_7(
  cols_0,
  seenColNames_1,
  colsNeedingCompoundNames_2,
  col_3
) {
  var colName, old;
  colName = col_3;
  cols_0.map_0.put(colName, cols_0);
  seenColNames_1.map_0.containsKey(colName)
    ? ((colsNeedingCompoundNames_2.array[
        colsNeedingCompoundNames_2.array.length
      ] = colName),
      true)
    : ((old = seenColNames_1.map_0.put(colName, seenColNames_1)), old == null);
  return null;
};
idwcat.lambda$4_9 = function lambda$4_9(
  colsNeedingCompoundNames_0,
  aggregationType_1,
  col_2
) {
  if (ju.$indexOf_3(colsNeedingCompoundNames_0, col_2, 0) != -1) {
    return col_2 + "_" + aggregationType_1 + " = " + col_2;
  }
  return col_2;
};
idwcat.lambda$8_4 = function lambda$8_4(suggestedName_0, p0_1) {
  return (
    jl.$clinit_Boolean(),
    jl.$equals_12(p0_1.name_0, suggestedName_0)
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
idwcat.lambda$9_2 = function lambda$9_2(suggestedName_0, p0_1) {
  return (
    jl.$clinit_Boolean(),
    jl.$equals_12(p0_1.name_0, suggestedName_0 + "_")
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
defineClass(207, 1, { 207: 1 }, idwcat.JsRollupConfig, idwcat.JsRollupConfig_0);
_.groupingColumns = null;
_.includeConstituents = false;
_.includeDescriptions = true;
_.includeOriginalColumns = false;
cggl.Lio_deephaven_web_client_api_tree_JsRollupConfig_2_classLit =
  createForClass("io.deephaven.web.client.api.tree", "JsRollupConfig", 207);
idwcat.JsRollupConfig$0methodref$ctor$Type =
  function JsRollupConfig$0methodref$ctor$Type() {};
defineClass(657, 1, {}, idwcat.JsRollupConfig$0methodref$ctor$Type);
_.get_0 = function get_16() {
  return new $wnd.Array();
};
cggl.Lio_deephaven_web_client_api_tree_JsRollupConfig$0methodref$ctor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsRollupConfig/0methodref$ctor$Type",
    657
  );
idwcat.JsRollupConfig$1methodref$push$Type =
  function JsRollupConfig$1methodref$push$Type() {};
defineClass(658, 1, {}, idwcat.JsRollupConfig$1methodref$push$Type);
_.accept_1 = function accept_61(arg0, arg1) {
  castToJsArray(arg0).push(castToString(arg1));
};
cggl.Lio_deephaven_web_client_api_tree_JsRollupConfig$1methodref$push$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsRollupConfig/1methodref$push$Type",
    658
  );
idwcat.$getClass_362 = function $getClass_362() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsRollupConfig$lambda$0$Type = function JsRollupConfig$lambda$0$Type(
  seenColNames_0
) {
  this.seenColNames_0 = seenColNames_0;
};
defineClass(1440, $wnd.Function, {}, idwcat.JsRollupConfig$lambda$0$Type);
_.onInvoke = function onInvoke_203(arg0, arg1, arg2) {
  return idwcat.lambda$0_9(this.seenColNames_0, castToString(arg0));
};
idwcat.$getClass_363 = function $getClass_363() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsRollupConfig$lambda$1$Type = function JsRollupConfig$lambda$1$Type(
  $$outer_0,
  seenColNames_1,
  colsNeedingCompoundNames_2,
  aggs_3
) {
  this.$$outer_0 = $$outer_0;
  this.seenColNames_1 = seenColNames_1;
  this.colsNeedingCompoundNames_2 = colsNeedingCompoundNames_2;
  this.aggs_3 = aggs_3;
};
defineClass(1441, $wnd.Function, {}, idwcat.JsRollupConfig$lambda$1$Type);
_.onKey = function onKey_2(arg0) {
  idwcat.$lambda$1_7(
    this.$$outer_0,
    this.seenColNames_1,
    this.colsNeedingCompoundNames_2,
    this.aggs_3,
    arg0
  );
};
idwcat.$getClass_364 = function $getClass_364() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsRollupConfig$lambda$10$Type = function JsRollupConfig$lambda$10$Type(
  suggestedName_0
) {
  this.suggestedName_0 = suggestedName_0;
};
defineClass(1444, $wnd.Function, {}, idwcat.JsRollupConfig$lambda$10$Type);
_.onInvoke = function onInvoke_204(arg0, arg1, arg2) {
  return idwcat.lambda$10_3(this.suggestedName_0, castTo(arg0, 21));
};
idwcat.$getClass_365 = function $getClass_365() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsRollupConfig$lambda$2$Type = function JsRollupConfig$lambda$2$Type(
  cols_0,
  seenColNames_1,
  colsNeedingCompoundNames_2
) {
  this.cols_0 = cols_0;
  this.seenColNames_1 = seenColNames_1;
  this.colsNeedingCompoundNames_2 = colsNeedingCompoundNames_2;
};
defineClass(1445, $wnd.Function, {}, idwcat.JsRollupConfig$lambda$2$Type);
_.onInvoke = function onInvoke_205(arg0, arg1, arg2) {
  return idwcat.lambda$2_7(
    this.cols_0,
    this.seenColNames_1,
    this.colsNeedingCompoundNames_2,
    castToString(arg0)
  );
};
idwcat.JsRollupConfig$lambda$3$Type = function JsRollupConfig$lambda$3$Type(
  colsNeedingCompoundNames_1,
  tableColumns_2,
  aggregations_3
) {
  this.colsNeedingCompoundNames_1 = colsNeedingCompoundNames_1;
  this.tableColumns_2 = tableColumns_2;
  this.aggregations_3 = aggregations_3;
};
defineClass(655, 1, {}, idwcat.JsRollupConfig$lambda$3$Type);
_.accept_1 = function accept_62(arg0, arg1) {
  idwcat.$lambda$3_2(
    this.colsNeedingCompoundNames_1,
    this.tableColumns_2,
    this.aggregations_3,
    castToString(arg0),
    castTo(arg1, 128)
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsRollupConfig$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsRollupConfig/lambda$3$Type",
    655
  );
idwcat.JsRollupConfig$lambda$4$Type = function JsRollupConfig$lambda$4$Type(
  colsNeedingCompoundNames_0,
  aggregationType_1
) {
  this.colsNeedingCompoundNames_0 = colsNeedingCompoundNames_0;
  this.aggregationType_1 = aggregationType_1;
};
defineClass(656, 1, {}, idwcat.JsRollupConfig$lambda$4$Type);
_.apply_1 = function apply_153(arg0) {
  return idwcat.lambda$4_9(
    this.colsNeedingCompoundNames_0,
    this.aggregationType_1,
    castToString(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsRollupConfig$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsRollupConfig/lambda$4$Type",
    656
  );
idwcat.JsRollupConfig$lambda$7$Type =
  function JsRollupConfig$lambda$7$Type() {};
defineClass(659, 1, {}, idwcat.JsRollupConfig$lambda$7$Type);
_.apply_4 = function apply_154(arg0, arg1) {
  var $instance;
  return (
    ($instance = castToJsArray(arg0)),
    $instance.concat.apply(
      $instance,
      ensureNotNull(
        castTo(
          ji.stampJavaTypeInfo_1(
            castToJsArray(arg1),
            initUnidimensionalArray(
              cggl.Ljava_lang_String_2_classLit,
              $intern_8,
              2,
              0,
              6,
              1
            )
          ),
          12
        )
      )
    )
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsRollupConfig$lambda$7$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsRollupConfig/lambda$7$Type",
    659
  );
idwcat.$getClass_366 = function $getClass_366() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsRollupConfig$lambda$8$Type = function JsRollupConfig$lambda$8$Type(
  suggestedName_0
) {
  this.suggestedName_0 = suggestedName_0;
};
defineClass(1442, $wnd.Function, {}, idwcat.JsRollupConfig$lambda$8$Type);
_.onInvoke = function onInvoke_206(arg0, arg1, arg2) {
  return idwcat.lambda$8_4(this.suggestedName_0, castTo(arg0, 21));
};
idwcat.$getClass_367 = function $getClass_367() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsRollupConfig$lambda$9$Type = function JsRollupConfig$lambda$9$Type(
  suggestedName_0
) {
  this.suggestedName_0 = suggestedName_0;
};
defineClass(1443, $wnd.Function, {}, idwcat.JsRollupConfig$lambda$9$Type);
_.onInvoke = function onInvoke_207(arg0, arg1, arg2) {
  return idwcat.lambda$9_2(this.suggestedName_0, castTo(arg0, 21));
};
idwcat.$$init_36 = function $$init_36(this$static) {
  this$static.columnsByName = new ju.HashMap();
  this$static.keyColumns_0 = new $wnd.Array();
  this$static.filters = new ju.ArrayList();
  this$static.sorts = new ju.ArrayList();
  this$static.nextFilters = new ju.ArrayList();
  this$static.nextSort = new ju.ArrayList();
};
idwcat.$findColumn_0 = function $findColumn_0(this$static, key) {
  var c;
  c = castTo(ju.$getStringValue(this$static.columnsByName, key), 21);
  if (!c) {
    throw toJs(new ju.NoSuchElementException_0(key));
  }
  return c;
};
idwcat.$getFilter_0 = function $getFilter_0(this$static) {
  return idwcf.$clinit_JsItr(), this$static.filters.toArray().slice();
};
idwcat.$getSort_0 = function $getSort_0(this$static) {
  return idwcf.$clinit_JsItr(), this$static.sorts.toArray().slice();
};
idwcat.$handleUpdate = function $handleUpdate(
  this$static,
  nextSort,
  nextFilters,
  viewportData
) {
  var updatedEvent;
  if (this$static.closed_0) {
    return;
  }
  this$static.currentViewportData = viewportData;
  this$static.sorts = nextSort;
  this$static.filters = nextFilters;
  updatedEvent = jb.emptyObjectLiteral();
  updatedEvent.detail = viewportData;
  idwca.$fireEvent_0(
    this$static,
    "updated",
    new $wnd.CustomEvent("updated", updatedEvent)
  );
};
idwcat.$lambda$11_2 = function $lambda$11_2(
  this$static,
  prevTicket_1,
  ticket_2,
  c_2
) {
  var applyFilter;
  applyFilter =
    new $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb.HierarchicalTableApplyRequest();
  applyFilter.setSortsList(
    castToJsArray(
      jus.$toArray_6(
        jus.$map_0(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(this$static.nextSort, 16)
          ),
          new idwcat.JsTreeTable$6methodref$makeDescriptor$Type()
        ),
        new idwcat.JsTreeTable$7methodref$lambda$13$Type()
      )
    )
  );
  applyFilter.setInputHierarchicalTableId(prevTicket_1.ticket_0);
  applyFilter.setResultHierarchicalTableId(ticket_2);
  this$static.connection.hierarchicalTableServiceClient.apply(
    applyFilter,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcat.JsTreeTable$8methodref$apply$Type.prototype.onInvoke_22,
      idwcat.JsTreeTable$8methodref$apply$Type,
      [c_2]
    )
  );
};
idwcat.$lambda$17_3 = function $lambda$17_3(
  this$static,
  prevTicket_1,
  ticket_2,
  keyTable_3,
  c_3
) {
  var viewRequest;
  viewRequest =
    new $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb.HierarchicalTableViewRequest();
  viewRequest.setHierarchicalTableId(prevTicket_1.ticket_0);
  viewRequest.setResultViewId(ticket_2);
  keyTable_3.then(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$18$Type.prototype.onInvoke_5,
      idwcat.JsTreeTable$lambda$18$Type,
      [this$static, viewRequest, c_3]
    ),
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$19$Type.prototype.onInvoke_5,
      idwcat.JsTreeTable$lambda$19$Type,
      [c_3]
    )
  );
};
idwcat.$lambda$18 = function $lambda$18(this$static, viewRequest_1, c_2, t_2) {
  var expansions;
  if (this$static.keyTableData[0].length > 0) {
    expansions =
      new $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb.HierarchicalTableViewKeyTableDescriptor();
    expansions.setKeyTableId(idwca.$makeTicket(idwca.$state(t_2).handle));
    expansions.setKeyTableActionColumn(this$static.actionCol.name_0);
    viewRequest_1.setExpansions(expansions);
  }
  this$static.connection.hierarchicalTableServiceClient.view(
    viewRequest_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcat.JsTreeTable$9methodref$apply$Type.prototype.onInvoke_26,
      idwcat.JsTreeTable$9methodref$apply$Type,
      [c_2]
    )
  );
  return null;
};
idwcat.$lambda$22_1 = function $lambda$22_1(this$static) {
  var filter, sort_0, view;
  idwcat.$makeKeyTable(this$static);
  filter = idwcat.$prepareFilter(this$static);
  sort_0 = idwcat.$prepareSort(this$static, filter);
  view = idwcat.$makeView(this$static, sort_0);
  return $wnd.Promise.all([
    this$static.keyTable,
    filter.promise,
    sort_0.promise,
    view.promise,
  ]);
};
idwcat.$lambda$23 = function $lambda$23(this$static) {
  var alwaysFireEvent,
    columnTypes,
    columnsBitset,
    columnsOffset,
    doExchange,
    doGetRequest,
    queryColumns,
    range,
    serializationOptionsOffset,
    subscriptionRequestWrapper,
    tableTicketOffset,
    viewportOffset;
  columnsBitset = idwcat.$makeColumnSubscriptionBitset(this$static);
  range = idwsd.ofRange_0(
    fromDouble_0(jl.$doubleValue(this$static.firstRow)),
    fromDouble_0(jl.$doubleValue(this$static.lastRow))
  );
  queryColumns = this$static.columns_0;
  alwaysFireEvent = this$static.alwaysFireNextEvent;
  this$static.alwaysFireNextEvent = false;
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [
      "Sending tree table request",
      this$static,
      new idwca.LazyString(
        makeLambdaFunction(
          idwcat.JsTreeTable$lambda$24$Type.prototype.valueOf_0,
          idwcat.JsTreeTable$lambda$24$Type,
          [this$static]
        )
      ),
      columnsBitset,
      range,
      (jl.$clinit_Boolean(),
      alwaysFireEvent ? ji.uncheckedCast(true) : ji.uncheckedCast(false)),
    ]
  );
  doExchange = idwcabs.$create(
    idwca.$streamFactory(this$static.connection),
    new idwcat.JsTreeTable$lambda$25$Type(this$static),
    new idwcat.JsTreeTable$lambda$26$Type(this$static),
    new idwcat.JsTreeTable$lambda$27$Type(this$static),
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData()
  );
  subscriptionRequestWrapper =
    new $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData();
  doGetRequest = new $wnd.dhinternal.flatbuffers.Builder(1024);
  columnsOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.createColumnsVector(
      doGetRequest,
      idwcab.makeUint8ArrayFromBitset(columnsBitset)
    );
  viewportOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.createViewportVector(
      doGetRequest,
      idwcab.serializeRanges(ju.singleton(range))
    );
  serializationOptionsOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionOptions.createBarrageSubscriptionOptions(
      doGetRequest,
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io
        .deephaven.barrage.flatbuf.ColumnConversionMode.Stringify,
      true,
      this$static.updateInterval_0,
      0,
      0
    );
  tableTicketOffset =
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.createTicketVector(
      doGetRequest,
      this$static.viewTicket.ticket_0.getTicket_asU8()
    );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.startBarrageSubscriptionRequest(
    doGetRequest
  );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.addTicket(
    doGetRequest,
    tableTicketOffset
  );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.addColumns(
    doGetRequest,
    columnsOffset
  );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.addSubscriptionOptions(
    doGetRequest,
    serializationOptionsOffset
  );
  $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.addViewport(
    doGetRequest,
    viewportOffset
  );
  doGetRequest.finish(
    $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageSubscriptionRequest.endBarrageSubscriptionRequest(
      doGetRequest
    )
  );
  subscriptionRequestWrapper.setAppMetadata(
    idwcab.wrapMessage(
      doGetRequest,
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io
        .deephaven.barrage.flatbuf.BarrageMessageType.BarrageSubscriptionRequest
    )
  );
  doExchange.send_0(subscriptionRequestWrapper);
  columnTypes = castTo(
    jus.$toArray_6(
      jus.$map_0(
        ju.stream_4(this$static.tableDefinition.columns_0),
        new idwcat.JsTreeTable$11methodref$getType$Type()
      ),
      new idwcat.JsTreeTable$12methodref$lambda$30$Type()
    ),
    12
  );
  doExchange.onStatus(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$31$Type.prototype.apply_3,
      idwcat.JsTreeTable$lambda$31$Type,
      [this$static]
    )
  );
  doExchange.onEnd_0(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$32$Type.prototype.apply_3,
      idwcat.JsTreeTable$lambda$32$Type,
      [this$static]
    )
  );
  doExchange.onData(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$33$Type.prototype.apply_3,
      idwcat.JsTreeTable$lambda$33$Type,
      [this$static, columnTypes, queryColumns]
    )
  );
  return $wnd.Promise.resolve(doExchange);
};
idwcat.$lambda$25_0 = function $lambda$25_0(this$static, headers_0) {
  return this$static.connection.flightServiceClient.doExchange(headers_0);
};
idwcat.$lambda$26 = function $lambda$26(this$static, first_0, headers_1) {
  return this$static.connection.browserFlightServiceClient.openDoExchange(
    first_0,
    headers_1
  );
};
idwcat.$lambda$27_1 = function $lambda$27_1(
  this$static,
  next_0,
  headers_1,
  c_2
) {
  return this$static.connection.browserFlightServiceClient.nextDoExchange(
    next_0,
    headers_1,
    makeLambdaFunction(
      idwcat.JsTreeTable$10methodref$apply$Type.prototype.onInvoke_7,
      idwcat.JsTreeTable$10methodref$apply$Type,
      [c_2]
    )
  );
};
idwcat.$lambda$3_3 = function $lambda$3_3(
  this$static,
  workerConnection_1,
  widget_2
) {
  return idwca
    .$newState(
      workerConnection_1,
      new idwcat.JsTreeTable$lambda$4$Type(this$static, widget_2),
      "source for hierarchical table"
    )
    .then(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$6$Type.prototype.onInvoke_5,
        idwcat.JsTreeTable$lambda$6$Type,
        [this$static]
      )
    );
};
idwcat.$lambda$31_0 = function $lambda$31_0(this$static, status_0) {
  idwcabs.$isOk(status_0) ||
    idwca.$failureHandled(this$static, status_0.details);
};
idwcat.$lambda$33_0 = function $lambda$33_0(
  this$static,
  columnTypes_1,
  queryColumns_2,
  flightData_3
) {
  var appMetadataBytes,
    barrageMessageWrapper,
    header,
    includedRows,
    message,
    offset,
    snapshot,
    update,
    vd;
  message =
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.Message.getRootAsMessage(
      new $wnd.dhinternal.flatbuffers.ByteBuffer(
        flightData_3.getDataHeader_asU8()
      )
    );
  if (
    message.headerType() ==
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.MessageHeader.Schema
  ) {
    return;
  }
  if (
    message.headerType() !=
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.MessageHeader.RecordBatch
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  header = castToNative(
    message.header(
      new $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow.flatbuf.RecordBatch()
    ),
    $wnd.dhinternal.arrow.flight.flatbuf.Message_generated.org.apache.arrow
      .flatbuf.RecordBatch
  );
  appMetadataBytes = flightData_3.getAppMetadata_asU8();
  update = null;
  if (appMetadataBytes.length != 0) {
    barrageMessageWrapper =
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageMessageWrapper.getRootAsBarrageMessageWrapper(
        new $wnd.dhinternal.flatbuffers.ByteBuffer(appMetadataBytes)
      );
    update =
      $wnd.dhinternal.io.deephaven.barrage.flatbuf.Barrage_generated.io.deephaven.barrage.flatbuf.BarrageUpdateMetadata.getRootAsBarrageUpdateMetadata(
        new $wnd.dhinternal.flatbuffers.ByteBuffer(
          new $wnd.Uint8Array(barrageMessageWrapper.msgPayloadArray())
        )
      );
  }
  snapshot = idwcab.createSnapshot(
    header,
    idwcab.typedArrayToLittleEndianByteBuffer_0(
      flightData_3.getDataBody_asU8()
    ),
    update,
    true,
    columnTypes_1
  );
  includedRows = snapshot.includedRows;
  offset = jl.$doubleValue(this$static.firstRow);
  if (
    !(
      includedRows.sortedRanges.length == 0 ||
      eq(
        fromInt(jb.asInt_0(ji.uncheckedCast(offset))),
        includedRows.sortedRanges[0].first_0
      )
    )
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  vd = new idwcat.JsTreeTable$TreeViewportData(
    this$static,
    offset,
    includedRows.sortedRanges.length == 0
      ? 0
      : jus.$collect_0(
          jus.$mapToLong(
            ju.stream_4(includedRows.sortedRanges),
            new idwsd.RangeSet$0methodref$size$Type()
          )
        ).sum_0,
    toDouble_0(snapshot.tableSize),
    snapshot.dataColumns,
    queryColumns_2
  );
  idwcat.$handleUpdate(
    this$static,
    this$static.nextSort,
    this$static.nextFilters,
    vd
  );
};
idwcat.$lambda$34_1 = function $lambda$34_1(this$static, stream_1, err_1) {
  maskUndefined(this$static.stream) === maskUndefined(stream_1) &&
    idwca.$failureHandled(this$static, toString_7(err_1));
  return $wnd.Promise.reject(err_1);
};
idwcat.$lambda$4_2 = function $lambda$4_2(
  this$static,
  widget_1,
  c_1,
  newState_2
) {
  var exportRequest;
  exportRequest =
    new $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb.HierarchicalTableSourceExportRequest();
  exportRequest.setResultTableId(idwca.$makeTicket(newState_2.handle));
  exportRequest.setHierarchicalTableId(widget_1.typedTicket_0.getTicket());
  this$static.connection.hierarchicalTableServiceClient.exportSource(
    exportRequest,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcat.JsTreeTable$2methodref$apply$Type.prototype.onInvoke_23,
      idwcat.JsTreeTable$2methodref$apply$Type,
      [c_1]
    )
  );
};
idwcat.$lambda$47_0 = function $lambda$47_0(this$static, promise_1) {
  idwcf.$succeed(promise_1, this$static.currentViewportData);
};
idwcat.$lambda$52 = function $lambda$52(this$static, columns_1, t_1) {
  ju.$equals_15(
    (idwcf.$clinit_JsItr(),
    jb.$asList(
      ju.$toArray_1(new ju.ArrayList_1(idwca.$state(t_1).filters)).slice()
    )),
    jb.$asList(this$static.filters.toArray().slice())
  ) ||
    idwca.$applyFilter(
      t_1,
      castTo(
        ji.stampJavaTypeInfo_1(
          this$static.filters.toArray().slice(),
          initUnidimensionalArray(
            cggl.Lio_deephaven_web_client_api_filter_FilterCondition_2_classLit,
            $intern_56,
            61,
            0,
            0,
            1
          )
        ),
        192
      )
    );
  return $wnd.Promise.resolve(idwca.$selectDistinct(t_1, columns_1));
};
idwcat.$lambda$54 = function $lambda$54(this$static, config_1, t_1) {
  ju.$equals_15(
    (idwcf.$clinit_JsItr(),
    jb.$asList(
      ju.$toArray_1(new ju.ArrayList_1(idwca.$state(t_1).filters)).slice()
    )),
    jb.$asList(this$static.filters.toArray().slice())
  ) ||
    idwca.$applyFilter(
      t_1,
      castTo(
        ji.stampJavaTypeInfo_1(
          this$static.filters.toArray().slice(),
          initUnidimensionalArray(
            cggl.Lio_deephaven_web_client_api_filter_FilterCondition_2_classLit,
            $intern_56,
            61,
            0,
            0,
            1
          )
        ),
        192
      )
    );
  return $wnd.Promise.resolve(
    idwca.$fetchTotals(
      t_1,
      config_1,
      makeLambdaFunction(
        idwca.JsTable$9methodref$lastVisibleState$Type.prototype.valueOf_0,
        idwca.JsTable$9methodref$lastVisibleState$Type,
        [t_1]
      )
    )
  );
};
idwcat.$lambda$57 = function $lambda$57(this$static) {
  return $wnd.Promise.resolve(
    new idwcat.JsTreeTable(this$static.connection, this$static.widget)
  );
};
idwcat.$lambda$6_4 = function $lambda$6_4(this$static, cts_0) {
  return $wnd.Promise.resolve(
    new idwca.JsTable_0(this$static.connection, cts_0)
  );
};
idwcat.$lambda$7_2 = function $lambda$7_2(this$static, ticket_1, c_1) {
  var applyFilter;
  applyFilter =
    new $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb.HierarchicalTableApplyRequest();
  applyFilter.setFiltersList(
    castToJsArray(
      jus.$toArray_6(
        jus.$map_0(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(this$static.nextFilters, 16)
          ),
          new idwcat.JsTreeTable$3methodref$makeDescriptor$Type()
        ),
        new idwcat.JsTreeTable$4methodref$lambda$9$Type()
      )
    )
  );
  applyFilter.setInputHierarchicalTableId(
    this$static.widget.typedTicket_0.getTicket()
  );
  applyFilter.setResultHierarchicalTableId(ticket_1);
  this$static.connection.hierarchicalTableServiceClient.apply(
    applyFilter,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcat.JsTreeTable$5methodref$apply$Type.prototype.onInvoke_22,
      idwcat.JsTreeTable$5methodref$apply$Type,
      [c_1]
    )
  );
};
idwcat.$makeColumnSubscriptionBitset = function $makeColumnSubscriptionBitset(
  this$static
) {
  var column, column$array, column$index, column$max, columnsBitset;
  columnsBitset = new ju.BitSet_0(this$static.tableDefinition.columns_0.length);
  jus.$forEach_5(
    jus.$flatMapToInt(
      ju.stream_4(this$static.columns_0),
      new idwcat.JsTreeTable$13methodref$getRequiredColumns$Type()
    ),
    new idwcat.JsTreeTable$14methodref$set$Type(columnsBitset)
  );
  jus.$forEach_5(
    jus.$flatMapToInt(
      jus.$filter_1(
        jus.$map_0(
          jus.$map_0(
            ju.stream_4(this$static.columns_0),
            new idwcat.JsTreeTable$15methodref$getName$Type()
          ),
          new idwcat.JsTreeTable$16methodref$get$Type(this$static.sourceColumns)
        ),
        new idwcat.JsTreeTable$17methodref$nonNull$Type()
      ),
      new idwcat.JsTreeTable$18methodref$getRequiredColumns$Type()
    ),
    new idwcat.JsTreeTable$19methodref$set$Type(columnsBitset)
  );
  for (
    column$array = this$static.tableDefinition.columns_0,
      column$index = 0,
      column$max = column$array.length;
    column$index < column$max;
    ++column$index
  ) {
    column = column$array[column$index];
    column.forRow && ju.$set(columnsBitset, column.columnIndex);
  }
  ju.$set(columnsBitset, this$static.rowDepthCol.index_0);
  ju.$set(columnsBitset, this$static.rowExpandedCol.index_0);
  this$static.keyColumns_0.forEach(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$45$Type.prototype.onInvoke,
      idwcat.JsTreeTable$lambda$45$Type,
      [columnsBitset]
    )
  );
  return columnsBitset;
};
idwcat.$makeKeyTable = function $makeKeyTable(this$static) {
  var keyTableColumns;
  if (this$static.keyTable != null) {
    return this$static.keyTable;
  }
  keyTableColumns = this$static.keyColumns_0.slice();
  keyTableColumns.push(this$static.rowDepthCol);
  keyTableColumns.push(this$static.actionCol);
  this$static.keyTable = idwca.$newTable(
    this$static.connection,
    keyTableColumns.map(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$15$Type.prototype.onInvoke,
        idwcat.JsTreeTable$lambda$15$Type,
        []
      )
    ),
    keyTableColumns.map(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$16$Type.prototype.onInvoke,
        idwcat.JsTreeTable$lambda$16$Type,
        []
      )
    ),
    this$static.keyTableData,
    null
  );
  return this$static.keyTable;
};
idwcat.$makeView = function $makeView(this$static, prevTicket) {
  var keyTable, ticket;
  if (this$static.viewTicket) {
    return this$static.viewTicket;
  }
  ticket = idwca.$newTicket(this$static.connection.config);
  keyTable = idwcat.$makeKeyTable(this$static);
  this$static.viewTicket = new idwcai2.TicketAndPromise(
    ticket,
    new $wnd.Promise(
      makeLambdaFunction(
        idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
        idwca.Callbacks$lambda$4$Type,
        [
          new idwcat.JsTreeTable$lambda$17$Type(
            this$static,
            prevTicket,
            ticket,
            keyTable
          ),
        ]
      )
    ),
    this$static.connection
  );
  return this$static.viewTicket;
};
idwcat.$prepareFilter = function $prepareFilter(this$static) {
  var ticket;
  if (this$static.filteredTable) {
    return this$static.filteredTable;
  }
  if (this$static.nextFilters.isEmpty()) {
    return new idwcai2.TicketAndPromise_0(
      this$static.widget.typedTicket_0.getTicket(),
      this$static.connection
    );
  }
  ticket = idwca.$newTicket(this$static.connection.config);
  this$static.filteredTable = new idwcai2.TicketAndPromise(
    ticket,
    new $wnd.Promise(
      makeLambdaFunction(
        idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
        idwca.Callbacks$lambda$4$Type,
        [new idwcat.JsTreeTable$lambda$7$Type(this$static, ticket)]
      )
    ),
    this$static.connection
  );
  return this$static.filteredTable;
};
idwcat.$prepareSort = function $prepareSort(this$static, prevTicket) {
  var ticket;
  if (this$static.sortedTable) {
    return this$static.sortedTable;
  }
  if (this$static.nextSort.isEmpty()) {
    return prevTicket;
  }
  ticket = idwca.$newTicket(this$static.connection.config);
  this$static.sortedTable = new idwcai2.TicketAndPromise(
    ticket,
    new $wnd.Promise(
      makeLambdaFunction(
        idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
        idwca.Callbacks$lambda$4$Type,
        [new idwcat.JsTreeTable$lambda$11$Type(this$static, prevTicket, ticket)]
      )
    ),
    this$static.connection
  );
  return this$static.sortedTable;
};
idwcat.$replaceKeyTable = function $replaceKeyTable(this$static) {
  if (this$static.keyTable != null) {
    this$static.keyTable.then(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$46$Type.prototype.onInvoke_5,
        idwcat.JsTreeTable$lambda$46$Type,
        []
      )
    );
    this$static.keyTable = null;
  }
  idwcat.$replaceSubscription(this$static, 2);
};
idwcat.$replaceKeyTableData = function $replaceKeyTableData(
  this$static,
  action
) {
  var i;
  this$static.keyTableData = initMultidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    [$intern_41, $intern_7],
    [5, 1],
    5,
    [this$static.keyColumns_0.length + 2, 1],
    2
  );
  i = this$static.keyColumns_0.length;
  jb.$setAt(castToJsArray(this$static.keyTableData[i++]), 0, 0);
  jb.$setAt(castToJsArray(this$static.keyTableData[i++]), 0, action);
  idwcat.$replaceKeyTable(this$static);
};
idwcat.$replaceSubscription = function $replaceSubscription(this$static, step) {
  var stream;
  switch (step) {
    case 0:
      if (this$static.filteredTable) {
        idwcai2.$release_0(this$static.filteredTable);
        this$static.filteredTable = null;
      }

    case 1:
      if (this$static.sortedTable) {
        idwcai2.$release_0(this$static.sortedTable);
        this$static.sortedTable = null;
      }

    case 2:
      if (this$static.viewTicket) {
        idwcai2.$release_0(this$static.viewTicket);
        this$static.viewTicket = null;
      }

    case 3:
      if (this$static.stream != null) {
        this$static.stream.then(
          makeLambdaFunction(
            idwcat.JsTreeTable$lambda$21$Type.prototype.onInvoke_5,
            idwcat.JsTreeTable$lambda$21$Type,
            []
          )
        );
        this$static.stream = null;
      }
  }
  stream = $wnd.Promise.resolve(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$35$Type.prototype.onInvoke_5,
      idwcat.JsTreeTable$lambda$35$Type,
      []
    )
  )
    .then(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$22$Type.prototype.onInvoke_5,
        idwcat.JsTreeTable$lambda$22$Type,
        [this$static]
      )
    )
    .then(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$23$Type.prototype.onInvoke_5,
        idwcat.JsTreeTable$lambda$23$Type,
        [this$static]
      )
    );
  stream.catch(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$34$Type.prototype.onInvoke_5,
      idwcat.JsTreeTable$lambda$34$Type,
      [this$static, stream]
    )
  );
  this$static.stream = stream;
};
idwcat.$setExpanded = function $setExpanded(
  this$static,
  row,
  isExpanded,
  expandDescendants
) {
  var action, r;
  isExpanded
    ? expandDescendants == (jl.$clinit_Boolean(), TRUE)
      ? (action = 3)
      : (action = 1)
    : (action = 4);
  if (instanceOfDouble(row)) {
    r = castTo(
      jb.$getAt(
        this$static.currentViewportData.rows_0,
        (jb.checkCriticalType_0(typeof row == "number"),
        round_int(jb.asDouble(row) - this$static.currentViewportData.offset_0))
      ),
      93
    );
  } else if (instanceOf(row, 93)) {
    r = castTo(row, 93);
  } else {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "row parameter must be an index or a row"
      )
    );
  }
  idwcat.$appendKeyData(r, this$static.keyTableData, action);
  idwcat.$replaceKeyTable(this$static);
};
idwcat.JsTreeTable = function JsTreeTable(workerConnection, widget) {
  var column,
    columnDefsByName,
    columns,
    constituentColumns,
    definition,
    definition$array,
    definition$index,
    definition$max,
    flightSchemaMessage,
    groupedColumns,
    hasConstituentColumns,
    i,
    i0,
    rowFormatColumn,
    schema,
    sourceColumn,
    treeDescriptor,
    visibleColumn;
  idwcal.HasLifecycle.call(this);
  idwcat.$$init_36(this);
  this.connection = workerConnection;
  this.widget = widget;
  idwca.$registerSimpleReconnectable(this.connection, this);
  treeDescriptor =
    $wnd.dhinternal.io.deephaven.proto.hierarchicaltable_pb.HierarchicalTableDescriptor.deserializeBinary(
      widget.response.getData().getPayload_asU8()
    );
  flightSchemaMessage = treeDescriptor.getSnapshotSchema_asU8();
  schema = idwcab.readSchemaMessage(flightSchemaMessage);
  this.isRefreshing_0 = !treeDescriptor.getIsStatic();
  this.tableDefinition = idwcab.readTableDefinition(schema);
  columns = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_Column_2_classLit,
    $intern_40,
    21,
    0,
    0,
    1
  );
  columnDefsByName = castTo(
    jus.$collect_1(
      ju.stream_4(this.tableDefinition.columns_0),
      jus.partitioningBy(
        new idwcabd.InitialTableDefinition$0methodref$isRollupConstituentNodeColumn$Type(),
        jus.toMap(
          new idwcabd.InitialTableDefinition$1methodref$getName$Type(),
          new juf.Function$lambda$0$Type(),
          new idwcabd.InitialTableDefinition$lambda$4$Type(),
          new idwcabd.InitialTableDefinition$3methodref$ctor$Type()
        )
      )
    ),
    30
  );
  rowFormatColumn = -1;
  hasConstituentColumns = !castTo(
    columnDefsByName.get((jl.$clinit_Boolean(), ji.uncheckedCast(true))),
    30
  ).isEmpty();
  constituentColumns = new ju.HashMap();
  groupedColumns = new $wnd.Array();
  for (
    definition$array = this.tableDefinition.columns_0,
      definition$index = 0,
      definition$max = definition$array.length;
    definition$index < definition$max;
    ++definition$index
  ) {
    definition = definition$array[definition$index];
    column = idwcabd.$makeJsColumn(
      definition,
      columns.length,
      columnDefsByName
    );
    if (definition.forRow) {
      if (rowFormatColumn != -1) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      rowFormatColumn = definition.columnIndex;
      continue;
    }
    definition.isHierarchicalRowDepthColumn
      ? (this.rowDepthCol = column)
      : definition.isHierarchicalRowExpandedColumn
      ? (this.rowExpandedCol = column)
      : definition.isHierarchicalExpandByColumn &&
        this.keyColumns_0.push(column);
    definition.isRollupConstituentNodeColumn &&
      ju.$putStringValue(constituentColumns, column.name_0, column);
    !definition.isStyleColumn &&
      !definition.isFormatColumn &&
      !definition.isRollupConstituentNodeColumn &&
      !definition.isHierarchicalRowDepthColumn &&
      !definition.isHierarchicalRowExpandedColumn &&
      (columns[columns.length] = column);
    if (
      definition.isRollupGroupByColumn &&
      !definition.isRollupConstituentNodeColumn
    ) {
      groupedColumns.push(column);
      hasConstituentColumns &&
        idwca.$setConstituentType(
          column,
          castTo(
            castTo(columnDefsByName.get(ji.uncheckedCast(true)), 30).get(
              definition.name_0
            ),
            83
          ).type_0
        );
    }
    hasConstituentColumns &&
      definition.rollupAggregationInputColumn != null &&
      ji.uncheckedCast(definition.rollupAggregationInputColumn).length != 0 &&
      idwca.$setConstituentType(
        column,
        castTo(
          castTo(columnDefsByName.get(ji.uncheckedCast(true)), 30).get(
            definition.rollupAggregationInputColumn
          ),
          83
        ).type_0
      );
  }
  this.rowFormatColumn = rowFormatColumn;
  this.groupedColumns_0 = castToJsArray($wnd.Object.freeze(groupedColumns));
  this.sourceColumns = castTo(
    jus.$collect_1(
      jus.$filter_1(
        jus.$map_0(
          castTo(columnDefsByName.get(ji.uncheckedCast(false)), 30)
            .values()
            .stream_0(),
          new idwcat.JsTreeTable$lambda$0$Type(constituentColumns)
        ),
        new idwcat.JsTreeTable$0methodref$nonNull$Type()
      ),
      jus.toMap(
        new idwcat.JsTreeTable$1methodref$getName$Type(),
        new juf.Function$lambda$0$Type(),
        new jus.Collectors$lambda$44$Type(),
        new jus.Collectors$22methodref$ctor$Type()
      )
    ),
    30
  );
  this.sourceColumns.putAll(constituentColumns);
  for (i0 = 0; i0 < columns.length; i0++) {
    visibleColumn = columns[i0];
    sourceColumn = castTo(this.sourceColumns.get(visibleColumn.name_0), 21);
    if (!sourceColumn) {
      continue;
    }
    !visibleColumn.formatStringColumnIndex &&
      !!sourceColumn.formatStringColumnIndex &&
      (columns[i0] = idwca.$withFormatStringColumnIndex(
        visibleColumn,
        sourceColumn.formatStringColumnIndex.value_0
      ));
    !visibleColumn.styleColumnIndex &&
      !!sourceColumn.styleColumnIndex &&
      (columns[i0] = idwca.$withStyleColumnIndex(
        visibleColumn,
        sourceColumn.styleColumnIndex.value_0
      ));
  }
  this.visibleColumns = castTo($wnd.Object.freeze(columns), 126);
  for (i = 0; i < this.visibleColumns.length; i++) {
    column = this.visibleColumns[i];
    ju.$putStringValue(this.columnsByName, column.name_0, column);
  }
  this.keyTableData = initMultidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    [$intern_41, $intern_7],
    [5, 1],
    5,
    [this.keyColumns_0.length + 2, 0],
    2
  );
  this.actionCol = new idwca.Column(
    -1,
    -1,
    null,
    null,
    "byte",
    "__action__",
    false,
    null,
    null,
    false,
    false
  );
  this.sourceTable =
    (idwca.$clinit_JsLazy(),
    new idwca.JsLazy(
      new idwcat.JsTreeTable$lambda$3$Type(this, workerConnection, widget)
    ));
};
idwcat.lambda$0_10 = function lambda$0_10(constituentColumns_0, c_1) {
  if (
    c_1.rollupAggregationInputColumn != null &&
    ji.uncheckedCast(c_1.rollupAggregationInputColumn).length != 0
  ) {
    return castTo(
      ju.$removeStringValue(
        constituentColumns_0,
        c_1.rollupAggregationInputColumn
      ),
      21
    );
  }
  if (c_1.isRollupGroupByColumn) {
    return castTo(ju.$removeStringValue(constituentColumns_0, c_1.name_0), 21);
  }
  return null;
};
idwcat.lambda$21 = function lambda$21(stream_0) {
  stream_0.end_0();
  stream_0.cancel_1();
  return null;
};
idwcat.lambda$36_0 = function lambda$36_0(val_0, resolve_1) {
  $wnd.goog.global.setTimeout(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$37$Type.prototype.onInvoke_4,
      idwcat.JsTreeTable$lambda$37$Type,
      [resolve_1, val_0]
    ),
    0
  );
};
idwcat.lambda$49 = function lambda$49(stream_0) {
  stream_0.end_0();
  stream_0.cancel_1();
  return null;
};
idwcat.lambda$55 = function lambda$55(config_0, t_1) {
  return $wnd.Promise.resolve(
    idwca.$fetchTotals(
      t_1,
      config_0,
      makeLambdaFunction(
        idwca.JsTable$lambda$42$Type.prototype.valueOf_0,
        idwca.JsTable$lambda$42$Type,
        [t_1]
      )
    )
  );
};
idwcat.lambda$56 = function lambda$56() {
  throw toJs(new jl.UnsupportedOperationException_0("reexport"));
};
defineClass(201, 51, { 57: 1, 230: 1, 51: 1 }, idwcat.JsTreeTable);
_.applyFilter = function applyFilter_2(filter) {
  this.nextFilters = new ju.Arrays$ArrayList(filter);
  idwcat.$replaceSubscription(this, 0);
  return idwcf.$clinit_JsItr(), this.filters.toArray().slice();
};
_.applySort = function applySort_1(sort_0) {
  var i;
  for (i = 0; i < sort_0.length; i++) {
    if (jl.$equalsIgnoreCase(sort_0[i].direction_0, "reverse")) {
      throw toJs(
        new jl.IllegalArgumentException_0("Tree Tables do no support reverse")
      );
    }
  }
  this.nextSort = new ju.Arrays$ArrayList(sort_0);
  idwcat.$replaceSubscription(this, 1);
  return idwcf.$clinit_JsItr(), this.sorts.toArray().slice();
};
_.close = function close_5() {
  if (this.closed_0) {
    return;
  }
  this.closed_0 = true;
  idwca.$unregisterSimpleReconnectable(this.connection, this);
  idwca.$releaseTicket(this.connection, this.widget.typedTicket_0.getTicket());
  if (this.filteredTable) {
    idwcai2.$release_0(this.filteredTable);
    this.filteredTable = null;
  }
  if (this.sortedTable) {
    idwcai2.$release_0(this.sortedTable);
    this.sortedTable = null;
  }
  if (this.viewTicket) {
    idwcai2.$release_0(this.viewTicket);
    this.viewTicket = null;
  }
  if (this.stream != null) {
    this.stream.then(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$49$Type.prototype.onInvoke_5,
        idwcat.JsTreeTable$lambda$49$Type,
        []
      )
    );
    this.stream = null;
  }
  instanceOf(this.sourceTable.supplier, 82) &&
    castToNative(this.sourceTable.supplier.valueOf_0(), $wnd.Promise).then(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$50$Type.prototype.onInvoke_5,
        idwcat.JsTreeTable$lambda$50$Type,
        []
      )
    );
};
_.collapse = function collapse(row) {
  idwcat.$setExpanded(
    this,
    row,
    false,
    (jl.$clinit_Boolean(), ji.uncheckedCast(false))
  );
};
_.collapseAll = function collapseAll() {
  idwcat.$replaceKeyTableData(this, 1);
};
_.copy = function copy_1() {
  return idwcs
    .$refetch_2(
      idwca.$newState_0(
        this.connection,
        new idwcat.JsTreeTable$lambda$56$Type(),
        "reexport for tree.copy()"
      ),
      this.connection.metadata_0
    )
    .then(
      makeLambdaFunction(
        idwcat.JsTreeTable$lambda$57$Type.prototype.onInvoke_5,
        idwcat.JsTreeTable$lambda$57$Type,
        [this]
      )
    );
};
_.expand = function expand(row, expandDescendants) {
  idwcat.$setExpanded(this, row, true, expandDescendants);
};
_.expandAll = function expandAll() {
  idwcat.$replaceKeyTableData(this, 3);
};
_.findColumn = function findColumn_1(key) {
  return idwcat.$findColumn_0(this, key);
};
_.findColumns = function findColumns_1(keys_0) {
  var i, result;
  result = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_Column_2_classLit,
    $intern_40,
    21,
    keys_0.length,
    0,
    1
  );
  for (i = 0; i < keys_0.length; i++) {
    result[i] = idwcat.$findColumn_0(this, keys_0[i]);
  }
  return result;
};
defineProperties(_, {
  columns: {
    get: function getColumns_6() {
      return this.visibleColumns;
    },
  },
});
defineProperties(_, {
  description: {
    get: function getDescription_2() {
      return castToString(
        ju.$getStringValue(
          this.tableDefinition.attributes.map_0,
          "TableDescription"
        )
      );
    },
  },
});
defineProperties(_, {
  filter: {
    get: function getFilter_1() {
      return idwcat.$getFilter_0(this);
    },
  },
});
_.getGrandTotalsTable = function getGrandTotalsTable_0(config) {
  return castToNative(this.sourceTable.supplier.valueOf_0(), $wnd.Promise).then(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$55$Type.prototype.onInvoke_5,
      idwcat.JsTreeTable$lambda$55$Type,
      [config]
    )
  );
};
defineProperties(_, {
  groupedColumns: {
    get: function getGroupedColumns() {
      return this.groupedColumns_0;
    },
  },
});
defineProperties(_, {
  size: {
    get: function getSize_3() {
      if (this.currentViewportData) {
        return this.currentViewportData.treeSize;
      }
      return -1;
    },
  },
});
defineProperties(_, {
  sort: {
    get: function getSort_1() {
      return idwcat.$getSort_0(this);
    },
  },
});
_.getTotalsTable = function getTotalsTable_0(config) {
  return castToNative(this.sourceTable.supplier.valueOf_0(), $wnd.Promise).then(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$54$Type.prototype.onInvoke_5,
      idwcat.JsTreeTable$lambda$54$Type,
      [this, config]
    )
  );
};
_.getTotalsTableConfig = function getTotalsTableConfig_1() {
  return castToNative(this.sourceTable.supplier.valueOf_0(), $wnd.Promise).then(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$53$Type.prototype.onInvoke_5,
      idwcat.JsTreeTable$lambda$53$Type,
      []
    )
  );
};
_.getViewportData = function getViewportData_2() {
  var promise;
  promise = new idwcf.LazyPromise();
  !this.currentViewportData
    ? idwca.$addEventListenerOneShot_0(
        this,
        stampJavaTypeInfo(
          getClassLiteralForArray(
            cggl.Lio_deephaven_web_client_api_HasEventHandling$EventPair_2_classLit,
            1
          ),
          $intern_7,
          171,
          0,
          [
            idwca.of_0(
              "updated",
              makeLambdaFunction(
                idwcat.JsTreeTable$lambda$47$Type.prototype.onEvent,
                idwcat.JsTreeTable$lambda$47$Type,
                [this, promise]
              )
            ),
            idwca.of_0(
              "requestfailed",
              makeLambdaFunction(
                idwcat.JsTreeTable$20methodref$fail$Type.prototype.onEvent,
                idwcat.JsTreeTable$20methodref$fail$Type,
                [promise]
              )
            ),
          ]
        )
      )
    : idwcf.$succeed(promise, this.currentViewportData);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [promise]
    )
  );
};
defineProperties(_, {
  isClosed: {
    get: function isClosed_1() {
      return this.closed_0;
    },
  },
});
_.isExpanded = function isExpanded_0(row) {
  var r;
  if (instanceOfDouble(row)) {
    r = castTo(
      jb.$getAt(
        this.currentViewportData.rows_0,
        (jb.checkCriticalType_0(typeof row == "number"),
        round_int(jb.asDouble(row) - this.currentViewportData.offset_0))
      ),
      93
    );
  } else if (instanceOf(row, 93)) {
    r = castTo(row, 93);
  } else {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "row parameter must be an index or a row"
      )
    );
  }
  return (
    r.this$11.expandedColumn[r.offsetInSnapshot] == (jl.$clinit_Boolean(), TRUE)
  );
};
defineProperties(_, {
  includeConstituents: {
    get: function isIncludeConstituents() {
      return jus.$anyMatch_0(
        ju.stream_4(this.tableDefinition.columns_0),
        new idwcat.JsTreeTable$21methodref$isRollupConstituentNodeColumn$Type()
      );
    },
  },
});
defineProperties(_, {
  isRefreshing: {
    get: function isRefreshing_1() {
      return this.isRefreshing_0;
    },
  },
});
_.selectDistinct = function selectDistinct_0(columns) {
  return castToNative(this.sourceTable.supplier.valueOf_0(), $wnd.Promise).then(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$52$Type.prototype.onInvoke_5,
      idwcat.JsTreeTable$lambda$52$Type,
      [this, columns]
    )
  );
};
_.setExpanded = function setExpanded(row, isExpanded, expandDescendants) {
  idwcat.$setExpanded(this, row, isExpanded, expandDescendants);
};
_.setViewport = function setViewport_2(
  firstRow,
  lastRow,
  columns,
  updateInterval
) {
  this.firstRow = ji.uncheckedCast(firstRow);
  this.lastRow = ji.uncheckedCast(lastRow);
  this.columns_0 = columns != null ? columns.slice() : this.visibleColumns;
  this.updateInterval_0 =
    updateInterval == null
      ? $intern_21
      : round_int(
          ji.unsafeCastToDouble(
            (ji.checkCriticalNotNull(updateInterval), updateInterval)
          )
        );
  idwcat.$replaceSubscription(this, 3);
};
_.typedTicket = function typedTicket_4() {
  return idwcaw.$typedTicket(this.widget);
};
_.typedTicket_2 = function () {
  return this.typedTicket();
};
_.alwaysFireNextEvent = false;
_.closed_0 = false;
_.isRefreshing_0 = false;
_.rowFormatColumn = 0;
_.updateInterval_0 = $intern_21;
idwcat.EVENT_DISCONNECT_4 = "disconnect";
idwcat.EVENT_RECONNECT_4 = "reconnect";
idwcat.EVENT_RECONNECTFAILED_2 = "reconnectfailed";
idwcat.EVENT_REQUEST_FAILED_2 = "requestfailed";
idwcat.EVENT_UPDATED_1 = "updated";
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable_2_classLit = createForClass(
  "io.deephaven.web.client.api.tree",
  "JsTreeTable",
  201
);
idwcat.JsTreeTable$0methodref$nonNull$Type =
  function JsTreeTable$0methodref$nonNull$Type() {};
defineClass(586, 1, {}, idwcat.JsTreeTable$0methodref$nonNull$Type);
_.test_0 = function test_14(arg0) {
  return arg0 != null;
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$0methodref$nonNull$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/0methodref$nonNull$Type",
    586
  );
idwcat.$getClass_368 = function $getClass_368() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$10methodref$apply$Type =
  function JsTreeTable$10methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1396, $wnd.Function, {}, idwcat.JsTreeTable$10methodref$apply$Type);
_.onInvoke_7 = function onInvoke_208(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcat.JsTreeTable$11methodref$getType$Type =
  function JsTreeTable$11methodref$getType$Type() {};
defineClass(600, 1, {}, idwcat.JsTreeTable$11methodref$getType$Type);
_.apply_1 = function apply_155(arg0) {
  return castTo(arg0, 83).type_0;
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$11methodref$getType$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/11methodref$getType$Type",
    600
  );
idwcat.JsTreeTable$12methodref$lambda$30$Type =
  function JsTreeTable$12methodref$lambda$30$Type() {};
defineClass(601, 1, {}, idwcat.JsTreeTable$12methodref$lambda$30$Type);
_.apply_2 = function apply_156(arg0) {
  return initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    arg0,
    6,
    1
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$12methodref$lambda$30$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/12methodref$lambda$30$Type",
    601
  );
idwcat.JsTreeTable$13methodref$getRequiredColumns$Type =
  function JsTreeTable$13methodref$getRequiredColumns$Type() {};
defineClass(602, 1, {}, idwcat.JsTreeTable$13methodref$getRequiredColumns$Type);
_.apply_1 = function apply_157(arg0) {
  return idwca.$getRequiredColumns(castTo(arg0, 21));
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$13methodref$getRequiredColumns$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/13methodref$getRequiredColumns$Type",
    602
  );
idwcat.JsTreeTable$14methodref$set$Type =
  function JsTreeTable$14methodref$set$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(603, 1, $intern_62, idwcat.JsTreeTable$14methodref$set$Type);
_.accept_2 = function accept_63(arg0) {
  ju.$set(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$14methodref$set$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/14methodref$set$Type",
    603
  );
idwcat.JsTreeTable$15methodref$getName$Type =
  function JsTreeTable$15methodref$getName$Type() {};
defineClass(604, 1, {}, idwcat.JsTreeTable$15methodref$getName$Type);
_.apply_1 = function apply_158(arg0) {
  return castTo(arg0, 21).name_0;
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$15methodref$getName$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/15methodref$getName$Type",
    604
  );
idwcat.JsTreeTable$16methodref$get$Type =
  function JsTreeTable$16methodref$get$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(605, 1, {}, idwcat.JsTreeTable$16methodref$get$Type);
_.apply_1 = function apply_159(arg0) {
  return this.$$outer_0.get(arg0);
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$16methodref$get$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/16methodref$get$Type",
    605
  );
idwcat.JsTreeTable$17methodref$nonNull$Type =
  function JsTreeTable$17methodref$nonNull$Type() {};
defineClass(606, 1, {}, idwcat.JsTreeTable$17methodref$nonNull$Type);
_.test_0 = function test_15(arg0) {
  return arg0 != null;
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$17methodref$nonNull$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/17methodref$nonNull$Type",
    606
  );
idwcat.JsTreeTable$18methodref$getRequiredColumns$Type =
  function JsTreeTable$18methodref$getRequiredColumns$Type() {};
defineClass(607, 1, {}, idwcat.JsTreeTable$18methodref$getRequiredColumns$Type);
_.apply_1 = function apply_160(arg0) {
  return idwca.$getRequiredColumns(castTo(arg0, 21));
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$18methodref$getRequiredColumns$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/18methodref$getRequiredColumns$Type",
    607
  );
idwcat.JsTreeTable$19methodref$set$Type =
  function JsTreeTable$19methodref$set$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(608, 1, $intern_62, idwcat.JsTreeTable$19methodref$set$Type);
_.accept_2 = function accept_64(arg0) {
  ju.$set(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$19methodref$set$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/19methodref$set$Type",
    608
  );
idwcat.JsTreeTable$1methodref$getName$Type =
  function JsTreeTable$1methodref$getName$Type() {};
defineClass(587, 1, {}, idwcat.JsTreeTable$1methodref$getName$Type);
_.apply_1 = function apply_161(arg0) {
  return castTo(arg0, 21).name_0;
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$1methodref$getName$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/1methodref$getName$Type",
    587
  );
idwcat.$getClass_369 = function $getClass_369() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$20methodref$fail$Type =
  function JsTreeTable$20methodref$fail$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1374,
  $wnd.Function,
  $intern_35,
  idwcat.JsTreeTable$20methodref$fail$Type
);
_.onEvent = function onEvent_23(arg0) {
  idwcf.$fail(this.$$outer_0, arg0);
};
idwcat.JsTreeTable$21methodref$isRollupConstituentNodeColumn$Type =
  function JsTreeTable$21methodref$isRollupConstituentNodeColumn$Type() {};
defineClass(
  609,
  1,
  {},
  idwcat.JsTreeTable$21methodref$isRollupConstituentNodeColumn$Type
);
_.test_0 = function test_16(arg0) {
  return castTo(arg0, 83).isRollupConstituentNodeColumn;
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$21methodref$isRollupConstituentNodeColumn$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/21methodref$isRollupConstituentNodeColumn$Type",
    609
  );
idwcat.$getClass_370 = function $getClass_370() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$2methodref$apply$Type =
  function JsTreeTable$2methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1384, $wnd.Function, {}, idwcat.JsTreeTable$2methodref$apply$Type);
_.onInvoke_23 = function onInvoke_209(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcat.JsTreeTable$3methodref$makeDescriptor$Type =
  function JsTreeTable$3methodref$makeDescriptor$Type() {};
defineClass(590, 1, {}, idwcat.JsTreeTable$3methodref$makeDescriptor$Type);
_.apply_1 = function apply_162(arg0) {
  return castTo(arg0, 61).descriptor;
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$3methodref$makeDescriptor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/3methodref$makeDescriptor$Type",
    590
  );
idwcat.JsTreeTable$4methodref$lambda$9$Type =
  function JsTreeTable$4methodref$lambda$9$Type() {};
defineClass(591, 1, {}, idwcat.JsTreeTable$4methodref$lambda$9$Type);
_.apply_2 = function apply_163(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$4methodref$lambda$9$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/4methodref$lambda$9$Type",
    591
  );
idwcat.$getClass_371 = function $getClass_371() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$5methodref$apply$Type =
  function JsTreeTable$5methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1385, $wnd.Function, {}, idwcat.JsTreeTable$5methodref$apply$Type);
_.onInvoke_22 = function onInvoke_210(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcat.JsTreeTable$6methodref$makeDescriptor$Type =
  function JsTreeTable$6methodref$makeDescriptor$Type() {};
defineClass(593, 1, {}, idwcat.JsTreeTable$6methodref$makeDescriptor$Type);
_.apply_1 = function apply_164(arg0) {
  return idwca.$makeDescriptor(castTo(arg0, 97));
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$6methodref$makeDescriptor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/6methodref$makeDescriptor$Type",
    593
  );
idwcat.JsTreeTable$7methodref$lambda$13$Type =
  function JsTreeTable$7methodref$lambda$13$Type() {};
defineClass(594, 1, {}, idwcat.JsTreeTable$7methodref$lambda$13$Type);
_.apply_2 = function apply_165(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$7methodref$lambda$13$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/7methodref$lambda$13$Type",
    594
  );
idwcat.$getClass_372 = function $getClass_372() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$8methodref$apply$Type =
  function JsTreeTable$8methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1386, $wnd.Function, {}, idwcat.JsTreeTable$8methodref$apply$Type);
_.onInvoke_22 = function onInvoke_211(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcat.$getClass_373 = function $getClass_373() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$9methodref$apply$Type =
  function JsTreeTable$9methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1391, $wnd.Function, {}, idwcat.JsTreeTable$9methodref$apply$Type);
_.onInvoke_26 = function onInvoke_212(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcat.$getRows_1 = function $getRows_1(this$static) {
  return this$static.rows_0;
};
idwcat.$lambda$0_8 = function $lambda$0_8(this$static, columns_1, col_1) {
  this$static.columns_0.indexOf(col_1) == -1 &&
    setCheck(columns_1, columns_1.length, col_1);
  return null;
};
idwcat.JsTreeTable$TreeViewportData = function JsTreeTable$TreeViewportData(
  this$0,
  offset,
  viewportSize,
  treeSize,
  dataColumns,
  columns
) {
  var c,
    cleanConstituentColumn,
    constituentColumn,
    constituentDepth,
    data_0,
    formatArray,
    formatData,
    i,
    i0,
    index_0,
    rowIndex,
    rowIndex0,
    sourceColumn,
    styleArray,
    styleData;
  this.this$01 = this$0;
  this.offset_0 = offset;
  this.treeSize = treeSize;
  this.columns_0 = castToJsArray($wnd.Object.freeze(columns.slice()));
  data_0 = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    dataColumns.length,
    5,
    1
  );
  this.expandedColumn = idwcas3.cleanData_0(
    dataColumns[this$0.rowExpandedCol.index_0].getData_2(),
    this$0.rowExpandedCol
  );
  this.depthColumn = idwcas3.cleanData_0(
    dataColumns[this$0.rowDepthCol.index_0].getData_2(),
    this$0.rowDepthCol
  );
  constituentDepth = this$0.keyColumns_0.length + 2;
  this$0.keyColumns_0.forEach(
    makeLambdaFunction(
      idwcat.JsTreeTable$TreeViewportData$lambda$0$Type.prototype.onInvoke,
      idwcat.JsTreeTable$TreeViewportData$lambda$0$Type,
      [this, columns]
    )
  );
  for (i0 = 0; i0 < columns.length; i0++) {
    c = columns[i0];
    index_0 = c.index_0;
    data_0[index_0] = idwcas3.cleanData_0(dataColumns[index_0].getData_2(), c);
    !!c.styleColumnIndex &&
      (data_0[c.styleColumnIndex.value_0] =
        dataColumns[c.styleColumnIndex.value_0].getData_2());
    !!c.formatStringColumnIndex &&
      (data_0[c.formatStringColumnIndex.value_0] =
        dataColumns[c.formatStringColumnIndex.value_0].getData_2());
    sourceColumn = castTo(this$0.sourceColumns.get(c.name_0), 21);
    if (sourceColumn) {
      constituentColumn = dataColumns[sourceColumn.index_0];
      if (constituentColumn) {
        cleanConstituentColumn = idwcas3.cleanData_0(
          constituentColumn.getData_2(),
          sourceColumn
        );
        for (
          rowIndex0 = 0;
          rowIndex0 < cleanConstituentColumn.length;
          rowIndex0++
        ) {
          this.depthColumn[rowIndex0] == constituentDepth &&
            jb.$setAt(
              jb.asArrayLike(data_0[index_0]),
              rowIndex0,
              jb.$getAt(cleanConstituentColumn, rowIndex0)
            );
        }
        if (sourceColumn.styleColumnIndex) {
          if (!c.styleColumnIndex) {
            debugger;
            throw toJs(new jl.AssertionError());
          }
          styleData = dataColumns[sourceColumn.styleColumnIndex.value_0];
          if (styleData) {
            styleArray = castToJsArray(styleData.getData_2());
            for (rowIndex = 0; rowIndex < styleArray.length; rowIndex++) {
              this.depthColumn[rowIndex] == constituentDepth &&
                jb.$setAt(
                  jb.asArrayLike(data_0[c.styleColumnIndex.value_0]),
                  rowIndex,
                  jb.$getAt(styleArray, rowIndex)
                );
            }
          }
        }
        if (sourceColumn.formatStringColumnIndex) {
          if (!c.formatStringColumnIndex) {
            debugger;
            throw toJs(new jl.AssertionError());
          }
          formatData =
            dataColumns[sourceColumn.formatStringColumnIndex.value_0];
          if (formatData) {
            formatArray = castToJsArray(formatData.getData_2());
            for (rowIndex = 0; rowIndex < formatArray.length; rowIndex++) {
              this.depthColumn[rowIndex] == constituentDepth &&
                jb.$setAt(
                  jb.asArrayLike(data_0[c.formatStringColumnIndex.value_0]),
                  rowIndex,
                  jb.$getAt(formatArray, rowIndex)
                );
            }
          }
        }
      }
    }
  }
  this$0.rowFormatColumn != -1 &&
    (data_0[this$0.rowFormatColumn] =
      dataColumns[this$0.rowFormatColumn].getData_2());
  this.rows_0 = new $wnd.Array();
  for (i = 0; lt(cggl.createSmallLongEmul0(i), viewportSize); i++) {
    this.rows_0.push(
      new idwcat.JsTreeTable$TreeViewportData$TreeRow(
        this,
        i,
        data_0,
        data_0[this$0.rowFormatColumn]
      )
    );
  }
};
defineClass(584, 1, { 368: 1 }, idwcat.JsTreeTable$TreeViewportData);
_.get = function get_19(index_0) {
  return idwca.$get_3(this, index_0);
};
_.getData = function getData_7(index_0, column) {
  return idwca.$getData(this, index_0, column);
};
_.getFormat = function getFormat_13(index_0, column) {
  return idwca.$getFormat(this, index_0, column);
};
_.get_1 = function get_17(index_0) {
  return castTo(jb.$getAt(this.rows_0, index_0), 165);
};
_.get_2 = function get_18(index_0) {
  return castTo(jb.$getAt(this.rows_0, toInt_0(index_0)), 165);
};
defineProperties(_, {
  columns: {
    get: function getColumns_7() {
      return this.columns_0;
    },
  },
});
_.getData_0 = function getData_5(index_0, column) {
  return idwcas3.$get_9(castTo(jb.$getAt(this.rows_0, index_0), 93), column);
};
_.getData_1 = function getData_6(index_0, column) {
  return idwcas3.$get_9(
    castTo(jb.$getAt(this.rows_0, toInt_0(index_0)), 93),
    column
  );
};
_.getFormat_0 = function getFormat_11(index_0, column) {
  return idwcas3.$getFormat_1(
    castTo(jb.$getAt(this.rows_0, index_0), 93),
    column
  );
};
_.getFormat_1 = function getFormat_12(index_0, column) {
  return idwcas3.$getFormat_1(
    castTo(jb.$getAt(this.rows_0, toInt_0(index_0)), 93),
    column
  );
};
defineProperties(_, {
  offset: {
    get: function getOffset_0() {
      return this.offset_0;
    },
  },
});
defineProperties(_, {
  rows: {
    get: function getRows_1() {
      return idwcat.$getRows_1(this);
    },
  },
});
_.offset_0 = 0;
_.treeSize = 0;
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$TreeViewportData_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/TreeViewportData",
    584
  );
idwcat.$appendKeyData = function $appendKeyData(
  this$static,
  keyTableData,
  action
) {
  var i;
  for (i = 0; i < this$static.this$11.this$01.keyColumns_0.length; i++) {
    castToJsArray(keyTableData[i]).push(
      idwca.$get_2(
        castTo(jb.$getAt(this$static.this$11.this$01.keyColumns_0, i), 21),
        this$static
      )
    );
  }
  castToJsArray(keyTableData[i++]).push(
    ji.uncheckedCast(
      this$static.this$11.depthColumn[this$static.offsetInSnapshot]
    )
  );
  castToJsArray(keyTableData[i++]).push(ji.uncheckedCast(action));
};
idwcat.$depth = function $depth(this$static) {
  return this$static.this$11.depthColumn[this$static.offsetInSnapshot];
};
idwcat.$isExpanded = function $isExpanded(this$static) {
  return (
    this$static.this$11.expandedColumn[this$static.offsetInSnapshot] ==
    (jl.$clinit_Boolean(), TRUE)
  );
};
idwcat.JsTreeTable$TreeViewportData$TreeRow =
  function JsTreeTable$TreeViewportData$TreeRow(
    this$1,
    offsetInSnapshot,
    dataColumns,
    rowStyleColumn
  ) {
    this.this$11 = this$1;
    idwcas3.ViewportRow.call(
      this,
      offsetInSnapshot,
      dataColumns,
      rowStyleColumn
    );
  };
defineClass(
  93,
  89,
  { 165: 1, 89: 1, 93: 1 },
  idwcat.JsTreeTable$TreeViewportData$TreeRow
);
defineProperties(_, {
  depth: {
    get: function depth() {
      return idwcat.$depth(this);
    },
  },
});
defineProperties(_, {
  hasChildren: {
    get: function hasChildren() {
      return this.this$11.expandedColumn[this.offsetInSnapshot] != null;
    },
  },
});
defineProperties(_, {
  isExpanded: {
    get: function isExpanded_1() {
      return idwcat.$isExpanded(this);
    },
  },
});
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$TreeViewportData$TreeRow_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/TreeViewportData/TreeRow",
    93
  );
idwcat.$getClass_374 = function $getClass_374() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$TreeViewportData$lambda$0$Type =
  function JsTreeTable$TreeViewportData$lambda$0$Type($$outer_0, columns_1) {
    this.$$outer_0 = $$outer_0;
    this.columns_1 = columns_1;
  };
defineClass(
  1398,
  $wnd.Function,
  {},
  idwcat.JsTreeTable$TreeViewportData$lambda$0$Type
);
_.onInvoke = function onInvoke_213(arg0, arg1, arg2) {
  return idwcat.$lambda$0_8(this.$$outer_0, this.columns_1, castTo(arg0, 21));
};
idwcat.JsTreeTable$lambda$0$Type = function JsTreeTable$lambda$0$Type(
  constituentColumns_0
) {
  this.constituentColumns_0 = constituentColumns_0;
};
defineClass(585, 1, {}, idwcat.JsTreeTable$lambda$0$Type);
_.apply_1 = function apply_166(arg0) {
  return idwcat.lambda$0_10(this.constituentColumns_0, castTo(arg0, 83));
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$0$Type",
    585
  );
idwcat.JsTreeTable$lambda$11$Type = function JsTreeTable$lambda$11$Type(
  $$outer_0,
  prevTicket_1,
  ticket_2
) {
  this.$$outer_0 = $$outer_0;
  this.prevTicket_1 = prevTicket_1;
  this.ticket_2 = ticket_2;
};
defineClass(595, 1, $intern_19, idwcat.JsTreeTable$lambda$11$Type);
_.accept = function accept_65(arg0) {
  idwcat.$lambda$11_2(
    this.$$outer_0,
    this.prevTicket_1,
    this.ticket_2,
    castToFunction(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$11$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$11$Type",
    595
  );
idwcat.$getClass_375 = function $getClass_375() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$15$Type = function JsTreeTable$lambda$15$Type() {};
defineClass(1364, $wnd.Function, {}, idwcat.JsTreeTable$lambda$15$Type);
_.onInvoke = function onInvoke_214(arg0, arg1, arg2) {
  return castTo(arg0, 21).name_0;
};
idwcat.$getClass_376 = function $getClass_376() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$16$Type = function JsTreeTable$lambda$16$Type() {};
defineClass(1365, $wnd.Function, {}, idwcat.JsTreeTable$lambda$16$Type);
_.onInvoke = function onInvoke_215(arg0, arg1, arg2) {
  return castTo(arg0, 21).type_0;
};
idwcat.JsTreeTable$lambda$17$Type = function JsTreeTable$lambda$17$Type(
  $$outer_0,
  prevTicket_1,
  ticket_2,
  keyTable_3
) {
  this.$$outer_0 = $$outer_0;
  this.prevTicket_1 = prevTicket_1;
  this.ticket_2 = ticket_2;
  this.keyTable_3 = keyTable_3;
};
defineClass(596, 1, $intern_19, idwcat.JsTreeTable$lambda$17$Type);
_.accept = function accept_66(arg0) {
  idwcat.$lambda$17_3(
    this.$$outer_0,
    this.prevTicket_1,
    this.ticket_2,
    this.keyTable_3,
    castToFunction(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$17$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$17$Type",
    596
  );
idwcat.$getClass_377 = function $getClass_377() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$18$Type = function JsTreeTable$lambda$18$Type(
  $$outer_0,
  viewRequest_1,
  c_2
) {
  this.$$outer_0 = $$outer_0;
  this.viewRequest_1 = viewRequest_1;
  this.c_2 = c_2;
};
defineClass(1388, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$18$Type);
_.onInvoke_5 = function onInvoke_216(arg0) {
  return idwcat.$lambda$18(
    this.$$outer_0,
    this.viewRequest_1,
    this.c_2,
    castTo(arg0, 13)
  );
};
idwcat.$getClass_378 = function $getClass_378() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$19$Type = function JsTreeTable$lambda$19$Type(c_0) {
  this.c_0 = c_0;
};
defineClass(1389, $wnd.Function, {}, idwcat.JsTreeTable$lambda$19$Type);
_.onInvoke_5 = function onInvoke_217(arg0) {
  return this.c_0.call(null, arg0, null), null;
};
idwcat.$getClass_379 = function $getClass_379() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$21$Type = function JsTreeTable$lambda$21$Type() {};
defineClass(1366, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$21$Type);
_.onInvoke_5 = function onInvoke_218(arg0) {
  return idwcat.lambda$21(castTo(arg0, 155));
};
idwcat.$getClass_380 = function $getClass_380() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$22$Type = function JsTreeTable$lambda$22$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1368, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$22$Type);
_.onInvoke_5 = function onInvoke_219(arg0) {
  return castToFunction(arg0), idwcat.$lambda$22_1(this.$$outer_0);
};
idwcat.$getClass_381 = function $getClass_381() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$23$Type = function JsTreeTable$lambda$23$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1369, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$23$Type);
_.onInvoke_5 = function onInvoke_220(arg0) {
  return idwcat.$lambda$23(this.$$outer_0);
};
idwcat.$getClass_382 = function $getClass_382() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$24$Type = function JsTreeTable$lambda$24$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1392, $wnd.Function, $intern_47, idwcat.JsTreeTable$lambda$24$Type);
_.valueOf_0 = function valueOf_24() {
  return this.$$outer_0.widget.typedTicket_0.getTicket().getTicket_asB64();
};
idwcat.JsTreeTable$lambda$25$Type = function JsTreeTable$lambda$25$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(597, 1, {}, idwcat.JsTreeTable$lambda$25$Type);
_.openBiDiStream = function openBiDiStream_3(arg0) {
  return idwcat.$lambda$25_0(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$25$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$25$Type",
    597
  );
idwcat.JsTreeTable$lambda$26$Type = function JsTreeTable$lambda$26$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(598, 1, {}, idwcat.JsTreeTable$lambda$26$Type);
_.openStream = function openStream_3(arg0, arg1) {
  return idwcat.$lambda$26(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    ),
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$26$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$26$Type",
    598
  );
idwcat.JsTreeTable$lambda$27$Type = function JsTreeTable$lambda$27$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(599, 1, {}, idwcat.JsTreeTable$lambda$27$Type);
_.nextStreamMessage = function nextStreamMessage_3(arg0, arg1, arg2) {
  idwcat.$lambda$27_1(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    ),
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$27$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$27$Type",
    599
  );
idwcat.JsTreeTable$lambda$3$Type = function JsTreeTable$lambda$3$Type(
  $$outer_0,
  workerConnection_1,
  widget_2
) {
  this.$$outer_0 = $$outer_0;
  this.workerConnection_1 = workerConnection_1;
  this.widget_2 = widget_2;
};
defineClass(589, 1, {}, idwcat.JsTreeTable$lambda$3$Type);
_.valueOf_0 = function valueOf_25() {
  return idwcat.$lambda$3_3(
    this.$$outer_0,
    this.workerConnection_1,
    this.widget_2
  );
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$3$Type",
    589
  );
idwcat.$getClass_383 = function $getClass_383() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$31$Type = function JsTreeTable$lambda$31$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1393, $wnd.Function, $intern_48, idwcat.JsTreeTable$lambda$31$Type);
_.apply_3 = function apply_167(arg0) {
  idwcat.$lambda$31_0(this.$$outer_0, arg0);
};
idwcat.$getClass_384 = function $getClass_384() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$32$Type = function JsTreeTable$lambda$32$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1394, $wnd.Function, $intern_48, idwcat.JsTreeTable$lambda$32$Type);
_.apply_3 = function apply_168(arg0) {
  this.$$outer_0.stream = null;
};
idwcat.$getClass_385 = function $getClass_385() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$33$Type = function JsTreeTable$lambda$33$Type(
  $$outer_0,
  columnTypes_1,
  queryColumns_2
) {
  this.$$outer_0 = $$outer_0;
  this.columnTypes_1 = columnTypes_1;
  this.queryColumns_2 = queryColumns_2;
};
defineClass(1395, $wnd.Function, $intern_48, idwcat.JsTreeTable$lambda$33$Type);
_.apply_3 = function apply_169(arg0) {
  idwcat.$lambda$33_0(
    this.$$outer_0,
    this.columnTypes_1,
    this.queryColumns_2,
    castToNative(
      arg0,
      $wnd.dhinternal.arrow.flight.protocol.Flight_pb.FlightData
    )
  );
};
idwcat.$getClass_386 = function $getClass_386() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$34$Type = function JsTreeTable$lambda$34$Type(
  $$outer_0,
  stream_1
) {
  this.$$outer_0 = $$outer_0;
  this.stream_1 = stream_1;
};
defineClass(1370, $wnd.Function, {}, idwcat.JsTreeTable$lambda$34$Type);
_.onInvoke_5 = function onInvoke_221(arg0) {
  return idwcat.$lambda$34_1(this.$$outer_0, this.stream_1, arg0);
};
idwcat.$getClass_387 = function $getClass_387() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$35$Type = function JsTreeTable$lambda$35$Type() {};
defineClass(1367, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$35$Type);
_.onInvoke_5 = function onInvoke_222(arg0) {
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcat.JsTreeTable$lambda$36$Type.prototype.onInvoke_6,
      idwcat.JsTreeTable$lambda$36$Type,
      [arg0]
    )
  );
};
idwcat.$getClass_388 = function $getClass_388() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$36$Type = function JsTreeTable$lambda$36$Type(val_0) {
  this.val_0 = val_0;
};
defineClass(1399, $wnd.Function, {}, idwcat.JsTreeTable$lambda$36$Type);
_.onInvoke_6 = function onInvoke_223(arg0, arg1) {
  idwcat.lambda$36_0(this.val_0, arg0);
};
idwcat.$getClass_389 = function $getClass_389() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$37$Type = function JsTreeTable$lambda$37$Type(
  resolve_0,
  val_1
) {
  this.resolve_0 = resolve_0;
  this.val_1 = val_1;
};
defineClass(1397, $wnd.Function, {}, idwcat.JsTreeTable$lambda$37$Type);
_.onInvoke_4 = function onInvoke_224(arg0) {
  this.resolve_0.call(null, this.val_1);
};
idwcat.JsTreeTable$lambda$4$Type = function JsTreeTable$lambda$4$Type(
  $$outer_0,
  widget_1
) {
  this.$$outer_0 = $$outer_0;
  this.widget_1 = widget_1;
};
defineClass(588, 1, {}, idwcat.JsTreeTable$lambda$4$Type);
_.fetch_1 = function fetch_24(arg0, arg1, arg2) {
  idwcat.$lambda$4_2(this.$$outer_0, this.widget_1, arg0, arg1);
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$4$Type",
    588
  );
idwcat.$getClass_390 = function $getClass_390() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$45$Type = function JsTreeTable$lambda$45$Type(
  columnsBitset_0
) {
  this.columnsBitset_0 = columnsBitset_0;
};
defineClass(1371, $wnd.Function, {}, idwcat.JsTreeTable$lambda$45$Type);
_.onInvoke = function onInvoke_225(arg0, arg1, arg2) {
  return ju.$set(this.columnsBitset_0, castTo(arg0, 21).index_0), null;
};
idwcat.$getClass_391 = function $getClass_391() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$46$Type = function JsTreeTable$lambda$46$Type() {};
defineClass(1372, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$46$Type);
_.onInvoke_5 = function onInvoke_226(arg0) {
  return idwca.$close_0(castTo(arg0, 13)), null;
};
idwcat.$getClass_392 = function $getClass_392() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$47$Type = function JsTreeTable$lambda$47$Type(
  $$outer_0,
  promise_1
) {
  this.$$outer_0 = $$outer_0;
  this.promise_1 = promise_1;
};
defineClass(1373, $wnd.Function, $intern_35, idwcat.JsTreeTable$lambda$47$Type);
_.onEvent = function onEvent_24(arg0) {
  idwcat.$lambda$47_0(this.$$outer_0, this.promise_1);
};
idwcat.$getClass_393 = function $getClass_393() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$49$Type = function JsTreeTable$lambda$49$Type() {};
defineClass(1375, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$49$Type);
_.onInvoke_5 = function onInvoke_227(arg0) {
  return idwcat.lambda$49(castTo(arg0, 155));
};
idwcat.$getClass_394 = function $getClass_394() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$50$Type = function JsTreeTable$lambda$50$Type() {};
defineClass(1376, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$50$Type);
_.onInvoke_5 = function onInvoke_228(arg0) {
  return idwca.$close_0(castTo(arg0, 13)), null;
};
idwcat.$getClass_395 = function $getClass_395() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$52$Type = function JsTreeTable$lambda$52$Type(
  $$outer_0,
  columns_1
) {
  this.$$outer_0 = $$outer_0;
  this.columns_1 = columns_1;
};
defineClass(1377, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$52$Type);
_.onInvoke_5 = function onInvoke_229(arg0) {
  return idwcat.$lambda$52(this.$$outer_0, this.columns_1, castTo(arg0, 13));
};
idwcat.$getClass_396 = function $getClass_396() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$53$Type = function JsTreeTable$lambda$53$Type() {};
defineClass(1378, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$53$Type);
_.onInvoke_5 = function onInvoke_230(arg0) {
  return $wnd.Promise.resolve(
    idwcs.$getTotalsTableConfig_1(idwca.$lastVisibleState(castTo(arg0, 13)))
  );
};
idwcat.$getClass_397 = function $getClass_397() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$54$Type = function JsTreeTable$lambda$54$Type(
  $$outer_0,
  config_1
) {
  this.$$outer_0 = $$outer_0;
  this.config_1 = config_1;
};
defineClass(1379, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$54$Type);
_.onInvoke_5 = function onInvoke_231(arg0) {
  return idwcat.$lambda$54(this.$$outer_0, this.config_1, castTo(arg0, 13));
};
idwcat.$getClass_398 = function $getClass_398() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$55$Type = function JsTreeTable$lambda$55$Type(
  config_0
) {
  this.config_0 = config_0;
};
defineClass(1380, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$55$Type);
_.onInvoke_5 = function onInvoke_232(arg0) {
  return idwcat.lambda$55(this.config_0, castTo(arg0, 13));
};
idwcat.JsTreeTable$lambda$56$Type = function JsTreeTable$lambda$56$Type() {};
defineClass(610, 1, {}, idwcat.JsTreeTable$lambda$56$Type);
_.fetch_1 = function fetch_25(arg0, arg1, arg2) {
  idwcat.lambda$56();
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$56$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$56$Type",
    610
  );
idwcat.$getClass_399 = function $getClass_399() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$57$Type = function JsTreeTable$lambda$57$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1381, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$57$Type);
_.onInvoke_5 = function onInvoke_233(arg0) {
  return castTo(arg0, 14), idwcat.$lambda$57(this.$$outer_0);
};
idwcat.$getClass_400 = function $getClass_400() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcat.JsTreeTable$lambda$6$Type = function JsTreeTable$lambda$6$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1382, $wnd.Function, $intern_36, idwcat.JsTreeTable$lambda$6$Type);
_.onInvoke_5 = function onInvoke_234(arg0) {
  return idwcat.$lambda$6_4(this.$$outer_0, castTo(arg0, 14));
};
idwcat.JsTreeTable$lambda$7$Type = function JsTreeTable$lambda$7$Type(
  $$outer_0,
  ticket_1
) {
  this.$$outer_0 = $$outer_0;
  this.ticket_1 = ticket_1;
};
defineClass(592, 1, $intern_19, idwcat.JsTreeTable$lambda$7$Type);
_.accept = function accept_67(arg0) {
  idwcat.$lambda$7_2(this.$$outer_0, this.ticket_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_tree_JsTreeTable$lambda$7$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree",
    "JsTreeTable/lambda$7$Type",
    592
  );
idwcat.$$init_37 = function $$init_37(this$static) {};
idwcat.JsTreeTableConfig = function JsTreeTableConfig() {
  idwcat.$$init_37(this);
};
idwcat.JsTreeTableConfig_0 = function JsTreeTableConfig_0(source) {
  idwcat.JsTreeTableConfig.call(this);
  jb.$has(source, "idColumn") &&
    (this.idColumn = jb.$asString_2(jb.$getAsAny(source, "idColumn")));
  jb.$has(source, "parentColumn") &&
    (this.parentColumn = jb.$asString_2(jb.$getAsAny(source, "parentColumn")));
  jb.$has(source, "promoteOrphansToRoot") &&
    (this.promoteOrphansToRoot = !jb.isFalsy(
      jb.$getAsAny(source, "promoteOrphansToRoot")
    ));
};
defineClass(
  208,
  1,
  { 208: 1 },
  idwcat.JsTreeTableConfig,
  idwcat.JsTreeTableConfig_0
);
_.idColumn = null;
_.parentColumn = null;
_.promoteOrphansToRoot = false;
cggl.Lio_deephaven_web_client_api_tree_JsTreeTableConfig_2_classLit =
  createForClass("io.deephaven.web.client.api.tree", "JsTreeTableConfig", 208);
idwcate.JsAggregationOperation = function JsAggregationOperation() {};
idwcate.canAggregateType = function canAggregateType(
  aggregationType,
  columnType
) {
  switch (aggregationType) {
    case "Count":
    case "CountDistinct":
    case "Distinct":
    case "First":
    case "Last":
    case "Unique":
    case "Skip": {
      return true;
    }

    case "AbsSum":
    case "Sum": {
      return idwcate.isNumericOrBoolean(columnType);
    }

    case "Avg":
    case "Var":
    case "Std": {
      return idwcate.isNumeric(columnType);
    }

    case "Min":
    case "Max": {
      return idwcate.isComparable(columnType);
    }
  }
  return false;
};
idwcate.isComparable = function isComparable(columnType) {
  if (idwcate.isNumericOrBoolean(columnType)) {
    return true;
  }
  switch (columnType) {
    case "java.lang.String":
    case "java.time.Instant":
    case "java.time.ZonedDateTime":
    case "io.deephaven.time.DateTime":
    case "java.time.LocalTime":
    case "java.time.LocalDate":
    case "java.math.BigDecimal":
    case "java.math.BigInteger":
      return true;
  }
  return false;
};
idwcate.isNumeric = function isNumeric(columnType) {
  switch (columnType) {
    case "double":
    case "float":
    case "int":
    case "long":
    case "short":
    case "char":
    case "byte":
    case "java.math.BigDecimal":
    case "java.math.BigInteger": {
      return true;
    }
  }
  return false;
};
idwcate.isNumericOrBoolean = function isNumericOrBoolean(columnType) {
  if (idwcate.isNumeric(columnType)) {
    return true;
  }
  return (
    jl.$equals_12(columnType, "boolean") ||
    jl.$equals_12(columnType, "java.lang.Boolean")
  );
};
defineClass(917, 1, {}, idwcate.JsAggregationOperation);
idwcate.ABS_SUM_0 = "AbsSum";
idwcate.AVG_1 = "Avg";
idwcate.COUNT_1 = "Count";
idwcate.COUNT_DISTINCT = "CountDistinct";
idwcate.DISTINCT = "Distinct";
idwcate.FIRST_0 = "First";
idwcate.LAST_0 = "Last";
idwcate.MAX_1 = "Max";
idwcate.MIN_1 = "Min";
idwcate.SKIP_0 = "Skip";
idwcate.STD_0 = "Std";
idwcate.SUM_1 = "Sum";
idwcate.UNIQUE = "Unique";
idwcate.VAR_0 = "Var";
cggl.Lio_deephaven_web_client_api_tree_enums_JsAggregationOperation_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.tree.enums",
    "JsAggregationOperation",
    917
  );
idwcaw.$close_3 = function $close_3(this$static) {
  this$static.suppress = true;
  idwcaw.$closeStream(this$static);
  idwca.$releaseTicket(
    this$static.connection,
    this$static.typedTicket_0.getTicket()
  );
};
idwcaw.$closeStream = function $closeStream(this$static) {
  if (this$static.messageStream_0) {
    this$static.messageStream_0.end_0();
    this$static.messageStream_0 = null;
  }
  this$static.hasFetched = false;
};
idwcaw.$getDataAsU8 = function $getDataAsU8(this$static) {
  return this$static.response.getData().getPayload_asU8();
};
idwcaw.$getExportedObjects = function $getExportedObjects(this$static) {
  return this$static.exportedObjects_0;
};
idwcaw.$getType_2 = function $getType_2(this$static) {
  return this$static.typedTicket_0.getType();
};
idwcaw.$lambda$5_5 = function $lambda$5_5(this$static, resolve_0, reject_1) {
  var data_0, req;
  this$static.exportedObjects_0 = new $wnd.Array();
  this$static.messageStream_0 = idwcaw.$get_10(this$static.streamFactory);
  this$static.messageStream_0.onData(
    makeLambdaFunction(
      idwcaw.JsWidget$lambda$6$Type.prototype.apply_3,
      idwcaw.JsWidget$lambda$6$Type,
      [this$static, resolve_0]
    )
  );
  this$static.messageStream_0.onStatus(
    makeLambdaFunction(
      idwcaw.JsWidget$lambda$8$Type.prototype.apply_3,
      idwcaw.JsWidget$lambda$8$Type,
      [this$static, reject_1]
    )
  );
  this$static.messageStream_0.onEnd_0(
    makeLambdaFunction(
      idwcaw.JsWidget$lambda$9$Type.prototype.apply_3,
      idwcaw.JsWidget$lambda$9$Type,
      [this$static]
    )
  );
  req = new $wnd.dhinternal.io.deephaven.proto.object_pb.StreamRequest();
  data_0 = new $wnd.dhinternal.io.deephaven.proto.object_pb.ConnectRequest();
  data_0.setSourceId(this$static.typedTicket_0);
  req.setConnect(data_0);
  this$static.messageStream_0.send_0(req);
};
idwcaw.$lambda$6_5 = function $lambda$6_5(this$static, resolve_1, res_1) {
  var messageEvent, responseObjects;
  responseObjects = res_1
    .getData()
    .getExportedReferencesList()
    .map(
      makeLambdaFunction(
        idwcaw.JsWidget$lambda$7$Type.prototype.onInvoke,
        idwcaw.JsWidget$lambda$7$Type,
        [this$static]
      )
    );
  if (this$static.hasFetched) {
    messageEvent = jb.emptyObjectLiteral();
    messageEvent.detail = new idwcaw.JsWidget$EventDetails(
      res_1.getData(),
      responseObjects
    );
    idwca.$fireEvent_0(
      this$static,
      "message",
      new $wnd.CustomEvent("message", messageEvent)
    );
  } else {
    this$static.response = res_1;
    this$static.exportedObjects_0 = responseObjects;
    this$static.hasFetched = true;
    resolve_1(this$static);
  }
};
idwcaw.$lambda$7_3 = function $lambda$7_3(this$static, p0_0) {
  return new idwcaw.JsWidgetExportedObject(this$static.connection, p0_0);
};
idwcaw.$lambda$8_0 = function $lambda$8_0(this$static, reject_1, status_1) {
  idwcabs.$isOk(status_1) || reject_1(status_1.details);
  idwca.$fireEvent_1(this$static, "close", jb.emptyObjectLiteral());
  idwcaw.$closeStream(this$static);
};
idwcaw.$refetch_0 = function $refetch_0(this$static) {
  idwcaw.$closeStream(this$static);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcaw.JsWidget$lambda$5$Type.prototype.onInvoke_6,
      idwcaw.JsWidget$lambda$5$Type,
      [this$static]
    )
  );
};
idwcaw.$typedTicket = function $typedTicket(this$static) {
  var typedTicket;
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setTicket(this$static.typedTicket_0.getTicket());
  typedTicket.setType(this$static.typedTicket_0.getType());
  return typedTicket;
};
idwcaw.JsWidget = function JsWidget(connection, typedTicket) {
  var factory;
  idwca.HasEventHandling.call(this);
  this.connection = connection;
  this.typedTicket_0 = typedTicket;
  this.hasFetched = false;
  factory = new idwcabs.BiDiStream$Factory(
    new idwca.WorkerConnection$25methodref$metadata$Type(connection),
    new idwca.WorkerConnection$26methodref$newTicketInt$Type(connection.config)
  );
  this.streamFactory = new idwcaw.JsWidget$lambda$0$Type(factory, connection);
  this.exportedObjects_0 = new $wnd.Array();
};
idwcaw.lambda$0_11 = function lambda$0_11(factory_0, connection_1) {
  return idwcabs.$create(
    factory_0,
    new idwcaw.JsWidget$0methodref$messageStream$Type(
      connection_1.objectServiceClient
    ),
    new idwcaw.JsWidget$lambda$2$Type(connection_1),
    new idwcaw.JsWidget$lambda$3$Type(connection_1),
    new $wnd.dhinternal.io.deephaven.proto.object_pb.StreamRequest()
  );
};
idwcaw.lambda$2_8 = function lambda$2_8(connection_0, first_1, headers_2) {
  return connection_0.objectServiceClient.openMessageStream(first_1, headers_2);
};
idwcaw.lambda$3_3 = function lambda$3_3(connection_0, next_1, headers_2, c_3) {
  return connection_0.objectServiceClient.nextMessageStream(
    next_1,
    headers_2,
    makeLambdaFunction(
      idwcaw.JsWidget$1methodref$apply$Type.prototype.onInvoke_29,
      idwcaw.JsWidget$1methodref$apply$Type,
      [c_3]
    )
  );
};
defineClass(60, 57, { 57: 1, 230: 1, 60: 1 }, idwcaw.JsWidget);
_.close = function close_6() {
  idwcaw.$close_3(this);
};
_.getDataAsBase64 = function getDataAsBase64() {
  return this.response.getData().getPayload_asB64();
};
_.getDataAsString = function getDataAsString() {
  var lastArg;
  return jl.$create_1(
    ((lastArg = this.response.getData().getPayload_asU8()),
    jnc.$clinit_StandardCharsets(),
    lastArg)
  );
};
_.getDataAsU8 = function getDataAsU8() {
  return idwcaw.$getDataAsU8(this);
};
defineProperties(_, {
  exportedObjects: {
    get: function getExportedObjects() {
      return idwcaw.$getExportedObjects(this);
    },
  },
});
defineProperties(_, {
  type: {
    get: function getType_5() {
      return idwcaw.$getType_2(this);
    },
  },
});
_.sendMessage = function sendMessage_0(msg, references) {
  var bytes, data_0, i, lastArg, payload, reference, req, view;
  if (!this.messageStream_0) {
    return;
  }
  req = new $wnd.dhinternal.io.deephaven.proto.object_pb.StreamRequest();
  data_0 = new $wnd.dhinternal.io.deephaven.proto.object_pb.ClientData();
  if (instanceOfString(msg)) {
    bytes = ji.$getBytes_0(
      ((lastArg = (jb.checkCriticalType_0(typeof msg == "string"), msg)),
      jnc.$clinit_StandardCharsets(),
      lastArg)
    );
    payload = new $wnd.Uint8Array(bytes.length);
    payload.set(bytes);
    data_0.setPayload(payload);
  } else if (instanceOfNative(msg, $wnd.ArrayBuffer)) {
    data_0.setPayload(new $wnd.Uint8Array(castToNative(msg, $wnd.ArrayBuffer)));
  } else if ($wnd.ArrayBuffer.isView(msg)) {
    view = msg;
    data_0.setPayload(
      new $wnd.Uint8Array(view.buffer, view.byteOffset, view.byteLength)
    );
  } else {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Expected message to be a String or ArrayBuffer"
      )
    );
  }
  for (i = 0; references != null && i < references.length; i++) {
    reference = castTo(jb.$getAt(references, i), 230);
    data_0.addReferences(reference.typedTicket_2());
  }
  req.setData(data_0);
  this.messageStream_0.send_0(req);
};
_.typedTicket_2 = function typedTicket_5() {
  return idwcaw.$typedTicket(this);
};
_.hasFetched = false;
idwcaw.EVENT_CLOSE = "close";
idwcaw.EVENT_MESSAGE = "message";
cggl.Lio_deephaven_web_client_api_widget_JsWidget_2_classLit = createForClass(
  "io.deephaven.web.client.api.widget",
  "JsWidget",
  60
);
idwcaw.JsWidget$0methodref$messageStream$Type =
  function JsWidget$0methodref$messageStream$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(541, 1, {}, idwcaw.JsWidget$0methodref$messageStream$Type);
_.openBiDiStream = function openBiDiStream_4(arg0) {
  return this.$$outer_0.messageStream(arg0);
};
cggl.Lio_deephaven_web_client_api_widget_JsWidget$0methodref$messageStream$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidget/0methodref$messageStream$Type",
    541
  );
idwcaw.$getClass_401 = function $getClass_401() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidget$1methodref$apply$Type = function JsWidget$1methodref$apply$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1288, $wnd.Function, {}, idwcaw.JsWidget$1methodref$apply$Type);
_.onInvoke_29 = function onInvoke_235(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcaw.JsWidget$EventDetails = function JsWidget$EventDetails(data_0, exports) {
  this.data_0 = data_0;
  this.exportedObjects_0 = exports;
};
defineClass(540, 1, {}, idwcaw.JsWidget$EventDetails);
_.getDataAsBase64 = function getDataAsBase64_0() {
  return this.data_0.getPayload_asB64();
};
_.getDataAsString = function getDataAsString_0() {
  var lastArg;
  return jl.$create_1(
    ((lastArg = this.data_0.getPayload_asU8()),
    jnc.$clinit_StandardCharsets(),
    lastArg)
  );
};
_.getDataAsU8 = function getDataAsU8_0() {
  return this.data_0.getPayload_asU8();
};
defineProperties(_, {
  exportedObjects: {
    get: function getExportedObjects_0() {
      return this.exportedObjects_0;
    },
  },
});
cggl.Lio_deephaven_web_client_api_widget_JsWidget$EventDetails_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidget/EventDetails",
    540
  );
idwcaw.$get_10 = function $get_10(this$static) {
  return idwcaw.lambda$0_11(this$static.factory_0, this$static.connection_1);
};
idwcaw.JsWidget$lambda$0$Type = function JsWidget$lambda$0$Type(
  factory_0,
  connection_1
) {
  this.factory_0 = factory_0;
  this.connection_1 = connection_1;
};
defineClass(544, 1, {}, idwcaw.JsWidget$lambda$0$Type);
_.get_0 = function get_20() {
  return idwcaw.$get_10(this);
};
cggl.Lio_deephaven_web_client_api_widget_JsWidget$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidget/lambda$0$Type",
    544
  );
idwcaw.JsWidget$lambda$2$Type = function JsWidget$lambda$2$Type(connection_0) {
  this.connection_0 = connection_0;
};
defineClass(542, 1, {}, idwcaw.JsWidget$lambda$2$Type);
_.openStream = function openStream_4(arg0, arg1) {
  return idwcaw.lambda$2_8(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.object_pb.StreamRequest
    ),
    arg1
  );
};
cggl.Lio_deephaven_web_client_api_widget_JsWidget$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidget/lambda$2$Type",
    542
  );
idwcaw.JsWidget$lambda$3$Type = function JsWidget$lambda$3$Type(connection_0) {
  this.connection_0 = connection_0;
};
defineClass(543, 1, {}, idwcaw.JsWidget$lambda$3$Type);
_.nextStreamMessage = function nextStreamMessage_4(arg0, arg1, arg2) {
  idwcaw.lambda$3_3(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.object_pb.StreamRequest
    ),
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_api_widget_JsWidget$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidget/lambda$3$Type",
    543
  );
idwcaw.$getClass_402 = function $getClass_402() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidget$lambda$5$Type = function JsWidget$lambda$5$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(370, $wnd.Function, {}, idwcaw.JsWidget$lambda$5$Type);
_.onInvoke_6 = function onInvoke_236(arg0, arg1) {
  idwcaw.$lambda$5_5(this.$$outer_0, arg0, arg1);
};
idwcaw.$getClass_403 = function $getClass_403() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidget$lambda$6$Type = function JsWidget$lambda$6$Type(
  $$outer_0,
  resolve_1
) {
  this.$$outer_0 = $$outer_0;
  this.resolve_1 = resolve_1;
};
defineClass(1289, $wnd.Function, $intern_48, idwcaw.JsWidget$lambda$6$Type);
_.apply_3 = function apply_170(arg0) {
  idwcaw.$lambda$6_5(
    this.$$outer_0,
    this.resolve_1,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.object_pb.StreamResponse
    )
  );
};
idwcaw.$getClass_404 = function $getClass_404() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidget$lambda$7$Type = function JsWidget$lambda$7$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1293, $wnd.Function, {}, idwcaw.JsWidget$lambda$7$Type);
_.onInvoke = function onInvoke_237(arg0, arg1, arg2) {
  return idwcaw.$lambda$7_3(
    this.$$outer_0,
    castToNative(arg0, $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket)
  );
};
idwcaw.$getClass_405 = function $getClass_405() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidget$lambda$8$Type = function JsWidget$lambda$8$Type(
  $$outer_0,
  reject_1
) {
  this.$$outer_0 = $$outer_0;
  this.reject_1 = reject_1;
};
defineClass(1290, $wnd.Function, $intern_48, idwcaw.JsWidget$lambda$8$Type);
_.apply_3 = function apply_171(arg0) {
  idwcaw.$lambda$8_0(this.$$outer_0, this.reject_1, arg0);
};
idwcaw.$getClass_406 = function $getClass_406() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidget$lambda$9$Type = function JsWidget$lambda$9$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1291, $wnd.Function, $intern_48, idwcaw.JsWidget$lambda$9$Type);
_.apply_3 = function apply_172(arg0) {
  idwcaw.$closeStream(this.$$outer_0);
};
idwcaw.$fetch = function $fetch(this$static) {
  if (idwcaw.$getType_3(this$static) != null) {
    return castToNative(this$static.fetched.supplier.valueOf_0(), $wnd.Promise);
  }
  return $wnd.Promise.reject(
    "Can't fetch an object with no type (i.e. no server plugin implementation)"
  );
};
idwcaw.$getType_3 = function $getType_3(this$static) {
  if (ji.uncheckedCast(this$static.ticket_0.getType()).length == 0) {
    return null;
  }
  return this$static.ticket_0.getType();
};
idwcaw.$lambda$0_9 = function $lambda$0_9(this$static, connection_1, ticket_2) {
  if (idwcaw.$getType_3(this$static) == null) {
    return $wnd.Promise.reject("Exported object has no type, can't be fetched");
  }
  return jl.$equals_12(idwcaw.$getType_3(this$static), "Table")
    ? new $wnd.Promise(
        makeLambdaFunction(
          idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
          idwca.Callbacks$lambda$4$Type,
          [
            new idwcaw.JsWidgetExportedObject$lambda$1$Type(
              connection_1,
              ticket_2
            ),
          ]
        )
      ).then(
        makeLambdaFunction(
          idwcaw.JsWidgetExportedObject$lambda$3$Type.prototype.onInvoke_5,
          idwcaw.JsWidgetExportedObject$lambda$3$Type,
          [connection_1]
        )
      )
    : idwca.$getObject(this$static.connection, ticket_2);
};
idwcaw.$lambda$5_6 = function $lambda$5_6(
  this$static,
  reexportedTicket_1,
  c_1
) {
  var req;
  req = new $wnd.dhinternal.io.deephaven.proto.session_pb.ExportRequest();
  req.setSourceId(this$static.ticket_0.getTicket());
  req.setResultId(reexportedTicket_1);
  this$static.connection.sessionServiceClient.exportFromTicket(
    req,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcaw.JsWidgetExportedObject$1methodref$apply$Type.prototype.onInvoke_33,
      idwcaw.JsWidgetExportedObject$1methodref$apply$Type,
      [c_1]
    )
  );
};
idwcaw.$lambda$7_4 = function $lambda$7_4(this$static, reexportedTicket_1) {
  var typedTicket;
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setTicket(reexportedTicket_1);
  typedTicket.setType(this$static.ticket_0.getType());
  return $wnd.Promise.resolve(
    new idwcaw.JsWidgetExportedObject(this$static.connection, typedTicket)
  );
};
idwcaw.$typedTicket_0 = function $typedTicket_0(this$static) {
  var typedTicket;
  typedTicket = new $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket();
  typedTicket.setTicket(this$static.ticket_0.getTicket());
  typedTicket.setType(idwcaw.$getType_3(this$static));
  return typedTicket;
};
idwcaw.JsWidgetExportedObject = function JsWidgetExportedObject(
  connection,
  ticket
) {
  this.connection = connection;
  this.ticket_0 = ticket;
  this.fetched =
    (idwca.$clinit_JsLazy(),
    new idwca.JsLazy(
      new idwcaw.JsWidgetExportedObject$lambda$0$Type(this, connection, ticket)
    ));
};
idwcaw.lambda$1_5 = function lambda$1_5(connection_0, ticket_1, c_2) {
  connection_0.tableServiceClient.getExportedTableCreationResponse(
    ticket_1.getTicket(),
    connection_0.metadata_0,
    makeLambdaFunction(
      idwcaw.JsWidgetExportedObject$0methodref$apply$Type.prototype.onInvoke_50,
      idwcaw.JsWidgetExportedObject$0methodref$apply$Type,
      [c_2]
    )
  );
};
idwcaw.lambda$3_4 = function lambda$3_4(connection_0, etcr_1) {
  var cts, table;
  cts = idwca.$newStateFromUnsolicitedTable(
    connection_0,
    etcr_1,
    "table for widget"
  );
  table = new idwca.JsTable_0(connection_0, cts);
  idwca.$addEventListener(
    table,
    "disconnect",
    makeLambdaFunction(
      idwcaw.JsWidgetExportedObject$lambda$4$Type.prototype.onEvent,
      idwcaw.JsWidgetExportedObject$lambda$4$Type,
      [table]
    )
  );
  return $wnd.Promise.resolve(table);
};
defineClass(245, 1, { 230: 1, 245: 1 }, idwcaw.JsWidgetExportedObject);
_.close = function close_7() {
  instanceOf(this.fetched.supplier, 82)
    ? idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          ["Cannot close, already fetched. Instead, close the fetched object."]
        )
      )
    : idwca.$releaseTicket(this.connection, this.ticket_0.getTicket());
};
_.fetch = function fetch_26() {
  return idwcaw.$fetch(this);
};
defineProperties(_, {
  type: {
    get: function getType_6() {
      return idwcaw.$getType_3(this);
    },
  },
});
_.reexport = function reexport() {
  var reexportedTicket;
  reexportedTicket = idwca.$newTicket(this.connection.config);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcaw.JsWidgetExportedObject$lambda$5$Type(this, reexportedTicket)]
    )
  ).then(
    makeLambdaFunction(
      idwcaw.JsWidgetExportedObject$lambda$7$Type.prototype.onInvoke_5,
      idwcaw.JsWidgetExportedObject$lambda$7$Type,
      [this, reexportedTicket]
    )
  );
};
_.typedTicket_2 = function typedTicket_6() {
  return idwcaw.$typedTicket_0(this);
};
cggl.Lio_deephaven_web_client_api_widget_JsWidgetExportedObject_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidgetExportedObject",
    245
  );
idwcaw.$getClass_407 = function $getClass_407() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidgetExportedObject$0methodref$apply$Type =
  function JsWidgetExportedObject$0methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1304,
  $wnd.Function,
  {},
  idwcaw.JsWidgetExportedObject$0methodref$apply$Type
);
_.onInvoke_50 = function onInvoke_238(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcaw.$getClass_408 = function $getClass_408() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidgetExportedObject$1methodref$apply$Type =
  function JsWidgetExportedObject$1methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1306,
  $wnd.Function,
  {},
  idwcaw.JsWidgetExportedObject$1methodref$apply$Type
);
_.onInvoke_33 = function onInvoke_239(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcaw.JsWidgetExportedObject$lambda$0$Type =
  function JsWidgetExportedObject$lambda$0$Type(
    $$outer_0,
    connection_1,
    ticket_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.connection_1 = connection_1;
    this.ticket_2 = ticket_2;
  };
defineClass(548, 1, {}, idwcaw.JsWidgetExportedObject$lambda$0$Type);
_.valueOf_0 = function valueOf_26() {
  return idwcaw.$lambda$0_9(this.$$outer_0, this.connection_1, this.ticket_2);
};
cggl.Lio_deephaven_web_client_api_widget_JsWidgetExportedObject$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidgetExportedObject/lambda$0$Type",
    548
  );
idwcaw.JsWidgetExportedObject$lambda$1$Type =
  function JsWidgetExportedObject$lambda$1$Type(connection_0, ticket_1) {
    this.connection_0 = connection_0;
    this.ticket_1 = ticket_1;
  };
defineClass(547, 1, $intern_19, idwcaw.JsWidgetExportedObject$lambda$1$Type);
_.accept = function accept_68(arg0) {
  idwcaw.lambda$1_5(this.connection_0, this.ticket_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_widget_JsWidgetExportedObject$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidgetExportedObject/lambda$1$Type",
    547
  );
idwcaw.$getClass_409 = function $getClass_409() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidgetExportedObject$lambda$3$Type =
  function JsWidgetExportedObject$lambda$3$Type(connection_0) {
    this.connection_0 = connection_0;
  };
defineClass(
  1303,
  $wnd.Function,
  $intern_36,
  idwcaw.JsWidgetExportedObject$lambda$3$Type
);
_.onInvoke_5 = function onInvoke_240(arg0) {
  return idwcaw.lambda$3_4(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableCreationResponse
    )
  );
};
idwcaw.$getClass_410 = function $getClass_410() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidgetExportedObject$lambda$4$Type =
  function JsWidgetExportedObject$lambda$4$Type(table_0) {
    this.table_0 = table_0;
  };
defineClass(
  1305,
  $wnd.Function,
  $intern_35,
  idwcaw.JsWidgetExportedObject$lambda$4$Type
);
_.onEvent = function onEvent_25(arg0) {
  idwca.$close_0(this.table_0);
};
idwcaw.JsWidgetExportedObject$lambda$5$Type =
  function JsWidgetExportedObject$lambda$5$Type($$outer_0, reexportedTicket_1) {
    this.$$outer_0 = $$outer_0;
    this.reexportedTicket_1 = reexportedTicket_1;
  };
defineClass(549, 1, $intern_19, idwcaw.JsWidgetExportedObject$lambda$5$Type);
_.accept = function accept_69(arg0) {
  idwcaw.$lambda$5_6(
    this.$$outer_0,
    this.reexportedTicket_1,
    castToFunction(arg0)
  );
};
cggl.Lio_deephaven_web_client_api_widget_JsWidgetExportedObject$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget",
    "JsWidgetExportedObject/lambda$5$Type",
    549
  );
idwcaw.$getClass_411 = function $getClass_411() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcaw.JsWidgetExportedObject$lambda$7$Type =
  function JsWidgetExportedObject$lambda$7$Type($$outer_0, reexportedTicket_1) {
    this.$$outer_0 = $$outer_0;
    this.reexportedTicket_1 = reexportedTicket_1;
  };
defineClass(
  1302,
  $wnd.Function,
  $intern_36,
  idwcaw.JsWidgetExportedObject$lambda$7$Type
);
_.onInvoke_5 = function onInvoke_241(arg0) {
  return idwcaw.$lambda$7_4(this.$$outer_0, this.reexportedTicket_1);
};
idwcawc.JsBusinessCalendar = function JsBusinessCalendar(
  businessCalendarDescriptor
) {
  this.businessCalendarDescriptor_0 = businessCalendarDescriptor;
  $wnd.Object.freeze(this.businessCalendarDescriptor_0);
  this.timeZone_0 = idwcai.getTimeZone(
    businessCalendarDescriptor.getTimeZone()
  );
  this.businessPeriods_0 = businessCalendarDescriptor
    .getBusinessPeriodsList()
    .map(
      makeLambdaFunction(
        idwcawc.JsBusinessCalendar$lambda$0$Type.prototype.onInvoke,
        idwcawc.JsBusinessCalendar$lambda$0$Type,
        []
      )
    );
  $wnd.Object.freeze(this.businessPeriods_0);
  this.holidays_0 = businessCalendarDescriptor
    .getHolidaysList()
    .map(
      makeLambdaFunction(
        idwcawc.JsBusinessCalendar$lambda$1$Type.prototype.onInvoke,
        idwcawc.JsBusinessCalendar$lambda$1$Type,
        []
      )
    );
  $wnd.Object.freeze(this.holidays_0);
};
idwcawc.lambda$2_9 = function lambda$2_9(p0_0) {
  return (idwcawce.$clinit_JsDayOfWeek(),
  idwcawce.$clinit_JsDayOfWeek(),
  idwcawce.VALUES)[
    round_int(ji.unsafeCastToDouble((ji.checkCriticalNotNull(p0_0), p0_0)))
  ];
};
defineClass(794, 1, {}, idwcawc.JsBusinessCalendar);
defineProperties(_, {
  businessDays: {
    get: function getBusinessDays() {
      return this.businessCalendarDescriptor_0
        .getBusinessDaysList()
        .map(
          makeLambdaFunction(
            idwcawc.JsBusinessCalendar$lambda$2$Type.prototype.onInvoke,
            idwcawc.JsBusinessCalendar$lambda$2$Type,
            []
          )
        );
    },
  },
});
defineProperties(_, {
  businessPeriods: {
    get: function getBusinessPeriods() {
      return this.businessPeriods_0;
    },
  },
});
defineProperties(_, {
  holidays: {
    get: function getHolidays() {
      return this.holidays_0;
    },
  },
});
defineProperties(_, {
  name: {
    get: function getName_2() {
      return this.businessCalendarDescriptor_0.getName();
    },
  },
});
defineProperties(_, {
  timeZone: {
    get: function getTimeZone_0() {
      return this.timeZone_0;
    },
  },
});
cggl.Lio_deephaven_web_client_api_widget_calendar_JsBusinessCalendar_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.calendar",
    "JsBusinessCalendar",
    794
  );
idwcawc.$getClass_412 = function $getClass_412() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawc.JsBusinessCalendar$lambda$0$Type =
  function JsBusinessCalendar$lambda$0$Type() {};
defineClass(1570, $wnd.Function, {}, idwcawc.JsBusinessCalendar$lambda$0$Type);
_.onInvoke = function onInvoke_242(arg0, arg1, arg2) {
  return new idwcawc.JsBusinessPeriod(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .BusinessCalendarDescriptor.BusinessPeriod
    )
  );
};
idwcawc.$getClass_413 = function $getClass_413() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawc.JsBusinessCalendar$lambda$1$Type =
  function JsBusinessCalendar$lambda$1$Type() {};
defineClass(1571, $wnd.Function, {}, idwcawc.JsBusinessCalendar$lambda$1$Type);
_.onInvoke = function onInvoke_243(arg0, arg1, arg2) {
  return new idwcawc.JsHoliday(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .BusinessCalendarDescriptor.Holiday
    )
  );
};
idwcawc.$getClass_414 = function $getClass_414() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawc.JsBusinessCalendar$lambda$2$Type =
  function JsBusinessCalendar$lambda$2$Type() {};
defineClass(1572, $wnd.Function, {}, idwcawc.JsBusinessCalendar$lambda$2$Type);
_.onInvoke = function onInvoke_244(arg0, arg1, arg2) {
  return idwcawc.lambda$2_9(castToDouble(arg0));
};
idwcawc.JsBusinessPeriod = function JsBusinessPeriod(businessPeriod) {
  this.businessPeriod = businessPeriod;
};
defineClass(367, 1, {}, idwcawc.JsBusinessPeriod);
defineProperties(_, {
  close: {
    get: function getClose() {
      return this.businessPeriod.getClose();
    },
  },
});
defineProperties(_, {
  open: {
    get: function getOpen() {
      return this.businessPeriod.getOpen();
    },
  },
});
cggl.Lio_deephaven_web_client_api_widget_calendar_JsBusinessPeriod_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.calendar",
    "JsBusinessPeriod",
    367
  );
idwcawc.JsHoliday = function JsHoliday(holiday) {
  this.date_0 = new idwca.LocalDateWrapper(
    holiday.getDate().getYear(),
    holiday.getDate().getMonth(),
    holiday.getDate().getDay()
  );
  this.businessPeriods_0 = holiday
    .getBusinessPeriodsList()
    .map(
      makeLambdaFunction(
        idwcawc.JsHoliday$lambda$0$Type.prototype.onInvoke,
        idwcawc.JsHoliday$lambda$0$Type,
        []
      )
    );
  $wnd.Object.freeze(this.businessPeriods_0);
};
defineClass(848, 1, {}, idwcawc.JsHoliday);
defineProperties(_, {
  businessPeriods: {
    get: function getBusinessPeriods_0() {
      return this.businessPeriods_0;
    },
  },
});
defineProperties(_, {
  date: {
    get: function getDate() {
      return this.date_0;
    },
  },
});
cggl.Lio_deephaven_web_client_api_widget_calendar_JsHoliday_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.calendar",
    "JsHoliday",
    848
  );
idwcawc.$getClass_415 = function $getClass_415() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawc.JsHoliday$lambda$0$Type = function JsHoliday$lambda$0$Type() {};
defineClass(1576, $wnd.Function, {}, idwcawc.JsHoliday$lambda$0$Type);
_.onInvoke = function onInvoke_245(arg0, arg1, arg2) {
  return new idwcawc.JsBusinessPeriod(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .BusinessCalendarDescriptor.BusinessPeriod
    )
  );
};
idwcawce.$clinit_JsDayOfWeek = function $clinit_JsDayOfWeek() {
  idwcawce.$clinit_JsDayOfWeek = emptyMethod;
  idwcawce.VALUES = castTo(
    $wnd.Object.freeze(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
        $intern_8,
        2,
        6,
        [
          "SUNDAY",
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
        ]
      )
    ),
    12
  );
};
idwcawce.JsDayOfWeek = function JsDayOfWeek() {
  idwcawce.$clinit_JsDayOfWeek();
};
idwcawce.values_5 = function values_5() {
  idwcawce.$clinit_JsDayOfWeek();
  return idwcawce.VALUES;
};
defineClass(918, 1, {}, idwcawce.JsDayOfWeek);
idwcawce.FRIDAY = "FRIDAY";
idwcawce.MONDAY = "MONDAY";
idwcawce.SATURDAY = "SATURDAY";
idwcawce.SUNDAY = "SUNDAY";
idwcawce.THURSDAY = "THURSDAY";
idwcawce.TUESDAY = "TUESDAY";
idwcawce.WEDNESDAY = "WEDNESDAY";
cggl.Lio_deephaven_web_client_api_widget_calendar_enums_JsDayOfWeek_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.calendar.enums",
    "JsDayOfWeek",
    918
  );
idwcawp.$$init_38 = function $$init_38(this$static) {
  this$static.indexes = initUnidimensionalArray(
    cggl.J_classLit,
    $intern_43,
    18,
    0,
    14,
    1
  );
  this$static.cachedData = new ju.HashMap();
};
idwcawp.$batchSplice = function $batchSplice(
  offset,
  existingData,
  dataToInsert
) {
  var i, jsArrayToInsert, lengthToInsert;
  lengthToInsert = dataToInsert.length;
  jsArrayToInsert = dataToInsert;
  for (i = 0; i < lengthToInsert; i += 32768) {
    existingData.splice.apply(
      existingData,
      [offset + i, 0].concat(
        ensureNotNull(
          castToJsArray(
            ji.stampJavaTypeInfo_1(
              jsArrayToInsert.slice(
                i,
                $wnd.Math.min(i + 32768, lengthToInsert)
              ),
              new Array(0)
            )
          )
        )
      )
    );
  }
  return existingData;
};
idwcawp.$collectAllData = function $collectAllData(
  this$static,
  columnName,
  mappingFunc,
  currentUpdate
) {
  var column;
  column = idwca.$findColumn(this$static.table_0, columnName);
  if (mappingFunc == null) {
    return currentUpdate.rows.map(
      makeLambdaFunction(
        idwcawp.ChartData$lambda$9$Type.prototype.onInvoke,
        idwcawp.ChartData$lambda$9$Type,
        [column]
      )
    );
  }
  return currentUpdate.rows.map(
    makeLambdaFunction(
      idwcawp.ChartData$lambda$10$Type.prototype.onInvoke,
      idwcawp.ChartData$lambda$10$Type,
      [mappingFunc, column]
    )
  );
};
idwcawp.$getColumn_0 = function $getColumn_0(
  this$static,
  columnName,
  mappingFunc,
  currentUpdate
) {
  return castToJsArray(
    castTo(
      ju.$computeIfAbsent_0(
        this$static.cachedData,
        columnName,
        new idwcawp.ChartData$lambda$7$Type()
      ),
      30
    ).computeIfAbsent(
      mappingFunc,
      new idwcawp.ChartData$lambda$8$Type(
        this$static,
        columnName,
        mappingFunc,
        currentUpdate
      )
    )
  );
};
idwcawp.$insertDataRange = function $insertDataRange(
  this$static,
  tableData,
  range,
  offset
) {
  var arr,
    col,
    columnMap,
    columnMap$iterator,
    columnName,
    func,
    mapFuncAndArray,
    mapFuncAndArray$iterator,
    values;
  idwcawp.$batchSplice(offset, this$static.indexes, idwcawp.longs_0(range));
  for (
    columnMap$iterator = new ju.AbstractHashMap$EntrySetIterator(
      new ju.AbstractHashMap$EntrySet(this$static.cachedData).this$01
    );
    columnMap$iterator.hasNext_0;

  ) {
    columnMap = ju.$next_3(columnMap$iterator);
    columnName = castToString(columnMap.getKey());
    col = idwca.$findColumn(this$static.table_0, columnName);
    for (
      mapFuncAndArray$iterator = castTo(columnMap.getValue_0(), 30)
        .entrySet_0()
        .iterator_0();
      mapFuncAndArray$iterator.hasNext_1();

    ) {
      mapFuncAndArray = castTo(mapFuncAndArray$iterator.next_1(), 27);
      func = castToFunction(mapFuncAndArray.getKey());
      arr = castToJsArray(mapFuncAndArray.getValue_0());
      values = idwcawp.$values(tableData, func, col, range);
      idwcawp.$batchSplice(offset, arr, values);
    }
  }
};
idwcawp.$replaceDataRange = function $replaceDataRange(
  this$static,
  tableData,
  range,
  offset
) {
  var arr,
    col,
    columnMap,
    columnMap$iterator,
    func,
    i,
    mapFuncAndArray,
    mapFuncAndArray$iterator;
  for (
    columnMap$iterator = new ju.AbstractHashMap$EntrySetIterator(
      new ju.AbstractHashMap$EntrySet(this$static.cachedData).this$01
    );
    columnMap$iterator.hasNext_0;

  ) {
    columnMap = ju.$next_3(columnMap$iterator);
    col = idwca.$findColumn(
      this$static.table_0,
      castToString(columnMap.getKey())
    );
    for (
      mapFuncAndArray$iterator = castTo(columnMap.getValue_0(), 30)
        .entrySet_0()
        .iterator_0();
      mapFuncAndArray$iterator.hasNext_1();

    ) {
      mapFuncAndArray = castTo(mapFuncAndArray$iterator.next_1(), 27);
      func = castToFunction(mapFuncAndArray.getKey());
      arr = castToJsArray(mapFuncAndArray.getValue_0());
      if (func == null) {
        for (
          i = 0;
          lt(
            cggl.createSmallLongEmul0(i),
            add_1(sub_3(range.last_0, range.first_0), 1)
          );
          i++
        ) {
          jb.$setAt(
            arr,
            offset + i,
            idwcas3.$getData_0(
              tableData,
              add_1(range.first_0, cggl.createSmallLongEmul0(i)),
              col
            )
          );
        }
      } else {
        for (
          i = 0;
          lt(
            cggl.createSmallLongEmul0(i),
            add_1(sub_3(range.last_0, range.first_0), 1)
          );
          i++
        ) {
          jb.$setAt(
            arr,
            offset + i,
            func(
              idwcas3.$getData_0(
                tableData,
                add_1(range.first_0, cggl.createSmallLongEmul0(i)),
                col
              )
            )
          );
        }
      }
    }
  }
};
idwcawp.$update = function $update(this$static, tableData) {
  var addedIterator,
    allColumns,
    column,
    column$array,
    column$index,
    column$max,
    i,
    modifiedIterator,
    nextAdded,
    nextIndex,
    nextModified,
    nextRemoved,
    removedIterator;
  addedIterator = new ju.AbstractList$IteratorImpl(
    new ju.Arrays$ArrayList(tableData.added_0.range_0.sortedRanges)
  );
  removedIterator = new ju.AbstractList$IteratorImpl(
    new ju.Arrays$ArrayList(tableData.removed_0.range_0.sortedRanges)
  );
  modifiedIterator = new ju.AbstractList$IteratorImpl(
    new ju.Arrays$ArrayList(tableData.modified_0.range_0.sortedRanges)
  );
  nextAdded =
    addedIterator.i < addedIterator.this$01_0.size()
      ? (ji.checkCriticalElement(
          addedIterator.i < addedIterator.this$01_0.size()
        ),
        castTo(
          addedIterator.this$01_0.getAtIndex(
            (addedIterator.last_0 = addedIterator.i++)
          ),
          24
        ))
      : null;
  nextRemoved =
    removedIterator.i < removedIterator.this$01_0.size()
      ? (ji.checkCriticalElement(
          removedIterator.i < removedIterator.this$01_0.size()
        ),
        castTo(
          removedIterator.this$01_0.getAtIndex(
            (removedIterator.last_0 = removedIterator.i++)
          ),
          24
        ))
      : null;
  nextModified =
    modifiedIterator.i < modifiedIterator.this$01_0.size()
      ? (ji.checkCriticalElement(
          modifiedIterator.i < modifiedIterator.this$01_0.size()
        ),
        castTo(
          modifiedIterator.this$01_0.getAtIndex(
            (modifiedIterator.last_0 = modifiedIterator.i++)
          ),
          24
        ))
      : null;
  i = 0;
  nextRemoved
    ? (allColumns = castToJsArray(
        jus.$toArray_6(
          jus.$flatMap(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(
                new ju.AbstractMap$2(this$static.cachedData),
                0
              )
            ),
            new idwcawp.ChartData$lambda$0$Type()
          ),
          new idwcawp.ChartData$0methodref$lambda$1$Type()
        )
      ))
    : (allColumns = null);
  while (!!nextAdded || !!nextRemoved || !!nextModified) {
    if (i >= this$static.indexes.length) {
      if (nextRemoved) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      if (nextModified) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      while (nextAdded) {
        idwcawp.$insertDataRange(this$static, tableData, nextAdded, i);
        i = toInt_0(
          add_1(
            cggl.createSmallLongEmul0(i),
            add_1(sub_3(nextAdded.last_0, nextAdded.first_0), 1)
          )
        );
        nextAdded =
          addedIterator.i < addedIterator.this$01_0.size()
            ? (ji.checkCriticalElement(
                addedIterator.i < addedIterator.this$01_0.size()
              ),
              castTo(
                addedIterator.this$01_0.getAtIndex(
                  (addedIterator.last_0 = addedIterator.i++)
                ),
                24
              ))
            : null;
      }
      break;
    }
    nextIndex = this$static.indexes[i];
    if (!!nextAdded && lt(nextAdded.first_0, nextIndex)) {
      if (gte_0(nextAdded.last_0, nextIndex)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      idwcawp.$insertDataRange(this$static, tableData, nextAdded, i);
      i = toInt_0(
        add_1(
          cggl.createSmallLongEmul0(i),
          add_1(sub_3(nextAdded.last_0, nextAdded.first_0), 1)
        )
      );
      nextAdded =
        addedIterator.i < addedIterator.this$01_0.size()
          ? (ji.checkCriticalElement(
              addedIterator.i < addedIterator.this$01_0.size()
            ),
            castTo(
              addedIterator.this$01_0.getAtIndex(
                (addedIterator.last_0 = addedIterator.i++)
              ),
              24
            ))
          : null;
    } else if (!!nextModified && eq(nextModified.first_0, nextIndex)) {
      if (lt(nextModified.last_0, nextIndex)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      if (
        lt(
          fromInt(this$static.indexes.length - i),
          add_1(sub_3(nextModified.last_0, nextModified.first_0), 1)
        )
      ) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      idwcawp.$replaceDataRange(this$static, tableData, nextModified, i);
      i = toInt_0(
        add_1(
          cggl.createSmallLongEmul0(i),
          add_1(sub_3(nextModified.last_0, nextModified.first_0), 1)
        )
      );
      nextModified =
        modifiedIterator.i < modifiedIterator.this$01_0.size()
          ? (ji.checkCriticalElement(
              modifiedIterator.i < modifiedIterator.this$01_0.size()
            ),
            castTo(
              modifiedIterator.this$01_0.getAtIndex(
                (modifiedIterator.last_0 = modifiedIterator.i++)
              ),
              24
            ))
          : null;
    } else if (!!nextRemoved && eq(nextRemoved.first_0, nextIndex)) {
      if (lt(nextRemoved.last_0, nextIndex)) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      if (
        lt(
          fromInt(this$static.indexes.length - i),
          add_1(sub_3(nextRemoved.last_0, nextRemoved.first_0), 1)
        )
      ) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      this$static.indexes.splice(
        i,
        toInt_0(add_1(sub_3(nextRemoved.last_0, nextRemoved.first_0), 1))
      );
      if (allColumns == null) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      for (
        column$array = allColumns,
          column$index = 0,
          column$max = column$array.length;
        column$index < column$max;
        ++column$index
      ) {
        column = column$array[column$index];
        column.splice(
          i,
          toInt_0(add_1(sub_3(nextRemoved.last_0, nextRemoved.first_0), 1))
        );
      }
      nextRemoved =
        removedIterator.i < removedIterator.this$01_0.size()
          ? (ji.checkCriticalElement(
              removedIterator.i < removedIterator.this$01_0.size()
            ),
            castTo(
              removedIterator.this$01_0.getAtIndex(
                (removedIterator.last_0 = removedIterator.i++)
              ),
              24
            ))
          : null;
    } else {
      ++i;
    }
  }
};
idwcawp.$values = function $values(tableData, mapFunc, col, insertedRange) {
  var i, result;
  result = new $wnd.Array();
  if (mapFunc == null) {
    for (
      i = 0;
      lt(
        cggl.createSmallLongEmul0(i),
        add_1(sub_3(insertedRange.last_0, insertedRange.first_0), 1)
      );
      i++
    ) {
      result.push(
        idwcas3.$getData_0(
          tableData,
          add_1(insertedRange.first_0, cggl.createSmallLongEmul0(i)),
          col
        )
      );
    }
  } else {
    for (
      i = 0;
      lt(
        cggl.createSmallLongEmul0(i),
        add_1(sub_3(insertedRange.last_0, insertedRange.first_0), 1)
      );
      i++
    ) {
      result.push(
        mapFunc(
          idwcas3.$getData_0(
            tableData,
            add_1(insertedRange.first_0, cggl.createSmallLongEmul0(i)),
            col
          )
        )
      );
    }
  }
  return result;
};
idwcawp.ChartData = function ChartData(table) {
  idwcawp.$$init_38(this);
  this.table_0 = table;
};
idwcawp.lambda$10_4 = function lambda$10_4(mappingFunc_0, column_1, p0_2) {
  return mappingFunc_0(p0_2.get(column_1));
};
idwcawp.lambda$9_3 = function lambda$9_3(column_0, p0_1) {
  return p0_1.get(column_0);
};
idwcawp.longs_0 = function longs_0(range) {
  var i, longs;
  longs = initUnidimensionalArray(
    cggl.J_classLit,
    $intern_43,
    18,
    toInt_0(add_1(sub_3(range.last_0, range.first_0), 1)),
    14,
    1
  );
  for (i = 0; i < longs.length; i++) {
    longs[i] = add_1(range.first_0, cggl.createSmallLongEmul0(i));
  }
  return longs;
};
defineClass(686, 1, {}, idwcawp.ChartData);
_.getColumn = function getColumn_0(columnName, mappingFunc, currentUpdate) {
  return idwcawp.$getColumn_0(this, columnName, mappingFunc, currentUpdate);
};
_.removeColumn = function removeColumn(columnName, mappingFunc) {
  var map_0;
  map_0 = castTo(ju.$getStringValue(this.cachedData, columnName), 30);
  !!map_0 && map_0.remove(mappingFunc);
};
_.update = function update_2(tableData) {
  idwcawp.$update(this, tableData);
};
cggl.Lio_deephaven_web_client_api_widget_plot_ChartData_2_classLit =
  createForClass("io.deephaven.web.client.api.widget.plot", "ChartData", 686);
idwcawp.ChartData$0methodref$lambda$1$Type =
  function ChartData$0methodref$lambda$1$Type() {};
defineClass(688, 1, {}, idwcawp.ChartData$0methodref$lambda$1$Type);
_.apply_2 = function apply_173(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_ChartData$0methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "ChartData/0methodref$lambda$1$Type",
    688
  );
idwcawp.ChartData$lambda$0$Type = function ChartData$lambda$0$Type() {};
defineClass(687, 1, {}, idwcawp.ChartData$lambda$0$Type);
_.apply_1 = function apply_174(arg0) {
  return castTo(arg0, 30).values().stream_0();
};
cggl.Lio_deephaven_web_client_api_widget_plot_ChartData$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "ChartData/lambda$0$Type",
    687
  );
idwcawp.$getClass_416 = function $getClass_416() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.ChartData$lambda$10$Type = function ChartData$lambda$10$Type(
  mappingFunc_0,
  column_1
) {
  this.mappingFunc_0 = mappingFunc_0;
  this.column_1 = column_1;
};
defineClass(1501, $wnd.Function, {}, idwcawp.ChartData$lambda$10$Type);
_.onInvoke = function onInvoke_246(arg0, arg1, arg2) {
  return idwcawp.lambda$10_4(
    this.mappingFunc_0,
    this.column_1,
    castTo(arg0, 165)
  );
};
idwcawp.ChartData$lambda$7$Type = function ChartData$lambda$7$Type() {};
defineClass(689, 1, {}, idwcawp.ChartData$lambda$7$Type);
_.apply_1 = function apply_175(arg0) {
  return castToString(arg0), new ju.IdentityHashMap();
};
cggl.Lio_deephaven_web_client_api_widget_plot_ChartData$lambda$7$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "ChartData/lambda$7$Type",
    689
  );
idwcawp.ChartData$lambda$8$Type = function ChartData$lambda$8$Type(
  $$outer_0,
  columnName_1,
  mappingFunc_2,
  currentUpdate_3
) {
  this.$$outer_0 = $$outer_0;
  this.columnName_1 = columnName_1;
  this.mappingFunc_2 = mappingFunc_2;
  this.currentUpdate_3 = currentUpdate_3;
};
defineClass(690, 1, {}, idwcawp.ChartData$lambda$8$Type);
_.apply_1 = function apply_176(arg0) {
  var lastArg;
  return idwcawp.$collectAllData(
    this.$$outer_0,
    this.columnName_1,
    this.mappingFunc_2,
    ((lastArg = this.currentUpdate_3), castToFunction(arg0), lastArg)
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_ChartData$lambda$8$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "ChartData/lambda$8$Type",
    690
  );
idwcawp.$getClass_417 = function $getClass_417() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.ChartData$lambda$9$Type = function ChartData$lambda$9$Type(column_0) {
  this.column_0 = column_0;
};
defineClass(1500, $wnd.Function, {}, idwcawp.ChartData$lambda$9$Type);
_.onInvoke = function onInvoke_247(arg0, arg1, arg2) {
  return idwcawp.lambda$9_3(this.column_0, castTo(arg0, 165));
};
idwcawp.DataUpdateEvent = function DataUpdateEvent(
  relatedSeries,
  data_0,
  currentUpdate
) {
  this.series_0 = relatedSeries;
  this.data_0 = data_0;
  this.currentUpdate = currentUpdate;
};
idwcawp.lambda$0_12 = function lambda$0_12(sourceType_0, sd_1) {
  return sd_1.getType() == sourceType_0;
};
defineClass(301, 1, {}, idwcawp.DataUpdateEvent);
_.getArray = function getArray(series, sourceType, mappingFunc) {
  var columnName;
  columnName = castToString(
    ju.$orElseThrow(
      ju.$map(
        jus.$findFirst(
          jus.$filter_1(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(
                jb.$asList(series.descriptor.getDataSourcesList()),
                16
              )
            ),
            new idwcawp.DataUpdateEvent$lambda$0$Type(sourceType)
          )
        ),
        new idwcawp.DataUpdateEvent$0methodref$getColumnName$Type()
      ),
      new idwcawp.DataUpdateEvent$lambda$2$Type(sourceType)
    )
  );
  return idwcawp.$getColumn_0(
    this.data_0,
    columnName,
    mappingFunc,
    this.currentUpdate
  );
};
defineProperties(_, {
  series: {
    get: function getSeries() {
      return this.series_0;
    },
  },
});
cggl.Lio_deephaven_web_client_api_widget_plot_DataUpdateEvent_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "DataUpdateEvent",
    301
  );
idwcawp.$apply_7 = function $apply_7(arg0) {
  return castToNative(
    arg0,
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
      .SourceDescriptor
  ).getColumnName();
};
idwcawp.DataUpdateEvent$0methodref$getColumnName$Type =
  function DataUpdateEvent$0methodref$getColumnName$Type() {};
defineClass(797, 1, {}, idwcawp.DataUpdateEvent$0methodref$getColumnName$Type);
_.apply_1 = function apply_177(arg0) {
  return idwcawp.$apply_7(arg0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_DataUpdateEvent$0methodref$getColumnName$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "DataUpdateEvent/0methodref$getColumnName$Type",
    797
  );
idwcawp.DataUpdateEvent$1 = function DataUpdateEvent$1($anonymous0) {
  idwcawp.DataUpdateEvent.call(this, $anonymous0, null, null);
};
defineClass(795, 301, {}, idwcawp.DataUpdateEvent$1);
_.getArray = function getArray_0(series, sourceType, mappingFunc) {
  return new $wnd.Array();
};
cggl.Lio_deephaven_web_client_api_widget_plot_DataUpdateEvent$1_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "DataUpdateEvent/1",
    795
  );
idwcawp.DataUpdateEvent$lambda$0$Type = function DataUpdateEvent$lambda$0$Type(
  sourceType_0
) {
  this.sourceType_0 = sourceType_0;
};
defineClass(796, 1, {}, idwcawp.DataUpdateEvent$lambda$0$Type);
_.test_0 = function test_17(arg0) {
  return idwcawp.lambda$0_12(
    this.sourceType_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SourceDescriptor
    )
  );
};
_.sourceType_0 = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_DataUpdateEvent$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "DataUpdateEvent/lambda$0$Type",
    796
  );
idwcawp.DataUpdateEvent$lambda$2$Type = function DataUpdateEvent$lambda$2$Type(
  sourceType_0
) {
  this.sourceType_0 = sourceType_0;
};
defineClass(798, 1, {}, idwcawp.DataUpdateEvent$lambda$2$Type);
_.get_0 = function get_21() {
  return new jl.IllegalArgumentException_0(
    "No sourceType " + this.sourceType_0 + " in provided series"
  );
};
_.sourceType_0 = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_DataUpdateEvent$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "DataUpdateEvent/lambda$2$Type",
    798
  );
idwcawp.$clinit_DownsampleOptions = function $clinit_DownsampleOptions() {
  idwcawp.$clinit_DownsampleOptions = emptyMethod;
  idwcawp.DEFAULT = new idwcawp.DownsampleOptions();
  idwcawp.DISABLE = new idwcawp.DownsampleOptions();
};
idwcawp.DownsampleOptions = function DownsampleOptions() {};
defineClass(200, 1, { 200: 1 }, idwcawp.DownsampleOptions);
idwcawp.MAX_SERIES_SIZE = 30000;
idwcawp.MAX_SUBSCRIPTION_SIZE = 200000;
cggl.Lio_deephaven_web_client_api_widget_plot_DownsampleOptions_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "DownsampleOptions",
    200
  );
idwcawp.$$init_39 = function $$init_39(this$static) {
  this$static.includedSeries = new ju.HashSet();
};
idwcawp.$lambda$12_2 = function $lambda$12_2(this$static, table_0) {
  var sub_0;
  if (this$static.subscription == null) {
    idwca.$close_0(table_0);
    return $wnd.Promise.reject("Already closed");
  }
  sub_0 = idwca.$subscribe(
    table_0,
    idwca
      .$lastVisibleState(table_0)
      .columns_0.filter(
        makeLambdaFunction(
          idwcawp.FigureSubscription$lambda$13$Type.prototype.onInvoke,
          idwcawp.FigureSubscription$lambda$13$Type,
          [this$static]
        )
      )
  );
  this$static.currentData = new idwcawp.ChartData(table_0);
  idwca.$addEventListener(
    sub_0,
    "updated",
    makeLambdaFunction(
      idwcawp.FigureSubscription$lambda$14$Type.prototype.onEvent,
      idwcawp.FigureSubscription$lambda$14$Type,
      [this$static]
    )
  );
  return $wnd.Promise.resolve(sub_0);
};
idwcawp.$lambda$13_4 = function $lambda$13_4(this$static, c_0) {
  return (
    jl.$clinit_Boolean(),
    ju.$contains_3(this$static.requiredColumns, c_0.name_0)
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false)
  );
};
idwcawp.$lambda$14_3 = function $lambda$14_3(this$static, e_0) {
  var event_0, subscriptionUpdateData, successInit;
  subscriptionUpdateData = castTo(e_0.detail, 247);
  idwcawp.$update(this$static.currentData, subscriptionUpdateData);
  event_0 = jb.emptyObjectLiteral();
  event_0.detail = new idwcawp.DataUpdateEvent(
    castTo(
      ju.$toArray_0(
        this$static.includedSeries,
        initUnidimensionalArray(
          cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit,
          $intern_63,
          59,
          0,
          0,
          1
        )
      ),
      107
    ),
    this$static.currentData,
    subscriptionUpdateData
  );
  idwca.$fireEvent_1(this$static.figure, "updated", event_0);
  if (!this$static.firstEventFired) {
    this$static.firstEventFired = true;
    if (this$static.downsampleAxisRange) {
      successInit = jb.emptyObjectLiteral();
      successInit.detail = ju.$toArray(this$static.includedSeries);
      idwca.$fireEvent_1(this$static.figure, "downsamplefinished", successInit);
    }
  }
};
idwcawp.$lambda$4_3 = function $lambda$4_3(this$static, table_0) {
  var downsampled, init, tablePromise, zoomRange;
  tablePromise = $wnd.Promise.resolve(table_0);
  if (!this$static.downsampleAxisRange) {
    if (
      idwca.$getSize(table_0) >
      (idwcawp.$clinit_DownsampleOptions(), idwcawp.MAX_SERIES_SIZE)
    ) {
      if (
        jus.$noneMatch_0(
          jus.$map_0(
            new jus.StreamImpl(
              null,
              new ju.Spliterators$IteratorSpliterator(
                this$static.includedSeries,
                1
              )
            ),
            new idwcawp.FigureSubscription$0methodref$getDownsampleOptions$Type()
          ),
          new idwcawp.FigureSubscription$lambda$6$Type()
        )
      ) {
        idwcawp.$downsampleNeeded(
          this$static.figure,
          "Disable downsampling to retrieve all items",
          this$static.includedSeries,
          idwca.$getSize(table_0)
        );
        return $wnd.Promise.reject(
          "Too many items to display, disable downsampling to display this series or size the axes"
        );
      } else if (idwca.$getSize(table_0) > idwcawp.MAX_SUBSCRIPTION_SIZE) {
        idwcawp.$downsampleNeeded(
          this$static.figure,
          "Too many items to disable downsampling",
          this$static.includedSeries,
          idwca.$getSize(table_0)
        );
        return $wnd.Promise.reject("Too many items to disable downsampling");
      }
    }
    return idwcawp.$subscribe_1(this$static, tablePromise);
  } else if (
    idwca.$getSize(table_0) <
    2 *
      (1 + this$static.downsampleParams.yCols.length) *
      this$static.downsampleParams.pixelCount_0 *
      2
  ) {
    return idwcawp.$subscribe_1(this$static, tablePromise);
  } else {
    !!this$static.downsampleAxisRange.min_0 &&
    !!this$static.downsampleAxisRange.max_0
      ? (zoomRange = stampJavaTypeInfo(
          getClassLiteralForArray(
            cggl.Lio_deephaven_web_client_api_LongWrapper_2_classLit,
            1
          ),
          $intern_7,
          39,
          0,
          [
            new idwca.DateWrapper(
              this$static.downsampleAxisRange.min_0.value_0
            ),
            new idwca.DateWrapper(
              this$static.downsampleAxisRange.max_0.value_0
            ),
          ]
        ))
      : (zoomRange = null);
    init = jb.emptyObjectLiteral();
    init.detail = ju.$toArray(this$static.includedSeries);
    idwca.$fireEvent_1(this$static.figure, "downsamplestarted", init);
    downsampled = tablePromise.then(
      makeLambdaFunction(
        idwcawp.FigureSubscription$lambda$7$Type.prototype.onInvoke_5,
        idwcawp.FigureSubscription$lambda$7$Type,
        [this$static, table_0, zoomRange]
      )
    );
    return idwcawp.$subscribe_1(this$static, downsampled);
  }
};
idwcawp.$lambda$7_5 = function $lambda$7_5(
  this$static,
  table_1,
  zoomRange_2,
  t_2
) {
  return idwca
    .$downsample(
      t_2,
      zoomRange_2,
      this$static.downsampleParams.pixelCount_0,
      this$static.downsampleAxisRange.xCol,
      this$static.downsampleParams.yCols
    )
    .then(
      makeLambdaFunction(
        idwcawp.FigureSubscription$lambda$8$Type.prototype.onInvoke_5,
        idwcawp.FigureSubscription$lambda$8$Type,
        []
      ),
      makeLambdaFunction(
        idwcawp.FigureSubscription$lambda$9$Type.prototype.onInvoke_5,
        idwcawp.FigureSubscription$lambda$9$Type,
        [this$static, table_1]
      )
    );
};
idwcawp.$lambda$9_2 = function $lambda$9_2(this$static, table_1, err_1) {
  idwcawp.$downsampleFailed(
    this$static.figure,
    toString_7(err_1),
    this$static.includedSeries,
    idwca.$getSize(table_1)
  );
  if (
    idwca.$getSize(table_1) >
    (idwcawp.$clinit_DownsampleOptions(), idwcawp.MAX_SERIES_SIZE)
  ) {
    if (
      jus.$noneMatch_0(
        jus.$map_0(
          new jus.StreamImpl(
            null,
            new ju.Spliterators$IteratorSpliterator(
              this$static.includedSeries,
              1
            )
          ),
          new idwcawp.FigureSubscription$1methodref$getDownsampleOptions$Type()
        ),
        new idwcawp.FigureSubscription$lambda$11$Type()
      )
    ) {
      return $wnd.Promise.reject("");
    }
  } else if (idwca.$getSize(table_1) > idwcawp.MAX_SUBSCRIPTION_SIZE) {
    return $wnd.Promise.reject("");
  }
  return $wnd.Promise.resolve(table_1);
};
idwcawp.$replaceSeries = function $replaceSeries(this$static, replacements) {
  var copy, event_0, init, successInit;
  copy = new ju.HashSet_1(replacements);
  ju.$removeAll(copy, this$static.includedSeries);
  if (
    !ju.$containsAll_0(
      this$static.requiredColumns,
      castTo(
        jus.$collect_1(
          jus.$map_0(
            jus.$flatMap(
              new jus.StreamImpl(
                null,
                new ju.Spliterators$IteratorSpliterator(copy, 1)
              ),
              new idwcawp.FigureSubscription$lambda$2$Type()
            ),
            new idwcawp.FigureSubscription$lambda$3$Type()
          ),
          jus.of_3(
            new jus.Collectors$23methodref$ctor$Type(),
            new jus.Collectors$24methodref$add$Type(),
            new jus.Collectors$lambda$50$Type(),
            new jus.Collectors$lambda$51$Type(),
            stampJavaTypeInfo(
              getClassLiteralForArray(
                cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                1
              ),
              $intern_17,
              48,
              0,
              [
                (jus.$clinit_Collector$Characteristics(), jus.UNORDERED),
                jus.IDENTITY_FINISH,
              ]
            )
          )
        ),
        53
      )
    )
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  ju.$addAll(this$static.includedSeries, copy);
  if (this$static.downsampleAxisRange) {
    init = jb.emptyObjectLiteral();
    init.detail = replacements.coll.toArray();
    idwca.$fireEvent_1(this$static.figure, "downsamplestarted", init);
  }
  if (this$static.firstEventFired) {
    event_0 = jb.emptyObjectLiteral();
    event_0.detail = new idwcawp.DataUpdateEvent(
      castTo(
        ju.$toArray_5(
          replacements,
          initUnidimensionalArray(
            cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit,
            $intern_63,
            59,
            0,
            0,
            1
          )
        ),
        107
      ),
      this$static.currentData,
      null
    );
    idwca.$fireEvent_1(this$static.figure, "updated", event_0);
    if (this$static.downsampleAxisRange) {
      successInit = jb.emptyObjectLiteral();
      successInit.detail = replacements.coll.toArray();
      idwca.$fireEvent_1(this$static.figure, "downsamplefinished", successInit);
    }
  }
  return copy;
};
idwcawp.$subscribe_0 = function $subscribe_0(this$static) {
  if (this$static.subscription != null) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  this$static.subscription = $wnd.Promise.resolve(
    new idwca.JsTable(this$static.originalTable)
  ).then(
    makeLambdaFunction(
      idwcawp.FigureSubscription$lambda$4$Type.prototype.onInvoke_5,
      idwcawp.FigureSubscription$lambda$4$Type,
      [this$static]
    )
  );
};
idwcawp.$subscribe_1 = function $subscribe_1(this$static, tablePromise) {
  if (this$static.currentData) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return tablePromise.then(
    makeLambdaFunction(
      idwcawp.FigureSubscription$lambda$12$Type.prototype.onInvoke_5,
      idwcawp.FigureSubscription$lambda$12$Type,
      [this$static]
    )
  );
};
idwcawp.$unsubscribe = function $unsubscribe(this$static) {
  if (this$static.subscription == null) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  this$static.subscription.then(
    makeLambdaFunction(
      idwcawp.FigureSubscription$lambda$15$Type.prototype.onInvoke_5,
      idwcawp.FigureSubscription$lambda$15$Type,
      []
    )
  );
  this$static.subscription = null;
};
idwcawp.FigureSubscription = function FigureSubscription(
  figure,
  originalTable,
  downsampleAxisRange,
  downsampleParams,
  series
) {
  idwcawp.$$init_39(this);
  this.figure = figure;
  this.originalTable = originalTable;
  if (!downsampleAxisRange) {
    if (downsampleParams) {
      debugger;
      throw toJs(new jl.AssertionError_0("Downsample not fully disabled"));
    }
  }
  this.downsampleAxisRange = downsampleAxisRange;
  this.downsampleParams = downsampleParams;
  ju.$addAll(this.includedSeries, series);
  this.requiredColumns =
    (ju.$clinit_Collections(),
    new ju.Collections$UnmodifiableSet(
      castTo(
        jus.$collect_1(
          jus.$map_0(
            jus.$flatMap(
              new jus.StreamImpl(
                null,
                new ju.Spliterators$IteratorSpliterator(this.includedSeries, 1)
              ),
              new idwcawp.FigureSubscription$lambda$0$Type()
            ),
            new idwcawp.FigureSubscription$lambda$1$Type()
          ),
          jus.of_3(
            new jus.Collectors$23methodref$ctor$Type(),
            new jus.Collectors$24methodref$add$Type(),
            new jus.Collectors$lambda$50$Type(),
            new jus.Collectors$lambda$51$Type(),
            stampJavaTypeInfo(
              getClassLiteralForArray(
                cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
                1
              ),
              $intern_17,
              48,
              0,
              [
                (jus.$clinit_Collector$Characteristics(), jus.UNORDERED),
                jus.IDENTITY_FINISH,
              ]
            )
          )
        ),
        81
      )
    ));
};
defineClass(130, 1, { 130: 1 }, idwcawp.FigureSubscription);
_.equals_0 = function equals_9(o) {
  var other;
  if (!instanceOf(o, 130)) {
    return false;
  }
  other = castTo(o, 130);
  if (other.figure != this.figure) {
    return false;
  }
  if (other.originalTable != this.originalTable) {
    return false;
  }
  if (!ju.equals_68(other.downsampleAxisRange, this.downsampleAxisRange)) {
    return false;
  }
  if (
    (!other.downsampleParams && !!this.downsampleParams) ||
    (!!other.downsampleParams && !this.downsampleParams) ||
    (!!other.downsampleParams &&
      (other.downsampleParams.pixelCount_0 !=
        this.downsampleParams.pixelCount_0 ||
        ju.equals_57(
          other.downsampleParams.yCols,
          this.downsampleParams.yCols
        )))
  ) {
    return false;
  }
  if (!ju.equals_68(other.requiredColumns, this.requiredColumns)) {
    return false;
  }
  return true;
};
_.hashCode_1 = function hashCode_10() {
  var result;
  result = jl.hashCode__I__devirtual$(this.figure);
  result = 31 * result + jl.hashCode__I__devirtual$(this.originalTable);
  result =
    31 * result +
    (!this.downsampleAxisRange
      ? 0
      : idwcawp.$hashCode_3(this.downsampleAxisRange));
  result =
    31 * result +
    (!this.downsampleParams
      ? 0
      : this.downsampleParams.pixelCount_0 * 31 +
        ju.hashCode_57(this.downsampleParams.yCols));
  result = 31 * result + jl.hashCode__I__devirtual$(this.requiredColumns.coll);
  return result;
};
_.firstEventFired = false;
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription",
    130
  );
idwcawp.FigureSubscription$0methodref$getDownsampleOptions$Type =
  function FigureSubscription$0methodref$getDownsampleOptions$Type() {};
defineClass(
  670,
  1,
  {},
  idwcawp.FigureSubscription$0methodref$getDownsampleOptions$Type
);
_.apply_1 = function apply_178(arg0) {
  return castTo(arg0, 59).downsample;
};
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription$0methodref$getDownsampleOptions$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription/0methodref$getDownsampleOptions$Type",
    670
  );
idwcawp.FigureSubscription$1methodref$getDownsampleOptions$Type =
  function FigureSubscription$1methodref$getDownsampleOptions$Type() {};
defineClass(
  672,
  1,
  {},
  idwcawp.FigureSubscription$1methodref$getDownsampleOptions$Type
);
_.apply_1 = function apply_179(arg0) {
  return castTo(arg0, 59).downsample;
};
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription$1methodref$getDownsampleOptions$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription/1methodref$getDownsampleOptions$Type",
    672
  );
idwcawp.FigureSubscription$lambda$0$Type =
  function FigureSubscription$lambda$0$Type() {};
defineClass(666, 1, {}, idwcawp.FigureSubscription$lambda$0$Type);
_.apply_1 = function apply_180(arg0) {
  return ju.stream_4(castTo(arg0, 59).sources_0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription/lambda$0$Type",
    666
  );
idwcawp.FigureSubscription$lambda$1$Type =
  function FigureSubscription$lambda$1$Type() {};
defineClass(667, 1, {}, idwcawp.FigureSubscription$lambda$1$Type);
_.apply_1 = function apply_181(arg0) {
  return castTo(arg0, 153).sourceDescriptor.getColumnName();
};
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription/lambda$1$Type",
    667
  );
idwcawp.FigureSubscription$lambda$11$Type =
  function FigureSubscription$lambda$11$Type() {};
defineClass(673, 1, {}, idwcawp.FigureSubscription$lambda$11$Type);
_.test_0 = function test_18(arg0) {
  return (
    castTo(arg0, 200) == (idwcawp.$clinit_DownsampleOptions(), idwcawp.DISABLE)
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription$lambda$11$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription/lambda$11$Type",
    673
  );
idwcawp.$getClass_418 = function $getClass_418() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.FigureSubscription$lambda$12$Type =
  function FigureSubscription$lambda$12$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1455,
  $wnd.Function,
  $intern_36,
  idwcawp.FigureSubscription$lambda$12$Type
);
_.onInvoke_5 = function onInvoke_248(arg0) {
  return idwcawp.$lambda$12_2(this.$$outer_0, castTo(arg0, 13));
};
idwcawp.$getClass_419 = function $getClass_419() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.FigureSubscription$lambda$13$Type =
  function FigureSubscription$lambda$13$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1460, $wnd.Function, {}, idwcawp.FigureSubscription$lambda$13$Type);
_.onInvoke = function onInvoke_249(arg0, arg1, arg2) {
  return idwcawp.$lambda$13_4(this.$$outer_0, castTo(arg0, 21));
};
idwcawp.$getClass_420 = function $getClass_420() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.FigureSubscription$lambda$14$Type =
  function FigureSubscription$lambda$14$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1461,
  $wnd.Function,
  $intern_35,
  idwcawp.FigureSubscription$lambda$14$Type
);
_.onEvent = function onEvent_26(arg0) {
  idwcawp.$lambda$14_3(this.$$outer_0, arg0);
};
idwcawp.$getClass_421 = function $getClass_421() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.FigureSubscription$lambda$15$Type =
  function FigureSubscription$lambda$15$Type() {};
defineClass(
  1456,
  $wnd.Function,
  $intern_36,
  idwcawp.FigureSubscription$lambda$15$Type
);
_.onInvoke_5 = function onInvoke_250(arg0) {
  return (
    castTo(arg0, 286).copy_0.then(
      makeLambdaFunction(
        idwcas3.TableSubscription$lambda$4$Type.prototype.onInvoke_5,
        idwcas3.TableSubscription$lambda$4$Type,
        []
      )
    ),
    null
  );
};
idwcawp.FigureSubscription$lambda$2$Type =
  function FigureSubscription$lambda$2$Type() {};
defineClass(668, 1, {}, idwcawp.FigureSubscription$lambda$2$Type);
_.apply_1 = function apply_182(arg0) {
  return ju.stream_4(castTo(arg0, 59).sources_0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription/lambda$2$Type",
    668
  );
idwcawp.FigureSubscription$lambda$3$Type =
  function FigureSubscription$lambda$3$Type() {};
defineClass(669, 1, {}, idwcawp.FigureSubscription$lambda$3$Type);
_.apply_1 = function apply_183(arg0) {
  return castTo(arg0, 153).sourceDescriptor.getColumnName();
};
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription/lambda$3$Type",
    669
  );
idwcawp.$getClass_422 = function $getClass_422() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.FigureSubscription$lambda$4$Type =
  function FigureSubscription$lambda$4$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1454,
  $wnd.Function,
  $intern_36,
  idwcawp.FigureSubscription$lambda$4$Type
);
_.onInvoke_5 = function onInvoke_251(arg0) {
  return idwcawp.$lambda$4_3(this.$$outer_0, castTo(arg0, 13));
};
idwcawp.FigureSubscription$lambda$6$Type =
  function FigureSubscription$lambda$6$Type() {};
defineClass(671, 1, {}, idwcawp.FigureSubscription$lambda$6$Type);
_.test_0 = function test_19(arg0) {
  return (
    castTo(arg0, 200) == (idwcawp.$clinit_DownsampleOptions(), idwcawp.DISABLE)
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_FigureSubscription$lambda$6$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "FigureSubscription/lambda$6$Type",
    671
  );
idwcawp.$getClass_423 = function $getClass_423() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.FigureSubscription$lambda$7$Type =
  function FigureSubscription$lambda$7$Type($$outer_0, table_1, zoomRange_2) {
    this.$$outer_0 = $$outer_0;
    this.table_1 = table_1;
    this.zoomRange_2 = zoomRange_2;
  };
defineClass(
  1457,
  $wnd.Function,
  $intern_36,
  idwcawp.FigureSubscription$lambda$7$Type
);
_.onInvoke_5 = function onInvoke_252(arg0) {
  return idwcawp.$lambda$7_5(
    this.$$outer_0,
    this.table_1,
    this.zoomRange_2,
    castTo(arg0, 13)
  );
};
idwcawp.$getClass_424 = function $getClass_424() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.FigureSubscription$lambda$8$Type =
  function FigureSubscription$lambda$8$Type() {};
defineClass(
  1458,
  $wnd.Function,
  $intern_36,
  idwcawp.FigureSubscription$lambda$8$Type
);
_.onInvoke_5 = function onInvoke_253(arg0) {
  return $wnd.Promise.resolve(castTo(arg0, 13));
};
idwcawp.$getClass_425 = function $getClass_425() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.FigureSubscription$lambda$9$Type =
  function FigureSubscription$lambda$9$Type($$outer_0, table_1) {
    this.$$outer_0 = $$outer_0;
    this.table_1 = table_1;
  };
defineClass(1459, $wnd.Function, {}, idwcawp.FigureSubscription$lambda$9$Type);
_.onInvoke_5 = function onInvoke_254(arg0) {
  return idwcawp.$lambda$9_2(this.$$outer_0, this.table_1, arg0);
};
idwcawp.$getId_0 = function $getId_0(this$static) {
  return this$static.axis_0.getId();
};
idwcawp.JsAxis = function JsAxis(descriptor, jsFigure) {
  var businessCalendarDescriptor;
  this.axis_0 = descriptor;
  this.jsFigure = jsFigure;
  businessCalendarDescriptor = descriptor.getBusinessCalendarDescriptor();
  businessCalendarDescriptor != null
    ? (this.businessCalendar_0 = new idwcawc.JsBusinessCalendar(
        businessCalendarDescriptor
      ))
    : (this.businessCalendar_0 = null);
};
defineClass(243, 1, { 243: 1 }, idwcawp.JsAxis);
defineProperties(_, {
  businessCalendar: {
    get: function getBusinessCalendar() {
      return this.businessCalendar_0;
    },
  },
});
defineProperties(_, {
  color: {
    get: function getColor_0() {
      return this.axis_0.getColor();
    },
  },
});
defineProperties(_, {
  formatPattern: {
    get: function getFormatPattern() {
      if (this.axis_0.hasFormatPattern()) {
        return this.axis_0.getFormatPattern();
      }
      return null;
    },
  },
});
defineProperties(_, {
  formatType: {
    get: function getFormatType() {
      return this.axis_0.getFormatType();
    },
  },
});
defineProperties(_, {
  gapBetweenMajorTicks: {
    get: function getGapBetweenMajorTicks() {
      if (this.axis_0.hasGapBetweenMajorTicks()) {
        return ji.uncheckedCast(this.axis_0.getGapBetweenMajorTicks());
      }
      return null;
    },
  },
});
defineProperties(_, {
  id: {
    get: function getId_0() {
      return idwcawp.$getId_0(this);
    },
  },
});
defineProperties(_, {
  label: {
    get: function getLabel() {
      return this.axis_0.getLabel();
    },
  },
});
defineProperties(_, {
  labelFont: {
    get: function getLabelFont() {
      return this.axis_0.getLabelFont();
    },
  },
});
defineProperties(_, {
  majorTickLocations: {
    get: function getMajorTickLocations() {
      return this.axis_0.getMajorTickLocationsList().slice();
    },
  },
});
defineProperties(_, {
  maxRange: {
    get: function getMaxRange() {
      return this.axis_0.getMaxRange();
    },
  },
});
defineProperties(_, {
  minRange: {
    get: function getMinRange() {
      return this.axis_0.getMinRange();
    },
  },
});
defineProperties(_, {
  minorTickCount: {
    get: function getMinorTickCount() {
      return this.axis_0.getMinorTickCount();
    },
  },
});
defineProperties(_, {
  position: {
    get: function getPosition() {
      return this.axis_0.getPosition();
    },
  },
});
defineProperties(_, {
  tickLabelAngle: {
    get: function getTickLabelAngle() {
      return this.axis_0.getTickLabelAngle();
    },
  },
});
defineProperties(_, {
  ticksFont: {
    get: function getTicksFont() {
      return this.axis_0.getTicksFont();
    },
  },
});
defineProperties(_, {
  type: {
    get: function getType_7() {
      return this.axis_0.getType();
    },
  },
});
defineProperties(_, {
  invert: {
    get: function isInvert() {
      return this.axis_0.getInvert();
    },
  },
});
defineProperties(_, {
  log: {
    get: function isLog() {
      return this.axis_0.getLog();
    },
  },
});
defineProperties(_, {
  majorTicksVisible: {
    get: function isMajorTicksVisible() {
      return this.axis_0.getMajorTicksVisible();
    },
  },
});
defineProperties(_, {
  minorTicksVisible: {
    get: function isMinorTicksVisible() {
      return this.axis_0.getMinorTicksVisible();
    },
  },
});
defineProperties(_, {
  timeAxis: {
    get: function isTimeAxis() {
      return this.axis_0.getIsTimeAxis();
    },
  },
});
_.range = function range_1(pixelCount, min_0, max_0) {
  if (pixelCount == null || !jl.$equals_12(typeof pixelCount, "number")) {
    if (this.pixels) {
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          [
            "Turning off downsampling on a chart where it is running is not currently supported",
          ]
        )
      );
      return;
    }
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        ["Ignoring Axis.range() call with non-numeric pixel count"]
      )
    );
    return;
  }
  if (
    ji.unsafeCastToDouble((ji.checkCriticalNotNull(pixelCount), pixelCount)) < 5
  ) {
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        ["Ignoring unreasonably small pixel count: ", pixelCount]
      )
    );
    return;
  }
  this.pixels = jl.valueOf_29(
    round_int(
      ji.unsafeCastToDouble((ji.checkCriticalNotNull(pixelCount), pixelCount))
    )
  );
  if (min_0 != null || max_0 != null) {
    if (min_0 == null || max_0 == null) {
      throw toJs(
        new jl.IllegalArgumentException_0(
          "If min or max are provided, both must be provided"
        )
      );
    }
    if (
      (instanceOf(min_0, 114) && jl.$doubleValue(castToDouble(min_0)) < 10) ||
      (instanceOf(max_0, 114) && jl.$doubleValue(castToDouble(max_0)) < 10)
    ) {
      idwcf.warn(
        stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          ["Ignoring max/min, at least one doesn't make sense", max_0, min_0]
        )
      );
    } else {
      this.min_0 = jl.valueOf_30(
        ju.$orElseThrow_0(
          idwcai.longFromDate(min_0),
          new idwcawp.JsAxis$lambda$0$Type(min_0)
        )
      );
      this.max_0 = jl.valueOf_30(
        ju.$orElseThrow_0(
          idwcai.longFromDate(max_0),
          new idwcawp.JsAxis$lambda$1$Type(max_0)
        )
      );
    }
  } else {
    this.min_0 = null;
    this.max_0 = null;
  }
  idwcawp.$updateDownsampleRange(
    this.jsFigure,
    this.axis_0,
    this.pixels,
    this.min_0,
    this.max_0
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsAxis_2_classLit =
  createForClass("io.deephaven.web.client.api.widget.plot", "JsAxis", 243);
idwcawp.JsAxis$lambda$0$Type = function JsAxis$lambda$0$Type(min_0) {
  this.min_0 = min_0;
};
defineClass(510, 1, {}, idwcawp.JsAxis$lambda$0$Type);
_.get_0 = function get_22() {
  return new jl.IllegalArgumentException_0(
    "Cannot interpret min as a date: " + this.min_0
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsAxis$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsAxis/lambda$0$Type",
    510
  );
idwcawp.JsAxis$lambda$1$Type = function JsAxis$lambda$1$Type(max_0) {
  this.max_0 = max_0;
};
defineClass(511, 1, {}, idwcawp.JsAxis$lambda$1$Type);
_.get_0 = function get_23() {
  return new jl.IllegalArgumentException_0(
    "Cannot interpret max as a date: " + this.max_0
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsAxis$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsAxis/lambda$1$Type",
    511
  );
idwcawp.$$init_40 = function $$init_40(this$static) {
  this$static.majorTickLocations = new $wnd.Array();
};
idwcawp.JsAxisDescriptor = function JsAxisDescriptor() {
  idwcawp.$$init_40(this);
};
idwcawp.JsAxisDescriptor_0 = function JsAxisDescriptor_0(source) {
  var value_0,
    value0,
    value1,
    value10,
    value11,
    value12,
    value13,
    value2,
    value3,
    value4,
    value5,
    value6,
    value7,
    value8,
    value9;
  idwcawp.JsAxisDescriptor.call(this);
  this.formatType = jb.$asString_2(
    idwcf.getRequiredProperty(source, "formatType")
  );
  this.type = jb.$asString_2(idwcf.getRequiredProperty(source, "type"));
  this.position = jb.$asString_2(idwcf.getRequiredProperty(source, "position"));
  this.log =
    ((value0 = idwcf.getProperty(source, "log", false)),
    value0 != null &&
      (jb.checkCriticalType_0(typeof value0 == "boolean"),
      jb.asBoolean(value0)));
  this.label =
    ((value1 = idwcf.getProperty(source, "label", null)),
    value1 == null
      ? null
      : (jb.checkCriticalType_0(typeof value1 == "string"), value1));
  this.labelFont =
    ((value2 = idwcf.getProperty(source, "labelFont", null)),
    value2 == null
      ? null
      : (jb.checkCriticalType_0(typeof value2 == "string"), value2));
  this.ticksFont =
    ((value3 = idwcf.getProperty(source, "ticksFont", null)),
    value3 == null
      ? null
      : (jb.checkCriticalType_0(typeof value3 == "string"), value3));
  this.formatPattern =
    ((value4 = idwcf.getProperty(source, "formatPattern", null)),
    value4 == null
      ? null
      : (jb.checkCriticalType_0(typeof value4 == "string"), value4));
  this.color =
    ((value5 = idwcf.getProperty(source, "color", null)),
    value5 == null
      ? null
      : (jb.checkCriticalType_0(typeof value5 == "string"), value5));
  this.minRange =
    ((value6 = idwcf.getProperty(source, "minRange", NaN)),
    value6 == null
      ? 0
      : (jb.checkCriticalType_0(typeof value6 == "number"),
        jb.asDouble(value6)));
  this.maxRange =
    ((value7 = idwcf.getProperty(source, "maxRange", NaN)),
    value7 == null
      ? 0
      : (jb.checkCriticalType_0(typeof value7 == "number"),
        jb.asDouble(value7)));
  this.minorTicksVisible =
    ((value8 = idwcf.getProperty(source, "minorTicksVisible", false)),
    value8 != null &&
      (jb.checkCriticalType_0(typeof value8 == "boolean"),
      jb.asBoolean(value8)));
  this.majorTicksVisible =
    ((value9 = idwcf.getProperty(source, "majorTicksVisible", true)),
    value9 != null &&
      (jb.checkCriticalType_0(typeof value9 == "boolean"),
      jb.asBoolean(value9)));
  this.minorTickCount =
    ((value10 = idwcf.getProperty(source, "minorTickCount", 0)),
    value10 == null
      ? 0
      : (jb.checkCriticalType_0(jb.isInt(value10)), jb.asInt(value10)));
  this.gapBetweenMajorTicks =
    ((value11 = idwcf.getProperty(source, "gapBetweenMajorTicks", -1)),
    value11 == null
      ? 0
      : (jb.checkCriticalType_0(typeof value11 == "number"),
        jb.asDouble(value11)));
  this.tickLabelAngle =
    ((value12 = idwcf.getProperty(source, "tickLabelAngle", 0)),
    value12 == null
      ? 0
      : (jb.checkCriticalType_0(typeof value12 == "number"),
        jb.asDouble(value12)));
  this.invert =
    ((value13 = idwcf.getProperty(source, "invert", false)),
    value13 != null &&
      (jb.checkCriticalType_0(typeof value13 == "boolean"),
      jb.asBoolean(value13)));
  this.isTimeAxis =
    ((value_0 = idwcf.getProperty(source, "isTimeAxis", false)),
    value_0 != null &&
      (jb.checkCriticalType_0(typeof value_0 == "boolean"),
      jb.asBoolean(value_0)));
  jb.$has(source, "majorTickLocations") &&
    (this.majorTickLocations = jb.$getAsAny(source, "majorTickLocations"));
};
defineClass(
  100,
  1,
  { 100: 1 },
  idwcawp.JsAxisDescriptor,
  idwcawp.JsAxisDescriptor_0
);
_.gapBetweenMajorTicks = -1;
_.invert = false;
_.isTimeAxis = false;
_.log = false;
_.majorTicksVisible = true;
_.maxRange = NaN;
_.minRange = NaN;
_.minorTickCount = 0;
_.minorTicksVisible = false;
_.tickLabelAngle = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_JsAxisDescriptor_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsAxisDescriptor",
    100
  );
idwcawp.$addSeriesFromMultiSeries = function $addSeriesFromMultiSeries(
  this$static,
  series
) {
  setCheck(this$static.series_0, this$static.series_0.length, series);
};
idwcawp.$lambda$4_4 = function $lambda$4_4(
  this$static,
  jsFigure_1,
  indexed_2,
  multiSeriesDescriptor_2
) {
  return new idwcawp.JsMultiSeries(
    multiSeriesDescriptor_2,
    jsFigure_1,
    indexed_2,
    this$static
  );
};
idwcawp.JsChart = function JsChart(descriptor, jsFigure) {
  var i, indexed;
  idwca.HasEventHandling.call(this);
  this.descriptor = descriptor;
  this.axes_0 = castTo(
    jus.$toArray_6(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(
            jb.$asList(descriptor.getAxesList()),
            16
          )
        ),
        new idwcawp.JsChart$lambda$0$Type(jsFigure)
      ),
      new idwcawp.JsChart$0methodref$lambda$1$Type()
    ),
    971
  );
  $wnd.Object.freeze(this.axes_0);
  indexed = new ju.HashMap();
  for (i = 0; i < this.axes_0.length; i++) {
    ju.$putStringValue(indexed, this.axes_0[i].axis_0.getId(), this.axes_0[i]);
  }
  this.series_0 = castTo(
    jus.$toArray_6(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(
            jb.$asList(descriptor.getSeriesList()),
            16
          )
        ),
        new idwcawp.JsChart$lambda$2$Type(jsFigure, indexed)
      ),
      new idwcawp.JsChart$1methodref$lambda$3$Type()
    ),
    107
  );
  this.multiSeries_0 = castTo(
    jus.$toArray_6(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(
            jb.$asList(descriptor.getMultiSeriesList()),
            16
          )
        ),
        new idwcawp.JsChart$lambda$4$Type(this, jsFigure, indexed)
      ),
      new idwcawp.JsChart$2methodref$lambda$5$Type()
    ),
    972
  );
  $wnd.Object.freeze(this.multiSeries_0);
};
idwcawp.lambda$0_13 = function lambda$0_13(jsFigure_0, axisDescriptor_1) {
  return new idwcawp.JsAxis(axisDescriptor_1, jsFigure_0);
};
idwcawp.lambda$2_10 = function lambda$2_10(
  jsFigure_0,
  indexed_1,
  seriesDescriptor_2
) {
  return new idwcawp.JsSeries(seriesDescriptor_2, jsFigure_0, indexed_1);
};
defineClass(116, 57, { 57: 1, 116: 1 }, idwcawp.JsChart);
defineProperties(_, {
  axes: {
    get: function getAxes() {
      return this.axes_0;
    },
  },
});
defineProperties(_, {
  chartType: {
    get: function getChartType() {
      return this.descriptor.getChartType();
    },
  },
});
defineProperties(_, {
  colspan: {
    get: function getColspan() {
      return this.descriptor.getColspan();
    },
  },
});
defineProperties(_, {
  column: {
    get: function getColumn_1() {
      return this.descriptor.getColumn();
    },
  },
});
defineProperties(_, {
  multiSeries: {
    get: function getExportedMultiSeriesArray() {
      return this.multiSeries_0;
    },
  },
});
defineProperties(_, {
  series: {
    get: function getExportedSeriesArray() {
      return this.series_0.slice();
    },
  },
});
defineProperties(_, {
  legendColor: {
    get: function getLegendColor() {
      return this.descriptor.getLegendColor();
    },
  },
});
defineProperties(_, {
  legendFont: {
    get: function getLegendFont() {
      return this.descriptor.getLegendFont();
    },
  },
});
defineProperties(_, {
  row: {
    get: function getRow() {
      return this.descriptor.getRow();
    },
  },
});
defineProperties(_, {
  rowspan: {
    get: function getRowspan() {
      return this.descriptor.getRowspan();
    },
  },
});
defineProperties(_, {
  title: {
    get: function getTitle_0() {
      if (this.descriptor.hasTitle()) {
        return this.descriptor.getTitle();
      }
      return null;
    },
  },
});
defineProperties(_, {
  titleColor: {
    get: function getTitleColor() {
      return this.descriptor.getTitleColor();
    },
  },
});
defineProperties(_, {
  titleFont: {
    get: function getTitleFont() {
      return this.descriptor.getTitleFont();
    },
  },
});
defineProperties(_, {
  is3d: {
    get: function isIs3d() {
      return this.descriptor.getIs3d();
    },
  },
});
defineProperties(_, {
  showLegend: {
    get: function isShowLegend() {
      return this.descriptor.getShowLegend();
    },
  },
});
idwcawp.EVENT_SERIES_ADDED = "seriesadded";
cggl.Lio_deephaven_web_client_api_widget_plot_JsChart_2_classLit =
  createForClass("io.deephaven.web.client.api.widget.plot", "JsChart", 116);
idwcawp.JsChart$0methodref$lambda$1$Type =
  function JsChart$0methodref$lambda$1$Type() {};
defineClass(502, 1, {}, idwcawp.JsChart$0methodref$lambda$1$Type);
_.apply_2 = function apply_184(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_widget_plot_JsAxis_2_classLit,
    { 971: 1, 3: 1, 5: 1 },
    243,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsChart$0methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsChart/0methodref$lambda$1$Type",
    502
  );
idwcawp.JsChart$1methodref$lambda$3$Type =
  function JsChart$1methodref$lambda$3$Type() {};
defineClass(504, 1, {}, idwcawp.JsChart$1methodref$lambda$3$Type);
_.apply_2 = function apply_185(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit,
    $intern_63,
    59,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsChart$1methodref$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsChart/1methodref$lambda$3$Type",
    504
  );
idwcawp.JsChart$2methodref$lambda$5$Type =
  function JsChart$2methodref$lambda$5$Type() {};
defineClass(506, 1, {}, idwcawp.JsChart$2methodref$lambda$5$Type);
_.apply_2 = function apply_186(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_widget_plot_JsMultiSeries_2_classLit,
    { 972: 1, 3: 1, 5: 1 },
    244,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsChart$2methodref$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsChart/2methodref$lambda$5$Type",
    506
  );
idwcawp.JsChart$lambda$0$Type = function JsChart$lambda$0$Type(jsFigure_0) {
  this.jsFigure_0 = jsFigure_0;
};
defineClass(501, 1, {}, idwcawp.JsChart$lambda$0$Type);
_.apply_1 = function apply_187(arg0) {
  return idwcawp.lambda$0_13(
    this.jsFigure_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .AxisDescriptor
    )
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsChart$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsChart/lambda$0$Type",
    501
  );
idwcawp.JsChart$lambda$2$Type = function JsChart$lambda$2$Type(
  jsFigure_0,
  indexed_1
) {
  this.jsFigure_0 = jsFigure_0;
  this.indexed_1 = indexed_1;
};
defineClass(503, 1, {}, idwcawp.JsChart$lambda$2$Type);
_.apply_1 = function apply_188(arg0) {
  return idwcawp.lambda$2_10(
    this.jsFigure_0,
    this.indexed_1,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesDescriptor
    )
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsChart$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsChart/lambda$2$Type",
    503
  );
idwcawp.JsChart$lambda$4$Type = function JsChart$lambda$4$Type(
  $$outer_0,
  jsFigure_1,
  indexed_2
) {
  this.$$outer_0 = $$outer_0;
  this.jsFigure_1 = jsFigure_1;
  this.indexed_2 = indexed_2;
};
defineClass(505, 1, {}, idwcawp.JsChart$lambda$4$Type);
_.apply_1 = function apply_189(arg0) {
  return idwcawp.$lambda$4_4(
    this.$$outer_0,
    this.jsFigure_1,
    this.indexed_2,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .MultiSeriesDescriptor
    )
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsChart$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsChart/lambda$4$Type",
    505
  );
idwcawp.$$init_41 = function $$init_41(this$static) {
  this$static.series = new $wnd.Array();
  this$static.axes = new $wnd.Array();
};
idwcawp.JsChartDescriptor = function JsChartDescriptor() {
  idwcawp.$$init_41(this);
};
idwcawp.JsChartDescriptor_0 = function JsChartDescriptor_0(source) {
  var axes,
    axisMap,
    series,
    value_0,
    value0,
    value1,
    value2,
    value3,
    value4,
    value5,
    value6,
    value7;
  idwcawp.JsChartDescriptor.call(this);
  axisMap = new ju.HashMap();
  if (jb.$has(source, "axes")) {
    axes = castToJsArray(jb.$getAsAny(source, "axes"));
    this.axes = axes.map(
      makeLambdaFunction(
        idwcawp.JsChartDescriptor$lambda$0$Type.prototype.onInvoke,
        idwcawp.JsChartDescriptor$lambda$0$Type,
        []
      )
    );
    this.axes.forEach(
      makeLambdaFunction(
        idwcawp.JsChartDescriptor$lambda$1$Type.prototype.onInvoke,
        idwcawp.JsChartDescriptor$lambda$1$Type,
        [axisMap, axes]
      )
    );
  } else {
    throw toJs(
      new jl.IllegalArgumentException_0("'axes' property must be set")
    );
  }
  if (jb.$has(source, "series")) {
    series = castToJsArray(jb.$getAsAny(source, "series"));
    this.series = series.map(
      makeLambdaFunction(
        idwcawp.JsChartDescriptor$lambda$2$Type.prototype.onInvoke,
        idwcawp.JsChartDescriptor$lambda$2$Type,
        [axisMap]
      )
    );
  } else {
    throw toJs(
      new jl.IllegalArgumentException_0("'series' property must be set")
    );
  }
  this.colspan =
    ((value0 = idwcf.getProperty(source, "colspan", 1)),
    value0 == null
      ? 0
      : (jb.checkCriticalType_0(jb.isInt(value0)), jb.asInt(value0)));
  this.rowspan =
    ((value1 = idwcf.getProperty(source, "rowspan", 1)),
    value1 == null
      ? 0
      : (jb.checkCriticalType_0(jb.isInt(value1)), jb.asInt(value1)));
  this.chartType = jb.$asString_2(
    idwcf.getRequiredProperty(source, "chartType")
  );
  this.title =
    ((value2 = idwcf.getProperty(source, "title", null)),
    value2 == null
      ? null
      : (jb.checkCriticalType_0(typeof value2 == "string"), value2));
  this.titleFont =
    ((value3 = idwcf.getProperty(source, "titleFont", null)),
    value3 == null
      ? null
      : (jb.checkCriticalType_0(typeof value3 == "string"), value3));
  this.titleColor =
    ((value4 = idwcf.getProperty(source, "titleColor", null)),
    value4 == null
      ? null
      : (jb.checkCriticalType_0(typeof value4 == "string"), value4));
  this.showLegend =
    ((value5 = idwcf.getProperty(source, "showLegend", false)),
    value5 != null &&
      (jb.checkCriticalType_0(typeof value5 == "boolean"),
      jb.asBoolean(value5)));
  this.legendFont =
    ((value6 = idwcf.getProperty(source, "legendFont", null)),
    value6 == null
      ? null
      : (jb.checkCriticalType_0(typeof value6 == "string"), value6));
  this.legendColor =
    ((value7 = idwcf.getProperty(source, "legendColor", null)),
    value7 == null
      ? null
      : (jb.checkCriticalType_0(typeof value7 == "string"), value7));
  this.is3d =
    ((value_0 = idwcf.getProperty(source, "is3d", false)),
    value_0 != null &&
      (jb.checkCriticalType_0(typeof value_0 == "boolean"),
      jb.asBoolean(value_0)));
};
idwcawp.lambda$1_6 = function lambda$1_6(axisMap_0, axes_1, axis_2, i_3) {
  return ju.$put_2(axisMap_0, jb.$getAt(axes_1, i_3), axis_2);
};
idwcawp.lambda$2_11 = function lambda$2_11(axisMap_0, seriesSource_1) {
  return instanceOf(seriesSource_1, 180)
    ? castTo(seriesSource_1, 180)
    : new idwcawp.JsSeriesDescriptor_0(seriesSource_1, axisMap_0);
};
defineClass(
  158,
  1,
  { 158: 1 },
  idwcawp.JsChartDescriptor,
  idwcawp.JsChartDescriptor_0
);
_.colspan = 0;
_.is3d = false;
_.rowspan = 0;
_.showLegend = false;
cggl.Lio_deephaven_web_client_api_widget_plot_JsChartDescriptor_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsChartDescriptor",
    158
  );
idwcawp.$getClass_426 = function $getClass_426() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsChartDescriptor$lambda$0$Type =
  function JsChartDescriptor$lambda$0$Type() {};
defineClass(1502, $wnd.Function, {}, idwcawp.JsChartDescriptor$lambda$0$Type);
_.onInvoke = function onInvoke_255(arg0, arg1, arg2) {
  return instanceOf(arg0, 100)
    ? castTo(arg0, 100)
    : new idwcawp.JsAxisDescriptor_0(arg0);
};
idwcawp.$getClass_427 = function $getClass_427() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsChartDescriptor$lambda$1$Type =
  function JsChartDescriptor$lambda$1$Type(axisMap_0, axes_1) {
    this.axisMap_0 = axisMap_0;
    this.axes_1 = axes_1;
  };
defineClass(1503, $wnd.Function, {}, idwcawp.JsChartDescriptor$lambda$1$Type);
_.onInvoke = function onInvoke_256(arg0, arg1, arg2) {
  return idwcawp.lambda$1_6(
    this.axisMap_0,
    this.axes_1,
    castTo(arg0, 100),
    arg1
  );
};
idwcawp.$getClass_428 = function $getClass_428() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsChartDescriptor$lambda$2$Type =
  function JsChartDescriptor$lambda$2$Type(axisMap_0) {
    this.axisMap_0 = axisMap_0;
  };
defineClass(1504, $wnd.Function, {}, idwcawp.JsChartDescriptor$lambda$2$Type);
_.onInvoke = function onInvoke_257(arg0, arg1, arg2) {
  return idwcawp.lambda$2_11(this.axisMap_0, arg0);
};
idwcawp.$$init_42 = function $$init_42(this$static) {
  this$static.downsampled = new ju.HashMap();
  this$static.activeFigureSubscriptions = new ju.HashMap();
};
idwcawp.$canDownsampleSeries = function $canDownsampleSeries(series) {
  var plotStyle;
  if (idwcawp.$getShapesVisible(series) == (jl.$clinit_Boolean(), TRUE)) {
    return false;
  }
  plotStyle = series.descriptor.getPlotStyle();
  if (
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.BAR ||
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.STACKED_BAR ||
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.PIE
  ) {
    return false;
  } else if (
    plotStyle ==
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
      .SeriesPlotStyle.SCATTER
  ) {
    return false;
  } else if (
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.LINE ||
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.AREA ||
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.STACKED_AREA ||
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.HISTOGRAM ||
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.OHLC ||
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.STEP ||
    plotStyle ==
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SeriesPlotStyle.ERROR_BAR
  ) {
    return true;
  }
  return false;
};
idwcawp.$downsampleFailed = function $downsampleFailed(
  this$static,
  message,
  series,
  tableSize
) {
  var failInit;
  failInit = jb.emptyObjectLiteral();
  failInit.detail = jb.of_8(
    "series",
    series,
    "message",
    message,
    "size",
    tableSize
  );
  idwca.$fireEvent_0(
    this$static,
    "downsamplefailed",
    new $wnd.CustomEvent("downsamplefailed", failInit)
  );
};
idwcawp.$downsampleNeeded = function $downsampleNeeded(
  this$static,
  message,
  series,
  tableSize
) {
  var failInit;
  failInit = jb.emptyObjectLiteral();
  failInit.detail = jb.of_8(
    "series",
    series,
    "message",
    message,
    "size",
    tableSize
  );
  idwca.$fireEvent_0(
    this$static,
    "downsampleneeded",
    new $wnd.CustomEvent("downsampleneeded", failInit)
  );
};
idwcawp.$enqueueSubscriptionCheck = function $enqueueSubscriptionCheck(
  this$static
) {
  var table, table$array, table$index, table$max;
  if (!this$static.subCheckEnqueued) {
    for (
      table$array = this$static.tables,
        table$index = 0,
        table$max = table$array.length;
      table$index < table$max;
      ++table$index
    ) {
      table = table$array[table$index];
      if (!table.currentState) {
        throw toJs(
          new jl.IllegalStateException_0(
            "Cannot subscribe, at least one table is disconnected"
          )
        );
      }
    }
    this$static.subCheckEnqueued = true;
    idwcf.runLater(
      makeLambdaFunction(
        idwcawp.JsFigure$16methodref$updateSubscriptions$Type.prototype.run,
        idwcawp.JsFigure$16methodref$updateSubscriptions$Type,
        [this$static]
      )
    );
  }
};
idwcawp.$groupByAxisRange = function $groupByAxisRange(this$static, s) {
  var downsampledAxisDetails, i, source;
  if (s.downsample == (idwcawp.$clinit_DownsampleOptions(), idwcawp.DISABLE)) {
    return null;
  }
  if (!idwcawp.$canDownsampleSeries(s)) {
    return null;
  }
  for (i = 0; i < s.sources_0.length; i++) {
    source = s.sources_0[i];
    if (!jl.$equals_12(source.columnType_0, "java.time.Instant")) {
      continue;
    }
    downsampledAxisDetails = castTo(
      ju.$get_16(this$static.downsampled, source.axis_0.axis_0),
      198
    );
    if (!downsampledAxisDetails) {
      continue;
    }
    return new idwcawp.JsFigure$AxisRange(
      source.sourceDescriptor.getColumnName(),
      downsampledAxisDetails.min_0,
      downsampledAxisDetails.max_0
    );
  }
  return null;
};
idwcawp.$lambda$1_8 = function $lambda$1_8(this$static, response_0) {
  this$static.descriptor =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.deserializeBinary(
      response_0.getData_asU8()
    );
  this$static.charts_0 = castTo(
    jus.$toArray_6(
      jus.$map_0(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(
            jb.$asList(this$static.descriptor.getChartsList()),
            16
          )
        ),
        new idwcawp.JsFigure$lambda$2$Type(this$static)
      ),
      new idwcawp.JsFigure$6methodref$lambda$3$Type()
    ),
    970
  );
  $wnd.Object.freeze(this$static.charts_0);
  this$static.errors_0 = castToJsArray(
    $wnd.Object.freeze(this$static.descriptor.getErrorsList().slice())
  );
  return this$static.tableFetch.fetch_3(this$static, response_0);
};
idwcawp.$lambda$10_2 = function $lambda$10_2(this$static, err_0) {
  var fetchError, init;
  fetchError = new idwcawp.JsFigure$FigureFetchError(
    idwcf.ofObject(err_0),
    this$static.descriptor != null
      ? this$static.descriptor.getErrorsList()
      : new $wnd.Array()
  );
  init = jb.emptyObjectLiteral();
  init.detail = fetchError;
  this$static.suppress = false;
  idwca.$fireEvent_0(
    this$static,
    "reconnectfailed",
    new $wnd.CustomEvent("reconnectfailed", init)
  );
  this$static.suppress = true;
  return $wnd.Promise.reject(fetchError);
};
idwcawp.$lambda$14_4 = function $lambda$14_4(this$static) {
  this$static.suppress = false;
  idwca.$fireEvent_1(this$static, "reconnect", jb.emptyObjectLiteral());
  idwcawp.$enqueueSubscriptionCheck(this$static);
  return null;
};
idwcawp.$lambda$15 = function $lambda$15(this$static, failure_0) {
  var init;
  init = jb.emptyObjectLiteral();
  init.detail = failure_0;
  this$static.suppress = false;
  idwca.$fireEvent_0(
    this$static,
    "reconnectfailed",
    new $wnd.CustomEvent("reconnectfailed", init)
  );
  this$static.suppress = true;
  return null;
};
idwcawp.$lambda$2_3 = function $lambda$2_3(this$static, chartDescriptor_0) {
  return new idwcawp.JsChart(chartDescriptor_0, this$static);
};
idwcawp.$lambda$28 = function $lambda$28(this$static, outerEntry_0) {
  var mapping, table;
  table = castTo(outerEntry_0.getKey(), 13);
  mapping = castTo(outerEntry_0.getValue_0(), 30);
  return jus.$map_0(
    mapping.entrySet_0().stream_0(),
    new idwcawp.JsFigure$lambda$29$Type(this$static, table)
  );
};
idwcawp.$lambda$29 = function $lambda$29(this$static, table_1, innerEntry_1) {
  var params, range;
  range = castTo(innerEntry_1.getKey(), 242);
  params = castTo(innerEntry_1.getValue_0(), 152);
  return new idwcawp.FigureSubscription(
    this$static,
    table_1,
    range,
    !range ? null : params,
    new ju.HashSet_1(new ju.Arrays$ArrayList(params.series_0))
  );
};
idwcawp.$lambda$32_0 = function $lambda$32_0(this$static, s_0) {
  var table;
  table = idwcawp.$tableForSeries(this$static, s_0);
  jus.$forEach_6(
    ju.stream_4(s_0.sources_0),
    new idwcawp.JsFigure$lambda$33$Type(table)
  );
};
idwcawp.$lambda$33_1 = function $lambda$33_1(table_1, source_1) {
  var e;
  try {
    idwca.$findColumn(table_1, source_1.sourceDescriptor.getColumnName());
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 119)) {
      e = $e0;
      throw toJs(
        new idwcawp.JsFigure$FigureSourceException(
          table_1,
          source_1,
          jl.$toString_1(e, e.detailMessage)
        )
      );
    } else throw toJs($e0);
  }
};
idwcawp.$lambda$4_5 = function $lambda$4_5(this$static, tableFetchData_0) {
  var i, i0, partitionedTable, table;
  this$static.tables = tableFetchData_0.tables;
  this$static.partitionedTables = tableFetchData_0.jsPartitionedTables;
  this$static.onClose = tableFetchData_0.onClose;
  for (i0 = 0; i0 < this$static.tables.length; i0++) {
    table = this$static.tables[i0];
    idwcawp.$registerTableWithId(
      this$static,
      table,
      $wnd.Array.of(ji.uncheckedCast(i0))
    );
  }
  for (i = 0; i < this$static.partitionedTables.length; i++) {
    partitionedTable = this$static.partitionedTables[i];
    idwcawp.$registerPartitionedTableWithId(
      this$static,
      partitionedTable,
      $wnd.Array.of(ji.uncheckedCast(i))
    );
  }
  jus.$forEach_6(
    jus.$flatMap(
      ju.stream_4(this$static.charts_0),
      new idwcawp.JsFigure$lambda$5$Type()
    ),
    new idwcawp.JsFigure$lambda$6$Type(this$static)
  );
  jus.$forEach_6(
    jus.$flatMap(
      ju.stream_4(this$static.charts_0),
      new idwcawp.JsFigure$lambda$7$Type()
    ),
    new idwcawp.JsFigure$lambda$8$Type(this$static)
  );
  return null;
};
idwcawp.$lambda$6_6 = function $lambda$6_6(this$static, s_0) {
  idwcawp.$initSources_0(
    s_0,
    this$static.plotHandlesToTables,
    this$static.plotHandlesToPartitionedTables
  );
};
idwcawp.$lambda$8_1 = function $lambda$8_1(this$static, s_0) {
  idwcawp.$initSources(s_0, this$static.plotHandlesToPartitionedTables);
};
idwcawp.$lambda$9_3 = function $lambda$9_3(this$static) {
  this$static.suppress = false;
  idwca.$fireEvent_1(this$static, "reconnect", jb.emptyObjectLiteral());
  return $wnd.Promise.resolve(this$static);
};
idwcawp.$makeParamsForSeries = function $makeParamsForSeries(this$static, s) {
  var downsampledAxisDetails, i, pixels, source, yCols;
  yCols = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    0,
    6,
    1
  );
  pixels = 0;
  for (i = 0; i < s.sources_0.length; i++) {
    source = s.sources_0[i];
    downsampledAxisDetails = source.axis_0
      ? castTo(ju.$get_16(this$static.downsampled, source.axis_0.axis_0), 198)
      : null;
    !downsampledAxisDetails
      ? (yCols[yCols.length] = source.sourceDescriptor.getColumnName())
      : (pixels = downsampledAxisDetails.pixels);
  }
  return new idwcawp.JsFigure$DownsampleParams(
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit,
        1
      ),
      $intern_63,
      59,
      0,
      [s]
    ),
    yCols,
    pixels
  );
};
idwcawp.$refetch_1 = function $refetch_1(this$static) {
  this$static.plotHandlesToTables = new ju.HashMap();
  this$static.plotHandlesToPartitionedTables = new ju.HashMap();
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcawp.JsFigure$5methodref$fetch$Type(this$static.fetch_0)]
    )
  )
    .then(
      makeLambdaFunction(
        idwcawp.JsFigure$lambda$1$Type.prototype.onInvoke_5,
        idwcawp.JsFigure$lambda$1$Type,
        [this$static]
      )
    )
    .then(
      makeLambdaFunction(
        idwcawp.JsFigure$lambda$4$Type.prototype.onInvoke_5,
        idwcawp.JsFigure$lambda$4$Type,
        [this$static]
      )
    )
    .then(
      makeLambdaFunction(
        idwcawp.JsFigure$lambda$9$Type.prototype.onInvoke_5,
        idwcawp.JsFigure$lambda$9$Type,
        [this$static]
      ),
      makeLambdaFunction(
        idwcawp.JsFigure$lambda$10$Type.prototype.onInvoke_5,
        idwcawp.JsFigure$lambda$10$Type,
        [this$static]
      )
    );
};
idwcawp.$registerPartitionedTableWithId =
  function $registerPartitionedTableWithId(
    this$static,
    partitionedTable,
    plotTableHandles
  ) {
    var j;
    if (!partitionedTable) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    for (j = 0; j < plotTableHandles.length; j++) {
      ju.$put_2(
        this$static.plotHandlesToPartitionedTables,
        jl.valueOf_29(
          round_int(
            jl.$doubleValue(castToDouble(jb.$getAt(plotTableHandles, j)))
          )
        ),
        partitionedTable
      );
    }
  };
idwcawp.$registerTable = function $registerTable(this$static, table) {
  var id_0;
  id_0 = ju.$size_1(this$static.plotHandlesToTables);
  idwcawp.$registerTableWithId(
    this$static,
    table,
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.D_classLit, 1),
      $intern_31,
      18,
      15,
      [id_0]
    )
  );
  return id_0;
};
idwcawp.$registerTableWithId = function $registerTableWithId(
  this$static,
  table,
  plotTableHandles
) {
  var j;
  if (!table) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  for (j = 0; j < plotTableHandles.length; j++) {
    ju.$put_2(
      this$static.plotHandlesToTables,
      jl.valueOf_29(
        round_int(jl.$doubleValue(castToDouble(jb.$getAt(plotTableHandles, j))))
      ),
      table
    );
  }
};
idwcawp.$tableForSeries = function $tableForSeries(this$static, s) {
  if (s.oneClick_0) {
    return s.oneClick_0.currentTable;
  }
  return castTo(
    ju.$get_16(
      this$static.plotHandlesToTables,
      jl.valueOf_29(
        castToNative(
          jb.$getAt(s.descriptor.getDataSourcesList(), 0),
          $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
            .SourceDescriptor
        ).getTableId()
      )
    ),
    13
  );
};
idwcawp.$unsubscribe_0 = function $unsubscribe_0(this$static) {
  jus.$forEach_6(
    jus.$flatMap(
      ju.stream_4(this$static.charts_0),
      new idwcawp.JsFigure$lambda$18$Type()
    ),
    new idwcawp.JsFigure$9methodref$markUnsubscribed$Type()
  );
  jl.$forEach_2(
    new ju.AbstractMap$1(this$static.activeFigureSubscriptions),
    new idwcawp.JsFigure$10methodref$unsubscribe$Type()
  );
  ju.$reset(this$static.activeFigureSubscriptions);
};
idwcawp.$updateDownsampleRange = function $updateDownsampleRange(
  this$static,
  axis_0,
  pixels,
  min_0,
  max_0
) {
  if (!pixels) {
    ju.$remove_0(this$static.downsampled, axis_0);
  } else {
    if (
      axis_0.getLog() ||
      axis_0.getType() !=
        $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
          .AxisDescriptor.AxisType.X ||
      axis_0.getInvert()
    ) {
      return;
    }
    ju.$put_2(
      this$static.downsampled,
      axis_0,
      new idwcawp.JsFigure$DownsampledAxisDetails(pixels.value_0, min_0, max_0)
    );
  }
  idwcawp.$enqueueSubscriptionCheck(this$static);
};
idwcawp.$updateSubscriptions = function $updateSubscriptions(this$static) {
  var downsampleMappings,
    entry,
    newSubscription,
    newSubscription$iterator,
    newSubscriptions,
    outerIter,
    unseen,
    unseenSub,
    unseenSub$iterator;
  this$static.subCheckEnqueued = false;
  downsampleMappings = castTo(
    jus.$collect_1(
      jus.$filter_1(
        jus.$filter_1(
          jus.$flatMap(
            ju.stream_4(this$static.charts_0),
            new idwcawp.JsFigure$lambda$21$Type()
          ),
          new idwcawp.JsFigure$11methodref$isSubscribed$Type()
        ),
        new idwcawp.JsFigure$lambda$23$Type()
      ),
      jus.groupingBy_0(
        new idwcawp.JsFigure$12methodref$tableForSeries$Type(this$static),
        jus.groupingBy_0(
          new idwcawp.JsFigure$13methodref$groupByAxisRange$Type(this$static),
          jus.reducing(
            (idwcawp.$clinit_JsFigure$DownsampleParams(), idwcawp.EMPTY_0),
            new idwcawp.JsFigure$14methodref$makeParamsForSeries$Type(
              this$static
            ),
            new idwcawp.JsFigure$15methodref$merge$Type()
          )
        )
      )
    ),
    30
  );
  newSubscriptions = castTo(
    jus.$collect_1(
      jus.$flatMap(
        downsampleMappings.entrySet_0().stream_0(),
        new idwcawp.JsFigure$lambda$28$Type(this$static)
      ),
      jus.of_3(
        new jus.Collectors$23methodref$ctor$Type(),
        new jus.Collectors$24methodref$add$Type(),
        new jus.Collectors$lambda$50$Type(),
        new jus.Collectors$lambda$51$Type(),
        stampJavaTypeInfo(
          getClassLiteralForArray(
            cggl.Ljava_util_stream_Collector$Characteristics_2_classLit,
            1
          ),
          $intern_17,
          48,
          0,
          [
            (jus.$clinit_Collector$Characteristics(), jus.UNORDERED),
            jus.IDENTITY_FINISH,
          ]
        )
      )
    ),
    81
  );
  unseen = new ju.HashSet_1(
    new ju.AbstractMap$2(this$static.activeFigureSubscriptions)
  );
  for (
    newSubscription$iterator = newSubscriptions.iterator_0();
    newSubscription$iterator.hasNext_1();

  ) {
    newSubscription = castTo(newSubscription$iterator.next_1(), 130);
    if (
      ju.$containsKey(this$static.activeFigureSubscriptions, newSubscription)
    ) {
      idwcawp.$replaceSeries(
        castTo(
          ju.$get_16(this$static.activeFigureSubscriptions, newSubscription),
          130
        ),
        (ju.$clinit_Collections(),
        new ju.Collections$UnmodifiableSet(newSubscription.includedSeries))
      );
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "Saw same subscription again",
          ju.$get_16(this$static.activeFigureSubscriptions, newSubscription),
        ]
      );
      unseen.map_0.remove(newSubscription) != null;
    } else {
      ju.$put_2(
        this$static.activeFigureSubscriptions,
        newSubscription,
        newSubscription
      );
      idwcawp.$subscribe_0(newSubscription);
    }
  }
  for (
    unseenSub$iterator =
      ((outerIter = new ju.AbstractMap$1(unseen.map_0).this$01
        .entrySet_0()
        .iterator_0()),
      new ju.AbstractMap$1$1(outerIter));
    unseenSub$iterator.val$outerIter2.hasNext_1();

  ) {
    unseenSub =
      ((entry = castTo(unseenSub$iterator.val$outerIter2.next_1(), 27)),
      castTo(entry.getKey(), 130));
    idwcawp.$unsubscribe(unseenSub);
    ju.$remove_0(this$static.activeFigureSubscriptions, unseenSub);
  }
};
idwcawp.$verifyTables = function $verifyTables(this$static) {
  jus.$forEach_6(
    jus.$flatMap(
      ju.stream_4(this$static.charts_0),
      new idwcawp.JsFigure$lambda$31$Type()
    ),
    new idwcawp.JsFigure$lambda$32$Type(this$static)
  );
};
idwcawp.JsFigure = function JsFigure(connection, fetch_0) {
  idwcawp.JsFigure_0.call(
    this,
    fetch_0,
    new idwcawp.JsFigure$DefaultFigureTableFetch(connection)
  );
};
idwcawp.JsFigure_0 = function JsFigure_0(fetch_0, tableFetch) {
  idwcal.HasLifecycle.call(this);
  idwcawp.$$init_42(this);
  this.fetch_0 = fetch_0;
  this.tableFetch = tableFetch;
};
idwcawp.lambda$17_1 = function lambda$17_1(forceDisableDownsample_0, s_1) {
  idwcawp.$subscribe_2(s_1, forceDisableDownsample_0);
};
idwcawp.lambda$23_1 = function lambda$23_1(series_0) {
  return (
    !series_0.oneClick_0 ||
    (idwcawp.$allRequiredValuesSet(series_0.oneClick_0) &&
      !!series_0.oneClick_0.currentTable)
  );
};
defineClass(241, 51, $intern_39, idwcawp.JsFigure, idwcawp.JsFigure_0);
_.close = function close_8() {
  idwcawp.$unsubscribe_0(this);
  !!this.onClose && idwcawp.$close_4(this.onClose, this);
  this.tables != null &&
    jus.$forEach_6(
      jus.$filter_1(
        ju.stream_4(this.tables),
        new idwcawp.JsFigure$lambda$34$Type()
      ),
      new idwcawp.JsFigure$17methodref$close$Type()
    );
  this.partitionedTables != null &&
    jus.$forEach_6(
      ju.stream_4(this.partitionedTables),
      new idwcawp.JsFigure$18methodref$close$Type()
    );
};
defineProperties(_, {
  charts: {
    get: function getCharts() {
      return this.charts_0;
    },
  },
});
defineProperties(_, {
  cols: {
    get: function getCols() {
      return this.descriptor.getCols();
    },
  },
});
defineProperties(_, {
  errors: {
    get: function getErrors() {
      return this.errors_0;
    },
  },
});
defineProperties(_, {
  rows: {
    get: function getRows_2() {
      return this.descriptor.getRows();
    },
  },
});
defineProperties(_, {
  title: {
    get: function getTitle_1() {
      if (this.descriptor.hasTitle()) {
        return this.descriptor.getTitle();
      }
      return null;
    },
  },
});
defineProperties(_, {
  titleColor: {
    get: function getTitleColor_0() {
      return this.descriptor.getTitleColor();
    },
  },
});
defineProperties(_, {
  titleFont: {
    get: function getTitleFont_0() {
      return this.descriptor.getTitleFont();
    },
  },
});
defineProperties(_, {
  updateInterval: {
    get: function getUpdateInterval() {
      return toDouble_0(
        jl.__parseAndValidateLong(this.descriptor.getUpdateInterval())
      );
    },
  },
});
_.reconnect = function reconnect_1() {
  $wnd.Promise.all(
    castToJsArray(
      jus
        .concat(ju.stream_4(this.tables), ju.stream_4(this.partitionedTables))
        .map_1(new idwcawp.JsFigure$7methodref$nextReconnect$Type())
        .toArray_1(new idwcawp.JsFigure$8methodref$lambda$12$Type())
    )
  )
    .then(
      makeLambdaFunction(
        idwcawp.JsFigure$lambda$13$Type.prototype.onInvoke_5,
        idwcawp.JsFigure$lambda$13$Type,
        [this]
      )
    )
    .then(
      makeLambdaFunction(
        idwcawp.JsFigure$lambda$14$Type.prototype.onInvoke_5,
        idwcawp.JsFigure$lambda$14$Type,
        [this]
      ),
      makeLambdaFunction(
        idwcawp.JsFigure$lambda$15$Type.prototype.onInvoke_5,
        idwcawp.JsFigure$lambda$15$Type,
        [this]
      )
    );
};
_.refetch = function refetch_2() {
  return idwcawp.$refetch_1(this);
};
_.subscribe = function subscribe_0(forceDisableDownsample) {
  jus.$forEach_6(
    jus.$flatMap(
      ju.stream_4(this.charts_0),
      new idwcawp.JsFigure$lambda$16$Type()
    ),
    new idwcawp.JsFigure$lambda$17$Type(forceDisableDownsample)
  );
};
_.unsubscribe = function unsubscribe() {
  idwcawp.$unsubscribe_0(this);
};
_.subCheckEnqueued = false;
idwcawp.EVENT_DISCONNECT_5 = "disconnect";
idwcawp.EVENT_DOWNSAMPLEFAILED = "downsamplefailed";
idwcawp.EVENT_DOWNSAMPLEFINISHED = "downsamplefinished";
idwcawp.EVENT_DOWNSAMPLENEEDED = "downsampleneeded";
idwcawp.EVENT_DOWNSAMPLESTARTED = "downsamplestarted";
idwcawp.EVENT_RECONNECT_5 = "reconnect";
idwcawp.EVENT_RECONNECTFAILED_3 = "reconnectfailed";
idwcawp.EVENT_SERIES_ADDED_0 = "seriesadded";
idwcawp.EVENT_UPDATED_2 = "updated";
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure_2_classLit =
  createForClass("io.deephaven.web.client.api.widget.plot", "JsFigure", 241);
idwcawp.JsFigure$10methodref$unsubscribe$Type =
  function JsFigure$10methodref$unsubscribe$Type() {};
defineClass(487, 1, $intern_19, idwcawp.JsFigure$10methodref$unsubscribe$Type);
_.accept = function accept_70(arg0) {
  idwcawp.$unsubscribe(castTo(arg0, 130));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$10methodref$unsubscribe$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/10methodref$unsubscribe$Type",
    487
  );
idwcawp.JsFigure$11methodref$isSubscribed$Type =
  function JsFigure$11methodref$isSubscribed$Type() {};
defineClass(489, 1, {}, idwcawp.JsFigure$11methodref$isSubscribed$Type);
_.test_0 = function test_20(arg0) {
  return castTo(arg0, 59).subscribed;
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$11methodref$isSubscribed$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/11methodref$isSubscribed$Type",
    489
  );
idwcawp.JsFigure$12methodref$tableForSeries$Type =
  function JsFigure$12methodref$tableForSeries$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(491, 1, {}, idwcawp.JsFigure$12methodref$tableForSeries$Type);
_.apply_1 = function apply_190(arg0) {
  return idwcawp.$tableForSeries(this.$$outer_0, castTo(arg0, 59));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$12methodref$tableForSeries$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/12methodref$tableForSeries$Type",
    491
  );
idwcawp.JsFigure$13methodref$groupByAxisRange$Type =
  function JsFigure$13methodref$groupByAxisRange$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(492, 1, {}, idwcawp.JsFigure$13methodref$groupByAxisRange$Type);
_.apply_1 = function apply_191(arg0) {
  return idwcawp.$groupByAxisRange(this.$$outer_0, castTo(arg0, 59));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$13methodref$groupByAxisRange$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/13methodref$groupByAxisRange$Type",
    492
  );
idwcawp.$apply_8 = function $apply_8(this$static, arg0) {
  return idwcawp.$makeParamsForSeries(this$static.$$outer_0, castTo(arg0, 59));
};
idwcawp.JsFigure$14methodref$makeParamsForSeries$Type =
  function JsFigure$14methodref$makeParamsForSeries$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(493, 1, {}, idwcawp.JsFigure$14methodref$makeParamsForSeries$Type);
_.apply_1 = function apply_192(arg0) {
  return idwcawp.$apply_8(this, arg0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$14methodref$makeParamsForSeries$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/14methodref$makeParamsForSeries$Type",
    493
  );
idwcawp.$apply_9 = function $apply_9(arg0, arg1) {
  return idwcawp.$merge_0(castTo(arg0, 152), castTo(arg1, 152));
};
idwcawp.JsFigure$15methodref$merge$Type =
  function JsFigure$15methodref$merge$Type() {};
defineClass(494, 1, {}, idwcawp.JsFigure$15methodref$merge$Type);
_.apply_4 = function apply_193(arg0, arg1) {
  return idwcawp.$apply_9(arg0, arg1);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$15methodref$merge$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/15methodref$merge$Type",
    494
  );
idwcawp.$getClass_429 = function $getClass_429() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$16methodref$updateSubscriptions$Type =
  function JsFigure$16methodref$updateSubscriptions$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1197,
  $wnd.Function,
  $intern_49,
  idwcawp.JsFigure$16methodref$updateSubscriptions$Type
);
_.run = function run_30() {
  idwcawp.$updateSubscriptions(this.$$outer_0);
};
idwcawp.JsFigure$17methodref$close$Type =
  function JsFigure$17methodref$close$Type() {};
defineClass(499, 1, $intern_19, idwcawp.JsFigure$17methodref$close$Type);
_.accept = function accept_71(arg0) {
  idwca.$close_0(castTo(arg0, 13));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$17methodref$close$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/17methodref$close$Type",
    499
  );
idwcawp.JsFigure$18methodref$close$Type =
  function JsFigure$18methodref$close$Type() {};
defineClass(500, 1, $intern_19, idwcawp.JsFigure$18methodref$close$Type);
_.accept = function accept_72(arg0) {
  idwca.$close(castTo(arg0, 99));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$18methodref$close$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/18methodref$close$Type",
    500
  );
idwcawp.JsFigure$5methodref$fetch$Type =
  function JsFigure$5methodref$fetch$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(474, 1, $intern_19, idwcawp.JsFigure$5methodref$fetch$Type);
_.accept = function accept_73(arg0) {
  this.$$outer_0.fetch_2(castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$5methodref$fetch$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/5methodref$fetch$Type",
    474
  );
idwcawp.JsFigure$6methodref$lambda$3$Type =
  function JsFigure$6methodref$lambda$3$Type() {};
defineClass(476, 1, {}, idwcawp.JsFigure$6methodref$lambda$3$Type);
_.apply_2 = function apply_194(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_widget_plot_JsChart_2_classLit,
    { 970: 1, 3: 1, 5: 1 },
    116,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$6methodref$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/6methodref$lambda$3$Type",
    476
  );
idwcawp.JsFigure$7methodref$nextReconnect$Type =
  function JsFigure$7methodref$nextReconnect$Type() {};
defineClass(481, 1, {}, idwcawp.JsFigure$7methodref$nextReconnect$Type);
_.apply_1 = function apply_195(arg0) {
  return idwcal.$nextReconnect(castTo(arg0, 51));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$7methodref$nextReconnect$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/7methodref$nextReconnect$Type",
    481
  );
idwcawp.JsFigure$8methodref$lambda$12$Type =
  function JsFigure$8methodref$lambda$12$Type() {};
defineClass(482, 1, {}, idwcawp.JsFigure$8methodref$lambda$12$Type);
_.apply_2 = function apply_196(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$8methodref$lambda$12$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/8methodref$lambda$12$Type",
    482
  );
idwcawp.JsFigure$9methodref$markUnsubscribed$Type =
  function JsFigure$9methodref$markUnsubscribed$Type() {};
defineClass(
  486,
  1,
  $intern_19,
  idwcawp.JsFigure$9methodref$markUnsubscribed$Type
);
_.accept = function accept_74(arg0) {
  castTo(arg0, 59).subscribed = false;
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$9methodref$markUnsubscribed$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/9methodref$markUnsubscribed$Type",
    486
  );
idwcawp.$getClass_430 = function $getClass_430() {
  return cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$AxisRange_2_classLit;
};
idwcawp.$hashCode_3 = function $hashCode_3(this$static) {
  var result;
  result = ji.getHashCode_2(this$static.xCol);
  result =
    31 * result + (this$static.min_0 ? toInt_0(this$static.min_0.value_0) : 0);
  result =
    31 * result + (this$static.max_0 ? toInt_0(this$static.max_0.value_0) : 0);
  return result;
};
idwcawp.JsFigure$AxisRange = function JsFigure$AxisRange(xCol, min_0, max_0) {
  this.xCol = xCol;
  this.min_0 = min_0;
  this.max_0 = max_0;
};
defineClass(242, 1, { 242: 1 }, idwcawp.JsFigure$AxisRange);
_.equals_0 = function equals_10(o) {
  var axisRange;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$AxisRange_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  axisRange = castTo(o, 242);
  if (!jl.$equals_12(this.xCol, axisRange.xCol)) return false;
  if (
    this.min_0 ? !jl.$equals_11(this.min_0, axisRange.min_0) : !!axisRange.min_0
  )
    return false;
  return this.max_0
    ? jl.$equals_11(this.max_0, axisRange.max_0)
    : !axisRange.max_0;
};
_.hashCode_1 = function hashCode_11() {
  return idwcawp.$hashCode_3(this);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$AxisRange_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/AxisRange",
    242
  );
idwcawp.$lambda$0_10 = function $lambda$0_10(this$static, ticket_1, c_1) {
  this$static.connection.tableServiceClient.getExportedTableCreationResponse(
    ticket_1.getTicket(),
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwcawp.JsFigure$DefaultFigureTableFetch$4methodref$apply$Type.prototype
        .onInvoke_50,
      idwcawp.JsFigure$DefaultFigureTableFetch$4methodref$apply$Type,
      [c_1]
    )
  );
};
idwcawp.$lambda$2_4 = function $lambda$2_4(
  this$static,
  tables_1,
  tableIndex_2,
  etcr_2
) {
  var cts, table;
  cts = idwca.$newStateFromUnsolicitedTable(
    this$static.connection,
    etcr_2,
    "table for figure"
  );
  table = new idwca.JsTable_0(this$static.connection, cts);
  tables_1[tableIndex_2] = table;
  return $wnd.Promise.resolve(table);
};
idwcawp.$lambda$3_4 = function $lambda$3_4(
  this$static,
  figure_1,
  tables_2,
  partitionedTables_3
) {
  idwca.$registerSimpleReconnectable(this$static.connection, figure_1);
  return $wnd.Promise.resolve(
    new idwcawp.JsFigure$FigureTableFetchData_0(
      tables_2,
      partitionedTables_3,
      new idwcawp.JsFigure$DefaultFigureTableFetch$lambda$4$Type(this$static)
    )
  );
};
idwcawp.$lambda$4_6 = function $lambda$4_6(this$static, f_0) {
  idwca.$unregisterSimpleReconnectable(this$static.connection, f_0);
};
idwcawp.JsFigure$DefaultFigureTableFetch =
  function JsFigure$DefaultFigureTableFetch(connection) {
    this.connection = connection;
  };
defineClass(467, 1, {}, idwcawp.JsFigure$DefaultFigureTableFetch);
_.fetch_3 = function fetch_27(figure, response) {
  var i,
    nextPartitionedTableIndex,
    nextTableIndex,
    partitionedTable,
    partitionedTableIndex,
    partitionedTables,
    promises,
    tableIndex,
    tables,
    ticket;
  tables = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_JsTable_2_classLit,
    $intern_57,
    13,
    0,
    0,
    1
  );
  partitionedTables = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_JsPartitionedTable_2_classLit,
    $intern_7,
    99,
    0,
    0,
    1
  );
  promises = newArray_0(response.getTypedExportIdsList().length);
  nextTableIndex = 0;
  nextPartitionedTableIndex = 0;
  for (i = 0; i < response.getTypedExportIdsList().length; i++) {
    ticket = castToNative(
      jb.$getAt(response.getTypedExportIdsList(), i),
      $wnd.dhinternal.io.deephaven.proto.ticket_pb.TypedTicket
    );
    if (jl.$equals_12(ticket.getType(), "Table")) {
      tableIndex = nextTableIndex++;
      setCheck(
        promises,
        i,
        new $wnd.Promise(
          makeLambdaFunction(
            idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
            idwca.Callbacks$lambda$4$Type,
            [
              new idwcawp.JsFigure$DefaultFigureTableFetch$lambda$0$Type(
                this,
                ticket
              ),
            ]
          )
        ).then(
          makeLambdaFunction(
            idwcawp.JsFigure$DefaultFigureTableFetch$lambda$2$Type.prototype
              .onInvoke_5,
            idwcawp.JsFigure$DefaultFigureTableFetch$lambda$2$Type,
            [this, tables, tableIndex]
          )
        )
      );
    } else if (jl.$equals_12(ticket.getType(), "PartitionedTable")) {
      partitionedTableIndex = nextPartitionedTableIndex++;
      partitionedTable = new idwca.JsPartitionedTable(
        this.connection,
        new idwcaw.JsWidget(this.connection, ticket)
      );
      partitionedTables[partitionedTableIndex] = partitionedTable;
      setCheck(promises, i, idwca.$refetch(partitionedTable));
    } else {
      throw toJs(
        new jl.IllegalStateException_0(
          "Ticket type not recognized in a Figure: " + ticket.getType()
        )
      );
    }
  }
  return $wnd.Promise.all(promises).then(
    makeLambdaFunction(
      idwcawp.JsFigure$DefaultFigureTableFetch$lambda$3$Type.prototype
        .onInvoke_5,
      idwcawp.JsFigure$DefaultFigureTableFetch$lambda$3$Type,
      [this, figure, tables, partitionedTables]
    )
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DefaultFigureTableFetch_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DefaultFigureTableFetch",
    467
  );
idwcawp.$getClass_431 = function $getClass_431() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$DefaultFigureTableFetch$4methodref$apply$Type =
  function JsFigure$DefaultFigureTableFetch$4methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1200,
  $wnd.Function,
  {},
  idwcawp.JsFigure$DefaultFigureTableFetch$4methodref$apply$Type
);
_.onInvoke_50 = function onInvoke_258(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwcawp.JsFigure$DefaultFigureTableFetch$lambda$0$Type =
  function JsFigure$DefaultFigureTableFetch$lambda$0$Type($$outer_0, ticket_1) {
    this.$$outer_0 = $$outer_0;
    this.ticket_1 = ticket_1;
  };
defineClass(
  472,
  1,
  $intern_19,
  idwcawp.JsFigure$DefaultFigureTableFetch$lambda$0$Type
);
_.accept = function accept_75(arg0) {
  idwcawp.$lambda$0_10(this.$$outer_0, this.ticket_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DefaultFigureTableFetch$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DefaultFigureTableFetch/lambda$0$Type",
    472
  );
idwcawp.$getClass_432 = function $getClass_432() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$DefaultFigureTableFetch$lambda$2$Type =
  function JsFigure$DefaultFigureTableFetch$lambda$2$Type(
    $$outer_0,
    tables_1,
    tableIndex_2
  ) {
    this.$$outer_0 = $$outer_0;
    this.tables_1 = tables_1;
    this.tableIndex_2 = tableIndex_2;
  };
defineClass(
  1198,
  $wnd.Function,
  $intern_36,
  idwcawp.JsFigure$DefaultFigureTableFetch$lambda$2$Type
);
_.onInvoke_5 = function onInvoke_259(arg0) {
  return idwcawp.$lambda$2_4(
    this.$$outer_0,
    this.tables_1,
    this.tableIndex_2,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableCreationResponse
    )
  );
};
_.tableIndex_2 = 0;
idwcawp.$getClass_433 = function $getClass_433() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$DefaultFigureTableFetch$lambda$3$Type =
  function JsFigure$DefaultFigureTableFetch$lambda$3$Type(
    $$outer_0,
    figure_1,
    tables_2,
    partitionedTables_3
  ) {
    this.$$outer_0 = $$outer_0;
    this.figure_1 = figure_1;
    this.tables_2 = tables_2;
    this.partitionedTables_3 = partitionedTables_3;
  };
defineClass(
  1199,
  $wnd.Function,
  $intern_36,
  idwcawp.JsFigure$DefaultFigureTableFetch$lambda$3$Type
);
_.onInvoke_5 = function onInvoke_260(arg0) {
  var lastArg;
  return idwcawp.$lambda$3_4(
    this.$$outer_0,
    this.figure_1,
    this.tables_2,
    ((lastArg = this.partitionedTables_3), castToArray(arg0), lastArg)
  );
};
idwcawp.$close_4 = function $close_4(this$static, figure) {
  idwcawp.$lambda$4_6(this$static.$$outer_0, figure);
};
idwcawp.JsFigure$DefaultFigureTableFetch$lambda$4$Type =
  function JsFigure$DefaultFigureTableFetch$lambda$4$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(473, 1, {}, idwcawp.JsFigure$DefaultFigureTableFetch$lambda$4$Type);
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DefaultFigureTableFetch$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DefaultFigureTableFetch/lambda$4$Type",
    473
  );
idwcawp.$clinit_JsFigure$DownsampleParams =
  function $clinit_JsFigure$DownsampleParams() {
    idwcawp.$clinit_JsFigure$DownsampleParams = emptyMethod;
    idwcawp.EMPTY_0 = new idwcawp.JsFigure$DownsampleParams(
      initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit,
        $intern_63,
        59,
        0,
        0,
        1
      ),
      initUnidimensionalArray(
        cggl.Ljava_lang_String_2_classLit,
        $intern_8,
        2,
        0,
        6,
        1
      ),
      0
    );
  };
idwcawp.$merge_0 = function $merge_0(this$static, other) {
  return new idwcawp.JsFigure$DownsampleParams(
    castTo(
      jus.$toArray_6(
        jus.$distinct_0(
          jus.$flatMap(
            jus.of_5(
              stampJavaTypeInfo(
                getClassLiteralForArray(
                  cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit,
                  2
                ),
                $intern_41,
                107,
                0,
                [this$static.series_0, other.series_0]
              )
            ),
            new idwcawp.JsFigure$DownsampleParams$0methodref$stream$Type()
          )
        ),
        new idwcawp.JsFigure$DownsampleParams$1methodref$lambda$1$Type()
      ),
      107
    ),
    castTo(
      jus.$toArray_6(
        jus.$distinct_0(
          jus.$flatMap(
            jus.of_5(
              stampJavaTypeInfo(
                getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 2),
                $intern_33,
                12,
                0,
                [this$static.yCols, other.yCols]
              )
            ),
            new idwcawp.JsFigure$DownsampleParams$2methodref$stream$Type()
          )
        ),
        new idwcawp.JsFigure$DownsampleParams$3methodref$lambda$3$Type()
      ),
      12
    ),
    $wnd.Math.max(this$static.pixelCount_0, other.pixelCount_0)
  );
};
idwcawp.JsFigure$DownsampleParams = function JsFigure$DownsampleParams(
  series,
  yCols,
  pixelCount
) {
  idwcawp.$clinit_JsFigure$DownsampleParams();
  this.series_0 = series;
  this.yCols = yCols;
  this.pixelCount_0 = pixelCount;
};
defineClass(152, 1, { 152: 1 }, idwcawp.JsFigure$DownsampleParams);
_.pixelCount_0 = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DownsampleParams_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DownsampleParams",
    152
  );
idwcawp.JsFigure$DownsampleParams$0methodref$stream$Type =
  function JsFigure$DownsampleParams$0methodref$stream$Type() {};
defineClass(
  468,
  1,
  {},
  idwcawp.JsFigure$DownsampleParams$0methodref$stream$Type
);
_.apply_1 = function apply_197(arg0) {
  return ju.stream_4(castTo(arg0, 107));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DownsampleParams$0methodref$stream$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DownsampleParams/0methodref$stream$Type",
    468
  );
idwcawp.JsFigure$DownsampleParams$1methodref$lambda$1$Type =
  function JsFigure$DownsampleParams$1methodref$lambda$1$Type() {};
defineClass(
  469,
  1,
  {},
  idwcawp.JsFigure$DownsampleParams$1methodref$lambda$1$Type
);
_.apply_2 = function apply_198(arg0) {
  return (
    idwcawp.$clinit_JsFigure$DownsampleParams(),
    initUnidimensionalArray(
      cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit,
      $intern_63,
      59,
      arg0,
      0,
      1
    )
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DownsampleParams$1methodref$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DownsampleParams/1methodref$lambda$1$Type",
    469
  );
idwcawp.JsFigure$DownsampleParams$2methodref$stream$Type =
  function JsFigure$DownsampleParams$2methodref$stream$Type() {};
defineClass(
  470,
  1,
  {},
  idwcawp.JsFigure$DownsampleParams$2methodref$stream$Type
);
_.apply_1 = function apply_199(arg0) {
  return ju.stream_4(castTo(arg0, 12));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DownsampleParams$2methodref$stream$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DownsampleParams/2methodref$stream$Type",
    470
  );
idwcawp.JsFigure$DownsampleParams$3methodref$lambda$3$Type =
  function JsFigure$DownsampleParams$3methodref$lambda$3$Type() {};
defineClass(
  471,
  1,
  {},
  idwcawp.JsFigure$DownsampleParams$3methodref$lambda$3$Type
);
_.apply_2 = function apply_200(arg0) {
  return (
    idwcawp.$clinit_JsFigure$DownsampleParams(),
    initUnidimensionalArray(
      cggl.Ljava_lang_String_2_classLit,
      $intern_8,
      2,
      arg0,
      6,
      1
    )
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DownsampleParams$3methodref$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DownsampleParams/3methodref$lambda$3$Type",
    471
  );
idwcawp.$getClass_434 = function $getClass_434() {
  return cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DownsampledAxisDetails_2_classLit;
};
idwcawp.JsFigure$DownsampledAxisDetails =
  function JsFigure$DownsampledAxisDetails(pixels, min_0, max_0) {
    this.pixels = pixels;
    this.min_0 = min_0;
    this.max_0 = max_0;
  };
defineClass(198, 1, { 198: 1 }, idwcawp.JsFigure$DownsampledAxisDetails);
_.equals_0 = function equals_11(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DownsampledAxisDetails_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 198);
  if (this.pixels != that.pixels) return false;
  if (this.min_0 ? !jl.$equals_11(this.min_0, that.min_0) : !!that.min_0)
    return false;
  return this.max_0 ? jl.$equals_11(this.max_0, that.max_0) : !that.max_0;
};
_.hashCode_1 = function hashCode_12() {
  var result;
  result = this.pixels;
  result = 31 * result + (this.min_0 ? toInt_0(this.min_0.value_0) : 0);
  result = 31 * result + (this.max_0 ? toInt_0(this.max_0.value_0) : 0);
  return result;
};
_.pixels = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$DownsampledAxisDetails_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/DownsampledAxisDetails",
    198
  );
idwcawp.JsFigure$FigureFetchError = function JsFigure$FigureFetchError(
  error,
  errors
) {
  this.error = error;
  this.errors = errors;
};
defineClass(466, 1, {}, idwcawp.JsFigure$FigureFetchError);
_.toString_0 = function toString_30() {
  return toString_7(this.error);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$FigureFetchError_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/FigureFetchError",
    466
  );
idwcawp.JsFigure$FigureSourceException =
  function JsFigure$FigureSourceException(table, source, message) {
    jl.RuntimeException_1.call(this, message);
    this.table = table;
    this.source = source;
  };
defineClass(
  284,
  26,
  { 284: 1, 3: 1, 41: 1, 26: 1, 25: 1 },
  idwcawp.JsFigure$FigureSourceException
);
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$FigureSourceException_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/FigureSourceException",
    284
  );
idwcawp.JsFigure$FigureTableFetchData = function JsFigure$FigureTableFetchData(
  tables,
  jsPartitionedTables
) {
  idwcawp.JsFigure$FigureTableFetchData_0.call(
    this,
    tables,
    jsPartitionedTables,
    null
  );
};
idwcawp.JsFigure$FigureTableFetchData_0 =
  function JsFigure$FigureTableFetchData_0(
    tables,
    jsPartitionedTables,
    onClose
  ) {
    this.tables = tables;
    this.jsPartitionedTables = jsPartitionedTables;
    this.onClose = onClose;
  };
defineClass(
  199,
  1,
  { 199: 1 },
  idwcawp.JsFigure$FigureTableFetchData,
  idwcawp.JsFigure$FigureTableFetchData_0
);
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$FigureTableFetchData_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/FigureTableFetchData",
    199
  );
idwcawp.$getClass_435 = function $getClass_435() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$lambda$1$Type = function JsFigure$lambda$1$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1190, $wnd.Function, $intern_36, idwcawp.JsFigure$lambda$1$Type);
_.onInvoke_5 = function onInvoke_261(arg0) {
  return idwcawp.$lambda$1_8(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.object_pb.FetchObjectResponse
    )
  );
};
idwcawp.$getClass_436 = function $getClass_436() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$lambda$10$Type = function JsFigure$lambda$10$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1193, $wnd.Function, {}, idwcawp.JsFigure$lambda$10$Type);
_.onInvoke_5 = function onInvoke_262(arg0) {
  return idwcawp.$lambda$10_2(this.$$outer_0, arg0);
};
idwcawp.$getClass_437 = function $getClass_437() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$lambda$13$Type = function JsFigure$lambda$13$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1194, $wnd.Function, $intern_36, idwcawp.JsFigure$lambda$13$Type);
_.onInvoke_5 = function onInvoke_263(arg0) {
  return idwcawp.$verifyTables(this.$$outer_0), null;
};
idwcawp.$getClass_438 = function $getClass_438() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$lambda$14$Type = function JsFigure$lambda$14$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1195, $wnd.Function, $intern_36, idwcawp.JsFigure$lambda$14$Type);
_.onInvoke_5 = function onInvoke_264(arg0) {
  return idwcawp.$lambda$14_4(this.$$outer_0);
};
idwcawp.$getClass_439 = function $getClass_439() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$lambda$15$Type = function JsFigure$lambda$15$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1196, $wnd.Function, {}, idwcawp.JsFigure$lambda$15$Type);
_.onInvoke_5 = function onInvoke_265(arg0) {
  return idwcawp.$lambda$15(this.$$outer_0, arg0);
};
idwcawp.JsFigure$lambda$16$Type = function JsFigure$lambda$16$Type() {};
defineClass(483, 1, {}, idwcawp.JsFigure$lambda$16$Type);
_.apply_1 = function apply_201(arg0) {
  return ju.stream_4(castTo(arg0, 116).series_0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$16$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$16$Type",
    483
  );
idwcawp.JsFigure$lambda$17$Type = function JsFigure$lambda$17$Type(
  forceDisableDownsample_0
) {
  this.forceDisableDownsample_0 = forceDisableDownsample_0;
};
defineClass(484, 1, $intern_19, idwcawp.JsFigure$lambda$17$Type);
_.accept = function accept_76(arg0) {
  idwcawp.lambda$17_1(this.forceDisableDownsample_0, castTo(arg0, 59));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$17$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$17$Type",
    484
  );
idwcawp.JsFigure$lambda$18$Type = function JsFigure$lambda$18$Type() {};
defineClass(485, 1, {}, idwcawp.JsFigure$lambda$18$Type);
_.apply_1 = function apply_202(arg0) {
  return ju.stream_4(castTo(arg0, 116).series_0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$18$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$18$Type",
    485
  );
idwcawp.JsFigure$lambda$2$Type = function JsFigure$lambda$2$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(475, 1, {}, idwcawp.JsFigure$lambda$2$Type);
_.apply_1 = function apply_203(arg0) {
  return idwcawp.$lambda$2_3(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .ChartDescriptor
    )
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$2$Type",
    475
  );
idwcawp.JsFigure$lambda$21$Type = function JsFigure$lambda$21$Type() {};
defineClass(488, 1, {}, idwcawp.JsFigure$lambda$21$Type);
_.apply_1 = function apply_204(arg0) {
  return ju.stream_4(castTo(arg0, 116).series_0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$21$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$21$Type",
    488
  );
idwcawp.JsFigure$lambda$23$Type = function JsFigure$lambda$23$Type() {};
defineClass(490, 1, {}, idwcawp.JsFigure$lambda$23$Type);
_.test_0 = function test_21(arg0) {
  return idwcawp.lambda$23_1(castTo(arg0, 59));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$23$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$23$Type",
    490
  );
idwcawp.JsFigure$lambda$28$Type = function JsFigure$lambda$28$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(496, 1, {}, idwcawp.JsFigure$lambda$28$Type);
_.apply_1 = function apply_205(arg0) {
  return idwcawp.$lambda$28(this.$$outer_0, castTo(arg0, 27));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$28$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$28$Type",
    496
  );
idwcawp.JsFigure$lambda$29$Type = function JsFigure$lambda$29$Type(
  $$outer_0,
  table_1
) {
  this.$$outer_0 = $$outer_0;
  this.table_1 = table_1;
};
defineClass(495, 1, {}, idwcawp.JsFigure$lambda$29$Type);
_.apply_1 = function apply_206(arg0) {
  return idwcawp.$lambda$29(this.$$outer_0, this.table_1, castTo(arg0, 27));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$29$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$29$Type",
    495
  );
idwcawp.JsFigure$lambda$31$Type = function JsFigure$lambda$31$Type() {};
defineClass(339, 1, {}, idwcawp.JsFigure$lambda$31$Type);
_.apply_1 = function apply_207(arg0) {
  return ju.stream_4(castTo(arg0, 116).series_0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$31$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$31$Type",
    339
  );
idwcawp.JsFigure$lambda$32$Type = function JsFigure$lambda$32$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(340, 1, $intern_19, idwcawp.JsFigure$lambda$32$Type);
_.accept = function accept_77(arg0) {
  idwcawp.$lambda$32_0(this.$$outer_0, castTo(arg0, 59));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$32$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$32$Type",
    340
  );
idwcawp.JsFigure$lambda$33$Type = function JsFigure$lambda$33$Type(table_1) {
  this.table_1 = table_1;
};
defineClass(497, 1, $intern_19, idwcawp.JsFigure$lambda$33$Type);
_.accept = function accept_78(arg0) {
  idwcawp.$lambda$33_1(this.table_1, castTo(arg0, 153));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$33$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$33$Type",
    497
  );
idwcawp.JsFigure$lambda$34$Type = function JsFigure$lambda$34$Type() {};
defineClass(498, 1, {}, idwcawp.JsFigure$lambda$34$Type);
_.test_0 = function test_22(arg0) {
  return !!castTo(arg0, 13).currentState;
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$34$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$34$Type",
    498
  );
idwcawp.$getClass_440 = function $getClass_440() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$lambda$4$Type = function JsFigure$lambda$4$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1191, $wnd.Function, $intern_36, idwcawp.JsFigure$lambda$4$Type);
_.onInvoke_5 = function onInvoke_266(arg0) {
  return idwcawp.$lambda$4_5(this.$$outer_0, castTo(arg0, 199));
};
idwcawp.JsFigure$lambda$5$Type = function JsFigure$lambda$5$Type() {};
defineClass(477, 1, {}, idwcawp.JsFigure$lambda$5$Type);
_.apply_1 = function apply_208(arg0) {
  return ju.stream_4(castTo(arg0, 116).series_0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$5$Type",
    477
  );
idwcawp.JsFigure$lambda$6$Type = function JsFigure$lambda$6$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(478, 1, $intern_19, idwcawp.JsFigure$lambda$6$Type);
_.accept = function accept_79(arg0) {
  idwcawp.$lambda$6_6(this.$$outer_0, castTo(arg0, 59));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$6$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$6$Type",
    478
  );
idwcawp.JsFigure$lambda$7$Type = function JsFigure$lambda$7$Type() {};
defineClass(479, 1, {}, idwcawp.JsFigure$lambda$7$Type);
_.apply_1 = function apply_209(arg0) {
  return ju.stream_4(castTo(arg0, 116).multiSeries_0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$7$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$7$Type",
    479
  );
idwcawp.JsFigure$lambda$8$Type = function JsFigure$lambda$8$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(480, 1, $intern_19, idwcawp.JsFigure$lambda$8$Type);
_.accept = function accept_80(arg0) {
  idwcawp.$lambda$8_1(this.$$outer_0, castTo(arg0, 244));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigure$lambda$8$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigure/lambda$8$Type",
    480
  );
idwcawp.$getClass_441 = function $getClass_441() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigure$lambda$9$Type = function JsFigure$lambda$9$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1192, $wnd.Function, $intern_36, idwcawp.JsFigure$lambda$9$Type);
_.onInvoke_5 = function onInvoke_267(arg0) {
  return idwcawp.$lambda$9_3(this.$$outer_0);
};
idwcawp.$getTables = function $getTables(this$static) {
  var tableSet;
  tableSet = new ju.HashSet();
  this$static.charts.forEach(
    makeLambdaFunction(
      idwcawp.JsFigureDescriptor$lambda$1$Type.prototype.onInvoke,
      idwcawp.JsFigureDescriptor$lambda$1$Type,
      [tableSet]
    )
  );
  return $wnd.Array.from(
    castTo(
      ju.$toArray_0(
        tableSet,
        initUnidimensionalArray(
          cggl.Lio_deephaven_web_client_api_JsTable_2_classLit,
          $intern_57,
          13,
          0,
          0,
          1
        )
      ),
      125
    )
  );
};
idwcawp.JsFigureDescriptor = function JsFigureDescriptor() {};
idwcawp.JsFigureDescriptor_0 = function JsFigureDescriptor_0(source) {
  var charts, value_0, value0, value1, value2, value3, value4, value5, value6;
  charts = castToJsArray(idwcf.getRequiredProperty(source, "charts"));
  this.charts = charts.map(
    makeLambdaFunction(
      idwcawp.JsFigureDescriptor$lambda$0$Type.prototype.onInvoke,
      idwcawp.JsFigureDescriptor$lambda$0$Type,
      []
    )
  );
  this.title =
    ((value0 = idwcf.getProperty(source, "title", null)),
    value0 == null
      ? null
      : (jb.checkCriticalType_0(typeof value0 == "string"), value0));
  this.titleFont =
    ((value1 = idwcf.getProperty(source, "titleFont", null)),
    value1 == null
      ? null
      : (jb.checkCriticalType_0(typeof value1 == "string"), value1));
  this.titleColor =
    ((value2 = idwcf.getProperty(source, "titleColor", null)),
    value2 == null
      ? null
      : (jb.checkCriticalType_0(typeof value2 == "string"), value2));
  this.isResizable =
    ((value3 = idwcf.getProperty(source, "isResizable", false)),
    value3 != null &&
      (jb.checkCriticalType_0(typeof value3 == "boolean"),
      jb.asBoolean(value3)));
  this.isDefaultTheme =
    ((value4 = idwcf.getProperty(source, "isDefaultTheme", false)),
    value4 != null &&
      (jb.checkCriticalType_0(typeof value4 == "boolean"),
      jb.asBoolean(value4)));
  this.updateInterval =
    ((value5 = idwcf.getProperty(source, "updateInterval", 0)),
    value5 == null
      ? 0
      : (jb.checkCriticalType_0(typeof value5 == "number"),
        jb.asDouble(value5)));
  this.cols =
    ((value6 = idwcf.getProperty(source, "cols", 1)),
    value6 == null
      ? 0
      : (jb.checkCriticalType_0(jb.isInt(value6)), jb.asInt(value6)));
  this.rows =
    ((value_0 = idwcf.getProperty(source, "rows", 1)),
    value_0 == null
      ? 0
      : (jb.checkCriticalType_0(jb.isInt(value_0)), jb.asInt(value_0)));
};
idwcawp.lambda$1_7 = function lambda$1_7(tableSet_0, chart_1) {
  chart_1.series.forEach(
    makeLambdaFunction(
      idwcawp.JsFigureDescriptor$lambda$2$Type.prototype.onInvoke,
      idwcawp.JsFigureDescriptor$lambda$2$Type,
      [tableSet_0]
    )
  );
  return null;
};
idwcawp.lambda$2_12 = function lambda$2_12(tableSet_0, series_1) {
  series_1.dataSources.forEach(
    makeLambdaFunction(
      idwcawp.JsFigureDescriptor$lambda$3$Type.prototype.onInvoke,
      idwcawp.JsFigureDescriptor$lambda$3$Type,
      [tableSet_0]
    )
  );
  return null;
};
defineClass(
  260,
  1,
  { 260: 1 },
  idwcawp.JsFigureDescriptor,
  idwcawp.JsFigureDescriptor_0
);
_.cols = 0;
_.isDefaultTheme = false;
_.isResizable = false;
_.rows = 0;
_.updateInterval = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigureDescriptor_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigureDescriptor",
    260
  );
idwcawp.$getClass_442 = function $getClass_442() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureDescriptor$lambda$0$Type =
  function JsFigureDescriptor$lambda$0$Type() {};
defineClass(1506, $wnd.Function, {}, idwcawp.JsFigureDescriptor$lambda$0$Type);
_.onInvoke = function onInvoke_268(arg0, arg1, arg2) {
  return instanceOf(arg0, 158)
    ? castTo(arg0, 158)
    : new idwcawp.JsChartDescriptor_0(arg0);
};
idwcawp.$getClass_443 = function $getClass_443() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureDescriptor$lambda$1$Type =
  function JsFigureDescriptor$lambda$1$Type(tableSet_0) {
    this.tableSet_0 = tableSet_0;
  };
defineClass(1507, $wnd.Function, {}, idwcawp.JsFigureDescriptor$lambda$1$Type);
_.onInvoke = function onInvoke_269(arg0, arg1, arg2) {
  return idwcawp.lambda$1_7(this.tableSet_0, castTo(arg0, 158));
};
idwcawp.$getClass_444 = function $getClass_444() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureDescriptor$lambda$2$Type =
  function JsFigureDescriptor$lambda$2$Type(tableSet_0) {
    this.tableSet_0 = tableSet_0;
  };
defineClass(1508, $wnd.Function, {}, idwcawp.JsFigureDescriptor$lambda$2$Type);
_.onInvoke = function onInvoke_270(arg0, arg1, arg2) {
  return idwcawp.lambda$2_12(this.tableSet_0, castTo(arg0, 180));
};
idwcawp.$getClass_445 = function $getClass_445() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureDescriptor$lambda$3$Type =
  function JsFigureDescriptor$lambda$3$Type(tableSet_0) {
    this.tableSet_0 = tableSet_0;
  };
defineClass(1509, $wnd.Function, {}, idwcawp.JsFigureDescriptor$lambda$3$Type);
_.onInvoke = function onInvoke_271(arg0, arg1, arg2) {
  return ju.$add_0(this.tableSet_0, castTo(arg0, 259).table), null;
};
idwcawp.convertJsAxisDescriptor = function convertJsAxisDescriptor(
  jsDescriptor
) {
  var descriptor;
  descriptor =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor();
  descriptor.setFormatType(jb.asInt(jsDescriptor.formatType) | 0);
  descriptor.setType(jb.asInt(jsDescriptor.type) | 0);
  descriptor.setPosition(jb.asInt(jsDescriptor.position) | 0);
  descriptor.setLog(jsDescriptor.log);
  descriptor.setLabel(jsDescriptor.label);
  descriptor.setLabelFont(jsDescriptor.labelFont);
  descriptor.setTicksFont(jsDescriptor.ticksFont);
  descriptor.setFormatPattern(jsDescriptor.formatPattern);
  descriptor.setColor(jsDescriptor.color);
  descriptor.setMinRange(jsDescriptor.minRange);
  descriptor.setMaxRange(jsDescriptor.maxRange);
  descriptor.setMinorTicksVisible(jsDescriptor.minorTicksVisible);
  descriptor.setMajorTicksVisible(jsDescriptor.majorTicksVisible);
  descriptor.setMinorTickCount(jsDescriptor.minorTickCount);
  descriptor.setGapBetweenMajorTicks(jsDescriptor.gapBetweenMajorTicks);
  descriptor.setMajorTickLocationsList(jsDescriptor.majorTickLocations);
  descriptor.setTickLabelAngle(jsDescriptor.tickLabelAngle);
  descriptor.setInvert(jsDescriptor.invert);
  descriptor.setIsTimeAxis(jsDescriptor.isTimeAxis);
  return descriptor;
};
idwcawp.convertJsChartDescriptor = function convertJsChartDescriptor(
  jsDescriptor,
  tables
) {
  var axes,
    axisMap,
    descriptor,
    i,
    i0,
    jsAxes,
    jsAxis,
    jsSeries,
    seriesDescriptors;
  descriptor =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.ChartDescriptor();
  descriptor.setColspan(jsDescriptor.colspan);
  descriptor.setRowspan(jsDescriptor.rowspan);
  jsDescriptor.chartType != null &&
    descriptor.setChartType(jb.asInt(jsDescriptor.chartType) | 0);
  descriptor.setTitle(jsDescriptor.title);
  descriptor.setTitleFont(jsDescriptor.titleFont);
  descriptor.setTitleColor(jsDescriptor.titleColor);
  descriptor.setShowLegend(jsDescriptor.showLegend);
  descriptor.setLegendFont(jsDescriptor.legendFont);
  descriptor.setLegendColor(jsDescriptor.legendColor);
  descriptor.setIs3d(jsDescriptor.is3d);
  jsAxes = jsDescriptor.axes;
  axes = newArray_0(jsAxes.length);
  axisMap = new ju.HashMap();
  for (i0 = 0; i0 < jsAxes.length; i0++) {
    jsAxis = castTo(jb.$getAt(jsAxes, i0), 100);
    setCheck(axes, i0, idwcawp.convertJsAxisDescriptor(jsAxis));
    axes[i0].setId("" + i0);
    ju.$put_2(axisMap, jsAxis, axes[i0]);
  }
  descriptor.setAxesList(axes);
  jsSeries = jsDescriptor.series;
  seriesDescriptors = newArray_0(jsSeries.length);
  for (i = 0; i < jsSeries.length; i++) {
    setCheck(
      seriesDescriptors,
      i,
      idwcawp.convertJsSeriesDescriptor(
        castTo(jb.$getAt(jsSeries, i), 180),
        tables,
        axisMap
      )
    );
  }
  descriptor.setSeriesList(seriesDescriptors);
  descriptor.setMultiSeriesList(new Array(0));
  return descriptor;
};
idwcawp.convertJsFigureDescriptor = function convertJsFigureDescriptor(
  jsDescriptor
) {
  var chartDescriptors, charts, descriptor, i, tables;
  descriptor =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor();
  descriptor.setTitle(jsDescriptor.title);
  descriptor.setTitleFont(jsDescriptor.titleFont);
  descriptor.setTitleColor(jsDescriptor.titleColor);
  descriptor.setUpdateInterval("" + jsDescriptor.updateInterval);
  descriptor.setCols(jsDescriptor.cols);
  descriptor.setRows(jsDescriptor.rows);
  tables = idwcawp.$getTables(jsDescriptor);
  charts = jsDescriptor.charts;
  chartDescriptors = newArray_0(charts.length);
  for (i = 0; i < charts.length; i++) {
    setCheck(
      chartDescriptors,
      i,
      idwcawp.convertJsChartDescriptor(
        castTo(jb.$getAt(charts, i), 158),
        tables
      )
    );
  }
  descriptor.setChartsList(chartDescriptors);
  return descriptor;
};
idwcawp.convertJsSeriesDescriptor = function convertJsSeriesDescriptor(
  jsDescriptor,
  tables,
  axisMap
) {
  var dataSources, descriptor, i, jsDataSources;
  descriptor =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesDescriptor();
  descriptor.setPlotStyle(jb.asInt(jsDescriptor.plotStyle) | 0);
  descriptor.setName(jsDescriptor.name);
  jsDescriptor.linesVisible != null &&
    descriptor.setLinesVisible(jl.$booleanValue(jsDescriptor.linesVisible));
  jsDescriptor.shapesVisible != null &&
    descriptor.setShapesVisible(jl.$booleanValue(jsDescriptor.shapesVisible));
  descriptor.setGradientVisible(
    jsDescriptor.gradientVisible != null &&
      jl.$booleanValue(jsDescriptor.gradientVisible)
  );
  descriptor.setLineColor(jsDescriptor.lineColor);
  descriptor.setPointLabelFormat(jsDescriptor.pointLabelFormat);
  descriptor.setXToolTipPattern(jsDescriptor.xToolTipPattern);
  descriptor.setYToolTipPattern(jsDescriptor.yToolTipPattern);
  descriptor.setShapeLabel(jsDescriptor.shapeLabel);
  jsDescriptor.shapeSize != null &&
    descriptor.setShapeSize(jl.$doubleValue(jsDescriptor.shapeSize));
  descriptor.setShapeColor(jsDescriptor.shapeColor);
  descriptor.setShape(jsDescriptor.shape);
  jsDataSources = jsDescriptor.dataSources;
  dataSources = newArray_0(jsDataSources.length);
  for (i = 0; i < jsDataSources.length; i++) {
    setCheck(
      dataSources,
      i,
      idwcawp.convertJsSourceDescriptor(
        castTo(jb.$getAt(jsDataSources, i), 259),
        tables,
        axisMap
      )
    );
  }
  descriptor.setDataSourcesList(dataSources);
  return descriptor;
};
idwcawp.convertJsSourceDescriptor = function convertJsSourceDescriptor(
  jsDescriptor,
  tables,
  axisMap
) {
  var descriptor;
  descriptor =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceDescriptor();
  descriptor.setAxisId(
    castToNative(
      ju.$get_16(axisMap, jsDescriptor.axis),
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .AxisDescriptor
    ).getId()
  );
  descriptor.setTableId(tables.indexOf(jsDescriptor.table));
  descriptor.setColumnName(jsDescriptor.columnName);
  descriptor.setType(jb.asInt(jsDescriptor.type) | 0);
  return descriptor;
};
idwcawp.create_2 = function create_2(descriptor) {
  var figureDescriptor, response, tableCopyPromises, tables;
  tables = idwcawp.$getTables(descriptor);
  if (tables == null || tables.length == 0) {
    return $wnd.Promise.reject("No tables provided for Figure creation");
  }
  figureDescriptor = idwcawp.convertJsFigureDescriptor(descriptor);
  response =
    new $wnd.dhinternal.io.deephaven.proto.object_pb.FetchObjectResponse();
  response.setData(figureDescriptor.serializeBinary());
  tableCopyPromises = castToJsArray(
    ji.stampJavaTypeInfo_1(
      tables.map(
        makeLambdaFunction(
          idwcawp.JsFigureFactory$lambda$0$Type.prototype.onInvoke,
          idwcawp.JsFigureFactory$lambda$0$Type,
          []
        )
      ),
      new Array(0)
    )
  );
  return $wnd.Promise.all(tableCopyPromises).then(
    makeLambdaFunction(
      idwcawp.JsFigureFactory$lambda$1$Type.prototype.onInvoke_5,
      idwcawp.JsFigureFactory$lambda$1$Type,
      [response]
    )
  );
};
idwcawp.create_3 = function create_3(config) {
  var descriptor;
  if (instanceOf(config, 260)) {
    return idwcawp.create_2(castTo(config, 260));
  } else {
    descriptor = new idwcawp.JsFigureDescriptor_0(config);
    return idwcawp.create_2(descriptor);
  }
};
idwcawp.lambda$1_8 = function lambda$1_8(response_0, unknownTableCopies_1) {
  var jsTableCopies, tableCopies;
  jsTableCopies = castToJsArray(unknownTableCopies_1);
  tableCopies = castTo(
    ji.stampJavaTypeInfo_1(
      jsTableCopies,
      initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_JsTable_2_classLit,
        $intern_57,
        13,
        0,
        0,
        1
      )
    ),
    125
  );
  return idwcawp.$refetch_1(
    new idwcawp.JsFigure_0(
      new idwcawp.JsFigureFactory$lambda$2$Type(response_0),
      new idwcawp.JsFigureFactory$lambda$3$Type(tableCopies)
    )
  );
};
idwcawp.lambda$2_13 = function lambda$2_13(response_0, c_1) {
  c_1(null, response_0);
};
idwcawp.lambda$3_5 = function lambda$3_5(tableCopies_0, figure_1) {
  var i, isTableDisconnected, removerFns, tableIndex;
  isTableDisconnected = initUnidimensionalArray(
    cggl.Z_classLit,
    $intern_32,
    18,
    tableCopies_0.length,
    16,
    1
  );
  removerFns = new ju.ArrayList_0(tableCopies_0.length * 3);
  for (i = 0; i < tableCopies_0.length; i++) {
    tableIndex = i;
    ju.$add(
      removerFns,
      idwca.$addEventListener(
        tableCopies_0[i],
        "disconnect",
        makeLambdaFunction(
          idwcawp.JsFigureFactory$lambda$4$Type.prototype.onEvent,
          idwcawp.JsFigureFactory$lambda$4$Type,
          [isTableDisconnected, tableIndex, figure_1]
        )
      )
    );
    ju.$add(
      removerFns,
      idwca.$addEventListener(
        tableCopies_0[i],
        "reconnect",
        makeLambdaFunction(
          idwcawp.JsFigureFactory$lambda$5$Type.prototype.onEvent,
          idwcawp.JsFigureFactory$lambda$5$Type,
          [isTableDisconnected, tableIndex, figure_1]
        )
      )
    );
    ju.$add(
      removerFns,
      idwca.$addEventListener(
        tableCopies_0[i],
        "reconnectfailed",
        makeLambdaFunction(
          idwcawp.JsFigureFactory$lambda$6$Type.prototype.onEvent,
          idwcawp.JsFigureFactory$lambda$6$Type,
          [removerFns, figure_1]
        )
      )
    );
  }
  return $wnd.Promise.resolve(
    new idwcawp.JsFigure$FigureTableFetchData(
      tableCopies_0,
      initUnidimensionalArray(
        cggl.Lio_deephaven_web_client_api_JsPartitionedTable_2_classLit,
        $intern_7,
        99,
        0,
        0,
        1
      )
    )
  );
};
idwcawp.lambda$4_10 = function lambda$4_10(
  isTableDisconnected_0,
  tableIndex_1,
  figure_2
) {
  var j;
  isTableDisconnected_0[tableIndex_1] = true;
  for (j = 0; j < isTableDisconnected_0.length; j++) {
    if (isTableDisconnected_0[j] && j != tableIndex_1) {
      return;
    }
  }
  idwca.$fireEvent_1(figure_2, "disconnect", jb.emptyObjectLiteral());
  idwcawp.$unsubscribe_0(figure_2);
};
idwcawp.lambda$5_6 = function lambda$5_6(
  isTableDisconnected_0,
  tableIndex_1,
  figure_2
) {
  var e, init, j;
  isTableDisconnected_0[tableIndex_1] = false;
  for (j = 0; j < isTableDisconnected_0.length; j++) {
    if (isTableDisconnected_0[j]) {
      return;
    }
  }
  try {
    jus.$forEach_6(
      jus.$flatMap(
        ju.stream_4(figure_2.charts_0),
        new idwcawp.JsFigure$lambda$31$Type()
      ),
      new idwcawp.JsFigure$lambda$32$Type(figure_2)
    );
    idwca.$fireEvent_1(figure_2, "reconnect", jb.emptyObjectLiteral());
    idwcawp.$enqueueSubscriptionCheck(figure_2);
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 284)) {
      e = $e0;
      init = jb.emptyObjectLiteral();
      init.detail = e;
      idwca.$fireEvent_0(
        figure_2,
        "reconnectfailed",
        new $wnd.CustomEvent("reconnectfailed", init)
      );
    } else throw toJs($e0);
  }
};
idwcawp.lambda$6_4 = function lambda$6_4(removerFns_0, figure_1, err_2) {
  var init, removerFn, removerFn$iterator;
  for (
    removerFn$iterator = new ju.ArrayList$1(removerFns_0);
    removerFn$iterator.i < removerFn$iterator.this$01.array.length;

  ) {
    removerFn = castToFunction(ju.$next_8(removerFn$iterator));
    removerFn();
  }
  idwcawp.$unsubscribe_0(figure_1);
  init = jb.emptyObjectLiteral();
  init.detail = err_2;
  idwca.$fireEvent_0(
    figure_1,
    "reconnectfailed",
    new $wnd.CustomEvent("reconnectfailed", init)
  );
};
defineClass(919, 1, {});
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigureFactory_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigureFactory",
    919
  );
idwcawp.$getClass_446 = function $getClass_446() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureFactory$lambda$0$Type =
  function JsFigureFactory$lambda$0$Type() {};
defineClass(1510, $wnd.Function, {}, idwcawp.JsFigureFactory$lambda$0$Type);
_.onInvoke = function onInvoke_272(arg0, arg1, arg2) {
  return $wnd.Promise.resolve(new idwca.JsTable(castTo(arg0, 13)));
};
idwcawp.$getClass_447 = function $getClass_447() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureFactory$lambda$1$Type = function JsFigureFactory$lambda$1$Type(
  response_0
) {
  this.response_0 = response_0;
};
defineClass(
  1511,
  $wnd.Function,
  $intern_36,
  idwcawp.JsFigureFactory$lambda$1$Type
);
_.onInvoke_5 = function onInvoke_273(arg0) {
  return idwcawp.lambda$1_8(this.response_0, castToArray(arg0));
};
idwcawp.JsFigureFactory$lambda$2$Type = function JsFigureFactory$lambda$2$Type(
  response_0
) {
  this.response_0 = response_0;
};
defineClass(691, 1, {}, idwcawp.JsFigureFactory$lambda$2$Type);
_.fetch_2 = function fetch_28(arg0) {
  idwcawp.lambda$2_13(this.response_0, arg0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigureFactory$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigureFactory/lambda$2$Type",
    691
  );
idwcawp.JsFigureFactory$lambda$3$Type = function JsFigureFactory$lambda$3$Type(
  tableCopies_0
) {
  this.tableCopies_0 = tableCopies_0;
};
defineClass(692, 1, {}, idwcawp.JsFigureFactory$lambda$3$Type);
_.fetch_3 = function fetch_29(arg0, arg1) {
  return idwcawp.lambda$3_5(this.tableCopies_0, arg0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsFigureFactory$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsFigureFactory/lambda$3$Type",
    692
  );
idwcawp.$getClass_448 = function $getClass_448() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureFactory$lambda$4$Type = function JsFigureFactory$lambda$4$Type(
  isTableDisconnected_0,
  tableIndex_1,
  figure_2
) {
  this.isTableDisconnected_0 = isTableDisconnected_0;
  this.tableIndex_1 = tableIndex_1;
  this.figure_2 = figure_2;
};
defineClass(
  1512,
  $wnd.Function,
  $intern_35,
  idwcawp.JsFigureFactory$lambda$4$Type
);
_.onEvent = function onEvent_27(arg0) {
  idwcawp.lambda$4_10(
    this.isTableDisconnected_0,
    this.tableIndex_1,
    this.figure_2
  );
};
_.tableIndex_1 = 0;
idwcawp.$getClass_449 = function $getClass_449() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureFactory$lambda$5$Type = function JsFigureFactory$lambda$5$Type(
  isTableDisconnected_0,
  tableIndex_1,
  figure_2
) {
  this.isTableDisconnected_0 = isTableDisconnected_0;
  this.tableIndex_1 = tableIndex_1;
  this.figure_2 = figure_2;
};
defineClass(
  1513,
  $wnd.Function,
  $intern_35,
  idwcawp.JsFigureFactory$lambda$5$Type
);
_.onEvent = function onEvent_28(arg0) {
  idwcawp.lambda$5_6(
    this.isTableDisconnected_0,
    this.tableIndex_1,
    this.figure_2
  );
};
_.tableIndex_1 = 0;
idwcawp.$getClass_450 = function $getClass_450() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsFigureFactory$lambda$6$Type = function JsFigureFactory$lambda$6$Type(
  removerFns_0,
  figure_1
) {
  this.removerFns_0 = removerFns_0;
  this.figure_1 = figure_1;
};
defineClass(
  1514,
  $wnd.Function,
  $intern_35,
  idwcawp.JsFigureFactory$lambda$6$Type
);
_.onEvent = function onEvent_29(arg0) {
  idwcawp.lambda$6_4(this.removerFns_0, this.figure_1, arg0);
};
idwcawp.$getOrDefault = function $getOrDefault(name_0, map_0) {
  var index_0;
  index_0 = map_0
    .getKeysList()
    .findIndex(
      makeLambdaFunction(
        idwcawp.JsMultiSeries$lambda$6$Type.prototype.onInvoke_0,
        idwcawp.JsMultiSeries$lambda$6$Type,
        [name_0]
      )
    );
  if (index_0 == -1) {
    return map_0.getDefaultBool();
  }
  return jl.$booleanValue(
    castToBoolean(jb.$getAt(map_0.getValuesList(), index_0))
  );
};
idwcawp.$getOrDefault_0 = function $getOrDefault_0(name_0, map_0) {
  var index_0;
  index_0 = map_0
    .getKeysList()
    .findIndex(
      makeLambdaFunction(
        idwcawp.JsMultiSeries$lambda$8$Type.prototype.onInvoke_0,
        idwcawp.JsMultiSeries$lambda$8$Type,
        [name_0]
      )
    );
  if (index_0 == -1) {
    return map_0.getDefaultDouble();
  }
  return jl.$doubleValue(
    castToDouble(jb.$getAt(map_0.getValuesList(), index_0))
  );
};
idwcawp.$getOrDefault_1 = function $getOrDefault_1(name_0, map_0) {
  var index_0;
  index_0 = map_0
    .getKeysList()
    .findIndex(
      makeLambdaFunction(
        idwcawp.JsMultiSeries$lambda$7$Type.prototype.onInvoke_0,
        idwcawp.JsMultiSeries$lambda$7$Type,
        [name_0]
      )
    );
  if (index_0 == -1) {
    return map_0.getDefaultString();
  }
  return castToString(jb.$getAt(map_0.getValuesList(), index_0));
};
idwcawp.$getPlotStyle = function $getPlotStyle(this$static) {
  return this$static.descriptor.getPlotStyle();
};
idwcawp.$initSources = function $initSources(
  this$static,
  plotHandlesToPartitionedTables
) {
  jus.$forEach_5(
    jus.$distinct(
      jus.$mapToInt(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(
            jb.$asList(this$static.descriptor.getDataSourcesList()),
            16
          )
        ),
        new idwcawp.JsMultiSeries$0methodref$getPartitionedTableId$Type()
      )
    ),
    new idwcawp.JsMultiSeries$lambda$1$Type(
      this$static,
      plotHandlesToPartitionedTables
    )
  );
};
idwcawp.$lambda$1_9 = function $lambda$1_9(
  this$static,
  plotHandlesToPartitionedTables_1,
  plotHandle_1
) {
  var partitionedTable;
  partitionedTable = castTo(
    ju.$get_16(plotHandlesToPartitionedTables_1, jl.valueOf_29(plotHandle_1)),
    99
  );
  idwca
    .$getKeys(partitionedTable)
    .forEach(
      makeLambdaFunction(
        idwcawp.JsMultiSeries$lambda$2$Type.prototype.onInvoke_2,
        idwcawp.JsMultiSeries$lambda$2$Type,
        [this$static, partitionedTable]
      )
    );
  idwca.$addEventListener(
    partitionedTable,
    "keyadded",
    makeLambdaFunction(
      idwcawp.JsMultiSeries$lambda$3$Type.prototype.onEvent,
      idwcawp.JsMultiSeries$lambda$3$Type,
      [this$static, partitionedTable]
    )
  );
};
idwcawp.$lambda$2_5 = function $lambda$2_5(
  this$static,
  partitionedTable_1,
  p0_1
) {
  var seriesName;
  seriesName = this$static.descriptor.getName() + ": " + p0_1;
  idwca
    .$getTable(partitionedTable_1, p0_1)
    .then(
      makeLambdaFunction(
        idwcawp.JsMultiSeries$lambda$4$Type.prototype.onInvoke_5,
        idwcawp.JsMultiSeries$lambda$4$Type,
        [this$static, seriesName]
      )
    );
  return null;
};
idwcawp.$lambda$4_7 = function $lambda$4_7(this$static, seriesName_1, table_1) {
  var gradientVisible, init, series, seriesInstance, tableId;
  seriesInstance =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesDescriptor();
  seriesInstance.setName(seriesName_1);
  seriesInstance.setPlotStyle(this$static.descriptor.getPlotStyle());
  seriesInstance.setLineColor(
    idwcawp.$getOrDefault_1(seriesName_1, this$static.descriptor.getLineColor())
  );
  seriesInstance.setShapeColor(
    idwcawp.$getOrDefault_1(
      seriesName_1,
      this$static.descriptor.getPointColor()
    )
  );
  seriesInstance.setLinesVisible(
    idwcawp.$getOrDefault(
      seriesName_1,
      this$static.descriptor.getLinesVisible()
    )
  );
  seriesInstance.setShapesVisible(
    idwcawp.$getOrDefault(
      seriesName_1,
      this$static.descriptor.getPointsVisible()
    )
  );
  gradientVisible =
    (jl.$clinit_Boolean(),
    idwcawp.$getOrDefault(
      seriesName_1,
      this$static.descriptor.getGradientVisible()
    )
      ? ji.uncheckedCast(true)
      : ji.uncheckedCast(false));
  gradientVisible != null &&
    seriesInstance.setGradientVisible(
      ji.unsafeCastToBoolean(
        (ji.checkCriticalNotNull(gradientVisible), gradientVisible)
      )
    );
  seriesInstance.setYToolTipPattern(
    idwcawp.$getOrDefault_1(
      seriesName_1,
      this$static.descriptor.getYToolTipPattern()
    )
  );
  seriesInstance.setXToolTipPattern(
    idwcawp.$getOrDefault_1(
      seriesName_1,
      this$static.descriptor.getXToolTipPattern()
    )
  );
  seriesInstance.setShapeLabel(
    idwcawp.$getOrDefault_1(
      seriesName_1,
      this$static.descriptor.getPointLabel()
    )
  );
  seriesInstance.setShapeSize(
    idwcawp.$getOrDefault_0(seriesName_1, this$static.descriptor.getPointSize())
  );
  seriesInstance.setShape(
    idwcawp.$getOrDefault_1(
      seriesName_1,
      this$static.descriptor.getPointShape()
    )
  );
  seriesInstance.setPointLabelFormat(
    idwcawp.$getOrDefault_1(
      seriesName_1,
      this$static.descriptor.getPointLabelFormat()
    )
  );
  tableId = idwcawp.$registerTable(this$static.figure, table_1);
  seriesInstance.setDataSourcesList(
    this$static.descriptor
      .getDataSourcesList()
      .map(
        makeLambdaFunction(
          idwcawp.JsMultiSeries$lambda$5$Type.prototype.onInvoke,
          idwcawp.JsMultiSeries$lambda$5$Type,
          [tableId]
        )
      )
  );
  series = new idwcawp.JsSeries(
    seriesInstance,
    this$static.figure,
    this$static.axes_0
  );
  series.multiSeries_0 = this$static;
  idwcawp.$initSources_0(
    series,
    ju.singletonMap(jl.valueOf_29(tableId), table_1),
    (ju.$clinit_Collections(), ju.$clinit_Collections(), ju.EMPTY_MAP)
  );
  init = jb.emptyObjectLiteral();
  init.detail = series;
  idwcawp.$addSeriesFromMultiSeries(this$static.parent_0, series);
  idwca.$fireEvent_1(this$static.figure, "seriesadded", init);
  idwca.$fireEvent_1(this$static.parent_0, "seriesadded", init);
  return null;
};
idwcawp.$requestTable = function $requestTable(
  this$static,
  partitionedTable,
  key
) {
  var seriesName;
  seriesName = this$static.descriptor.getName() + ": " + key;
  idwca
    .$getTable(partitionedTable, key)
    .then(
      makeLambdaFunction(
        idwcawp.JsMultiSeries$lambda$4$Type.prototype.onInvoke_5,
        idwcawp.JsMultiSeries$lambda$4$Type,
        [this$static, seriesName]
      )
    );
};
idwcawp.JsMultiSeries = function JsMultiSeries(
  descriptor,
  figure,
  axes,
  parent_0
) {
  this.descriptor = descriptor;
  this.figure = figure;
  this.axes_0 = axes;
  this.parent_0 = parent_0;
};
idwcawp.lambda$5_7 = function lambda$5_7(tableId_0, multiSeriesSource_1) {
  var sourceDescriptor;
  sourceDescriptor =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceDescriptor();
  sourceDescriptor.setColumnName(multiSeriesSource_1.getColumnName());
  sourceDescriptor.setAxisId(multiSeriesSource_1.getAxisId());
  sourceDescriptor.setTableId(tableId_0);
  sourceDescriptor.setType(multiSeriesSource_1.getType());
  return sourceDescriptor;
};
defineClass(244, 1, { 244: 1 }, idwcawp.JsMultiSeries);
defineProperties(_, {
  name: {
    get: function getName_3() {
      return this.descriptor.getName();
    },
  },
});
defineProperties(_, {
  plotStyle: {
    get: function getPlotStyle() {
      return idwcawp.$getPlotStyle(this);
    },
  },
});
cggl.Lio_deephaven_web_client_api_widget_plot_JsMultiSeries_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsMultiSeries",
    244
  );
idwcawp.JsMultiSeries$0methodref$getPartitionedTableId$Type =
  function JsMultiSeries$0methodref$getPartitionedTableId$Type() {};
defineClass(
  508,
  1,
  {},
  idwcawp.JsMultiSeries$0methodref$getPartitionedTableId$Type
);
_.applyAsInt = function applyAsInt_1(arg0) {
  return castToNative(
    arg0,
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
      .MultiSeriesSourceDescriptor
  ).getPartitionedTableId();
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsMultiSeries$0methodref$getPartitionedTableId$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsMultiSeries/0methodref$getPartitionedTableId$Type",
    508
  );
idwcawp.JsMultiSeries$lambda$1$Type = function JsMultiSeries$lambda$1$Type(
  $$outer_0,
  plotHandlesToPartitionedTables_1
) {
  this.$$outer_0 = $$outer_0;
  this.plotHandlesToPartitionedTables_1 = plotHandlesToPartitionedTables_1;
};
defineClass(509, 1, $intern_62, idwcawp.JsMultiSeries$lambda$1$Type);
_.accept_2 = function accept_81(arg0) {
  idwcawp.$lambda$1_9(
    this.$$outer_0,
    this.plotHandlesToPartitionedTables_1,
    arg0
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsMultiSeries$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsMultiSeries/lambda$1$Type",
    509
  );
idwcawp.$getClass_451 = function $getClass_451() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsMultiSeries$lambda$2$Type = function JsMultiSeries$lambda$2$Type(
  $$outer_0,
  partitionedTable_1
) {
  this.$$outer_0 = $$outer_0;
  this.partitionedTable_1 = partitionedTable_1;
};
defineClass(1208, $wnd.Function, {}, idwcawp.JsMultiSeries$lambda$2$Type);
_.onInvoke_2 = function onInvoke_274(arg0, arg1, arg2) {
  return idwcawp.$lambda$2_5(this.$$outer_0, this.partitionedTable_1, arg0);
};
idwcawp.$getClass_452 = function $getClass_452() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsMultiSeries$lambda$3$Type = function JsMultiSeries$lambda$3$Type(
  $$outer_0,
  partitionedTable_1
) {
  this.$$outer_0 = $$outer_0;
  this.partitionedTable_1 = partitionedTable_1;
};
defineClass(
  1209,
  $wnd.Function,
  $intern_35,
  idwcawp.JsMultiSeries$lambda$3$Type
);
_.onEvent = function onEvent_30(arg0) {
  idwcawp.$requestTable(this.$$outer_0, this.partitionedTable_1, arg0.detail);
};
idwcawp.$getClass_453 = function $getClass_453() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsMultiSeries$lambda$4$Type = function JsMultiSeries$lambda$4$Type(
  $$outer_0,
  seriesName_1
) {
  this.$$outer_0 = $$outer_0;
  this.seriesName_1 = seriesName_1;
};
defineClass(
  973,
  $wnd.Function,
  $intern_36,
  idwcawp.JsMultiSeries$lambda$4$Type
);
_.onInvoke_5 = function onInvoke_275(arg0) {
  return idwcawp.$lambda$4_7(
    this.$$outer_0,
    this.seriesName_1,
    castTo(arg0, 13)
  );
};
idwcawp.$getClass_454 = function $getClass_454() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsMultiSeries$lambda$5$Type = function JsMultiSeries$lambda$5$Type(
  tableId_0
) {
  this.tableId_0 = tableId_0;
};
defineClass(1210, $wnd.Function, {}, idwcawp.JsMultiSeries$lambda$5$Type);
_.onInvoke = function onInvoke_276(arg0, arg1, arg2) {
  return idwcawp.lambda$5_7(
    this.tableId_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .MultiSeriesSourceDescriptor
    )
  );
};
_.tableId_0 = 0;
idwcawp.$getClass_455 = function $getClass_455() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsMultiSeries$lambda$6$Type = function JsMultiSeries$lambda$6$Type(
  name_0
) {
  this.name_0 = name_0;
};
defineClass(1205, $wnd.Function, {}, idwcawp.JsMultiSeries$lambda$6$Type);
_.onInvoke_0 = function onInvoke_277(arg0, arg1, arg2) {
  return jl.$equals_12(this.name_0, castToString(arg0));
};
idwcawp.$getClass_456 = function $getClass_456() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsMultiSeries$lambda$7$Type = function JsMultiSeries$lambda$7$Type(
  name_0
) {
  this.name_0 = name_0;
};
defineClass(1206, $wnd.Function, {}, idwcawp.JsMultiSeries$lambda$7$Type);
_.onInvoke_0 = function onInvoke_278(arg0, arg1, arg2) {
  return jl.$equals_12(this.name_0, castToString(arg0));
};
idwcawp.$getClass_457 = function $getClass_457() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsMultiSeries$lambda$8$Type = function JsMultiSeries$lambda$8$Type(
  name_0
) {
  this.name_0 = name_0;
};
defineClass(1207, $wnd.Function, {}, idwcawp.JsMultiSeries$lambda$8$Type);
_.onInvoke_0 = function onInvoke_279(arg0, arg1, arg2) {
  return jl.$equals_12(this.name_0, castToString(arg0));
};
idwcawp.$$init_43 = function $$init_43(this$static) {
  this$static.downsample =
    (idwcawp.$clinit_DownsampleOptions(), idwcawp.DEFAULT);
};
idwcawp.$getOneClick = function $getOneClick(this$static) {
  return this$static.oneClick_0;
};
idwcawp.$getPlotStyle_0 = function $getPlotStyle_0(this$static) {
  return this$static.descriptor.getPlotStyle();
};
idwcawp.$getShapesVisible = function $getShapesVisible(this$static) {
  if (this$static.descriptor.hasShapesVisible()) {
    return (
      jl.$clinit_Boolean(),
      this$static.descriptor.getShapesVisible()
        ? ji.uncheckedCast(true)
        : ji.uncheckedCast(false)
    );
  }
  return null;
};
idwcawp.$getSources = function $getSources(this$static) {
  return this$static.sources_0;
};
idwcawp.$initSources_0 = function $initSources_0(
  this$static,
  tables,
  partitionedTables
) {
  jus.$forEach_6(
    ju.stream_4(this$static.sources_0),
    new idwcawp.JsSeries$lambda$0$Type(tables)
  );
  !!this$static.oneClick_0 &&
    idwcawp.$setPartitionedTable(
      this$static.oneClick_0,
      castTo(
        partitionedTables.get(
          jl.valueOf_29(
            this$static.sources_0[0].sourceDescriptor.getPartitionedTableId()
          )
        ),
        99
      )
    );
};
idwcawp.$subscribe_2 = function $subscribe_2(
  this$static,
  forceDisableDownsample
) {
  this$static.downsample = !forceDisableDownsample
    ? (idwcawp.$clinit_DownsampleOptions(), idwcawp.DEFAULT)
    : forceDisableDownsample;
  this$static.subscribed = true;
  idwcawp.$enqueueSubscriptionCheck(this$static.jsFigure);
};
idwcawp.JsSeries = function JsSeries(series, jsFigure, axes) {
  var dataSource, i;
  idwcawp.$$init_43(this);
  this.descriptor = series;
  this.jsFigure = jsFigure;
  this.sources_0 = initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_widget_plot_SeriesDataSource_2_classLit,
    $intern_7,
    153,
    0,
    0,
    1
  );
  for (i = 0; i < series.getDataSourcesList().length; i++) {
    dataSource = castToNative(
      jb.$getAt(series.getDataSourcesList(), i),
      $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor
        .SourceDescriptor
    );
    this.sources_0[this.sources_0.length] = new idwcawp.SeriesDataSource(
      castTo(ju.$getStringValue(axes, dataSource.getAxisId()), 243),
      dataSource
    );
    if (!this.oneClick_0) {
      if (dataSource.hasOneClick()) {
        if (i != 0) {
          debugger;
          throw toJs(new jl.AssertionError());
        }
        this.oneClick_0 = new idwcawp.OneClick(
          jsFigure,
          dataSource.getOneClick(),
          this
        );
      }
    } else {
      if (!dataSource.hasOneClick()) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
    }
  }
  $wnd.Object.freeze(this.sources_0);
};
idwcawp.lambda$0_14 = function lambda$0_14(tables_0, s_1) {
  idwcawp.$initColumnType(s_1, tables_0);
};
defineClass(59, 1, { 59: 1 }, idwcawp.JsSeries);
defineProperties(_, {
  lineColor: {
    get: function getLineColor() {
      return this.descriptor.getLineColor();
    },
  },
});
defineProperties(_, {
  isLinesVisible: {
    get: function getLinesVisible() {
      if (this.descriptor.hasLinesVisible()) {
        return (
          jl.$clinit_Boolean(),
          this.descriptor.getLinesVisible()
            ? ji.uncheckedCast(true)
            : ji.uncheckedCast(false)
        );
      }
      return null;
    },
  },
});
defineProperties(_, {
  multiSeries: {
    get: function getMultiSeries() {
      return this.multiSeries_0;
    },
  },
});
defineProperties(_, {
  name: {
    get: function getName_4() {
      return this.descriptor.getName();
    },
  },
});
defineProperties(_, {
  oneClick: {
    get: function getOneClick() {
      return idwcawp.$getOneClick(this);
    },
  },
});
defineProperties(_, {
  plotStyle: {
    get: function getPlotStyle_0() {
      return idwcawp.$getPlotStyle_0(this);
    },
  },
});
defineProperties(_, {
  pointLabelFormat: {
    get: function getPointLabelFormat() {
      if (this.descriptor.hasPointLabelFormat()) {
        return this.descriptor.getPointLabelFormat();
      }
      return null;
    },
  },
});
defineProperties(_, {
  shape: {
    get: function getShape() {
      return this.descriptor.getShape();
    },
  },
});
defineProperties(_, {
  shapeColor: {
    get: function getShapeColor() {
      return this.descriptor.getShapeColor();
    },
  },
});
defineProperties(_, {
  shapeLabel: {
    get: function getShapeLabel() {
      return this.descriptor.getShapeLabel();
    },
  },
});
defineProperties(_, {
  shapeSize: {
    get: function getShapeSize() {
      if (this.descriptor.hasShapeSize()) {
        return ji.uncheckedCast(this.descriptor.getShapeSize());
      }
      return null;
    },
  },
});
defineProperties(_, {
  isShapesVisible: {
    get: function getShapesVisible() {
      return idwcawp.$getShapesVisible(this);
    },
  },
});
defineProperties(_, {
  sources: {
    get: function getSources() {
      return idwcawp.$getSources(this);
    },
  },
});
defineProperties(_, {
  XToolTipPattern: {
    get: function getXToolTipPattern() {
      if (this.descriptor.hasXToolTipPattern()) {
        return this.descriptor.getXToolTipPattern();
      }
      return null;
    },
  },
});
defineProperties(_, {
  YToolTipPattern: {
    get: function getYToolTipPattern() {
      if (this.descriptor.hasYToolTipPattern()) {
        return this.descriptor.getYToolTipPattern();
      }
      return null;
    },
  },
});
defineProperties(_, {
  gradientVisible: {
    get: function isGradientVisible() {
      return this.descriptor.getGradientVisible();
    },
  },
});
_.subscribe = function subscribe_1(forceDisableDownsample) {
  idwcawp.$subscribe_2(this, forceDisableDownsample);
};
_.unsubscribe = function unsubscribe_0() {
  this.subscribed = false;
  idwcawp.$enqueueSubscriptionCheck(this.jsFigure);
};
_.subscribed = true;
cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit =
  createForClass("io.deephaven.web.client.api.widget.plot", "JsSeries", 59);
idwcawp.JsSeries$lambda$0$Type = function JsSeries$lambda$0$Type(tables_0) {
  this.tables_0 = tables_0;
};
defineClass(507, 1, $intern_19, idwcawp.JsSeries$lambda$0$Type);
_.accept = function accept_82(arg0) {
  idwcawp.lambda$0_14(this.tables_0, castTo(arg0, 153));
};
cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsSeries/lambda$0$Type",
    507
  );
idwcawp.JsSeriesDescriptor = function JsSeriesDescriptor() {};
idwcawp.JsSeriesDescriptor_0 = function JsSeriesDescriptor_0(source, axisMap) {
  var dataSources,
    value_0,
    value0,
    value1,
    value10,
    value2,
    value3,
    value4,
    value5,
    value6,
    value7,
    value8,
    value9;
  this.plotStyle = jb.$asString_2(
    idwcf.getRequiredProperty(source, "plotStyle")
  );
  this.name =
    ((value0 = idwcf.getProperty(source, "name", null)),
    value0 == null
      ? null
      : (jb.checkCriticalType_0(typeof value0 == "string"), value0));
  dataSources = castToJsArray(idwcf.getRequiredProperty(source, "dataSources"));
  this.dataSources = dataSources.map(
    makeLambdaFunction(
      idwcawp.JsSeriesDescriptor$lambda$0$Type.prototype.onInvoke,
      idwcawp.JsSeriesDescriptor$lambda$0$Type,
      [axisMap]
    )
  );
  this.linesVisible =
    ((value1 = idwcf.getProperty(source, "linesVisible", null)),
    value1 == null
      ? null
      : (jl.$clinit_Boolean(),
        jb.checkCriticalType_0(typeof value1 == "boolean"),
        jb.asBoolean(value1)
          ? ji.uncheckedCast(true)
          : ji.uncheckedCast(false)));
  this.shapesVisible =
    ((value2 = idwcf.getProperty(source, "shapesVisible", null)),
    value2 == null
      ? null
      : (jl.$clinit_Boolean(),
        jb.checkCriticalType_0(typeof value2 == "boolean"),
        jb.asBoolean(value2)
          ? ji.uncheckedCast(true)
          : ji.uncheckedCast(false)));
  this.gradientVisible =
    ((value3 = idwcf.getProperty(source, "gradientVisible", null)),
    value3 == null
      ? null
      : (jl.$clinit_Boolean(),
        jb.checkCriticalType_0(typeof value3 == "boolean"),
        jb.asBoolean(value3)
          ? ji.uncheckedCast(true)
          : ji.uncheckedCast(false)));
  this.lineColor =
    ((value4 = idwcf.getProperty(source, "lineColor", null)),
    value4 == null
      ? null
      : (jb.checkCriticalType_0(typeof value4 == "string"), value4));
  this.pointLabelFormat =
    ((value5 = idwcf.getProperty(source, "pointLabelFormat", null)),
    value5 == null
      ? null
      : (jb.checkCriticalType_0(typeof value5 == "string"), value5));
  this.xToolTipPattern =
    ((value6 = idwcf.getProperty(source, "xToolTipPattern", null)),
    value6 == null
      ? null
      : (jb.checkCriticalType_0(typeof value6 == "string"), value6));
  this.yToolTipPattern =
    ((value7 = idwcf.getProperty(source, "yToolTipPattern", null)),
    value7 == null
      ? null
      : (jb.checkCriticalType_0(typeof value7 == "string"), value7));
  this.shapeLabel =
    ((value8 = idwcf.getProperty(source, "shapeLabel", null)),
    value8 == null
      ? null
      : (jb.checkCriticalType_0(typeof value8 == "string"), value8));
  this.shapeSize =
    ((value9 = idwcf.getProperty(source, "shapeSize", null)),
    value9 == null
      ? null
      : ji.uncheckedCast(
          (jb.checkCriticalType_0(typeof value9 == "number"),
          jb.asDouble(value9))
        ));
  this.shapeColor =
    ((value10 = idwcf.getProperty(source, "shapeColor", null)),
    value10 == null
      ? null
      : (jb.checkCriticalType_0(typeof value10 == "string"), value10));
  this.shape =
    ((value_0 = idwcf.getProperty(source, "shape", null)),
    value_0 == null
      ? null
      : (jb.checkCriticalType_0(typeof value_0 == "string"), value_0));
};
idwcawp.lambda$0_15 = function lambda$0_15(axisMap_0, sourceSource_1) {
  return new idwcawp.JsSourceDescriptor_0(sourceSource_1, axisMap_0);
};
defineClass(
  180,
  1,
  { 180: 1 },
  idwcawp.JsSeriesDescriptor,
  idwcawp.JsSeriesDescriptor_0
);
cggl.Lio_deephaven_web_client_api_widget_plot_JsSeriesDescriptor_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsSeriesDescriptor",
    180
  );
idwcawp.$getClass_458 = function $getClass_458() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.JsSeriesDescriptor$lambda$0$Type =
  function JsSeriesDescriptor$lambda$0$Type(axisMap_0) {
    this.axisMap_0 = axisMap_0;
  };
defineClass(1505, $wnd.Function, {}, idwcawp.JsSeriesDescriptor$lambda$0$Type);
_.onInvoke = function onInvoke_280(arg0, arg1, arg2) {
  return idwcawp.lambda$0_15(this.axisMap_0, arg0);
};
idwcawp.JsSourceDescriptor = function JsSourceDescriptor() {};
idwcawp.JsSourceDescriptor_0 = function JsSourceDescriptor_0(source, axisMap) {
  var axisSource;
  axisSource = idwcf.getRequiredProperty(source, "axis");
  (
    instanceOfString(axisSource)
      ? ju.$hasStringValue(axisMap, ji.uncheckedCast(axisSource))
      : !!ju.$getEntry(axisMap.hashCodeMap, axisSource)
  )
    ? (this.axis = castTo(
        instanceOfString(axisSource)
          ? ju.$getStringValue(axisMap, ji.uncheckedCast(axisSource))
          : ju.getEntryValueOrNull(
              ju.$getEntry(axisMap.hashCodeMap, axisSource)
            ),
        100
      ))
    : instanceOf(axisSource, 100)
    ? (this.axis = castTo(axisSource, 100))
    : (this.axis = new idwcawp.JsAxisDescriptor_0(axisSource));
  this.table = castTo(idwcf.getRequiredProperty(source, "table"), 13);
  this.columnName = jb.$asString_2(
    idwcf.getRequiredProperty(source, "columnName")
  );
  this.type = jb.$asString_2(idwcf.getRequiredProperty(source, "type"));
};
defineClass(
  259,
  1,
  { 259: 1 },
  idwcawp.JsSourceDescriptor,
  idwcawp.JsSourceDescriptor_0
);
cggl.Lio_deephaven_web_client_api_widget_plot_JsSourceDescriptor_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "JsSourceDescriptor",
    259
  );
idwcawp.$$init_44 = function $$init_44(this$static) {
  this$static.values_0 = new $wnd.Map();
};
idwcawp.$allRequiredValuesSet = function $allRequiredValuesSet(this$static) {
  return (
    !this$static.oneClick_0.getRequireAllFiltersToDisplay() ||
    this$static.values_0.size == this$static.oneClick_0.getColumnsList().length
  );
};
idwcawp.$doFetchTable = function $doFetchTable(this$static, keys_0) {
  var promises;
  if (keys_0 == null || keys_0.length == 0) {
    return idwca.$getMergedTable(this$static.partitionedTable_0);
  } else if (keys_0.length == 1) {
    return idwca.$getTable(this$static.partitionedTable_0, keys_0[0]);
  } else {
    promises = castToJsArray(
      jus.$toArray_6(
        jus.$map_0(
          new jus.StreamImpl(null, ju.spliterator_5(keys_0, keys_0.length)),
          new idwcawp.OneClick$lambda$2$Type(this$static)
        ),
        new idwcawp.OneClick$0methodref$lambda$3$Type()
      )
    );
    return $wnd.Promise.all(promises).then(
      makeLambdaFunction(
        idwcawp.OneClick$lambda$4$Type.prototype.onInvoke_5,
        idwcawp.OneClick$lambda$4$Type,
        []
      )
    );
  }
};
idwcawp.$fetchTable = function $fetchTable(this$static) {
  var keys_0;
  keys_0 = idwcawp.$getCurrentKeys(this$static);
  if (
    idwcawp.allKeysMatch(keys_0, this$static.currentKeys) &&
    !!this$static.currentTable
  ) {
    return;
  }
  this$static.currentKeys = keys_0;
  idwcawp
    .$doFetchTable(this$static, keys_0)
    .then(
      makeLambdaFunction(
        idwcawp.OneClick$lambda$7$Type.prototype.onInvoke_5,
        idwcawp.OneClick$lambda$7$Type,
        [this$static, keys_0]
      )
    );
};
idwcawp.$getCurrentKeys = function $getCurrentKeys(this$static) {
  var i, key, key0, value_0;
  if (this$static.values_0.size == 0) {
    return null;
  }
  if (this$static.oneClick_0.getColumnsList().length == 1) {
    key0 = this$static.values_0.get(
      castToString(jb.$getAt(this$static.oneClick_0.getColumnsList(), 0))
    );
    return key0 != null
      ? stampJavaTypeInfo(
          getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
          $intern_7,
          1,
          5,
          [key0]
        )
      : null;
  }
  key = initUnidimensionalArray(
    cggl.Ljava_lang_String_2_classLit,
    $intern_8,
    2,
    this$static.oneClick_0.getColumnsList().length,
    6,
    1
  );
  for (i = 0; i < this$static.oneClick_0.getColumnsList().length; i++) {
    value_0 = this$static.values_0.get(
      castToString(jb.$getAt(this$static.oneClick_0.getColumnsList(), i))
    );
    value_0 != null &&
      (key[i] = (jb.checkCriticalType_0(typeof value_0 == "string"), value_0));
  }
  if (
    this$static.values_0.size == this$static.oneClick_0.getColumnsList().length
  ) {
    return stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
      $intern_7,
      1,
      5,
      [key]
    );
  }
  return ji.stampJavaTypeInfo_1(
    $wnd.Array.from(idwca.$getKeys(this$static.partitionedTable_0)).filter(
      makeLambdaFunction(
        idwcawp.OneClick$lambda$1$Type.prototype.onInvoke,
        idwcawp.OneClick$lambda$1$Type,
        [key]
      )
    ),
    initMultidimensionalArray(
      cggl.Ljava_lang_String_2_classLit,
      [$intern_33, $intern_8],
      [12, 2],
      6,
      [0, 0],
      2
    )
  );
};
idwcawp.$isRequireAllFiltersToDisplay = function $isRequireAllFiltersToDisplay(
  this$static
) {
  return this$static.oneClick_0.getRequireAllFiltersToDisplay();
};
idwcawp.$lambda$0_11 = function $lambda$0_11(this$static) {
  this$static.currentKeys != null && idwcawp.$fetchTable(this$static);
};
idwcawp.$lambda$2_6 = function $lambda$2_6(this$static, key_0) {
  return idwca.$getTable(this$static.partitionedTable_0, key_0);
};
idwcawp.$lambda$4_8 = function $lambda$4_8(resolved_0) {
  var tables;
  tables = castTo(
    jus.$toArray_6(
      jus.$filter_1(
        new jus.StreamImpl(
          null,
          ju.spliterator_5(resolved_0, resolved_0.length)
        ),
        new idwcawp.OneClick$lambda$5$Type()
      ),
      new idwcawp.OneClick$1methodref$lambda$6$Type()
    ),
    125
  );
  return tables.length > 1
    ? idwca.$mergeTables(tables[0].workerConnection, tables)
    : tables.length == 1
    ? $wnd.Promise.resolve(tables[0])
    : $wnd.Promise.resolve(null);
};
idwcawp.$lambda$7_6 = function $lambda$7_6(this$static, keys_1, table_1) {
  var event_0;
  if (maskUndefined(this$static.currentKeys) !== maskUndefined(keys_1)) {
    idwca.$close_0(table_1);
  } else {
    if (this$static.currentTable) {
      idwca.$close_0(this$static.currentTable);
      this$static.currentTable = null;
    }
    if (!table_1) {
      event_0 = jb.emptyObjectLiteral();
      event_0.detail = new idwcawp.DataUpdateEvent$1(
        stampJavaTypeInfo(
          getClassLiteralForArray(
            cggl.Lio_deephaven_web_client_api_widget_plot_JsSeries_2_classLit,
            1
          ),
          $intern_63,
          59,
          0,
          [this$static.jsSeries]
        )
      );
      idwca.$fireEvent_1(this$static.jsFigure, "updated", event_0);
    } else {
      this$static.currentTable = table_1;
    }
    idwcawp.$enqueueSubscriptionCheck(this$static.jsFigure);
  }
  return null;
};
idwcawp.$setPartitionedTable = function $setPartitionedTable(
  this$static,
  partitionedTable
) {
  !!this$static.keyAddedListener && idwca.$remove(this$static.keyAddedListener);
  this$static.partitionedTable_0 = partitionedTable;
  this$static.keyAddedListener = idwca.$addEventListener(
    partitionedTable,
    "keyadded",
    makeLambdaFunction(
      idwcawp.OneClick$lambda$0$Type.prototype.onEvent,
      idwcawp.OneClick$lambda$0$Type,
      [this$static]
    )
  );
  (!this$static.oneClick_0.getRequireAllFiltersToDisplay() ||
    this$static.values_0.size ==
      this$static.oneClick_0.getColumnsList().length) &&
    idwcawp.$fetchTable(this$static);
};
idwcawp.OneClick = function OneClick(jsFigure, oneClick, jsSeries) {
  idwcawp.$$init_44(this);
  this.jsFigure = jsFigure;
  this.oneClick_0 = oneClick;
  this.jsSeries = jsSeries;
};
idwcawp.allKeysMatch = function allKeysMatch(keys1, keys2) {
  var i;
  if (keys1 == null && keys2 == null) {
    return true;
  } else if (keys1 == null || keys2 == null || keys1.length != keys2.length) {
    return false;
  }
  for (i = 0; i < keys1.length; ++i) {
    if (!idwcawp.keyMatches(keys1[i], keys2[i])) {
      return false;
    }
  }
  return true;
};
idwcawp.keyMatches = function keyMatches(key1, key2) {
  if (key1 == null && key2 == null) {
    return true;
  } else if (key1 == null || key2 == null) {
    return false;
  }
  if (instanceOfString(key1)) {
    return jl.equals_Ljava_lang_Object__Z__devirtual$(key1, key2);
  }
  if (!instanceOf(key1, 12)) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  if (instanceOf(key2, 12)) {
    return ju.equals_57(castTo(key1, 12), castTo(key2, 12));
  }
  return false;
};
idwcawp.lambda$1_9 = function lambda$1_9(key_0, tableKey_1) {
  var i, strKey;
  if (!instanceOf(tableKey_1, 12)) {
    return jl.$clinit_Boolean(), ji.uncheckedCast(false);
  }
  strKey = castTo(tableKey_1, 12);
  if (strKey.length != key_0.length) {
    return jl.$clinit_Boolean(), ji.uncheckedCast(false);
  }
  for (i = 0; i < strKey.length; ++i) {
    if (key_0[i] != null && !jl.$equals_12(key_0[i], strKey[i])) {
      return jl.$clinit_Boolean(), ji.uncheckedCast(false);
    }
  }
  return jl.$clinit_Boolean(), ji.uncheckedCast(true);
};
defineClass(767, 1, {}, idwcawp.OneClick);
defineProperties(_, {
  columns: {
    get: function getColumns_8() {
      var fakeColumns, i;
      fakeColumns = newArray_0(this.oneClick_0.getColumnsList().length);
      for (i = 0; i < fakeColumns.length; i++) {
        setCheck(
          fakeColumns,
          i,
          jb.of_7(
            "name",
            jb.$getAt(this.oneClick_0.getColumnsList(), i),
            "type",
            jb.$getAt(this.oneClick_0.getColumnTypesList(), i)
          )
        );
      }
      return fakeColumns;
    },
  },
});
_.getValueForColumn = function getValueForColumn(columName) {
  return this.values_0.get(columName);
};
defineProperties(_, {
  requireAllFiltersToDisplay: {
    get: function isRequireAllFiltersToDisplay() {
      return idwcawp.$isRequireAllFiltersToDisplay(this);
    },
  },
});
_.setValueForColumn = function setValueForColumn(columnName, value_0) {
  var allWereSet;
  allWereSet =
    !this.oneClick_0.getRequireAllFiltersToDisplay() ||
    this.values_0.size == this.oneClick_0.getColumnsList().length;
  value_0 != null
    ? this.values_0.set(columnName, value_0)
    : this.values_0.delete(columnName);
  if (
    !this.oneClick_0.getRequireAllFiltersToDisplay() ||
    this.values_0.size == this.oneClick_0.getColumnsList().length
  ) {
    idwcawp.$fetchTable(this);
  } else if (allWereSet) {
    if (this.currentTable) {
      idwca.$close_0(this.currentTable);
      this.currentTable = null;
    }
    idwcawp.$enqueueSubscriptionCheck(this.jsFigure);
  }
};
cggl.Lio_deephaven_web_client_api_widget_plot_OneClick_2_classLit =
  createForClass("io.deephaven.web.client.api.widget.plot", "OneClick", 767);
idwcawp.OneClick$0methodref$lambda$3$Type =
  function OneClick$0methodref$lambda$3$Type() {};
defineClass(769, 1, {}, idwcawp.OneClick$0methodref$lambda$3$Type);
_.apply_2 = function apply_210(arg0) {
  return new Array(arg0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_OneClick$0methodref$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "OneClick/0methodref$lambda$3$Type",
    769
  );
idwcawp.OneClick$1methodref$lambda$6$Type =
  function OneClick$1methodref$lambda$6$Type() {};
defineClass(771, 1, {}, idwcawp.OneClick$1methodref$lambda$6$Type);
_.apply_2 = function apply_211(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_api_JsTable_2_classLit,
    $intern_57,
    13,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_api_widget_plot_OneClick$1methodref$lambda$6$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "OneClick/1methodref$lambda$6$Type",
    771
  );
idwcawp.$getClass_459 = function $getClass_459() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.OneClick$lambda$0$Type = function OneClick$lambda$0$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1565, $wnd.Function, $intern_35, idwcawp.OneClick$lambda$0$Type);
_.onEvent = function onEvent_31(arg0) {
  idwcawp.$lambda$0_11(this.$$outer_0);
};
idwcawp.$getClass_460 = function $getClass_460() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.OneClick$lambda$1$Type = function OneClick$lambda$1$Type(key_0) {
  this.key_0 = key_0;
};
defineClass(1566, $wnd.Function, {}, idwcawp.OneClick$lambda$1$Type);
_.onInvoke = function onInvoke_281(arg0, arg1, arg2) {
  return idwcawp.lambda$1_9(this.key_0, arg0);
};
idwcawp.OneClick$lambda$2$Type = function OneClick$lambda$2$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(768, 1, {}, idwcawp.OneClick$lambda$2$Type);
_.apply_1 = function apply_212(arg0) {
  return idwcawp.$lambda$2_6(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_api_widget_plot_OneClick$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "OneClick/lambda$2$Type",
    768
  );
idwcawp.$getClass_461 = function $getClass_461() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.OneClick$lambda$4$Type = function OneClick$lambda$4$Type() {};
defineClass(1567, $wnd.Function, $intern_36, idwcawp.OneClick$lambda$4$Type);
_.onInvoke_5 = function onInvoke_282(arg0) {
  return idwcawp.$lambda$4_8(castTo(arg0, 125));
};
idwcawp.OneClick$lambda$5$Type = function OneClick$lambda$5$Type() {};
defineClass(770, 1, {}, idwcawp.OneClick$lambda$5$Type);
_.test_0 = function test_23(arg0) {
  return !!castTo(arg0, 13);
};
cggl.Lio_deephaven_web_client_api_widget_plot_OneClick$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "OneClick/lambda$5$Type",
    770
  );
idwcawp.$getClass_462 = function $getClass_462() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcawp.OneClick$lambda$7$Type = function OneClick$lambda$7$Type(
  $$outer_0,
  keys_1
) {
  this.$$outer_0 = $$outer_0;
  this.keys_1 = keys_1;
};
defineClass(1568, $wnd.Function, $intern_36, idwcawp.OneClick$lambda$7$Type);
_.onInvoke_5 = function onInvoke_283(arg0) {
  return idwcawp.$lambda$7_6(this.$$outer_0, this.keys_1, castTo(arg0, 13));
};
idwcawp.$getAxis = function $getAxis(this$static) {
  return this$static.axis_0;
};
idwcawp.$getColumnType = function $getColumnType(this$static) {
  return this$static.columnType_0;
};
idwcawp.$initColumnType = function $initColumnType(this$static, tables) {
  if (this$static.sourceDescriptor.getTableId() != -1) {
    this$static.columnType_0 = idwca.$findColumn(
      castTo(
        tables.get(jl.valueOf_29(this$static.sourceDescriptor.getTableId())),
        13
      ),
      this$static.sourceDescriptor.getColumnName()
    ).type_0;
  } else if (this$static.sourceDescriptor.getPartitionedTableId() != -1) {
    this$static.columnType_0 = this$static.sourceDescriptor.getColumnType();
  } else {
    throw toJs(
      new idwcawp.SeriesDataSource$SeriesDataSourceException(this$static)
    );
  }
};
idwcawp.SeriesDataSource = function SeriesDataSource(axis_0, type_0) {
  this.axis_0 = axis_0;
  this.sourceDescriptor = type_0;
};
defineClass(153, 1, { 153: 1 }, idwcawp.SeriesDataSource);
defineProperties(_, {
  axis: {
    get: function getAxis() {
      return idwcawp.$getAxis(this);
    },
  },
});
defineProperties(_, {
  columnType: {
    get: function getColumnType() {
      return idwcawp.$getColumnType(this);
    },
  },
});
defineProperties(_, {
  type: {
    get: function getType_8() {
      return this.sourceDescriptor.getType();
    },
  },
});
cggl.Lio_deephaven_web_client_api_widget_plot_SeriesDataSource_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "SeriesDataSource",
    153
  );
idwcawp.SeriesDataSource$SeriesDataSourceException =
  function SeriesDataSource$SeriesDataSourceException(source) {
    jl.RuntimeException_1.call(this, "No table available for source");
    this.source_0 = source;
  };
defineClass(
  674,
  26,
  $intern_6,
  idwcawp.SeriesDataSource$SeriesDataSourceException
);
defineProperties(_, {
  message: {
    get: function getMessage_2() {
      return this.detailMessage;
    },
  },
});
_.getMessage_0 = function () {
  return this.message;
};
defineProperties(_, {
  source: {
    get: function getSource() {
      return this.source_0;
    },
  },
});
cggl.Lio_deephaven_web_client_api_widget_plot_SeriesDataSource$SeriesDataSourceException_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot",
    "SeriesDataSource/SeriesDataSourceException",
    674
  );
idwcawpe.$clinit_JsAxisFormatType = function $clinit_JsAxisFormatType() {
  idwcawpe.$clinit_JsAxisFormatType = emptyMethod;
  idwcawpe.CATEGORY =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisFormatType.CATEGORY;
  idwcawpe.NUMBER_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisFormatType.NUMBER;
};
idwcawpe.JsAxisFormatType = function JsAxisFormatType() {
  idwcawpe.$clinit_JsAxisFormatType();
};
defineClass(921, 1, {}, idwcawpe.JsAxisFormatType);
idwcawpe.CATEGORY = 0;
idwcawpe.NUMBER_0 = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_enums_JsAxisFormatType_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot.enums",
    "JsAxisFormatType",
    921
  );
idwcawpe.$clinit_JsAxisPosition = function $clinit_JsAxisPosition() {
  idwcawpe.$clinit_JsAxisPosition = emptyMethod;
  idwcawpe.TOP =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisPosition.TOP;
  idwcawpe.BOTTOM =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisPosition.BOTTOM;
  idwcawpe.LEFT =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisPosition.LEFT;
  idwcawpe.RIGHT =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisPosition.RIGHT;
  idwcawpe.NONE =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisPosition.NONE;
};
idwcawpe.JsAxisPosition = function JsAxisPosition() {
  idwcawpe.$clinit_JsAxisPosition();
};
defineClass(922, 1, {}, idwcawpe.JsAxisPosition);
idwcawpe.BOTTOM = 0;
idwcawpe.LEFT = 0;
idwcawpe.NONE = 0;
idwcawpe.RIGHT = 0;
idwcawpe.TOP = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_enums_JsAxisPosition_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot.enums",
    "JsAxisPosition",
    922
  );
idwcawpe.$clinit_JsAxisType = function $clinit_JsAxisType() {
  idwcawpe.$clinit_JsAxisType = emptyMethod;
  idwcawpe.X =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisType.X;
  idwcawpe.Y =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisType.Y;
  idwcawpe.SHAPE =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisType.SHAPE;
  idwcawpe.SIZE_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisType.SIZE;
  idwcawpe.LABEL =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisType.LABEL;
  idwcawpe.COLOR =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.AxisDescriptor.AxisType.COLOR;
};
idwcawpe.JsAxisType = function JsAxisType() {
  idwcawpe.$clinit_JsAxisType();
};
defineClass(923, 1, {}, idwcawpe.JsAxisType);
idwcawpe.COLOR = 0;
idwcawpe.LABEL = 0;
idwcawpe.SHAPE = 0;
idwcawpe.SIZE_0 = 0;
idwcawpe.X = 0;
idwcawpe.Y = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_enums_JsAxisType_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot.enums",
    "JsAxisType",
    923
  );
idwcawpe.$clinit_JsChartType = function $clinit_JsChartType() {
  idwcawpe.$clinit_JsChartType = emptyMethod;
  idwcawpe.XY =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.ChartDescriptor.ChartType.XY;
  idwcawpe.PIE =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.ChartDescriptor.ChartType.PIE;
  idwcawpe.OHLC =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.ChartDescriptor.ChartType.OHLC;
  idwcawpe.CATEGORY_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.ChartDescriptor.ChartType.CATEGORY;
  idwcawpe.XYZ =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.ChartDescriptor.ChartType.XYZ;
  idwcawpe.CATEGORY_3D =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.ChartDescriptor.ChartType.CATEGORY_3D;
  idwcawpe.TREEMAP_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.ChartDescriptor.ChartType.TREEMAP;
};
idwcawpe.JsChartType = function JsChartType() {
  idwcawpe.$clinit_JsChartType();
};
defineClass(924, 1, {}, idwcawpe.JsChartType);
idwcawpe.CATEGORY_0 = 0;
idwcawpe.CATEGORY_3D = 0;
idwcawpe.OHLC = 0;
idwcawpe.PIE = 0;
idwcawpe.TREEMAP_0 = 0;
idwcawpe.XY = 0;
idwcawpe.XYZ = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_enums_JsChartType_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot.enums",
    "JsChartType",
    924
  );
idwcawpe.$clinit_JsSeriesPlotStyle = function $clinit_JsSeriesPlotStyle() {
  idwcawpe.$clinit_JsSeriesPlotStyle = emptyMethod;
  idwcawpe.BAR =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.BAR;
  idwcawpe.STACKED_BAR =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.STACKED_BAR;
  idwcawpe.LINE =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.LINE;
  idwcawpe.AREA =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.AREA;
  idwcawpe.STACKED_AREA =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.STACKED_AREA;
  idwcawpe.PIE_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.PIE;
  idwcawpe.HISTOGRAM =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.HISTOGRAM;
  idwcawpe.OHLC_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.OHLC;
  idwcawpe.SCATTER =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.SCATTER;
  idwcawpe.STEP =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.STEP;
  idwcawpe.ERROR_BAR =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.ERROR_BAR;
  idwcawpe.TREEMAP_1 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SeriesPlotStyle.TREEMAP;
};
idwcawpe.JsSeriesPlotStyle = function JsSeriesPlotStyle() {
  idwcawpe.$clinit_JsSeriesPlotStyle();
};
defineClass(925, 1, {}, idwcawpe.JsSeriesPlotStyle);
idwcawpe.AREA = 0;
idwcawpe.BAR = 0;
idwcawpe.ERROR_BAR = 0;
idwcawpe.HISTOGRAM = 0;
idwcawpe.LINE = 0;
idwcawpe.OHLC_0 = 0;
idwcawpe.PIE_0 = 0;
idwcawpe.SCATTER = 0;
idwcawpe.STACKED_AREA = 0;
idwcawpe.STACKED_BAR = 0;
idwcawpe.STEP = 0;
idwcawpe.TREEMAP_1 = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_enums_JsSeriesPlotStyle_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot.enums",
    "JsSeriesPlotStyle",
    925
  );
idwcawpe.$clinit_JsSourceType = function $clinit_JsSourceType() {
  idwcawpe.$clinit_JsSourceType = emptyMethod;
  idwcawpe.X_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.X;
  idwcawpe.Y_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.Y;
  idwcawpe.Z =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.Z;
  idwcawpe.X_LOW =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.X_LOW;
  idwcawpe.X_HIGH =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.X_HIGH;
  idwcawpe.Y_LOW =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.Y_LOW;
  idwcawpe.Y_HIGH =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.Y_HIGH;
  idwcawpe.TIME =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.TIME;
  idwcawpe.OPEN =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.OPEN;
  idwcawpe.HIGH =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.HIGH;
  idwcawpe.LOW =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.LOW;
  idwcawpe.CLOSE =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.CLOSE;
  idwcawpe.SHAPE_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.SHAPE;
  idwcawpe.SIZE_1 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.SIZE;
  idwcawpe.LABEL_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.LABEL;
  idwcawpe.COLOR_0 =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.COLOR;
  idwcawpe.PARENT =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.PARENT;
  idwcawpe.TEXT =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.TEXT;
  idwcawpe.HOVER_TEXT =
    $wnd.dhinternal.io.deephaven.proto.console_pb.FigureDescriptor.SourceType.HOVER_TEXT;
};
idwcawpe.JsSourceType = function JsSourceType() {
  idwcawpe.$clinit_JsSourceType();
};
defineClass(926, 1, {}, idwcawpe.JsSourceType);
idwcawpe.CLOSE = 0;
idwcawpe.COLOR_0 = 0;
idwcawpe.HIGH = 0;
idwcawpe.HOVER_TEXT = 0;
idwcawpe.LABEL_0 = 0;
idwcawpe.LOW = 0;
idwcawpe.OPEN = 0;
idwcawpe.PARENT = 0;
idwcawpe.SHAPE_0 = 0;
idwcawpe.SIZE_1 = 0;
idwcawpe.TEXT = 0;
idwcawpe.TIME = 0;
idwcawpe.X_0 = 0;
idwcawpe.X_HIGH = 0;
idwcawpe.X_LOW = 0;
idwcawpe.Y_0 = 0;
idwcawpe.Y_HIGH = 0;
idwcawpe.Y_LOW = 0;
idwcawpe.Z = 0;
cggl.Lio_deephaven_web_client_api_widget_plot_enums_JsSourceType_2_classLit =
  createForClass(
    "io.deephaven.web.client.api.widget.plot.enums",
    "JsSourceType",
    926
  );
idwcf.from_2 = function from_2(exe, cancel) {
  var promise;
  promise = new $wnd.Promise(exe);
  promise.cancel = cancel;
  return promise;
};
idwcf.getProperty = function getProperty(source, propertyName, defaultValue) {
  if (jb.$has(source, propertyName)) {
    return jb.$getAsAny(source, propertyName);
  }
  return defaultValue;
};
idwcf.getRequiredProperty = function getRequiredProperty(source, propertyName) {
  var value_0;
  if (!jb.$has(source, propertyName)) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Property '" + propertyName + "' must be specified."
      )
    );
  }
  value_0 = jb.$getAsAny(source, propertyName);
  if (value_0 == null) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "Property '" + propertyName + "' must not be null."
      )
    );
  }
  return value_0;
};
idwcf.newArray_1 = function newArray_1(type_0) {
  switch (type_0) {
    case "double":
      return initUnidimensionalArray(cggl.D_classLit, $intern_31, 18, 0, 15, 1);
    case "float":
      return initUnidimensionalArray(
        cggl.F_classLit,
        { 274: 1, 3: 1 },
        18,
        0,
        15,
        1
      );
    case "java.time.Instant":
    case "java.time.ZonedDateTime":
    case "long":
      return initUnidimensionalArray(cggl.J_classLit, $intern_43, 18, 0, 14, 1);
    case "int":
      return initUnidimensionalArray(cggl.I_classLit, $intern_20, 18, 0, 15, 1);
    case "char":
      return initUnidimensionalArray(cggl.C_classLit, $intern_23, 18, 0, 15, 1);
    case "short":
      return initUnidimensionalArray(
        cggl.S_classLit,
        { 3: 1, 273: 1 },
        18,
        0,
        15,
        1
      );
    case "byte":
      return initUnidimensionalArray(cggl.B_classLit, $intern_55, 18, 0, 15, 1);
    case "boolean":
      return initUnidimensionalArray(cggl.Z_classLit, $intern_32, 18, 0, 16, 1);
  }
  return new $wnd.Array();
};
idwcf.$hasNext_0 = function $hasNext_0(this$static) {
  return ju.$hasNext_10(this$static.wrapped);
};
idwcf.JsIterator = function JsIterator(wrapped) {
  this.wrapped = wrapped;
};
defineClass(685, 1, {}, idwcf.JsIterator);
_.hasNext = function hasNext_0() {
  return idwcf.$hasNext_0(this);
};
_.next = function next_3() {
  var result;
  result = jb.emptyObjectLiteral();
  ju.$hasNext_10(this.wrapped) && (result.value = ju.$next_13(this.wrapped));
  result.done = ju.$hasNext_10(this.wrapped);
  return result;
};
cggl.Lio_deephaven_web_client_fu_JsIterator_2_classLit = createForClass(
  "io.deephaven.web.client.fu",
  "JsIterator",
  685
);
idwcf.$clinit_JsItr = function $clinit_JsItr() {
  idwcf.$clinit_JsItr = emptyMethod;
  idwcf.NO_REUSE = new idwcf.JsItr$1();
};
idwcf.iterate = function iterate(values) {
  idwcf.$clinit_JsItr();
  var itr, itrs;
  itr = new idwcf.JsItr$2(values);
  itrs = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_util_Iterator_2_classLit, 1),
    $intern_7,
    56,
    0,
    [itr]
  );
  return new idwcf.JsItr$lambda$0$Type(itrs);
};
idwcf.lambda$0_16 = function lambda$0_16(itrs_0) {
  idwcf.$clinit_JsItr();
  var toReturn;
  toReturn = itrs_0[0];
  itrs_0[0] = idwcf.NO_REUSE;
  return toReturn;
};
idwcf.lambda$1_10 = function lambda$1_10(callback_0, v_1, k_2) {
  idwcf.$clinit_JsItr();
  callback_0(k_2, v_1);
  return null;
};
idwcf.JsItr$1 = function JsItr$1() {};
defineClass(740, 1, $intern_12, idwcf.JsItr$1);
_.forEachRemaining = function forEachRemaining_0(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.remove_0 = function remove_2() {
  ju.$remove_10();
};
_.hasNext_1 = function hasNext_1() {
  throw toJs(new jl.UnsupportedOperationException_0("Iterator not reusable"));
};
_.next_1 = function next_4() {
  throw toJs(new jl.UnsupportedOperationException_0("Iterator not reusable"));
};
cggl.Lio_deephaven_web_client_fu_JsItr$1_2_classLit = createForClass(
  "io.deephaven.web.client.fu",
  "JsItr/1",
  740
);
idwcf.JsItr$2 = function JsItr$2(val$values) {
  this.val$values1 = val$values;
};
defineClass(741, 1, $intern_12, idwcf.JsItr$2);
_.forEachRemaining = function forEachRemaining_1(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.remove_0 = function remove_3() {
  ju.$remove_10();
};
_.hasNext_1 = function hasNext_2() {
  this.next_0 == null && (this.next_0 = this.val$values1.next());
  return !this.next_0.done;
};
_.next_1 = function next_5() {
  try {
    return this.next_0.value;
  } finally {
    this.next_0 = null;
  }
};
cggl.Lio_deephaven_web_client_fu_JsItr$2_2_classLit = createForClass(
  "io.deephaven.web.client.fu",
  "JsItr/2",
  741
);
idwcf.$forEach = function $forEach(this$static, action) {
  jl.$forEach_2(this$static, action);
};
idwcf.$iterator_0 = function $iterator_0(this$static) {
  return idwcf.lambda$0_16(this$static.itrs_0);
};
idwcf.JsItr$lambda$0$Type = function JsItr$lambda$0$Type(itrs_0) {
  this.itrs_0 = itrs_0;
};
defineClass(742, 1, {}, idwcf.JsItr$lambda$0$Type);
_.forEach_0 = function forEach_0(action) {
  idwcf.$forEach(this, action);
};
_.iterator_0 = function iterator_2() {
  return idwcf.$iterator_0(this);
};
cggl.Lio_deephaven_web_client_fu_JsItr$lambda$0$Type_2_classLit =
  createForClass("io.deephaven.web.client.fu", "JsItr/lambda$0$Type", 742);
idwcf.$getClass_463 = function $getClass_463() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.JsItr$lambda$1$Type = function JsItr$lambda$1$Type(callback_0) {
  this.callback_0 = callback_0;
};
defineClass(888, $wnd.Function, {}, idwcf.JsItr$lambda$1$Type);
_.onInvoke_1 = function onInvoke_284(arg0, arg1, arg2) {
  return idwcf.lambda$1_10(this.callback_0, arg0, arg1);
};
idwcf.warn = function warn(msgs) {
  $wnd.console.warn.apply(null, idwca.resolve(msgs));
};
defineClass(4699, 1, {});
idwcf.$$init_45 = function $$init_45(this$static) {
  this$static.onResolved = new $wnd.Array();
  this$static.onRejected = new $wnd.Array();
};
idwcf.$asPromise = function $asPromise(this$static, timeout) {
  idwcf.$timeout(this$static, timeout);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [this$static]
    )
  );
};
idwcf.$asPromise_0 = function $asPromise_0(this$static, mapper, cancel) {
  return idwcf.from_2(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$5$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$5$Type,
      [this$static, mapper]
    ),
    idwca.$andThen(
      cancel,
      makeLambdaFunction(
        idwcf.LazyPromise$2methodref$cancel$Type.prototype.run,
        idwcf.LazyPromise$2methodref$cancel$Type,
        [this$static]
      )
    )
  );
};
idwcf.$asPromise_1 = function $asPromise_1(this$static, cancel) {
  return idwcf.from_2(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$3$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$3$Type,
      [this$static]
    ),
    idwci.$beforeMe(
      cancel,
      makeLambdaFunction(
        idwcf.LazyPromise$0methodref$cancel$Type.prototype.run,
        idwcf.LazyPromise$0methodref$cancel$Type,
        [this$static]
      )
    )
  );
};
idwcf.$cancel_0 = function $cancel_0(this$static) {
  this$static.failed == null && this$static.isSuccess
    ? undefined
    : this$static.failed != null
    ? stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "Cancelled promise after it failed with",
          this$static.failed,
          this$static,
        ]
      )
    : idwcf.$fail(this$static, "User cancelled request");
  this$static.cancelled = true;
};
idwcf.$fail = function $fail(this$static, reason) {
  if (this$static.cancelled);
  else if (this$static.isSuccess) {
    throw toJs(new jl.AssertionError_0("Trying to fail after succeeding"));
  } else {
    this$static.failed = reason;
  }
  idwcf.runLater(
    makeLambdaFunction(
      idwcf.LazyPromise$5methodref$flushCallbacks$Type.prototype.run,
      idwcf.LazyPromise$5methodref$flushCallbacks$Type,
      [this$static]
    )
  );
};
idwcf.$flushCallbacks = function $flushCallbacks(this$static) {
  if (this$static.isScheduled) {
    return;
  }
  this$static.isScheduled = true;
  idwcf.runLater(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$15$Type.prototype.run,
      idwcf.LazyPromise$lambda$15$Type,
      [this$static]
    )
  );
};
idwcf.$lambda$11_3 = function $lambda$11_3(this$static, resolve_1) {
  resolve_1(this$static.succeeded);
};
idwcf.$lambda$15_0 = function $lambda$15_0(this$static) {
  this$static.isScheduled = false;
  if (this$static.failed != null) {
    while (this$static.onRejected.length > 0) {
      castToFunction(this$static.onRejected.pop())(this$static.failed);
    }
  } else if (this$static.failed == null && this$static.isSuccess) {
    while (this$static.onResolved.length > 0) {
      castToFunction(this$static.onResolved.pop())(this$static.succeeded);
    }
  } else {
    if (!(this$static.failed == null && this$static.succeeded == null)) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
  }
  this$static.onResolved.length = 0;
  this$static.onRejected.length = 0;
};
idwcf.$lambda$17_4 = function $lambda$17_4(this$static, wait_1) {
  !this$static.isSuccess &&
    this$static.failed == null &&
    !this$static.cancelled &&
    idwcf.$fail(this$static, "Timeout after " + wait_1 + "ms");
};
idwcf.$lambda$2_7 = function $lambda$2_7(this$static, resolve_0, reject_1) {
  idwcf.$spyReject(this$static, reject_1) &&
    (this$static.failed == null && this$static.succeeded != null
      ? idwcf.runLater(
          makeLambdaFunction(
            idwcf.LazyPromise$lambda$11$Type.prototype.run,
            idwcf.LazyPromise$lambda$11$Type,
            [this$static, resolve_0]
          )
        )
      : this$static.onResolved.push(
          makeLambdaFunction(
            idwcf.LazyPromise$4methodref$onInvoke$Type.prototype.apply_3,
            idwcf.LazyPromise$4methodref$onInvoke$Type,
            [resolve_0]
          )
        ));
};
idwcf.$lambda$3_5 = function $lambda$3_5(this$static, resolve_0, reject_1) {
  idwcf.$spyReject(this$static, reject_1) &&
    (this$static.failed == null && this$static.succeeded != null
      ? idwcf.runLater(
          makeLambdaFunction(
            idwcf.LazyPromise$lambda$11$Type.prototype.run,
            idwcf.LazyPromise$lambda$11$Type,
            [this$static, resolve_0]
          )
        )
      : this$static.onResolved.push(
          makeLambdaFunction(
            idwcf.LazyPromise$4methodref$onInvoke$Type.prototype.apply_3,
            idwcf.LazyPromise$4methodref$onInvoke$Type,
            [resolve_0]
          )
        ));
};
idwcf.$lambda$5_7 = function $lambda$5_7(
  this$static,
  mapper_1,
  resolve_1,
  reject_2
) {
  idwcf.$onSuccess(
    this$static,
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$7$Type.prototype.apply_3,
      idwcf.LazyPromise$lambda$7$Type,
      [mapper_1, reject_2, resolve_1]
    )
  );
  idwcf.$onFailure(
    this$static,
    makeLambdaFunction(
      idwcf.LazyPromise$1methodref$onInvoke$Type.prototype.apply_3,
      idwcf.LazyPromise$1methodref$onInvoke$Type,
      [reject_2]
    )
  );
};
idwcf.$lambda$9_4 = function $lambda$9_4(this$static, reject_1) {
  reject_1(this$static.failed);
};
idwcf.$onFailure = function $onFailure(this$static, failure) {
  if (
    (this$static.failed == null && this$static.isSuccess) ||
    this$static.cancelled
  ) {
    return;
  }
  this$static.onRejected.push(failure);
  this$static.failed != null && idwcf.$flushCallbacks(this$static);
};
idwcf.$onSuccess = function $onSuccess(this$static, success) {
  if (this$static.failed != null || this$static.cancelled) {
    return;
  }
  this$static.onResolved.push(success);
  this$static.failed == null &&
    this$static.isSuccess &&
    idwcf.$flushCallbacks(this$static);
};
idwcf.$spyReject = function $spyReject(this$static, reject) {
  this$static.cancelled &&
    this$static.failed == null &&
    (this$static.failed = "User cancelled request");
  if (this$static.failed != null) {
    idwcf.runLater(
      makeLambdaFunction(
        idwcf.LazyPromise$lambda$9$Type.prototype.run,
        idwcf.LazyPromise$lambda$9$Type,
        [this$static, reject]
      )
    );
    return false;
  }
  this$static.onRejected.push(
    makeLambdaFunction(
      idwcf.LazyPromise$3methodref$onInvoke$Type.prototype.apply_3,
      idwcf.LazyPromise$3methodref$onInvoke$Type,
      [reject]
    )
  );
  return true;
};
idwcf.$succeed = function $succeed(this$static, value_0) {
  if (this$static.cancelled);
  else if (this$static.failed != null) {
    throw toJs(
      new jl.AssertionError_0(
        "Trying to succeed after failing with message: " + this$static.failed
      )
    );
  } else {
    this$static.isSuccess = true;
    this$static.succeeded = value_0;
  }
  idwcf.runLater(
    makeLambdaFunction(
      idwcf.LazyPromise$6methodref$flushCallbacks$Type.prototype.run,
      idwcf.LazyPromise$6methodref$flushCallbacks$Type,
      [this$static]
    )
  );
};
idwcf.$timeout = function $timeout(this$static, wait) {
  var pid;
  pid = $wnd.goog.global.setTimeout(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$17$Type.prototype.onInvoke_4,
      idwcf.LazyPromise$lambda$17$Type,
      [this$static, wait]
    ),
    wait
  );
  idwcf.$onSuccess(
    this$static,
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$18$Type.prototype.apply_3,
      idwcf.LazyPromise$lambda$18$Type,
      [pid]
    )
  );
  idwcf.$onFailure(
    this$static,
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$19$Type.prototype.apply_3,
      idwcf.LazyPromise$lambda$19$Type,
      [pid]
    )
  );
  return this$static;
};
idwcf.LazyPromise = function LazyPromise() {
  idwcf.$$init_45(this);
};
idwcf.lambda$20_1 = function lambda$20_1(msg_0, error_1) {
  $wnd.goog.global.console.error(msg_0(), error_1);
  return $wnd.Promise.resolve(null);
};
idwcf.lambda$7_4 = function lambda$7_4(
  mapper_0,
  reject_1,
  resolve_2,
  result_3
) {
  var e, mapped;
  try {
    mapped = idwca.$lambda$12_0(
      mapper_0.$$outer_0,
      mapper_0.ticket_1,
      mapper_0.closer_2,
      castToNative(
        result_3,
        $wnd.dhinternal.io.deephaven.proto.ticket_pb.Ticket
      )
    );
  } catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 41)) {
      e = $e0;
      reject_1(e.getMessage_0());
      return;
    } else throw toJs($e0);
  }
  resolve_2(mapped);
};
idwcf.ofObject = function ofObject(obj) {
  return of(obj);
};
idwcf.runLater = function runLater(task) {
  $wnd.Promise.resolve(null)
    .then(
      makeLambdaFunction(
        idwcf.LazyPromise$lambda$0$Type.prototype.onInvoke_5,
        idwcf.LazyPromise$lambda$0$Type,
        [task]
      )
    )
    .catch(
      makeLambdaFunction(
        idwcf.LazyPromise$lambda$1$Type.prototype.onInvoke_5,
        idwcf.LazyPromise$lambda$1$Type,
        []
      )
    );
};
defineClass(75, 1, { 75: 1 }, idwcf.LazyPromise);
_.cancelled = false;
_.isScheduled = false;
_.isSuccess = false;
cggl.Lio_deephaven_web_client_fu_LazyPromise_2_classLit = createForClass(
  "io.deephaven.web.client.fu",
  "LazyPromise",
  75
);
idwcf.$getClass_464 = function $getClass_464() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$0methodref$cancel$Type =
  function LazyPromise$0methodref$cancel$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1049,
  $wnd.Function,
  $intern_49,
  idwcf.LazyPromise$0methodref$cancel$Type
);
_.run = function run_31() {
  idwcf.$cancel_0(this.$$outer_0);
};
idwcf.$getClass_465 = function $getClass_465() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$1methodref$onInvoke$Type =
  function LazyPromise$1methodref$onInvoke$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1061,
  $wnd.Function,
  $intern_48,
  idwcf.LazyPromise$1methodref$onInvoke$Type
);
_.apply_3 = function apply_213(arg0) {
  this.$$outer_0.call(null, arg0);
};
idwcf.$getClass_466 = function $getClass_466() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$2methodref$cancel$Type =
  function LazyPromise$2methodref$cancel$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1051,
  $wnd.Function,
  $intern_49,
  idwcf.LazyPromise$2methodref$cancel$Type
);
_.run = function run_32() {
  idwcf.$cancel_0(this.$$outer_0);
};
idwcf.$getClass_467 = function $getClass_467() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$3methodref$onInvoke$Type =
  function LazyPromise$3methodref$onInvoke$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1053,
  $wnd.Function,
  $intern_48,
  idwcf.LazyPromise$3methodref$onInvoke$Type
);
_.apply_3 = function apply_214(arg0) {
  this.$$outer_0.call(null, arg0);
};
idwcf.$getClass_468 = function $getClass_468() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$4methodref$onInvoke$Type =
  function LazyPromise$4methodref$onInvoke$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  944,
  $wnd.Function,
  $intern_48,
  idwcf.LazyPromise$4methodref$onInvoke$Type
);
_.apply_3 = function apply_215(arg0) {
  this.$$outer_0.call(null, arg0);
};
idwcf.$getClass_469 = function $getClass_469() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$5methodref$flushCallbacks$Type =
  function LazyPromise$5methodref$flushCallbacks$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1054,
  $wnd.Function,
  $intern_49,
  idwcf.LazyPromise$5methodref$flushCallbacks$Type
);
_.run = function run_33() {
  idwcf.$flushCallbacks(this.$$outer_0);
};
idwcf.$getClass_470 = function $getClass_470() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$6methodref$flushCallbacks$Type =
  function LazyPromise$6methodref$flushCallbacks$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1055,
  $wnd.Function,
  $intern_49,
  idwcf.LazyPromise$6methodref$flushCallbacks$Type
);
_.run = function run_34() {
  idwcf.$flushCallbacks(this.$$outer_0);
};
idwcf.$getClass_471 = function $getClass_471() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$0$Type = function LazyPromise$lambda$0$Type(task_0) {
  this.task_0 = task_0;
};
defineClass(1046, $wnd.Function, $intern_36, idwcf.LazyPromise$lambda$0$Type);
_.onInvoke_5 = function onInvoke_285(arg0) {
  return this.task_0.call(null), null;
};
idwcf.$getClass_472 = function $getClass_472() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$1$Type = function LazyPromise$lambda$1$Type() {};
defineClass(1047, $wnd.Function, {}, idwcf.LazyPromise$lambda$1$Type);
_.onInvoke_5 = function onInvoke_286(arg0) {
  return reportUncaughtException(idwcf.ofObject(arg0)), null;
};
idwcf.$getClass_473 = function $getClass_473() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$11$Type = function LazyPromise$lambda$11$Type(
  $$outer_0,
  resolve_1
) {
  this.$$outer_0 = $$outer_0;
  this.resolve_1 = resolve_1;
};
defineClass(943, $wnd.Function, $intern_49, idwcf.LazyPromise$lambda$11$Type);
_.run = function run_35() {
  idwcf.$lambda$11_3(this.$$outer_0, this.resolve_1);
};
idwcf.$getClass_474 = function $getClass_474() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$15$Type = function LazyPromise$lambda$15$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1056, $wnd.Function, $intern_49, idwcf.LazyPromise$lambda$15$Type);
_.run = function run_36() {
  idwcf.$lambda$15_0(this.$$outer_0);
};
idwcf.$getClass_475 = function $getClass_475() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$17$Type = function LazyPromise$lambda$17$Type(
  $$outer_0,
  wait_1
) {
  this.$$outer_0 = $$outer_0;
  this.wait_1 = wait_1;
};
defineClass(1057, $wnd.Function, {}, idwcf.LazyPromise$lambda$17$Type);
_.onInvoke_4 = function onInvoke_287(arg0) {
  idwcf.$lambda$17_4(this.$$outer_0, this.wait_1);
};
_.wait_1 = 0;
idwcf.$getClass_476 = function $getClass_476() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$18$Type = function LazyPromise$lambda$18$Type(pid_0) {
  this.pid_0 = pid_0;
};
defineClass(1058, $wnd.Function, $intern_48, idwcf.LazyPromise$lambda$18$Type);
_.apply_3 = function apply_216(arg0) {
  $wnd.goog.global.clearTimeout(this.pid_0);
};
_.pid_0 = 0;
idwcf.$getClass_477 = function $getClass_477() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$19$Type = function LazyPromise$lambda$19$Type(pid_0) {
  this.pid_0 = pid_0;
};
defineClass(1059, $wnd.Function, $intern_48, idwcf.LazyPromise$lambda$19$Type);
_.apply_3 = function apply_217(arg0) {
  $wnd.goog.global.clearTimeout(this.pid_0);
};
_.pid_0 = 0;
idwcf.$getClass_478 = function $getClass_478() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$2$Type = function LazyPromise$lambda$2$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(123, $wnd.Function, {}, idwcf.LazyPromise$lambda$2$Type);
_.onInvoke_6 = function onInvoke_288(arg0, arg1) {
  idwcf.$lambda$2_7(this.$$outer_0, arg0, arg1);
};
idwcf.$getClass_479 = function $getClass_479() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$20$Type = function LazyPromise$lambda$20$Type(msg_0) {
  this.msg_0 = msg_0;
};
defineClass(882, $wnd.Function, {}, idwcf.LazyPromise$lambda$20$Type);
_.onInvoke_5 = function onInvoke_289(arg0) {
  return idwcf.lambda$20_1(this.msg_0, arg0);
};
idwcf.$getClass_480 = function $getClass_480() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$3$Type = function LazyPromise$lambda$3$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1048, $wnd.Function, {}, idwcf.LazyPromise$lambda$3$Type);
_.onInvoke_6 = function onInvoke_290(arg0, arg1) {
  idwcf.$lambda$3_5(this.$$outer_0, arg0, arg1);
};
idwcf.$getClass_481 = function $getClass_481() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$5$Type = function LazyPromise$lambda$5$Type(
  $$outer_0,
  mapper_1
) {
  this.$$outer_0 = $$outer_0;
  this.mapper_1 = mapper_1;
};
defineClass(1050, $wnd.Function, {}, idwcf.LazyPromise$lambda$5$Type);
_.onInvoke_6 = function onInvoke_291(arg0, arg1) {
  idwcf.$lambda$5_7(this.$$outer_0, this.mapper_1, arg0, arg1);
};
idwcf.$getClass_482 = function $getClass_482() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$7$Type = function LazyPromise$lambda$7$Type(
  mapper_0,
  reject_1,
  resolve_2
) {
  this.mapper_0 = mapper_0;
  this.reject_1 = reject_1;
  this.resolve_2 = resolve_2;
};
defineClass(1060, $wnd.Function, $intern_48, idwcf.LazyPromise$lambda$7$Type);
_.apply_3 = function apply_218(arg0) {
  idwcf.lambda$7_4(this.mapper_0, this.reject_1, this.resolve_2, arg0);
};
idwcf.$getClass_483 = function $getClass_483() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcf.LazyPromise$lambda$9$Type = function LazyPromise$lambda$9$Type(
  $$outer_0,
  reject_1
) {
  this.$$outer_0 = $$outer_0;
  this.reject_1 = reject_1;
};
defineClass(1052, $wnd.Function, $intern_49, idwcf.LazyPromise$lambda$9$Type);
_.run = function run_37() {
  idwcf.$lambda$9_4(this.$$outer_0, this.reject_1);
};
idwci.CommandInfo = function CommandInfo(code_0, result) {
  this.code_0 = code_0;
  this.result_0 = result;
};
defineClass(693, 1, {}, idwci.CommandInfo);
defineProperties(_, {
  code: {
    get: function getCode() {
      return this.code_0;
    },
  },
});
defineProperties(_, {
  result: {
    get: function getResult() {
      return this.result_0;
    },
  },
});
cggl.Lio_deephaven_web_client_ide_CommandInfo_2_classLit = createForClass(
  "io.deephaven.web.client.ide",
  "CommandInfo",
  693
);
idwci.IdeClient = function IdeClient() {};
idwci.getExistingSession = function getExistingSession(
  websocketUrl,
  authToken,
  serviceId,
  language
) {
  var ideConnection;
  ideConnection = new idwci.IdeConnection(
    websocketUrl,
    null,
    (jl.$clinit_Boolean(), ji.uncheckedCast(true))
  );
  return idwca.$startSession(ideConnection, language);
};
defineClass(927, 1, {}, idwci.IdeClient);
_.getExistingSession = function getExistingSession_old(
  websocketUrl,
  authToken,
  serviceId,
  language
) {
  var ideConnection;
  return (
    (ideConnection = new idwci.IdeConnection(
      websocketUrl,
      null,
      (jl.$clinit_Boolean(), ji.uncheckedCast(true))
    )),
    idwca.$startSession(ideConnection, language)
  );
};
cggl.Lio_deephaven_web_client_ide_IdeClient_2_classLit = createForClass(
  "io.deephaven.web.client.ide",
  "IdeClient",
  927
);
idwci.$$init_46 = function $$init_46(this$static) {
  this$static.token_0 = new idwsd.ConnectToken();
};
idwci.$close_5 = function $close_5(this$static) {
  instanceOf(this$static.connection.supplier, 82) &&
    idwca.$forceClose(castTo(this$static.connection.supplier.valueOf_0(), 58));
  this$static.closed_0 = true;
  idwsf.$clinit_RunnableHelper();
};
idwci.$getClass_484 = function $getClass_484() {
  return cggl.Lio_deephaven_web_client_ide_IdeConnection_2_classLit;
};
idwci.$logPrefix = function $logPrefix(this$static) {
  return "IdeConnection on " + this$static.serverUrl + ": ";
};
idwci.$notifyServerShutdown = function $notifyServerShutdown(
  this$static,
  success
) {
  var details, elements, eventDetails, ii, jj, retval, trace, traces;
  if (success.getAbnormalTermination()) {
    ji.uncheckedCast(success.getReason()).length == 0
      ? (retval = new jl.StringBuilder_1("Server exited abnormally."))
      : (retval = new jl.StringBuilder_1(success.getReason()));
    traces = success.getStackTracesList();
    for (ii = 0; ii < traces.length; ++ii) {
      trace = castToNative(
        jb.$getAt(traces, ii),
        $wnd.dhinternal.io.deephaven.proto.session_pb
          .TerminationNotificationResponse.StackTrace
      );
      retval.string += "\n\n";
      ii != 0
        ? jl.$append_9(
            jl.$append_9(
              jl.$append_9(
                ((retval.string += "Caused By: "), retval),
                trace.getType()
              ),
              ": "
            ),
            trace.getMessage()
          )
        : jl.$append_9(
            jl.$append_9(jl.$append_9(retval, trace.getType()), ": "),
            trace.getMessage()
          );
      elements = trace.getElementsList();
      for (jj = 0; jj < elements.length; ++jj) {
        jl.$append_9(
          ((retval.string += "\n"), retval),
          castToString(jb.$getAt(elements, jj))
        );
      }
    }
    details = retval.string;
  } else {
    details = "Server exited normally.";
  }
  eventDetails = jb.emptyObjectLiteral();
  eventDetails.detail = details;
  idwca.$fireEvent_0(
    this$static,
    "shutdown",
    new $wnd.CustomEvent("shutdown", eventDetails)
  );
  idwca.$notifyConnectionError(this$static, new idwci.IdeConnection$1(details));
};
idwci.IdeConnection = function IdeConnection(
  serverUrl,
  connectOptions,
  fromJava
) {
  idwca.QueryConnectable.call(this);
  idwci.$$init_46(this);
  this.serverUrl = jl.$replaceAll(serverUrl, "/+$", "");
  idwsf.$clinit_RunnableHelper();
  connectOptions != null
    ? (this.options_0 = new idwca.ConnectOptions_0(connectOptions))
    : (this.options_0 = new idwca.ConnectOptions());
  if (fromJava != (jl.$clinit_Boolean(), TRUE)) {
    idwcf.warn(
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "dh.IdeConnection constructor is deprecated, please create a dh.CoreClient, call login(), then call getAsIdeConnection()",
        ]
      )
    );
    idwsd.$setType_1(this.token_0, "Anonymous");
    idwsd.$setValue(this.token_0, "");
    idwca
      .$whenServerReady(
        castTo(this.connection.supplier.valueOf_0(), 58),
        "login"
      )
      .then(
        makeLambdaFunction(
          idwci.IdeConnection$lambda$0$Type.prototype.onInvoke_5,
          idwci.IdeConnection$lambda$0$Type,
          []
        )
      );
  }
};
defineClass(289, 257, $intern_51, idwci.IdeConnection);
_.close = function close_9() {
  idwci.$close_5(this);
};
_.getObject = function getObject(definitionObject) {
  var conn;
  conn = castTo(this.connection.supplier.valueOf_0(), 58);
  return idwca
    .$onConnected(this)
    .then(
      makeLambdaFunction(
        idwci.IdeConnection$lambda$1$Type.prototype.onInvoke_5,
        idwci.IdeConnection$lambda$1$Type,
        [conn, definitionObject]
      )
    );
};
_.logPrefix = function logPrefix_0() {
  return idwci.$logPrefix(this);
};
_.running = function running_0() {
  return !instanceOf(this.connection.supplier, 82) ||
    idwca.$isUsable(castTo(this.connection.supplier.valueOf_0(), 58))
    ? $wnd.Promise.resolve(this)
    : $wnd.Promise.reject("Cannot connect, session is dead.");
};
_.subscribeToFieldUpdates = function subscribeToFieldUpdates_0(callback) {
  var cleanupPromise, conn;
  conn = castTo(this.connection.supplier.valueOf_0(), 58);
  cleanupPromise = idwca
    .$onConnected(this)
    .then(
      makeLambdaFunction(
        idwci.IdeConnection$lambda$2$Type.prototype.onInvoke_5,
        idwci.IdeConnection$lambda$2$Type,
        [conn, callback]
      )
    );
  return makeLambdaFunction(
    idwci.IdeConnection$lambda$3$Type.prototype.run,
    idwci.IdeConnection$lambda$3$Type,
    [cleanupPromise]
  );
};
idwci.EVENT_DISCONNECT_6 = "disconnect";
idwci.EVENT_RECONNECT_6 = "reconnect";
idwci.EVENT_SHUTDOWN = "shutdown";
idwci.HACK_CONNECTION_FAILURE = "hack-connection-failure";
cggl.Lio_deephaven_web_client_ide_IdeConnection_2_classLit = createForClass(
  "io.deephaven.web.client.ide",
  "IdeConnection",
  289
);
idwci.$getCode = function $getCode() {
  return $wnd.dhinternal.grpcWeb.grpc.Code.Unavailable;
};
idwci.IdeConnection$1 = function IdeConnection$1(val$details) {
  this.val$details2 = val$details;
};
defineClass(675, 1, {}, idwci.IdeConnection$1);
defineProperties(_, {
  code: {
    get: function getCode_0() {
      return idwci.$getCode();
    },
  },
});
defineProperties(_, {
  details: {
    get: function getDetails() {
      return this.val$details2;
    },
  },
});
defineProperties(_, {
  metadata: {
    get: function getMetadata() {
      return new $wnd.dhinternal.browserHeaders.BrowserHeaders();
    },
  },
});
cggl.Lio_deephaven_web_client_ide_IdeConnection$1_2_classLit = createForClass(
  "io.deephaven.web.client.ide",
  "IdeConnection/1",
  675
);
idwci.$getClass_485 = function $getClass_485() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeConnection$lambda$0$Type = function IdeConnection$lambda$0$Type() {};
defineClass(1463, $wnd.Function, $intern_36, idwci.IdeConnection$lambda$0$Type);
_.onInvoke_5 = function onInvoke_292(arg0) {
  return $wnd.Promise.resolve(null);
};
idwci.$getClass_486 = function $getClass_486() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeConnection$lambda$1$Type = function IdeConnection$lambda$1$Type(
  conn_0,
  definitionObject_1
) {
  this.conn_0 = conn_0;
  this.definitionObject_1 = definitionObject_1;
};
defineClass(1464, $wnd.Function, $intern_36, idwci.IdeConnection$lambda$1$Type);
_.onInvoke_5 = function onInvoke_293(arg0) {
  var lastArg;
  return idwca.$getJsObject(
    this.conn_0,
    ((lastArg = this.definitionObject_1),
    throwClassCastExceptionUnlessNull(arg0),
    lastArg)
  );
};
idwci.$getClass_487 = function $getClass_487() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeConnection$lambda$2$Type = function IdeConnection$lambda$2$Type(
  conn_0,
  callback_1
) {
  this.conn_0 = conn_0;
  this.callback_1 = callback_1;
};
defineClass(1465, $wnd.Function, $intern_36, idwci.IdeConnection$lambda$2$Type);
_.onInvoke_5 = function onInvoke_294(arg0) {
  var lastArg;
  return $wnd.Promise.resolve(
    idwca.$subscribeToFieldUpdates(
      this.conn_0,
      ((lastArg = this.callback_1),
      throwClassCastExceptionUnlessNull(arg0),
      lastArg)
    )
  );
};
idwci.$getClass_488 = function $getClass_488() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeConnection$lambda$3$Type = function IdeConnection$lambda$3$Type(
  cleanupPromise_0
) {
  this.cleanupPromise_0 = cleanupPromise_0;
};
defineClass(1466, $wnd.Function, $intern_49, idwci.IdeConnection$lambda$3$Type);
_.run = function run_38() {
  this.cleanupPromise_0.then(
    makeLambdaFunction(
      idwci.IdeConnection$lambda$4$Type.prototype.onInvoke_5,
      idwci.IdeConnection$lambda$4$Type,
      []
    )
  );
};
idwci.$getClass_489 = function $getClass_489() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeConnection$lambda$4$Type = function IdeConnection$lambda$4$Type() {};
defineClass(1467, $wnd.Function, $intern_36, idwci.IdeConnection$lambda$4$Type);
_.onInvoke_5 = function onInvoke_295(arg0) {
  return castToFunction(arg0)(), null;
};
idwci.$$init_47 = function $$init_47(this$static) {
  this$static.pendingAutocompleteCalls = new ju.HashMap();
  this$static.autocompleteStreamCloseTimeout = new idwci.IdeSession$1(
    this$static
  );
};
idwci.$ensureStream = function $ensureStream(this$static) {
  cgguc.$schedule(this$static.autocompleteStreamCloseTimeout);
  if (this$static.currentStream) {
    return this$static.currentStream;
  }
  this$static.currentStream = idwci.$get_11(this$static.streamFactory);
  this$static.currentStream.onData(
    makeLambdaFunction(
      idwci.IdeSession$lambda$19$Type.prototype.apply_3,
      idwci.IdeSession$lambda$19$Type,
      [this$static]
    )
  );
  this$static.currentStream.onStatus(
    makeLambdaFunction(
      idwci.IdeSession$lambda$20$Type.prototype.apply_3,
      idwci.IdeSession$lambda$20$Type,
      [this$static]
    )
  );
  this$static.currentStream.onEnd_0(
    makeLambdaFunction(
      idwci.IdeSession$lambda$22$Type.prototype.apply_3,
      idwci.IdeSession$lambda$22$Type,
      [this$static]
    )
  );
  return this$static.currentStream;
};
idwci.$getAutoCompleteRequest = function $getAutoCompleteRequest(this$static) {
  var request;
  request =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteRequest();
  request.setConsoleId(this$static.result_0);
  request.setRequestId(this$static.nextAutocompleteRequestId);
  ++this$static.nextAutocompleteRequestId;
  return request;
};
idwci.$lambda$10_3 = function $lambda$10_3(this$static, table_0) {
  var event_0;
  event_0 = jb.emptyObjectLiteral();
  event_0.detail = table_0;
  idwca.$fireEvent_0(
    this$static,
    "tableopened",
    new $wnd.CustomEvent("tableopened", event_0)
  );
  return $wnd.Promise.resolve(table_0);
};
idwci.$lambda$11_4 = function $lambda$11_4(this$static, bindRequest_1, c_1) {
  return this$static.connection.consoleServiceClient.bindTableToVariable(
    bindRequest_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwci.IdeSession$5methodref$apply$Type.prototype.onInvoke_16,
      idwci.IdeSession$5methodref$apply$Type,
      [c_1]
    )
  );
};
idwci.$lambda$14_5 = function $lambda$14_5(this$static, request_1, c_1) {
  this$static.connection.consoleServiceClient.executeCommand(
    request_1,
    this$static.connection.metadata_0,
    makeLambdaFunction(
      idwci.IdeSession$6methodref$apply$Type.prototype.onInvoke_17,
      idwci.IdeSession$6methodref$apply$Type,
      [c_1]
    )
  );
};
idwci.$lambda$19_0 = function $lambda$19_0(this$static, res_0) {
  res_0.getSuccess()
    ? idwcf.$succeed(
        castTo(
          ju.$remove_0(
            this$static.pendingAutocompleteCalls,
            jl.valueOf_29(res_0.getRequestId())
          ),
          75
        ),
        res_0
      )
    : idwcf.$fail(
        castTo(
          ju.$remove_0(
            this$static.pendingAutocompleteCalls,
            jl.valueOf_29(res_0.getRequestId())
          ),
          75
        ),
        "Error occurred handling autocomplete on the server, probably request is out of date"
      );
};
idwci.$lambda$20_0 = function $lambda$20_0(this$static, status_0) {
  var init;
  if (!idwcabs.$isOk(status_0)) {
    init = jb.emptyObjectLiteral();
    init.detail = status_0.details;
    idwca.$fireEvent_0(
      this$static,
      "requestfailed",
      new $wnd.CustomEvent("requestfailed", init)
    );
    jl.$forEach_2(
      new ju.AbstractMap$2(this$static.pendingAutocompleteCalls),
      new idwci.IdeSession$lambda$21$Type(status_0)
    );
    ju.$reset(this$static.pendingAutocompleteCalls);
  }
};
idwci.$lambda$22_2 = function $lambda$22_2(this$static) {
  this$static.currentStream = null;
  cgguc.$cancel(this$static.autocompleteStreamCloseTimeout);
  ju.$reset(this$static.pendingAutocompleteCalls);
};
idwci.$lambda$5_8 = function $lambda$5_8(
  this$static,
  applyPreviewColumns_1,
  varDef_1
) {
  var event_0, table;
  table = idwca.$getTable_0(
    this$static.connection,
    varDef_1,
    applyPreviewColumns_1
  );
  event_0 = jb.emptyObjectLiteral();
  event_0.detail = table;
  idwca.$fireEvent_0(
    this$static,
    "tableopened",
    new $wnd.CustomEvent("tableopened", event_0)
  );
  return table;
};
idwci.$lambda$9_5 = function $lambda$9_5(this$static, table_0) {
  var event_0;
  event_0 = jb.emptyObjectLiteral();
  event_0.detail = table_0;
  idwca.$fireEvent_0(
    this$static,
    "tableopened",
    new $wnd.CustomEvent("tableopened", event_0)
  );
  return $wnd.Promise.resolve(table_0);
};
idwci.$toContext = function $toContext(context) {
  var contextObj, result;
  contextObj = context;
  result =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.CompletionContext();
  jb.$has(contextObj, "triggerCharacter") &&
    result.setTriggerCharacter(
      jb.$asString_2(jb.$getAsAny(contextObj, "triggerCharacter"))
    );
  result.setTriggerKind(jb.$asInt(jb.$getAsAny(contextObj, "triggerKind")));
  return result;
};
idwci.$toPosition = function $toPosition(pos) {
  var posObj, result;
  posObj = pos;
  result = new $wnd.dhinternal.io.deephaven.proto.console_pb.Position();
  result.setLine(jb.$asInt(jb.$getAsAny(posObj, "line")));
  result.setCharacter(jb.$asInt(jb.$getAsAny(posObj, "character")));
  return result;
};
idwci.$toRange = function $toRange(range) {
  var rangeObj, result;
  rangeObj = range;
  result = new $wnd.dhinternal.io.deephaven.proto.console_pb.DocumentRange();
  result.setStart(idwci.$toPosition(jb.$getAsAny(rangeObj, "start")));
  result.setEnd(idwci.$toPosition(jb.$getAsAny(rangeObj, "end")));
  return result;
};
idwci.$toVersionedTextDoc = function $toVersionedTextDoc(textDoc) {
  var textDocObj, textDocument;
  textDocObj = textDoc;
  textDocument =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.VersionedTextDocumentIdentifier();
  textDocument.setUri(jb.$asString_2(jb.$getAsAny(textDocObj, "uri")));
  jb.$has(textDocObj, "version") &&
    textDocument.setVersion(jb.$asDouble(jb.$getAsAny(textDocObj, "version")));
  return textDocument;
};
idwci.IdeSession = function IdeSession(connection, connectionResult, closer) {
  var factory;
  idwca.HasEventHandling.call(this);
  idwci.$$init_47(this);
  this.result_0 = connectionResult;
  new $wnd.Set();
  this.connection = connection;
  this.closer = closer;
  factory = new idwcabs.BiDiStream$Factory(
    new idwca.WorkerConnection$25methodref$metadata$Type(connection),
    new idwca.WorkerConnection$26methodref$newTicketInt$Type(connection.config)
  );
  this.streamFactory = new idwci.IdeSession$lambda$0$Type(factory, connection);
};
idwci.lambda$0_17 = function lambda$0_17(factory_0, connection_1) {
  return idwcabs.$create(
    factory_0,
    new idwci.IdeSession$0methodref$autoCompleteStream$Type(
      connection_1.consoleServiceClient
    ),
    new idwci.IdeSession$lambda$2$Type(connection_1),
    new idwci.IdeSession$lambda$3$Type(connection_1),
    new $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteRequest()
  );
};
idwci.lambda$16_3 = function lambda$16_3(promise_0, response_1) {
  var changes;
  changes = idwcac.from_1(response_1.getChanges());
  response_1.getErrorMessage() == null ||
  ji.uncheckedCast(response_1.getErrorMessage()).length == 0
    ? idwcf.$succeed(promise_0, new idwcac.JsCommandResult(changes, null))
    : idwcf.$succeed(
        promise_0,
        new idwcac.JsCommandResult(changes, response_1.getErrorMessage())
      );
  return null;
};
idwci.lambda$18_2 = function lambda$18_2() {
  throw toJs(new jl.UnsupportedOperationException_0("cancelCommand"));
};
idwci.lambda$2_14 = function lambda$2_14(connection_0, first_1, headers_2) {
  return connection_0.consoleServiceClient.openAutoCompleteStream(
    first_1,
    headers_2
  );
};
idwci.lambda$21_0 = function lambda$21_0(status_0, p_1) {
  idwcf.$fail(p_1, "Connection error" + status_0.details);
};
idwci.lambda$3_6 = function lambda$3_6(connection_0, next_1, headers_2, c_3) {
  return connection_0.consoleServiceClient.nextAutoCompleteStream(
    next_1,
    headers_2,
    makeLambdaFunction(
      idwci.IdeSession$1methodref$apply$Type.prototype.onInvoke_20,
      idwci.IdeSession$1methodref$apply$Type,
      [c_3]
    )
  );
};
defineClass(694, 57, { 57: 1 }, idwci.IdeSession);
_.bindTableToVariable = function bindTableToVariable(table, name_0) {
  var bindRequest;
  bindRequest =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.BindTableToVariableRequest();
  bindRequest.setTableId(idwca.$makeTicket(idwca.$state(table).handle));
  bindRequest.setVariableName(name_0);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwci.IdeSession$lambda$11$Type(this, bindRequest)]
    )
  ).then(
    makeLambdaFunction(
      idwci.IdeSession$lambda$13$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$13$Type,
      []
    )
  );
};
_.changeDocument = function changeDocument(params) {
  var change,
    changeItem,
    changeList,
    changes,
    i,
    jsMap,
    request,
    textDoc,
    textDocument,
    wrapper;
  jsMap = params;
  request =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.ChangeDocumentRequest();
  request.setConsoleId(this.result_0);
  textDoc = jb.$getAsAny(jsMap, "textDocument");
  textDocument =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.VersionedTextDocumentIdentifier();
  textDocument.setUri(jb.$asString_2(jb.$getAsAny(textDoc, "uri")));
  textDocument.setVersion(jb.$asDouble(jb.$getAsAny(textDoc, "version")));
  request.setTextDocument(textDocument);
  changes = jb.$asArrayLike(jb.$getAsAny(jsMap, "contentChanges"));
  changeList = new $wnd.Array();
  for (i = 0; i < jb.$getLength(changes); i++) {
    change = jb.$getAtAsAny(changes, i);
    changeItem =
      new $wnd.dhinternal.io.deephaven.proto.console_pb.ChangeDocumentRequest.TextDocumentContentChangeEvent();
    changeItem.setText(jb.$asString_2(jb.$getAsAny(change, "text")));
    jb.$has(change, "rangeLength") &&
      changeItem.setRangeLength(jb.$asInt(jb.$getAsAny(change, "rangeLength")));
    jb.$has(change, "range") &&
      changeItem.setRange(idwci.$toRange(jb.$getAsAny(change, "range")));
    changeList.push(changeItem);
  }
  request.setContentChangesList(changeList);
  wrapper =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteRequest();
  wrapper.setConsoleId(this.result_0);
  wrapper.setChangeDocument(request);
  idwci.$ensureStream(this).send_0(wrapper);
};
_.close = function close_10() {
  ju.$reset(this.pendingAutocompleteCalls);
  idwca.$run(this.closer);
};
_.closeDocument = function closeDocument(params) {
  var jsMap, request, textDocument, wrapper;
  jsMap = params;
  request =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.CloseDocumentRequest();
  request.setConsoleId(this.result_0);
  textDocument = idwci.$toVersionedTextDoc(jb.$getAsAny(jsMap, "textDocument"));
  request.setTextDocument(textDocument);
  wrapper =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteRequest();
  wrapper.setConsoleId(this.result_0);
  wrapper.setCloseDocument(request);
  idwci.$ensureStream(this).send_0(wrapper);
};
_.emptyTable = function emptyTable(size_0) {
  return idwca.$emptyTable(this.connection, size_0);
};
_.getCompletionItems = function getCompletionItems(params) {
  var completionRequest, jsMap, promise, request, textDocument;
  jsMap = params;
  completionRequest =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.GetCompletionItemsRequest();
  textDocument = idwci.$toVersionedTextDoc(jb.$getAsAny(jsMap, "textDocument"));
  completionRequest.setTextDocument(textDocument);
  completionRequest.setPosition(
    idwci.$toPosition(jb.$getAsAny(jsMap, "position"))
  );
  completionRequest.setContext(
    idwci.$toContext(jb.$getAsAny(jsMap, "context"))
  );
  request = idwci.$getAutoCompleteRequest(this);
  request.setGetCompletionItems(completionRequest);
  completionRequest.setConsoleId(request.getConsoleId());
  completionRequest.setRequestId(request.getRequestId());
  promise = new idwcf.LazyPromise();
  ju.$put_2(
    this.pendingAutocompleteCalls,
    jl.valueOf_29(request.getRequestId()),
    promise
  );
  idwci.$ensureStream(this).send_0(request);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [idwcf.$timeout(promise, $intern_46)]
    )
  ).then(
    makeLambdaFunction(
      idwci.IdeSession$lambda$23$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$23$Type,
      []
    ),
    makeLambdaFunction(
      idwci.IdeSession$lambda$24$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$24$Type,
      []
    )
  );
};
_.getFigure = function getFigure(name_0) {
  return idwca
    .$getVariableDefinition(this.connection, name_0, "Figure")
    .then(
      makeLambdaFunction(
        idwci.IdeSession$2methodref$getFigure$Type.prototype.onInvoke_5,
        idwci.IdeSession$2methodref$getFigure$Type,
        [this.connection]
      )
    );
};
_.getHierarchicalTable = function getHierarchicalTable(name_0) {
  return idwca
    .$getVariableDefinition(this.connection, name_0, "HierarchicalTable")
    .then(
      makeLambdaFunction(
        idwci.IdeSession$4methodref$getHierarchicalTable$Type.prototype
          .onInvoke_5,
        idwci.IdeSession$4methodref$getHierarchicalTable$Type,
        [this.connection]
      )
    );
};
_.getHover = function getHover(params) {
  var hoverRequest, jsMap, promise, request, textDocument;
  jsMap = params;
  hoverRequest =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.GetHoverRequest();
  textDocument = idwci.$toVersionedTextDoc(jb.$getAsAny(jsMap, "textDocument"));
  hoverRequest.setTextDocument(textDocument);
  hoverRequest.setPosition(idwci.$toPosition(jb.$getAsAny(jsMap, "position")));
  request = idwci.$getAutoCompleteRequest(this);
  request.setGetHover(hoverRequest);
  promise = new idwcf.LazyPromise();
  ju.$put_2(
    this.pendingAutocompleteCalls,
    jl.valueOf_29(request.getRequestId()),
    promise
  );
  idwci.$ensureStream(this).send_0(request);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [idwcf.$timeout(promise, $intern_46)]
    )
  ).then(
    makeLambdaFunction(
      idwci.IdeSession$lambda$29$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$29$Type,
      []
    ),
    makeLambdaFunction(
      idwci.IdeSession$lambda$30$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$30$Type,
      []
    )
  );
};
_.getObject = function getObject_0(definitionObject) {
  return idwca.$getJsObject(this.connection, definitionObject);
};
_.getSignatureHelp = function getSignatureHelp(params) {
  var jsMap, promise, request, signatureHelpRequest, textDocument;
  jsMap = params;
  signatureHelpRequest =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.GetSignatureHelpRequest();
  textDocument = idwci.$toVersionedTextDoc(jb.$getAsAny(jsMap, "textDocument"));
  signatureHelpRequest.setTextDocument(textDocument);
  signatureHelpRequest.setPosition(
    idwci.$toPosition(jb.$getAsAny(jsMap, "position"))
  );
  request = idwci.$getAutoCompleteRequest(this);
  request.setGetSignatureHelp(signatureHelpRequest);
  promise = new idwcf.LazyPromise();
  ju.$put_2(
    this.pendingAutocompleteCalls,
    jl.valueOf_29(request.getRequestId()),
    promise
  );
  idwci.$ensureStream(this).send_0(request);
  return new $wnd.Promise(
    makeLambdaFunction(
      idwcf.LazyPromise$lambda$2$Type.prototype.onInvoke_6,
      idwcf.LazyPromise$lambda$2$Type,
      [idwcf.$timeout(promise, $intern_46)]
    )
  ).then(
    makeLambdaFunction(
      idwci.IdeSession$lambda$26$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$26$Type,
      []
    ),
    makeLambdaFunction(
      idwci.IdeSession$lambda$27$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$27$Type,
      []
    )
  );
};
_.getTable = function getTable_1(name_0, applyPreviewColumns) {
  return idwca
    .$getVariableDefinition(this.connection, name_0, "Table")
    .then(
      makeLambdaFunction(
        idwci.IdeSession$lambda$5$Type.prototype.onInvoke_5,
        idwci.IdeSession$lambda$5$Type,
        [this, applyPreviewColumns]
      )
    );
};
_.getTreeTable = function getTreeTable(name_0) {
  return idwca
    .$getVariableDefinition(this.connection, name_0, "HierarchicalTable")
    .then(
      makeLambdaFunction(
        idwci.IdeSession$3methodref$getHierarchicalTable$Type.prototype
          .onInvoke_5,
        idwci.IdeSession$3methodref$getHierarchicalTable$Type,
        [this.connection]
      )
    );
};
_.mergeTables = function mergeTables(tables) {
  return idwca
    .$mergeTables(this.connection, tables)
    .then(
      makeLambdaFunction(
        idwci.IdeSession$lambda$10$Type.prototype.onInvoke_5,
        idwci.IdeSession$lambda$10$Type,
        [this]
      )
    );
};
_.newTable = function newTable(columnNames, types, data_0, userTimeZone) {
  return idwca
    .$newTable(this.connection, columnNames, types, data_0, userTimeZone)
    .then(
      makeLambdaFunction(
        idwci.IdeSession$lambda$9$Type.prototype.onInvoke_5,
        idwci.IdeSession$lambda$9$Type,
        [this]
      )
    );
};
_.onLogMessage = function onLogMessage_0(callback) {
  return idwca.$subscribeToLogs(this.connection, callback);
};
_.openDocument = function openDocument(params) {
  var jsMap, request, textDoc, textDocument, wrapper;
  jsMap = params;
  request =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.OpenDocumentRequest();
  request.setConsoleId(this.result_0);
  textDoc = jb.$getAsAny(jsMap, "textDocument");
  textDocument =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.TextDocumentItem();
  textDocument.setText(jb.$asString_2(jb.$getAsAny(textDoc, "text")));
  textDocument.setLanguageId(
    jb.$asString_2(jb.$getAsAny(textDoc, "languageId"))
  );
  textDocument.setUri(jb.$asString_2(jb.$getAsAny(textDoc, "uri")));
  textDocument.setVersion(jb.$asDouble(jb.$getAsAny(textDoc, "version")));
  request.setTextDocument(textDocument);
  wrapper =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteRequest();
  wrapper.setConsoleId(this.result_0);
  wrapper.setOpenDocument(request);
  idwci.$ensureStream(this).send_0(wrapper);
};
_.runCode = function runCode(code_0) {
  var commandInfo, event_0, promise, request, result, runCodePromise;
  promise = new idwcf.LazyPromise();
  request =
    new $wnd.dhinternal.io.deephaven.proto.console_pb.ExecuteCommandRequest();
  request.setConsoleId(this.result_0);
  request.setCode(code_0);
  runCodePromise = new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwci.IdeSession$lambda$14$Type(this, request)]
    )
  );
  runCodePromise.then(
    makeLambdaFunction(
      idwci.IdeSession$lambda$16$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$16$Type,
      [promise]
    ),
    makeLambdaFunction(
      idwci.IdeSession$lambda$17$Type.prototype.onInvoke_5,
      idwci.IdeSession$lambda$17$Type,
      [promise]
    )
  );
  result = idwcf.$asPromise_1(
    promise,
    makeLambdaFunction(
      idwci.IdeSession$lambda$18$Type.prototype.run,
      idwci.IdeSession$lambda$18$Type,
      []
    )
  );
  commandInfo = new idwci.CommandInfo(code_0, result);
  event_0 = jb.emptyObjectLiteral();
  event_0.detail = commandInfo;
  idwca.$fireEvent_0(
    this,
    "commandstarted",
    new $wnd.CustomEvent("commandstarted", event_0)
  );
  return result;
};
_.subscribeToFieldUpdates = function subscribeToFieldUpdates_1(callback) {
  return idwca.$subscribeToFieldUpdates(this.connection, callback);
};
_.timeTable = function timeTable(periodNanos, startTime) {
  return idwca.$timeTable(this.connection, periodNanos, startTime);
};
_.nextAutocompleteRequestId = 0;
idwci.EVENT_COMMANDSTARTED = "commandstarted";
idwci.EVENT_REQUEST_FAILED_3 = "requestfailed";
cggl.Lio_deephaven_web_client_ide_IdeSession_2_classLit = createForClass(
  "io.deephaven.web.client.ide",
  "IdeSession",
  694
);
idwci.IdeSession$0methodref$autoCompleteStream$Type =
  function IdeSession$0methodref$autoCompleteStream$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(697, 1, {}, idwci.IdeSession$0methodref$autoCompleteStream$Type);
_.openBiDiStream = function openBiDiStream_5(arg0) {
  return this.$$outer_0.autoCompleteStream(arg0);
};
cggl.Lio_deephaven_web_client_ide_IdeSession$0methodref$autoCompleteStream$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.ide",
    "IdeSession/0methodref$autoCompleteStream$Type",
    697
  );
idwci.$run_2 = function $run_2(this$static) {
  if (!this$static.this$01.currentStream) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  if (ju.$size_1(this$static.this$01.pendingAutocompleteCalls) != 0) {
    cgguc.$schedule(this$static.this$01.autocompleteStreamCloseTimeout);
    return;
  }
  this$static.this$01.currentStream.end_0();
  this$static.this$01.currentStream.cancel_1();
  this$static.this$01.currentStream = null;
};
idwci.IdeSession$1 = function IdeSession$1(this$0) {
  this.this$01 = this$0;
  cgguc.Timer.call(this);
};
defineClass(696, 695, {}, idwci.IdeSession$1);
cggl.Lio_deephaven_web_client_ide_IdeSession$1_2_classLit = createForClass(
  "io.deephaven.web.client.ide",
  "IdeSession/1",
  696
);
idwci.$getClass_490 = function $getClass_490() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$1methodref$apply$Type =
  function IdeSession$1methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1534, $wnd.Function, {}, idwci.IdeSession$1methodref$apply$Type);
_.onInvoke_20 = function onInvoke_296(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwci.$getClass_491 = function $getClass_491() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$2methodref$getFigure$Type =
  function IdeSession$2methodref$getFigure$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1516,
  $wnd.Function,
  $intern_36,
  idwci.IdeSession$2methodref$getFigure$Type
);
_.onInvoke_5 = function onInvoke_297(arg0) {
  return idwca.$getFigure(this.$$outer_0, castTo(arg0, 62));
};
idwci.$getClass_492 = function $getClass_492() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$3methodref$getHierarchicalTable$Type =
  function IdeSession$3methodref$getHierarchicalTable$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1517,
  $wnd.Function,
  $intern_36,
  idwci.IdeSession$3methodref$getHierarchicalTable$Type
);
_.onInvoke_5 = function onInvoke_298(arg0) {
  return idwca.$getHierarchicalTable(this.$$outer_0, castTo(arg0, 62));
};
idwci.$getClass_493 = function $getClass_493() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$4methodref$getHierarchicalTable$Type =
  function IdeSession$4methodref$getHierarchicalTable$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1518,
  $wnd.Function,
  $intern_36,
  idwci.IdeSession$4methodref$getHierarchicalTable$Type
);
_.onInvoke_5 = function onInvoke_299(arg0) {
  return idwca.$getHierarchicalTable(this.$$outer_0, castTo(arg0, 62));
};
idwci.$getClass_494 = function $getClass_494() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$5methodref$apply$Type =
  function IdeSession$5methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1535, $wnd.Function, {}, idwci.IdeSession$5methodref$apply$Type);
_.onInvoke_16 = function onInvoke_300(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwci.$getClass_495 = function $getClass_495() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$6methodref$apply$Type =
  function IdeSession$6methodref$apply$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(1536, $wnd.Function, {}, idwci.IdeSession$6methodref$apply$Type);
_.onInvoke_17 = function onInvoke_301(arg0, arg1) {
  this.$$outer_0.call(null, arg0, arg1);
};
idwci.$get_11 = function $get_11(this$static) {
  return idwci.lambda$0_17(this$static.factory_0, this$static.connection_1);
};
idwci.IdeSession$lambda$0$Type = function IdeSession$lambda$0$Type(
  factory_0,
  connection_1
) {
  this.factory_0 = factory_0;
  this.connection_1 = connection_1;
};
defineClass(700, 1, {}, idwci.IdeSession$lambda$0$Type);
_.get_0 = function get_24() {
  return idwci.$get_11(this);
};
cggl.Lio_deephaven_web_client_ide_IdeSession$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.ide",
    "IdeSession/lambda$0$Type",
    700
  );
idwci.$getClass_496 = function $getClass_496() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$10$Type = function IdeSession$lambda$10$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1520, $wnd.Function, $intern_36, idwci.IdeSession$lambda$10$Type);
_.onInvoke_5 = function onInvoke_302(arg0) {
  return idwci.$lambda$10_3(this.$$outer_0, castTo(arg0, 13));
};
idwci.IdeSession$lambda$11$Type = function IdeSession$lambda$11$Type(
  $$outer_0,
  bindRequest_1
) {
  this.$$outer_0 = $$outer_0;
  this.bindRequest_1 = bindRequest_1;
};
defineClass(701, 1, $intern_19, idwci.IdeSession$lambda$11$Type);
_.accept = function accept_83(arg0) {
  idwci.$lambda$11_4(this.$$outer_0, this.bindRequest_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_ide_IdeSession$lambda$11$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.ide",
    "IdeSession/lambda$11$Type",
    701
  );
idwci.$getClass_497 = function $getClass_497() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$13$Type = function IdeSession$lambda$13$Type() {};
defineClass(1521, $wnd.Function, $intern_36, idwci.IdeSession$lambda$13$Type);
_.onInvoke_5 = function onInvoke_303(arg0) {
  return $wnd.Promise.resolve(null);
};
idwci.IdeSession$lambda$14$Type = function IdeSession$lambda$14$Type(
  $$outer_0,
  request_1
) {
  this.$$outer_0 = $$outer_0;
  this.request_1 = request_1;
};
defineClass(702, 1, $intern_19, idwci.IdeSession$lambda$14$Type);
_.accept = function accept_84(arg0) {
  idwci.$lambda$14_5(this.$$outer_0, this.request_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_ide_IdeSession$lambda$14$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.ide",
    "IdeSession/lambda$14$Type",
    702
  );
idwci.$getClass_498 = function $getClass_498() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$16$Type = function IdeSession$lambda$16$Type(
  promise_0
) {
  this.promise_0 = promise_0;
};
defineClass(1522, $wnd.Function, $intern_36, idwci.IdeSession$lambda$16$Type);
_.onInvoke_5 = function onInvoke_304(arg0) {
  return idwci.lambda$16_3(
    this.promise_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.ExecuteCommandResponse
    )
  );
};
idwci.$getClass_499 = function $getClass_499() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$17$Type = function IdeSession$lambda$17$Type(
  promise_0
) {
  this.promise_0 = promise_0;
};
defineClass(1523, $wnd.Function, {}, idwci.IdeSession$lambda$17$Type);
_.onInvoke_5 = function onInvoke_305(arg0) {
  return idwcf.$fail(this.promise_0, arg0), null;
};
idwci.$beforeMe = function $beforeMe(this$static, second) {
  var self_0;
  return (
    (self_0 = second),
    makeLambdaFunction(idwsf.JsRunnable$1.prototype.run, idwsf.JsRunnable$1, [
      self_0,
      this$static,
    ])
  );
};
idwci.$getClass_500 = function $getClass_500() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$18$Type = function IdeSession$lambda$18$Type() {};
defineClass(1524, $wnd.Function, $intern_49, idwci.IdeSession$lambda$18$Type);
_.run = function run_39() {
  idwci.lambda$18_2();
};
idwci.$getClass_501 = function $getClass_501() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$19$Type = function IdeSession$lambda$19$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1525, $wnd.Function, $intern_48, idwci.IdeSession$lambda$19$Type);
_.apply_3 = function apply_219(arg0) {
  idwci.$lambda$19_0(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteResponse
    )
  );
};
idwci.IdeSession$lambda$2$Type = function IdeSession$lambda$2$Type(
  connection_0
) {
  this.connection_0 = connection_0;
};
defineClass(698, 1, {}, idwci.IdeSession$lambda$2$Type);
_.openStream = function openStream_5(arg0, arg1) {
  return idwci.lambda$2_14(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteRequest
    ),
    arg1
  );
};
cggl.Lio_deephaven_web_client_ide_IdeSession$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.ide",
    "IdeSession/lambda$2$Type",
    698
  );
idwci.$getClass_502 = function $getClass_502() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$20$Type = function IdeSession$lambda$20$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1526, $wnd.Function, $intern_48, idwci.IdeSession$lambda$20$Type);
_.apply_3 = function apply_220(arg0) {
  idwci.$lambda$20_0(this.$$outer_0, arg0);
};
idwci.IdeSession$lambda$21$Type = function IdeSession$lambda$21$Type(status_0) {
  this.status_0 = status_0;
};
defineClass(703, 1, $intern_19, idwci.IdeSession$lambda$21$Type);
_.accept = function accept_85(arg0) {
  idwci.lambda$21_0(this.status_0, castTo(arg0, 75));
};
cggl.Lio_deephaven_web_client_ide_IdeSession$lambda$21$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.ide",
    "IdeSession/lambda$21$Type",
    703
  );
idwci.$getClass_503 = function $getClass_503() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$22$Type = function IdeSession$lambda$22$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1527, $wnd.Function, $intern_48, idwci.IdeSession$lambda$22$Type);
_.apply_3 = function apply_221(arg0) {
  idwci.$lambda$22_2(this.$$outer_0);
};
idwci.$getClass_504 = function $getClass_504() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$23$Type = function IdeSession$lambda$23$Type() {};
defineClass(1528, $wnd.Function, $intern_36, idwci.IdeSession$lambda$23$Type);
_.onInvoke_5 = function onInvoke_306(arg0) {
  return $wnd.Promise.resolve(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteResponse
    )
      .getCompletionItems()
      .getItemsList()
      .map(
        makeLambdaFunction(
          idwci.IdeSession$lambda$25$Type.prototype.onInvoke,
          idwci.IdeSession$lambda$25$Type,
          []
        )
      )
  );
};
idwci.$getClass_505 = function $getClass_505() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$24$Type = function IdeSession$lambda$24$Type() {};
defineClass(1529, $wnd.Function, {}, idwci.IdeSession$lambda$24$Type);
_.onInvoke_5 = function onInvoke_307(arg0) {
  return $wnd.Promise.reject(arg0);
};
idwci.$getClass_506 = function $getClass_506() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$25$Type = function IdeSession$lambda$25$Type() {};
defineClass(1537, $wnd.Function, {}, idwci.IdeSession$lambda$25$Type);
_.onInvoke = function onInvoke_308(arg0, arg1, arg2) {
  return idwci.toJs_0(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.CompletionItem
    )
  );
};
idwci.$getClass_507 = function $getClass_507() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$26$Type = function IdeSession$lambda$26$Type() {};
defineClass(1530, $wnd.Function, $intern_36, idwci.IdeSession$lambda$26$Type);
_.onInvoke_5 = function onInvoke_309(arg0) {
  return $wnd.Promise.resolve(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteResponse
    )
      .getSignatures()
      .getSignaturesList()
      .map(
        makeLambdaFunction(
          idwci.IdeSession$lambda$28$Type.prototype.onInvoke,
          idwci.IdeSession$lambda$28$Type,
          []
        )
      )
  );
};
idwci.$getClass_508 = function $getClass_508() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$27$Type = function IdeSession$lambda$27$Type() {};
defineClass(1531, $wnd.Function, {}, idwci.IdeSession$lambda$27$Type);
_.onInvoke_5 = function onInvoke_310(arg0) {
  return $wnd.Promise.reject(arg0);
};
idwci.$getClass_509 = function $getClass_509() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$28$Type = function IdeSession$lambda$28$Type() {};
defineClass(1538, $wnd.Function, {}, idwci.IdeSession$lambda$28$Type);
_.onInvoke = function onInvoke_311(arg0, arg1, arg2) {
  return idwci.toJs_6(
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.SignatureInformation
    )
  );
};
idwci.$getClass_510 = function $getClass_510() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$29$Type = function IdeSession$lambda$29$Type() {};
defineClass(1532, $wnd.Function, $intern_36, idwci.IdeSession$lambda$29$Type);
_.onInvoke_5 = function onInvoke_312(arg0) {
  return $wnd.Promise.resolve(
    idwci.toJs_2(
      castToNative(
        arg0,
        $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteResponse
      ).getHover()
    )
  );
};
idwci.IdeSession$lambda$3$Type = function IdeSession$lambda$3$Type(
  connection_0
) {
  this.connection_0 = connection_0;
};
defineClass(699, 1, {}, idwci.IdeSession$lambda$3$Type);
_.nextStreamMessage = function nextStreamMessage_5(arg0, arg1, arg2) {
  idwci.lambda$3_6(
    this.connection_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.console_pb.AutoCompleteRequest
    ),
    arg1,
    arg2
  );
};
cggl.Lio_deephaven_web_client_ide_IdeSession$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.ide",
    "IdeSession/lambda$3$Type",
    699
  );
idwci.$getClass_511 = function $getClass_511() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$30$Type = function IdeSession$lambda$30$Type() {};
defineClass(1533, $wnd.Function, {}, idwci.IdeSession$lambda$30$Type);
_.onInvoke_5 = function onInvoke_313(arg0) {
  return $wnd.Promise.reject(arg0);
};
idwci.$getClass_512 = function $getClass_512() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$5$Type = function IdeSession$lambda$5$Type(
  $$outer_0,
  applyPreviewColumns_1
) {
  this.$$outer_0 = $$outer_0;
  this.applyPreviewColumns_1 = applyPreviewColumns_1;
};
defineClass(1515, $wnd.Function, $intern_36, idwci.IdeSession$lambda$5$Type);
_.onInvoke_5 = function onInvoke_314(arg0) {
  return idwci.$lambda$5_8(
    this.$$outer_0,
    this.applyPreviewColumns_1,
    castTo(arg0, 62)
  );
};
idwci.$getClass_513 = function $getClass_513() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwci.IdeSession$lambda$9$Type = function IdeSession$lambda$9$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(1519, $wnd.Function, $intern_36, idwci.IdeSession$lambda$9$Type);
_.onInvoke_5 = function onInvoke_315(arg0) {
  return idwci.$lambda$9_5(this.$$outer_0, castTo(arg0, 13));
};
idwci.toJs_0 = function toJs_0(src_0) {
  var edits, i, item_0, textEdits;
  item_0 = new idwsil.CompletionItem();
  idwsil.$setStart(item_0, round_int(src_0.getStart()));
  idwsil.$setLength(item_0, round_int(src_0.getLength()));
  item_0.commitCharacters = src_0.getCommitCharactersList();
  item_0.textEdit = idwci.toJs_7(src_0.getTextEdit());
  item_0.label = src_0.getLabel();
  item_0.deprecated = src_0.getDeprecated();
  item_0.preselect = src_0.getPreselect();
  ji.uncheckedCast(src_0.getDetail()).length == 0 ||
    (item_0.detail = src_0.getDetail());
  src_0.hasDocumentation() &&
    (item_0.documentation = idwci.toJs_3(src_0.getDocumentation()));
  ji.uncheckedCast(src_0.getFilterText()).length == 0 ||
    (item_0.filterText = src_0.getFilterText());
  ji.uncheckedCast(src_0.getSortText()).length == 0 ||
    idwsil.$sortText(item_0, src_0.getSortText());
  src_0.getKind() != 0 && (item_0.kind = round_int(src_0.getKind()));
  src_0.getInsertTextFormat() != 0 &&
    (item_0.insertTextFormat = round_int(src_0.getInsertTextFormat()));
  edits = new $wnd.Array();
  textEdits = src_0.getAdditionalTextEditsList();
  for (i = 0; i < jb.$getLength(textEdits); i++) {
    edits.push(
      idwci.toJs_7(
        castToNative(
          jb.$getAt(textEdits, i),
          $wnd.dhinternal.io.deephaven.proto.console_pb.TextEdit
        )
      )
    );
  }
  item_0.additionalTextEdits = edits;
  return item_0;
};
idwci.toJs_1 = function toJs_1(range) {
  var item_0;
  item_0 = new idwsil.DocumentRange();
  item_0.start = idwci.toJs_5(range.getStart());
  item_0.end = idwci.toJs_5(range.getEnd());
  return item_0;
};
idwci.toJs_2 = function toJs_2(src_0) {
  var item_0;
  item_0 = new idwsil.Hover();
  src_0.hasContents() && (item_0.contents = idwci.toJs_3(src_0.getContents()));
  src_0.hasRange() && (item_0.range = idwci.toJs_1(src_0.getRange()));
  return item_0;
};
idwci.toJs_3 = function toJs_3(src_0) {
  var content_0;
  content_0 = new idwsil.MarkupContent();
  content_0.kind = src_0.getKind();
  content_0.value = src_0.getValue();
  return content_0;
};
idwci.toJs_4 = function toJs_4(src_0) {
  var item_0;
  item_0 = new idwsil.ParameterInformation();
  item_0.label = src_0.getLabel();
  item_0.documentation = idwci.toJs_3(src_0.getDocumentation());
  return item_0;
};
idwci.toJs_5 = function toJs_5(src_0) {
  var item_0;
  item_0 = new idwsil.Position_0();
  item_0.line = round_int(src_0.getLine());
  item_0.character = round_int(src_0.getCharacter());
  return item_0;
};
idwci.toJs_6 = function toJs_6(src_0) {
  var i, item_0, params, paramsList;
  item_0 = new idwsil.SignatureInformation();
  item_0.label = src_0.getLabel();
  src_0.hasDocumentation() &&
    (item_0.documentation = idwci.toJs_3(src_0.getDocumentation()));
  src_0.hasActiveParameter() &&
    (item_0.activeParameter = src_0.getActiveParameter());
  params = new $wnd.Array();
  paramsList = src_0.getParametersList();
  for (i = 0; i < jb.$getLength(paramsList); i++) {
    params.push(
      idwci.toJs_4(
        castToNative(
          jb.$getAt(paramsList, i),
          $wnd.dhinternal.io.deephaven.proto.console_pb.ParameterInformation
        )
      )
    );
  }
  item_0.parameters = params;
  return item_0;
};
idwci.toJs_7 = function toJs_7(src_0) {
  var item_0;
  item_0 = new idwsil.TextEdit();
  item_0.text = src_0.getText();
  item_0.range = idwci.toJs_1(src_0.getRange());
  return item_0;
};
idwcs.$changeState = function $changeState(this$static, newState) {
  var existing, isFirstTime, newStateActive, newSub, thisStateActive;
  existing = idwcs.$getBinding_0(newState, this$static.table_0);
  if (newState == this$static.state) {
    if (existing.isActive()) {
      if (this$static != existing) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "Multiple bindings found for " +
              newState +
              " and " +
              this$static.table_0
          )
        );
      }
    } else {
      if (this$static.paused != existing) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "Multiple bindings found for " +
              newState +
              " and " +
              this$static.table_0
          )
        );
      }
      idwcs.$unpause(newState, this$static.table_0);
    }
    return this$static;
  }
  isFirstTime = !existing;
  thisStateActive = idwcs
    .$getBinding_0(this$static.state, this$static.table_0)
    .isActive();
  newStateActive = !isFirstTime && existing.isActive();
  if (!thisStateActive) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Non-active state cannot change a client's state")
    );
  }
  if (newStateActive) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Table cannot have two active states at once.")
    );
  }
  idwcs.$pause(this$static.state, this$static.table_0);
  if (isFirstTime) {
    newSub = idwcs.$createBinding(newState, this$static.table_0);
    idwcs.$isRunning(newState) ||
      (idwcs.$isRunning(this$static.state)
        ? idwcs.$setRollback_0(newSub, this$static.paused)
        : idwcs.$setRollback_0(newSub, idwcs.$getRollback(this$static).paused));
  } else {
    newSub = castTo(existing, 67).active;
    idwcs.$unpause(newState, this$static.table_0);
  }
  return newSub;
};
idwcs.$copyBinding = function $copyBinding(this$static, table) {
  var sub_0;
  sub_0 = idwcs.$createBinding(this$static.state, table);
  idwcs.$copyRollbacks(this$static, sub_0);
  return sub_0;
};
idwcs.$copyRollbacks = function $copyRollbacks(this$static, sub_0) {
  var copy, prevState, previous;
  if (this$static.rollback) {
    previous = this$static.rollback.active;
    prevState = previous.state;
    copy = idwcs.create_4(sub_0.table_0, prevState);
    idwcs.$addPaused(prevState, sub_0.table_0, copy.paused);
    idwcs.$setRollback_0(sub_0, copy.paused);
    idwcs.$isRunning(prevState) ||
      idwcs.$copyRollbacks(this$static.rollback.active, copy);
  }
};
idwcs.$getClass_514 = function $getClass_514() {
  return cggl.Lio_deephaven_web_client_state_ActiveTableBinding_2_classLit;
};
idwcs.$getRollback = function $getRollback(this$static) {
  if (!this$static.rollback) {
    return null;
  }
  return this$static.rollback.active;
};
idwcs.$maybeReviveSubscription_0 = function $maybeReviveSubscription_0(
  this$static
) {
  (this$static.subscriptionPending || !!this$static.viewport_0) &&
    (this$static.rows_0
      ? idwcs.$setDesiredViewport_0(
          this$static.state,
          this$static.table_0,
          this$static.rows_0.sortedRanges[0].first_0,
          idwsd.$getLastRow(this$static.rows_0),
          this$static.columns_0
        )
      : idwcs.$subscribe_3(
          this$static.state,
          this$static.table_0,
          this$static.columns_0
        ));
};
idwcs.$rollback = function $rollback(this$static) {
  if (idwcs.$isRunning(this$static.state)) {
    idwca.$setState(this$static.table_0, this$static.state);
    return;
  }
  if (!this$static.rollback) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  if (idwca.$getBinding(this$static.table_0) != this$static) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "You should only perform a rollback from the current active state"
      )
    );
  }
  switch (this$static.rollback.active.state.resolution.ordinal_0) {
    case 2:
      idwca.$setState(this$static.table_0, this$static.rollback.active.state);
      break;
    case 4:
      idwcs.$rollback(this$static.rollback.active);
      break;
    case 1:
    case 0:
      idwca.$setState(this$static.table_0, this$static.rollback.active.state);
      break;
    default:
      throw toJs(
        new jl.UnsupportedOperationException_0(
          "Cannot rollback to a " + this$static.rollback.active.state + " state"
        )
      );
  }
};
idwcs.$setDesiredViewport = function $setDesiredViewport(
  this$static,
  firstRow,
  lastRow,
  columns
) {
  this$static.rows_0 = idwsd.ofRange_0(firstRow, lastRow);
  this$static.columns_0 = columns;
  this$static.subscriptionPending = true;
  return this$static.rows_0;
};
idwcs.$setRollback_0 = function $setRollback_0(this$static, rollback) {
  if (
    !(
      !rollback ||
      rollback.active.state.resolution ==
        (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RUNNING_0)
    )
  ) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Can't use binding as rollback if it is in state " +
          rollback.active.state.resolution
      )
    );
  }
  this$static.rollback = rollback;
};
idwcs.$setViewport_1 = function $setViewport_1(this$static, viewport) {
  this$static.viewport_0 = viewport;
};
idwcs.ActiveTableBinding = function ActiveTableBinding(table, state) {
  this.table_0 = table;
  this.state = state;
  this.paused = new idwcs.PausedTableBinding(this);
};
idwcs.create_4 = function create_4(table, state) {
  var existing, sub_0;
  existing = idwcs.$getBinding_0(state, table);
  if (
    !existing
      ? null
      : existing.isActive()
      ? castTo(existing, 55)
      : castTo(existing, 67).active
  ) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Cannot create binding for table more than once")
    );
  }
  sub_0 = new idwcs.ActiveTableBinding(table, state);
  idwcs.$isRunning(state) ||
    idwcs.$onFailed(
      state,
      makeLambdaFunction(
        idwcs.ActiveTableBinding$lambda$0$Type.prototype.apply_3,
        idwcs.ActiveTableBinding$lambda$0$Type,
        [table, sub_0]
      ),
      makeLambdaFunction(
        idwcs.ActiveTableBinding$lambda$1$Type.prototype.run,
        idwcs.ActiveTableBinding$lambda$1$Type,
        [sub_0]
      )
    );
  return sub_0;
};
idwcs.lambda$0_18 = function lambda$0_18(table_0, sub_1) {
  var existing;
  if (!table_0.currentState) {
    return;
  }
  existing = idwcs.$getBinding_0(table_0.currentState, table_0);
  (!existing
    ? null
    : existing.isActive()
    ? castTo(existing, 55)
    : castTo(existing, 67).active) == sub_1 && idwcs.$rollback(sub_1);
  idwcs.$setRollback_0(sub_1, null);
};
defineClass(55, 1, { 375: 1, 55: 1 }, idwcs.ActiveTableBinding);
_.equals_0 = function equals_12(o) {
  return (
    cggl.Lio_deephaven_web_client_state_ActiveTableBinding_2_classLit ==
      jl.getClass__Ljava_lang_Class___devirtual$(o) &&
    this.table_0 == castTo(o, 55).table_0
  );
};
_.hashCode_1 = function hashCode_13() {
  return this.table_0 ? jl.hashCode__I__devirtual$(this.table_0) : 0;
};
_.isActive = function isActive() {
  return true;
};
_.subscriptionPending = false;
cggl.Lio_deephaven_web_client_state_ActiveTableBinding_2_classLit =
  createForClass("io.deephaven.web.client.state", "ActiveTableBinding", 55);
idwcs.$getClass_515 = function $getClass_515() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ActiveTableBinding$lambda$0$Type =
  function ActiveTableBinding$lambda$0$Type(table_0, sub_1) {
    this.table_0 = table_0;
    this.sub_1 = sub_1;
  };
defineClass(
  1431,
  $wnd.Function,
  $intern_48,
  idwcs.ActiveTableBinding$lambda$0$Type
);
_.apply_3 = function apply_222(arg0) {
  var lastArg;
  idwcs.lambda$0_18(
    this.table_0,
    ((lastArg = this.sub_1), castToString(arg0), lastArg)
  );
};
idwcs.$getClass_516 = function $getClass_516() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ActiveTableBinding$lambda$1$Type =
  function ActiveTableBinding$lambda$1$Type(sub_0) {
    this.sub_0 = sub_0;
  };
defineClass(
  1432,
  $wnd.Function,
  $intern_49,
  idwcs.ActiveTableBinding$lambda$1$Type
);
_.run = function run_40() {
  idwcs.$setRollback_0(this.sub_0, null);
};
idwcs.$$init_48 = function $$init_48(this$static) {
  this$static.active = new $wnd.Map();
  this$static.paused = new $wnd.Map();
  this$static.retainers = new $wnd.Set();
};
idwcs.$addPaused = function $addPaused(this$static, table, paused) {
  if (
    this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0)
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  if (this$static.active.has(table)) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  if (
    !(
      !this$static.paused.has(table) ||
      maskUndefined(this$static.paused.get(table)) === maskUndefined(paused)
    )
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  this$static.paused.set(table, paused);
};
idwcs.$applyTableCreationResponse = function $applyTableCreationResponse(
  this$static,
  def
) {
  var flightSchemaMessage, schema;
  if (
    !jl.$equals_12(
      def.getResultId().getTicket().getTicket_asB64(),
      idwca.$makeTicket(this$static.handle).getTicket_asB64()
    )
  ) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Ticket is incompatible with the table details")
    );
  }
  idwca.$setState_0(
    this$static.handle,
    (idwca.$clinit_TableTicket$State(), idwca.EXPORTED)
  );
  idwca.$setConnected(this$static.handle, true);
  flightSchemaMessage = def.getSchemaHeader_asU8();
  this$static.isStatic_0 = def.getIsStatic();
  schema = idwcab.readSchemaMessage(flightSchemaMessage);
  idwcs.$setTableDef(this$static, idwcab.readTableDefinition(schema));
  idwcs.$setResolution(
    this$static,
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RUNNING_0)
  );
  idwcs.$setSize_0(this$static, jl.__parseAndValidateLong(def.getSize()));
};
idwcs.$applyViewport = function $applyViewport(this$static, sub_0) {
  var desired, rows_0, table, vp;
  sub_0.subscriptionPending = false;
  table = sub_0.table_0;
  if (!idwcs.$isRunning(this$static)) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Do not call this method unless you are in a running state! " +
          this$static
      )
    );
  }
  if (idwca.$equals_1(this$static.handle, idwca.$state(table).handle)) {
    rows_0 = sub_0.rows_0;
    desired = sub_0.columns_0;
    jb.isFalsy(desired) && (desired = this$static.columns_0);
    vp = new idwsd.Viewport(rows_0, idwcs.$makeBitset(this$static, desired));
    sub_0.viewport_0 = vp;
    idwca.$refreshViewport(table, this$static, vp);
  }
};
idwcs.$cleanup = function $cleanup(this$static) {
  var retainer, retainer$iterator, sub_0, sub$iterator, sub$iterator0, table;
  if (
    !idwsf.$allMatch(
      idwcf.iterate(this$static.active.keys()),
      new idwcs.ClientTableState$lambda$28$Type(this$static)
    )
  ) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("active map not up-to-date with tables")
    );
  }
  if (
    this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0)
  ) {
    for (
      sub$iterator0 = idwcf.lambda$0_16(
        idwcf.iterate(this$static.paused.values()).itrs_0
      );
      sub$iterator0.hasNext_1();

    ) {
      sub_0 = castTo(sub$iterator0.next_1(), 67);
      idwcs.$releaseTable(this$static, sub_0.active.table_0);
    }
    this$static.active.clear();
    for (
      retainer$iterator = idwcf.lambda$0_16(
        idwcf.iterate(this$static.retainers.values()).itrs_0
      );
      retainer$iterator.hasNext_1();

    ) {
      retainer = retainer$iterator.next_1();
      instanceOf(retainer, 57) &&
        idwca.$fireEventWithDetail(castTo(retainer, 57), this$static);
    }
    this$static.retainers.clear();
    return;
  }
  for (
    sub$iterator = idwcf.lambda$0_16(
      idwcf.iterate(this$static.paused.values()).itrs_0
    );
    sub$iterator.hasNext_1();

  ) {
    sub_0 = castTo(sub$iterator.next_1(), 67);
    if (sub_0.active.state != this$static) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    table = sub_0.active.table_0;
    !table.currentState
      ? idwcs.$releaseTable(this$static, table)
      : !idwca.$hasHandle(table, this$static.handle) &&
        !idwca.$hasRollbackHandle(table, this$static.handle) &&
        (idwcs.$isRunning(idwca.$state(table))
          ? idwcs.$releaseTable(this$static, table)
          : idwcs.$onRunning_0(
              idwca.$state(table),
              makeLambdaFunction(
                idwcs.ClientTableState$lambda$29$Type.prototype.apply_3,
                idwcs.ClientTableState$lambda$29$Type,
                [this$static]
              ),
              makeLambdaFunction(
                idwcs.ClientTableState$9methodref$cleanup$Type.prototype.run,
                idwcs.ClientTableState$9methodref$cleanup$Type,
                [this$static]
              )
            ));
  }
  this$static.active.size == 0 &&
    this$static.paused.size == 0 &&
    this$static.retainers.size == 0 &&
    idwca.$scheduleCheck(this$static.connection, this$static);
};
idwcs.$createBinding = function $createBinding(this$static, table) {
  var sub_0;
  if (
    this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0)
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  sub_0 = idwcs.create_4(table, this$static);
  this$static.active.set(table, sub_0);
  this$static.touch =
    (jl.$clinit_System(), toDouble_0(fromDouble_0(Date.now())));
  return sub_0;
};
idwcs.$createLayoutHints = function $createLayoutHints(this$static) {
  var hintsString, jsHints;
  hintsString = castToString(
    ju.$getStringValue(this$static.tableDef.attributes.map_0, "LayoutHints")
  );
  jsHints = new idwca.JsLayoutHints();
  hintsString == null
    ? (this$static.layoutHints_0 = null)
    : (this$static.layoutHints_0 = idwca.$parse_3(jsHints, hintsString));
};
idwcs.$equals_3 = function $equals_3(this$static, o) {
  return (
    idwcab2.$equals_2(this$static, o) &&
    idwca.$equals_1(this$static.handle, castTo(o, 14).handle)
  );
};
idwcs.$findColumn_1 = function $findColumn_1(this$static, key) {
  var c;
  c = castTo(
    castTo(this$static.columnLookup.supplier.valueOf_0(), 30).get(key),
    21
  );
  if (!c) {
    throw toJs(new ju.NoSuchElementException_0(key));
  }
  return c;
};
idwcs.$forActiveLifecycles = function $forActiveLifecycles(
  this$static,
  callback
) {
  var item_0, item$iterator, items, o, o$iterator, o$iterator0;
  items = new $wnd.Set();
  for (
    o$iterator0 = idwcf.lambda$0_16(
      idwcf.iterate(this$static.active.keys()).itrs_0
    );
    o$iterator0.hasNext_1();

  ) {
    o = castTo(o$iterator0.next_1(), 13);
    items.add(o);
  }
  for (
    o$iterator = idwcf.lambda$0_16(
      idwcf.iterate(this$static.retainers.values()).itrs_0
    );
    o$iterator.hasNext_1();

  ) {
    o = o$iterator.next_1();
    instanceOf(o, 51) ? items.add(castTo(o, 51)) : undefined;
  }
  for (
    item$iterator = idwcf.lambda$0_16(idwcf.iterate(items.values()).itrs_0);
    item$iterator.hasNext_1();

  ) {
    item_0 = castTo(item$iterator.next_1(), 51);
    callback(item_0);
  }
};
idwcs.$forActiveSubscriptions = function $forActiveSubscriptions(
  this$static,
  callback
) {
  idwcf.$clinit_JsItr();
  this$static.active.forEach(
    makeLambdaFunction(
      idwcf.JsItr$lambda$1$Type.prototype.onInvoke_1,
      idwcf.JsItr$lambda$1$Type,
      [
        makeLambdaFunction(
          idwcs.ClientTableState$lambda$23$Type.prototype.apply_0,
          idwcs.ClientTableState$lambda$23$Type,
          [this$static, callback]
        ),
      ]
    )
  );
};
idwcs.$forActiveTables = function $forActiveTables(this$static, callback) {
  idwcf.$clinit_JsItr();
  this$static.active.forEach(
    makeLambdaFunction(
      idwcf.JsItr$lambda$1$Type.prototype.onInvoke_1,
      idwcf.JsItr$lambda$1$Type,
      [
        makeLambdaFunction(
          idwcs.ClientTableState$lambda$24$Type.prototype.apply_0,
          idwcs.ClientTableState$lambda$24$Type,
          [callback]
        ),
      ]
    )
  );
};
idwcs.$getBinding_0 = function $getBinding_0(this$static, table) {
  var sub_0;
  sub_0 = castTo(this$static.active.get(table), 375);
  !sub_0 && (sub_0 = castTo(this$static.paused.get(table), 375));
  return sub_0;
};
idwcs.$getBoundTables = function $getBoundTables(this$static) {
  if (
    !idwsf.$noneMatch(
      idwcf.iterate(this$static.active.keys()),
      new idwcs.ClientTableState$6methodref$has$Type(this$static.paused)
    )
  ) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "State cannot be active and paused at the same time; active: " +
          this$static.active +
          " paused: " +
          this$static.paused
      )
    );
  }
  return new idwsf.MappedIterable$lambda$5$Type(
    idwcf.iterate(this$static.active.keys()),
    idwcf.iterate(this$static.paused.keys())
  );
};
idwcs.$getLayoutHints = function $getLayoutHints(this$static) {
  !this$static.layoutHints_0 && idwcs.$createLayoutHints(this$static);
  return this$static.layoutHints_0;
};
idwcs.$getTotalsTableConfig_1 = function $getTotalsTableConfig_1(this$static) {
  var configString;
  !this$static.totalsTableConfig_0 &&
    ((configString = castToString(
      ju.$getStringValue(this$static.tableDef.attributes.map_0, "TotalsTable")
    )),
    configString == null
      ? (this$static.totalsTableConfig_0 = null)
      : (this$static.totalsTableConfig_0 = idwca.parse_0(configString)));
  return this$static.totalsTableConfig_0;
};
idwcs.$handleDelta_1 = function $handleDelta_1(this$static, updates) {
  if (eq(this$static.size_0, -1)) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Received delta before receiving initial size")
    );
  }
  idwcs.$setSize_0(
    this$static,
    sub_3(
      add_1(
        this$static.size_0,
        jus.$collect_0(
          jus.$mapToLong(
            ju.stream_4(updates.added_0.sortedRanges),
            new idwsd.RangeSet$0methodref$size$Type()
          )
        ).sum_0
      ),
      jus.$collect_0(
        jus.$mapToLong(
          ju.stream_4(updates.removed_0.sortedRanges),
          new idwsd.RangeSet$0methodref$size$Type()
        )
      ).sum_0
    )
  );
  idwcs.$forActiveSubscriptions(
    this$static,
    makeLambdaFunction(
      idwcs.ClientTableState$lambda$25$Type.prototype.apply_0,
      idwcs.ClientTableState$lambda$25$Type,
      [this$static, updates]
    )
  );
};
idwcs.$hasCustomColumn = function $hasCustomColumn(this$static, candidate) {
  return (
    ju.$indexOf_3(
      new ju.ArrayList_1(this$static.customColumns_0),
      candidate,
      0
    ) != -1
  );
};
idwcs.$hasFilter = function $hasFilter(this$static, candidate) {
  return (
    ju.$indexOf_3(new ju.ArrayList_1(this$static.filters), candidate, 0) != -1
  );
};
idwcs.$hasSort = function $hasSort(this$static, candidate) {
  return (
    ju.$indexOf_3(new ju.ArrayList_1(this$static.sorts), candidate, 0) != -1
  );
};
idwcs.$isAncestor = function $isAncestor(this$static, was) {
  var state, state$iterator;
  for (
    state$iterator = idwsf.$iterator_1(
      new idwsf.LinkedIterable(
        this$static,
        new idwcs.ClientTableState$10methodref$getPrevious$Type()
      )
    );
    idwsf.$hasNext_1(state$iterator);

  ) {
    state = castTo(idwsf.$next_0(state$iterator), 14);
    if (state == was) {
      return true;
    }
  }
  return false;
};
idwcs.$isCompatible = function $isCompatible(
  this$static,
  sorts,
  filters,
  customColumns,
  flat
) {
  var maybeSortOnly, sortsInequal;
  if (
    this$static.sorts.array.length == 0 &&
    this$static.filters.array.length == 0 &&
    this$static.customColumns_0.array.length == 0 &&
    this$static.selectDistinct_0.array.length == 0
  ) {
    return true;
  }
  if (new ju.ArrayList_1(this$static.sorts).array.length > sorts.array.length) {
    return false;
  }
  if (
    new ju.ArrayList_1(this$static.filters).array.length > filters.array.length
  ) {
    return false;
  }
  if (
    new ju.ArrayList_1(this$static.customColumns_0).array.length >
    customColumns.array.length
  ) {
    return false;
  }
  sortsInequal = !ju.$equals_15(new ju.ArrayList_1(this$static.sorts), sorts);
  maybeSortOnly = false;
  if (sortsInequal) {
    maybeSortOnly = idwcs.$startsWith(
      sorts,
      new ju.ArrayList_1(this$static.sorts)
    );
    if (maybeSortOnly) {
      if (new ju.ArrayList_1(this$static.sorts).array.length != 0) {
        return false;
      }
    } else {
      return false;
    }
  }
  if (!ju.$containsAll(filters, new ju.ArrayList_1(this$static.filters))) {
    return false;
  }
  if (
    !idwcs.$startsWith(
      customColumns,
      new ju.ArrayList_1(this$static.customColumns_0)
    )
  ) {
    return false;
  }
  if (
    new ju.ArrayList_1(this$static.sorts).array.length > 0 &&
    new ju.ArrayList_1(this$static.filters).array.length != filters.array.length
  ) {
    return false;
  }
  if (maybeSortOnly) {
    if (!ju.$containsAll(new ju.ArrayList_1(this$static.filters), filters)) {
      return false;
    }
    if (
      !ju.$equals_15(
        customColumns,
        new ju.ArrayList_1(this$static.customColumns_0)
      )
    ) {
      return false;
    }
  }
  if (!flat && this$static.isFlat) {
    return false;
  }
  return true;
};
idwcs.$isEmpty = function $isEmpty(this$static) {
  return (
    this$static.active.size == 0 &&
    this$static.paused.size == 0 &&
    this$static.retainers.size == 0
  );
};
idwcs.$isRunning = function $isRunning(this$static) {
  if (
    this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RUNNING_0)
  ) {
    if (
      !(
        idwca.$isResolved(this$static.handle) || !this$static.handle.isConnected
      )
    ) {
      debugger;
      throw toJs(new jl.AssertionError_0("Handle not resolved when running"));
    }
    if (this$static.columns_0 == null) {
      debugger;
      throw toJs(new jl.AssertionError_0("Null columns resolved when running"));
    }
    if (!this$static.tableDef) {
      debugger;
      throw toJs(
        new jl.AssertionError_0("Null tableDef resolved when running")
      );
    }
    return true;
  }
  return false;
};
idwcs.$lambda$0_12 = function $lambda$0_12(this$static) {
  var column, column$array, column$index, column$max, lookup;
  lookup = new ju.LinkedHashMap();
  if (this$static.columns_0 != null) {
    for (
      column$array = this$static.columns_0,
        column$index = 0,
        column$max = column$array.length;
      column$index < column$max;
      ++column$index
    ) {
      column = column$array[column$index];
      ju.$put_6(lookup, column.name_0, column);
    }
  }
  return lookup;
};
idwcs.$lambda$1_10 = function $lambda$1_10(this$static, s_1, metadata_2) {
  idwcs.$revive_0(
    this$static.connection.reviver,
    metadata_2,
    stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_client_state_ClientTableState_2_classLit,
        1
      ),
      $intern_45,
      14,
      0,
      [s_1]
    )
  );
};
idwcs.$lambda$10_4 = function $lambda$10_4(this$static, doSetSize_1) {
  idwcs.$forActiveTables(
    this$static,
    makeLambdaFunction(
      idwcs.ClientTableState$lambda$11$Type.prototype.apply_3,
      idwcs.ClientTableState$lambda$11$Type,
      [this$static, doSetSize_1]
    )
  );
};
idwcs.$lambda$11_5 = function $lambda$11_5(this$static, doSetSize_1, table_1) {
  idwcs.$lambda$9_6(doSetSize_1.$$outer_0, doSetSize_1.size_1, table_1);
  this$static.queuedSize = null;
};
idwcs.$lambda$12_3 = function $lambda$12_3(this$static, callback_1) {
  this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RUNNING_0) &&
    callback_1(this$static);
};
idwcs.$lambda$13_5 = function $lambda$13_5(this$static, callback_1) {
  this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.FAILED_0) &&
    callback_1(this$static.failMsg);
};
idwcs.$lambda$17_5 = function $lambda$17_5(this$static, sub_1, rows_2) {
  sub_1.rows_0 == rows_2 &&
    idwcs.$onRunning_0(
      this$static,
      makeLambdaFunction(
        idwcs.ClientTableState$lambda$18$Type.prototype.apply_3,
        idwcs.ClientTableState$lambda$18$Type,
        [this$static, sub_1, rows_2]
      ),
      (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0)
    );
};
idwcs.$lambda$18_0 = function $lambda$18_0(this$static, sub_1, rows_2) {
  sub_1.rows_0 == rows_2 && idwcs.$applyViewport(this$static, sub_1);
};
idwcs.$lambda$19_1 = function $lambda$19_1(
  this$static,
  binding_1,
  table_2,
  columns_3
) {
  binding_1.subscriptionPending = true;
  if (idwca.$equals_1(this$static.handle, idwca.$state(table_2).handle)) {
    idwcs.$setViewport_1(
      binding_1,
      new idwsd.Viewport(null, idwcs.$makeBitset(this$static, columns_3))
    );
    idwca.$scheduleCheck(table_2.workerConnection, this$static);
  }
};
idwcs.$lambda$23_0 = function $lambda$23_0(
  this$static,
  callback_1,
  table_1,
  binding_2
) {
  if (binding_2.viewport_0) {
    if (binding_2.table_0 != table_1) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "Corrupt binding between " +
            table_1 +
            " and " +
            binding_2 +
            " in " +
            this$static.active
        )
      );
    }
    callback_1(table_1, binding_2.viewport_0);
  }
};
idwcs.$lambda$25_1 = function $lambda$25_1(this$static, updates_1, table_1) {
  if (!idwca.$equals_1(idwca.$state(table_1).handle, this$static.handle)) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  idwcs.$onRunning_0(
    this$static,
    makeLambdaFunction(
      idwca.JsTable$lambda$94$Type.prototype.apply_3,
      idwca.JsTable$lambda$94$Type,
      [table_1, this$static, updates_1]
    ),
    (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0)
  );
};
idwcs.$lambda$28_0 = function $lambda$28_0(this$static, t_0) {
  return !t_0.currentState || idwca.$state(t_0) == this$static;
};
idwcs.$lambda$3_6 = function $lambda$3_6(this$static, c_0) {
  c_0(this$static);
};
idwcs.$lambda$33_2 = function $lambda$33_2(this$static, metadata_1, c_1) {
  this$static.fetch_0.fetch_1(c_1, this$static, metadata_1);
};
idwcs.$lambda$34_2 = function $lambda$34_2(this$static, def_0) {
  if (
    this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0)
  ) {
    return $wnd.Promise.reject(
      "Table already released, cannot process incoming table definition, this can be safely ignored."
    );
  }
  idwcs.$applyTableCreationResponse(this$static, def_0);
  return $wnd.Promise.resolve(this$static);
};
idwcs.$lambda$9_6 = function $lambda$9_6(this$static, size_1, table_1) {
  var binding, existing, localSize;
  localSize = size_1;
  binding =
    ((existing = idwcs.$getBinding_0(this$static, table_1)),
    !existing
      ? null
      : existing.isActive()
      ? castTo(existing, 55)
      : castTo(existing, 67).active);
  !!binding &&
    table_1.isBlinkTable_0 &&
    !!binding.rows_0 &&
    (localSize = jl.min_1(
      size_1,
      jus.$collect_0(
        jus.$mapToLong(
          ju.stream_4(binding.rows_0.sortedRanges),
          new idwsd.RangeSet$0methodref$size$Type()
        )
      ).sum_0
    ));
  idwca.$setSize(table_1, toDouble_0(localSize));
};
idwcs.$makeBitset = function $makeBitset(this$static, columns) {
  var bitSet;
  bitSet = new ju.BitSet_0(this$static.tableDef.columns_0.length);
  jus.$forEach_5(
    jus.$flatMapToInt(
      new jus.StreamImpl(null, ju.spliterator_5(columns, columns.length)),
      new idwcs.ClientTableState$4methodref$getRequiredColumns$Type()
    ),
    new idwcs.ClientTableState$5methodref$set$Type(bitSet)
  );
  !!this$static.rowFormatColumn &&
    ju.$set(bitSet, this$static.rowFormatColumn.index_0);
  return bitSet;
};
idwcs.$maybeRevive = function $maybeRevive(this$static, metadata) {
  var promise;
  idwca.$scheduleCheck(this$static.connection, this$static);
  if (
    this$static.active.size == 0 &&
    this$static.paused.size == 0 &&
    this$static.retainers.size == 0
  ) {
    return $wnd.Promise.resolve(this$static);
  }
  if (idwcs.$isRunning(this$static) && this$static.handle.isConnected) {
    return $wnd.Promise.resolve(this$static);
  }
  return (
    (promise = new $wnd.Promise(
      makeLambdaFunction(
        idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
        idwca.Callbacks$lambda$4$Type,
        [new idwcs.ClientTableState$lambda$33$Type(this$static, metadata)]
      )
    )),
    promise.then(
      makeLambdaFunction(
        idwcs.ClientTableState$lambda$34$Type.prototype.onInvoke_5,
        idwcs.ClientTableState$lambda$34$Type,
        [this$static]
      )
    )
  );
};
idwcs.$newState_3 = function $newState_3(this$static, newHandle, config) {
  var conditions,
    customColumns,
    dropColumns,
    filters,
    newState,
    sorts,
    viewColumns;
  !config && (config = this$static);
  sorts = new ju.ArrayList_1(config.sorts);
  conditions = new ju.ArrayList_1(config.conditions);
  filters = new ju.ArrayList_1(config.filters);
  customColumns = new ju.ArrayList_1(config.customColumns_0);
  dropColumns = new ju.ArrayList_1(config.dropColumns_0);
  viewColumns = new ju.ArrayList_1(config.viewColumns);
  newState = new idwcs.ClientTableState_0(
    this$static.connection,
    newHandle,
    sorts,
    conditions,
    filters,
    customColumns,
    dropColumns,
    viewColumns,
    this$static,
    new idwcs.ClientTableState$lambda$1$Type(this$static),
    idwcab2.$toSummaryString(config)
  );
  idwcab2.$setFlat_0(newState, config.isFlat);
  idwcs.$isRunning(this$static) ||
    idwcs.$onFailed(
      this$static,
      makeLambdaFunction(
        idwcs.ClientTableState$lambda$2$Type.prototype.apply_3,
        idwcs.ClientTableState$lambda$2$Type,
        [newState]
      ),
      (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0)
    );
  this$static.touch =
    (jl.$clinit_System(), toDouble_0(fromDouble_0(Date.now())));
  return newState;
};
idwcs.$onFailed = function $onFailed(this$static, callback, other) {
  if (
    this$static.resolution ==
      (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0) ||
    this$static.resolution == idwcs.RUNNING_0
  ) {
    other();
    return;
  }
  if (this$static.resolution == idwcs.FAILED_0) {
    idwcf.runLater(
      makeLambdaFunction(
        idwcs.ClientTableState$lambda$13$Type.prototype.run,
        idwcs.ClientTableState$lambda$13$Type,
        [this$static, callback]
      )
    );
    return;
  }
  !this$static.onFailed && (this$static.onFailed = new ju.ArrayList());
  if (ju.$indexOf_3(this$static.onFailed, callback, 0) != -1) {
    debugger;
    throw toJs(new jl.AssertionError_0("Double-added callback"));
  }
  ju.$add(this$static.onFailed, callback);
  !this$static.onRunning && (this$static.onRunning = new ju.ArrayList());
  ju.$add(this$static.onRunning, idwsf.$asConsumer(other));
  !this$static.onReleased && (this$static.onReleased = new ju.ArrayList());
  ju.$add(this$static.onReleased, other);
};
idwcs.$onRunning = function $onRunning(this$static, callback, failed, release) {
  if (
    this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0)
  ) {
    release();
    return;
  } else if (this$static.resolution == idwcs.FAILED_0) {
    failed(this$static.failMsg);
    return;
  }
  if (this$static.resolution == idwcs.RUNNING_0) {
    idwcf.runLater(
      makeLambdaFunction(
        idwcs.ClientTableState$lambda$12$Type.prototype.run,
        idwcs.ClientTableState$lambda$12$Type,
        [this$static, callback]
      )
    );
    return;
  }
  !this$static.onRunning && (this$static.onRunning = new ju.ArrayList());
  if (ju.$indexOf_3(this$static.onRunning, callback, 0) != -1) {
    debugger;
    throw toJs(new jl.AssertionError_0("Double-added callback"));
  }
  ju.$add(this$static.onRunning, callback);
  !this$static.onFailed && (this$static.onFailed = new ju.ArrayList());
  ju.$add(this$static.onFailed, failed);
  !this$static.onReleased && (this$static.onReleased = new ju.ArrayList());
  ju.$add(this$static.onReleased, release);
};
idwcs.$onRunning_0 = function $onRunning_0(this$static, callback, other) {
  idwcs.$onRunning(this$static, callback, idwsf.$asConsumer(other), other);
};
idwcs.$pause = function $pause(this$static, table) {
  var was;
  was = castTo(this$static.active.get(table), 55);
  if (was) {
    this$static.active.delete(table);
    this$static.paused.set(table, was.paused);
    idwca.$scheduleCheck(this$static.connection, this$static);
  }
};
idwcs.$refetch_2 = function $refetch_2(this$static, metadata) {
  var promise;
  promise = new $wnd.Promise(
    makeLambdaFunction(
      idwca.Callbacks$lambda$4$Type.prototype.onInvoke_6,
      idwca.Callbacks$lambda$4$Type,
      [new idwcs.ClientTableState$lambda$33$Type(this$static, metadata)]
    )
  );
  return promise.then(
    makeLambdaFunction(
      idwcs.ClientTableState$lambda$34$Type.prototype.onInvoke_5,
      idwcs.ClientTableState$lambda$34$Type,
      [this$static]
    )
  );
};
idwcs.$refreshSubscription = function $refreshSubscription(this$static, sub_0) {
  if (
    maskUndefined(this$static.active.get(sub_0.table_0)) !==
    maskUndefined(sub_0)
  ) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  sub_0.subscriptionPending ||
    ((sub_0.subscriptionPending || !!sub_0.viewport_0) &&
      (sub_0.rows_0
        ? idwcs.$setDesiredViewport_0(
            sub_0.state,
            sub_0.table_0,
            sub_0.rows_0.sortedRanges[0].first_0,
            idwsd.$getLastRow(sub_0.rows_0),
            sub_0.columns_0
          )
        : idwcs.$subscribe_3(sub_0.state, sub_0.table_0, sub_0.columns_0)));
};
idwcs.$releaseTable = function $releaseTable(this$static, table) {
  var had;
  if (this$static.active.has(table)) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("Cannot releaseTable from active table!")
    );
  }
  had = this$static.paused.has(table);
  if (had) {
    this$static.paused.delete(table);
    idwca.$scheduleCheck(this$static.connection, this$static);
    (this$static.active.size == 0 &&
      this$static.paused.size == 0 &&
      this$static.retainers.size == 0) ||
      (this$static.touch =
        (jl.$clinit_System(), toDouble_0(fromDouble_0(Date.now()))));
  }
  return had;
};
idwcs.$retain = function $retain(this$static, retainer) {
  this$static.retainers.add(retainer);
  idwca.$scheduleCheck(this$static.connection, this$static);
  return makeLambdaFunction(
    idwcs.ClientTableState$lambda$14$Type.prototype.run,
    idwcs.ClientTableState$lambda$14$Type,
    [this$static, retainer]
  );
};
idwcs.$setDesiredViewport_0 = function $setDesiredViewport_0(
  this$static,
  table,
  firstRow,
  lastRow,
  columns
) {
  var rows_0, sub_0;
  this$static.touch =
    (jl.$clinit_System(), toDouble_0(fromDouble_0(Date.now())));
  sub_0 = castTo(this$static.active.get(table), 55);
  if (!sub_0) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "You cannot set the desired viewport on a non-active state + table combination"
      )
    );
  }
  rows_0 = idwcs.$setDesiredViewport(sub_0, firstRow, lastRow, columns);
  idwcf.runLater(
    makeLambdaFunction(
      idwcs.ClientTableState$lambda$17$Type.prototype.run,
      idwcs.ClientTableState$lambda$17$Type,
      [this$static, sub_0, rows_0]
    )
  );
};
idwcs.$setResolution = function $setResolution(this$static, resolution) {
  if (
    resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.FAILED_0)
  ) {
    debugger;
    throw toJs(new jl.AssertionError_0("Failures must provide a reason!"));
  }
  idwcs.$setResolution_0(this$static, resolution, null);
};
idwcs.$setResolution_0 = function $setResolution_0(
  this$static,
  resolution,
  failMsg
) {
  if (
    this$static.resolution ==
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0)
  ) {
    if (resolution != idwcs.RELEASED_0) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "Trying to unrelease CTS " + this$static + " to " + resolution
        )
      );
    }
    return;
  }
  if (this$static.resolution == resolution) {
    return;
  }
  this$static.resolution = resolution;
  if (resolution == idwcs.RUNNING_0) {
    if (this$static.onRunning) {
      ju.$forEach_3(
        this$static.onRunning,
        new idwcs.ClientTableState$lambda$3$Type(this$static)
      );
      this$static.onRunning = null;
    }
    this$static.onFailed = null;
    this$static.onReleased = null;
  } else if (resolution == idwcs.FAILED_0) {
    if (jb.isFalsy(failMsg)) {
      debugger;
      throw toJs(new jl.AssertionError_0("Failures must provide a reason!"));
    }
    this$static.failMsg = failMsg;
    if (this$static.onFailed) {
      ju.$forEach_3(
        this$static.onFailed,
        new idwcs.ClientTableState$lambda$4$Type(failMsg)
      );
      this$static.onFailed = null;
    }
    this$static.onRunning = null;
    this$static.onReleased = null;
    idwcs.$forActiveTables(
      this$static,
      makeLambdaFunction(
        idwcs.ClientTableState$lambda$5$Type.prototype.apply_3,
        idwcs.ClientTableState$lambda$5$Type,
        [failMsg]
      )
    );
  } else if (resolution == idwcs.RELEASED_0) {
    if (this$static.onReleased) {
      ju.$forEach_3(
        this$static.onReleased,
        new idwcs.ClientTableState$0methodref$run$Type()
      );
      this$static.onReleased = null;
    }
    this$static.onRunning = null;
    this$static.onFailed = null;
  }
};
idwcs.$setSize_0 = function $setSize_0(this$static, size_0) {
  var doSetSize, log_0;
  log_0 = neq(this$static.size_0, size_0);
  log_0 &&
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
      $intern_7,
      1,
      5,
      [
        "CTS",
        this$static,
        " set size; was ",
        jl.valueOf_30(this$static.size_0),
        " is now ",
        jl.valueOf_30(size_0),
      ]
    );
  this$static.size_0 = size_0;
  doSetSize = makeLambdaFunction(
    idwcs.ClientTableState$lambda$9$Type.prototype.apply_3,
    idwcs.ClientTableState$lambda$9$Type,
    [this$static, size_0]
  );
  if (idwcs.$isRunning(this$static)) {
    log_0 &&
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        [
          "CTS immediate size update ",
          jl.valueOf_30(this$static.size_0),
          " actives: ",
          this$static.active,
        ]
      );
    idwcf.$clinit_JsItr();
    this$static.active.forEach(
      makeLambdaFunction(
        idwcf.JsItr$lambda$1$Type.prototype.onInvoke_1,
        idwcf.JsItr$lambda$1$Type,
        [
          makeLambdaFunction(
            idwcs.ClientTableState$lambda$24$Type.prototype.apply_0,
            idwcs.ClientTableState$lambda$24$Type,
            [doSetSize]
          ),
        ]
      )
    );
  } else {
    if (this$static.queuedSize == null) {
      stampJavaTypeInfo(
        getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
        $intern_7,
        1,
        5,
        ["Queuing size changed until RUNNING STATE; ", jl.valueOf_30(size_0)]
      );
      idwcs.$onRunning_0(
        this$static,
        makeLambdaFunction(
          idwcs.ClientTableState$lambda$10$Type.prototype.apply_3,
          idwcs.ClientTableState$lambda$10$Type,
          [this$static, doSetSize]
        ),
        (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0)
      );
    }
    this$static.queuedSize = ji.uncheckedCast(toDouble_0(size_0));
  }
};
idwcs.$setTableDef = function $setTableDef(this$static, tableDef) {
  var byNameMap,
    column,
    columnDefinitions,
    columns,
    create,
    definition,
    definition$array,
    definition$index,
    definition$max;
  create = this$static.tableDef != tableDef;
  this$static.tableDef = tableDef;
  if (create) {
    columnDefinitions = tableDef.columns_0;
    byNameMap = castTo(
      jus.$collect_1(
        ju.stream_4(tableDef.columns_0),
        jus.partitioningBy(
          new idwcabd.InitialTableDefinition$0methodref$isRollupConstituentNodeColumn$Type(),
          jus.toMap(
            new idwcabd.InitialTableDefinition$1methodref$getName$Type(),
            new juf.Function$lambda$0$Type(),
            new idwcabd.InitialTableDefinition$lambda$4$Type(),
            new idwcabd.InitialTableDefinition$3methodref$ctor$Type()
          )
        )
      ),
      30
    );
    if (
      !castTo(
        byNameMap.get((jl.$clinit_Boolean(), ji.uncheckedCast(true))),
        30
      ).isEmpty()
    ) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "Unexpected constituent columns in table " +
            byNameMap.get(ji.uncheckedCast(true))
        )
      );
    }
    columns = initUnidimensionalArray(
      cggl.Lio_deephaven_web_client_api_Column_2_classLit,
      $intern_40,
      21,
      0,
      0,
      1
    );
    this$static.allColumns = initUnidimensionalArray(
      cggl.Lio_deephaven_web_client_api_Column_2_classLit,
      $intern_40,
      21,
      0,
      0,
      1
    );
    for (
      definition$array = columnDefinitions,
        definition$index = 0,
        definition$max = definition$array.length;
      definition$index < definition$max;
      ++definition$index
    ) {
      definition = definition$array[definition$index];
      column = idwcabd.$makeJsColumn(definition, columns.length, byNameMap);
      if (definition.forRow) {
        this$static.rowFormatColumn = column;
        continue;
      }
      this$static.allColumns[this$static.allColumns.length] = column;
      !definition.isStyleColumn &&
        !definition.isFormatColumn &&
        !definition.isRollupConstituentNodeColumn &&
        !definition.isHierarchicalRowDepthColumn &&
        !definition.isHierarchicalRowExpandedColumn &&
        (columns[columns.length] =
          this$static.allColumns[this$static.allColumns.length - 1]);
    }
    this$static.columns_0 = castTo($wnd.Object.freeze(columns), 126);
    this$static.columnLookup = new idwca.JsLazy(
      new idwcs.ClientTableState$lambda$0$Type(this$static)
    );
  }
};
idwcs.$shouldResuscitate = function $shouldResuscitate(this$static) {
  return (
    this$static.resolution !=
      (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RELEASED_0) &&
    !this$static.stayDead
  );
};
idwcs.$startsWith = function $startsWith(candidate, prefix) {
  return ju.$equals_15(
    prefix,
    new ju.AbstractList$SubList(candidate, 0, prefix.array.length)
  );
};
idwcs.$subscribe_3 = function $subscribe_3(this$static, table, columns) {
  var binding;
  this$static.touch =
    (jl.$clinit_System(), toDouble_0(fromDouble_0(Date.now())));
  binding = castTo(this$static.active.get(table), 55);
  if (!binding) {
    debugger;
    throw toJs(
      new jl.AssertionError_0("No active binding found for table " + table)
    );
  }
  idwcs.$onRunning_0(
    this$static,
    makeLambdaFunction(
      idwcs.ClientTableState$lambda$19$Type.prototype.apply_3,
      idwcs.ClientTableState$lambda$19$Type,
      [this$static, binding, table, columns]
    ),
    (idwsf.$clinit_RunnableHelper(), idwsf.DO_NOTHING_0)
  );
};
idwcs.$toStringMinimal = function $toStringMinimal(this$static) {
  return (
    "ClientTableState{handle=" +
    this$static.handle +
    ", resolution=" +
    this$static.resolution +
    ", active=" +
    this$static.active.size +
    ", paused=" +
    this$static.paused.size +
    ", retainers=" +
    this$static.retainers.size +
    ", size=" +
    toString_6(this$static.size_0) +
    ", tableDef=" +
    this$static.tableDef +
    ", rowFormatColumn=" +
    this$static.rowFormatColumn +
    "} "
  );
};
idwcs.$unpause = function $unpause(this$static, table) {
  var was;
  was = castTo(this$static.paused.get(table), 67);
  if (!was) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Cannot unpause a table that is not paused " + this$static
      )
    );
  }
  this$static.paused.delete(table);
  this$static.active.set(table, was.active);
  idwcs.$refreshSubscription(this$static, was.active);
};
idwcs.$unretain = function $unretain(this$static, retainer) {
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [
      "Unretainment",
      retainer,
      " releasing ",
      new idwca.LazyString(
        makeLambdaFunction(
          idwcs.ClientTableState$3methodref$toStringMinimal$Type.prototype
            .valueOf_0,
          idwcs.ClientTableState$3methodref$toStringMinimal$Type,
          [this$static]
        )
      ),
    ]
  );
  this$static.retainers.delete(retainer);
  idwca.$scheduleCheck(this$static.connection, this$static);
};
idwcs.ClientTableState = function ClientTableState(
  connection,
  handle,
  fetcher,
  fetchSummary
) {
  idwcs.ClientTableState_0.call(
    this,
    connection,
    handle,
    (ju.$clinit_Collections(), ju.$clinit_Collections(), ju.EMPTY_LIST),
    (null, ju.EMPTY_LIST),
    (null, ju.EMPTY_LIST),
    (null, ju.EMPTY_LIST),
    (null, ju.EMPTY_LIST),
    (null, ju.EMPTY_LIST),
    null,
    fetcher,
    fetchSummary
  );
};
idwcs.ClientTableState_0 = function ClientTableState_0(
  connection,
  handle,
  sort_0,
  conditions,
  filter,
  customColumns,
  dropColumns,
  viewColumns,
  source,
  fetch_0,
  fetchSummary
) {
  idwcab2.TableConfig_0.call(
    this,
    sort_0,
    conditions,
    filter,
    customColumns,
    dropColumns,
    viewColumns
  );
  idwcs.$$init_48(this);
  this.touch = (jl.$clinit_System(), toDouble_0(fromDouble_0(Date.now())));
  this.fetch_0 = fetch_0;
  this.connection = connection;
  this.handle = handle;
  this.size_0 = -1;
  this.columnLookup = new idwca.JsLazy(
    new idwcs.ClientTableState$lambda$0$Type(this)
  );
  this.resolution =
    handle.isConnected &&
    handle.state == (idwca.$clinit_TableTicket$State(), idwca.EXPORTED)
      ? (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RESOLVED)
      : (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.UNRESOLVED);
  this.source_0 = source;
  this.fetchSummary = fetchSummary;
};
idwcs.lambda$2_15 = function lambda$2_15(newState_0, reason_1) {
  idwcs.$setResolution_0(
    newState_0,
    (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.FAILED_0),
    reason_1
  );
};
idwcs.lambda$31_0 = function lambda$31_0(a_0, b_1) {
  return round_int(jl.signum(b_1.touch - a_0.touch));
};
idwcs.lambda$4_11 = function lambda$4_11(failMsg_0, c_1) {
  c_1(failMsg_0);
};
idwcs.lambda$5_8 = function lambda$5_8(failMsg_0, t_1) {
  return idwca.$failureHandled(t_1, failMsg_0);
};
defineClass(
  14,
  172,
  { 172: 1, 14: 1 },
  idwcs.ClientTableState,
  idwcs.ClientTableState_0
);
_.equals_0 = function equals_13(o) {
  return idwcs.$equals_3(this, o);
};
_.hashCode_1 = function hashCode_14() {
  var result;
  result = idwcab2.$hashCode_2(this);
  result = 31 * result + this.handle.exportId_0;
  return result;
};
_.toString_0 = function toString_31() {
  return (
    "ClientTableState{handle=" +
    this.handle +
    ", resolution=" +
    this.resolution +
    ", active=" +
    this.active +
    ", paused=" +
    this.paused +
    ", size=" +
    toString_6(this.size_0) +
    ", tableDef=" +
    this.tableDef +
    ", rowFormatColumn=" +
    this.rowFormatColumn +
    ", failMsg='" +
    this.failMsg +
    "'" +
    ", sorts=" +
    new ju.ArrayList_1(this.sorts) +
    ", filters=" +
    new ju.ArrayList_1(this.filters) +
    ", customColumns=" +
    new ju.ArrayList_1(this.customColumns_0) +
    ", selectDistinct=" +
    new ju.ArrayList_1(this.selectDistinct_0) +
    "} "
  );
};
_.isStatic_0 = false;
_.size_0 = 0;
_.stayDead = false;
_.subscribed = false;
_.touch = 0;
cggl.Lio_deephaven_web_client_state_ClientTableState_2_classLit =
  createForClass("io.deephaven.web.client.state", "ClientTableState", 14);
idwcs.ClientTableState$0methodref$run$Type =
  function ClientTableState$0methodref$run$Type() {};
defineClass(569, 1, $intern_19, idwcs.ClientTableState$0methodref$run$Type);
_.accept = function accept_86(arg0) {
  castToFunction(arg0)();
};
cggl.Lio_deephaven_web_client_state_ClientTableState$0methodref$run$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/0methodref$run$Type",
    569
  );
idwcs.ClientTableState$10methodref$getPrevious$Type =
  function ClientTableState$10methodref$getPrevious$Type() {};
defineClass(577, 1, {}, idwcs.ClientTableState$10methodref$getPrevious$Type);
_.apply_1 = function apply_223(arg0) {
  return castTo(arg0, 14).source_0;
};
cggl.Lio_deephaven_web_client_state_ClientTableState$10methodref$getPrevious$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/10methodref$getPrevious$Type",
    577
  );
idwcs.ClientTableState$2methodref$ctor$Type =
  function ClientTableState$2methodref$ctor$Type() {};
defineClass(285, 1, {}, idwcs.ClientTableState$2methodref$ctor$Type);
_.apply_1 = function apply_224(arg0) {
  return new idwca.CustomColumn(castTo(arg0, 148));
};
cggl.Lio_deephaven_web_client_state_ClientTableState$2methodref$ctor$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/2methodref$ctor$Type",
    285
  );
idwcs.$getClass_517 = function $getClass_517() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$3methodref$toStringMinimal$Type =
  function ClientTableState$3methodref$toStringMinimal$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1350,
  $wnd.Function,
  $intern_47,
  idwcs.ClientTableState$3methodref$toStringMinimal$Type
);
_.valueOf_0 = function valueOf_27() {
  return idwcs.$toStringMinimal(this.$$outer_0);
};
idwcs.ClientTableState$4methodref$getRequiredColumns$Type =
  function ClientTableState$4methodref$getRequiredColumns$Type() {};
defineClass(
  571,
  1,
  {},
  idwcs.ClientTableState$4methodref$getRequiredColumns$Type
);
_.apply_1 = function apply_225(arg0) {
  return idwca.$getRequiredColumns(castTo(arg0, 21));
};
cggl.Lio_deephaven_web_client_state_ClientTableState$4methodref$getRequiredColumns$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/4methodref$getRequiredColumns$Type",
    571
  );
idwcs.ClientTableState$5methodref$set$Type =
  function ClientTableState$5methodref$set$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(572, 1, $intern_62, idwcs.ClientTableState$5methodref$set$Type);
_.accept_2 = function accept_87(arg0) {
  ju.$set(this.$$outer_0, arg0);
};
cggl.Lio_deephaven_web_client_state_ClientTableState$5methodref$set$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/5methodref$set$Type",
    572
  );
idwcs.$test_2 = function $test_2(this$static, arg0) {
  return this$static.$$outer_0.has(castTo(arg0, 13));
};
idwcs.ClientTableState$6methodref$has$Type =
  function ClientTableState$6methodref$has$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(573, 1, {}, idwcs.ClientTableState$6methodref$has$Type);
_.test_0 = function test_24(arg0) {
  return idwcs.$test_2(this, arg0);
};
cggl.Lio_deephaven_web_client_state_ClientTableState$6methodref$has$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/6methodref$has$Type",
    573
  );
idwcs.ClientTableState$7methodref$getPrevious$Type =
  function ClientTableState$7methodref$getPrevious$Type() {};
defineClass(574, 1, {}, idwcs.ClientTableState$7methodref$getPrevious$Type);
_.apply_1 = function apply_226(arg0) {
  return castTo(arg0, 14).source_0;
};
cggl.Lio_deephaven_web_client_state_ClientTableState$7methodref$getPrevious$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/7methodref$getPrevious$Type",
    574
  );
idwcs.ClientTableState$8methodref$getPrevious$Type =
  function ClientTableState$8methodref$getPrevious$Type() {};
defineClass(248, 1, {}, idwcs.ClientTableState$8methodref$getPrevious$Type);
_.apply_1 = function apply_227(arg0) {
  return castTo(arg0, 14).source_0;
};
cggl.Lio_deephaven_web_client_state_ClientTableState$8methodref$getPrevious$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/8methodref$getPrevious$Type",
    248
  );
idwcs.$getClass_518 = function $getClass_518() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$9methodref$cleanup$Type =
  function ClientTableState$9methodref$cleanup$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1356,
  $wnd.Function,
  $intern_49,
  idwcs.ClientTableState$9methodref$cleanup$Type
);
_.run = function run_41() {
  idwcs.$cleanup(this.$$outer_0);
};
idwcs.$clinit_ClientTableState$ResolutionState =
  function $clinit_ClientTableState$ResolutionState() {
    idwcs.$clinit_ClientTableState$ResolutionState = emptyMethod;
    idwcs.UNRESOLVED = new idwcs.ClientTableState$ResolutionState(
      "UNRESOLVED",
      0
    );
    idwcs.RESOLVED = new idwcs.ClientTableState$ResolutionState("RESOLVED", 1);
    idwcs.RUNNING_0 = new idwcs.ClientTableState$ResolutionState("RUNNING", 2);
    idwcs.RELEASED_0 = new idwcs.ClientTableState$ResolutionState(
      "RELEASED",
      3
    );
    idwcs.FAILED_0 = new idwcs.ClientTableState$ResolutionState("FAILED", 4);
  };
idwcs.ClientTableState$ResolutionState =
  function ClientTableState$ResolutionState(enum$name, enum$ordinal) {
    Enum.call(this, enum$name, enum$ordinal);
  };
idwcs.values_6 = function values_6() {
  idwcs.$clinit_ClientTableState$ResolutionState();
  return stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lio_deephaven_web_client_state_ClientTableState$ResolutionState_2_classLit,
      1
    ),
    $intern_17,
    157,
    0,
    [
      idwcs.UNRESOLVED,
      idwcs.RESOLVED,
      idwcs.RUNNING_0,
      idwcs.RELEASED_0,
      idwcs.FAILED_0,
    ]
  );
};
defineClass(
  157,
  37,
  { 157: 1, 3: 1, 33: 1, 37: 1 },
  idwcs.ClientTableState$ResolutionState
);
cggl.Lio_deephaven_web_client_state_ClientTableState$ResolutionState_2_classLit =
  createForEnum(
    "io.deephaven.web.client.state",
    "ClientTableState/ResolutionState",
    157,
    idwcs.values_6
  );
idwcs.ClientTableState$lambda$0$Type = function ClientTableState$lambda$0$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(343, 1, {}, idwcs.ClientTableState$lambda$0$Type);
_.valueOf_0 = function valueOf_28() {
  return idwcs.$lambda$0_12(this.$$outer_0);
};
cggl.Lio_deephaven_web_client_state_ClientTableState$lambda$0$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/lambda$0$Type",
    343
  );
idwcs.ClientTableState$lambda$1$Type = function ClientTableState$lambda$1$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(566, 1, {}, idwcs.ClientTableState$lambda$1$Type);
_.fetch_1 = function fetch_30(arg0, arg1, arg2) {
  idwcs.$lambda$1_10(this.$$outer_0, arg1, arg2);
};
cggl.Lio_deephaven_web_client_state_ClientTableState$lambda$1$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/lambda$1$Type",
    566
  );
idwcs.$getClass_519 = function $getClass_519() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$10$Type =
  function ClientTableState$lambda$10$Type($$outer_0, doSetSize_1) {
    this.$$outer_0 = $$outer_0;
    this.doSetSize_1 = doSetSize_1;
  };
defineClass(
  1346,
  $wnd.Function,
  $intern_48,
  idwcs.ClientTableState$lambda$10$Type
);
_.apply_3 = function apply_228(arg0) {
  var lastArg;
  idwcs.$lambda$10_4(
    this.$$outer_0,
    ((lastArg = this.doSetSize_1), castTo(arg0, 14), lastArg)
  );
};
idwcs.$getClass_520 = function $getClass_520() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$11$Type =
  function ClientTableState$lambda$11$Type($$outer_0, doSetSize_1) {
    this.$$outer_0 = $$outer_0;
    this.doSetSize_1 = doSetSize_1;
  };
defineClass(
  1357,
  $wnd.Function,
  $intern_48,
  idwcs.ClientTableState$lambda$11$Type
);
_.apply_3 = function apply_229(arg0) {
  idwcs.$lambda$11_5(this.$$outer_0, this.doSetSize_1, castTo(arg0, 13));
};
idwcs.$getClass_521 = function $getClass_521() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$12$Type =
  function ClientTableState$lambda$12$Type($$outer_0, callback_1) {
    this.$$outer_0 = $$outer_0;
    this.callback_1 = callback_1;
  };
defineClass(
  1347,
  $wnd.Function,
  $intern_49,
  idwcs.ClientTableState$lambda$12$Type
);
_.run = function run_42() {
  idwcs.$lambda$12_3(this.$$outer_0, this.callback_1);
};
idwcs.$getClass_522 = function $getClass_522() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$13$Type =
  function ClientTableState$lambda$13$Type($$outer_0, callback_1) {
    this.$$outer_0 = $$outer_0;
    this.callback_1 = callback_1;
  };
defineClass(
  1348,
  $wnd.Function,
  $intern_49,
  idwcs.ClientTableState$lambda$13$Type
);
_.run = function run_43() {
  idwcs.$lambda$13_5(this.$$outer_0, this.callback_1);
};
idwcs.$getClass_523 = function $getClass_523() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$14$Type =
  function ClientTableState$lambda$14$Type($$outer_0, retainer_1) {
    this.$$outer_0 = $$outer_0;
    this.retainer_1 = retainer_1;
  };
defineClass(
  1349,
  $wnd.Function,
  $intern_49,
  idwcs.ClientTableState$lambda$14$Type
);
_.run = function run_44() {
  idwcs.$unretain(this.$$outer_0, this.retainer_1);
};
idwcs.ClientTableState$lambda$16$Type =
  function ClientTableState$lambda$16$Type() {};
defineClass(570, 1, {}, idwcs.ClientTableState$lambda$16$Type);
_.test_0 = function test_25(arg0) {
  return !castTo(arg0, 55).viewport_0;
};
cggl.Lio_deephaven_web_client_state_ClientTableState$lambda$16$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/lambda$16$Type",
    570
  );
idwcs.$getClass_524 = function $getClass_524() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$17$Type =
  function ClientTableState$lambda$17$Type($$outer_0, sub_1, rows_2) {
    this.$$outer_0 = $$outer_0;
    this.sub_1 = sub_1;
    this.rows_2 = rows_2;
  };
defineClass(
  1351,
  $wnd.Function,
  $intern_49,
  idwcs.ClientTableState$lambda$17$Type
);
_.run = function run_45() {
  idwcs.$lambda$17_5(this.$$outer_0, this.sub_1, this.rows_2);
};
idwcs.$getClass_525 = function $getClass_525() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$18$Type =
  function ClientTableState$lambda$18$Type($$outer_0, sub_1, rows_2) {
    this.$$outer_0 = $$outer_0;
    this.sub_1 = sub_1;
    this.rows_2 = rows_2;
  };
defineClass(
  1358,
  $wnd.Function,
  $intern_48,
  idwcs.ClientTableState$lambda$18$Type
);
_.apply_3 = function apply_230(arg0) {
  var lastArg;
  idwcs.$lambda$18_0(
    this.$$outer_0,
    this.sub_1,
    ((lastArg = this.rows_2), castTo(arg0, 14), lastArg)
  );
};
idwcs.$getClass_526 = function $getClass_526() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$19$Type =
  function ClientTableState$lambda$19$Type(
    $$outer_0,
    binding_1,
    table_2,
    columns_3
  ) {
    this.$$outer_0 = $$outer_0;
    this.binding_1 = binding_1;
    this.table_2 = table_2;
    this.columns_3 = columns_3;
  };
defineClass(
  1352,
  $wnd.Function,
  $intern_48,
  idwcs.ClientTableState$lambda$19$Type
);
_.apply_3 = function apply_231(arg0) {
  var lastArg;
  idwcs.$lambda$19_1(
    this.$$outer_0,
    this.binding_1,
    this.table_2,
    ((lastArg = this.columns_3), castTo(arg0, 14), lastArg)
  );
};
idwcs.$getClass_527 = function $getClass_527() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$2$Type = function ClientTableState$lambda$2$Type(
  newState_0
) {
  this.newState_0 = newState_0;
};
defineClass(
  1343,
  $wnd.Function,
  $intern_48,
  idwcs.ClientTableState$lambda$2$Type
);
_.apply_3 = function apply_232(arg0) {
  idwcs.lambda$2_15(this.newState_0, castToString(arg0));
};
idwcs.$getClass_528 = function $getClass_528() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$23$Type =
  function ClientTableState$lambda$23$Type($$outer_0, callback_1) {
    this.$$outer_0 = $$outer_0;
    this.callback_1 = callback_1;
  };
defineClass(
  1353,
  $wnd.Function,
  $intern_30,
  idwcs.ClientTableState$lambda$23$Type
);
_.apply_0 = function apply_233(arg0, arg1) {
  idwcs.$lambda$23_0(
    this.$$outer_0,
    this.callback_1,
    castTo(arg0, 13),
    castTo(arg1, 55)
  );
};
idwcs.$getClass_529 = function $getClass_529() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$24$Type =
  function ClientTableState$lambda$24$Type(callback_0) {
    this.callback_0 = callback_0;
  };
defineClass(
  982,
  $wnd.Function,
  $intern_30,
  idwcs.ClientTableState$lambda$24$Type
);
_.apply_0 = function apply_234(arg0, arg1) {
  var lastArg;
  this.callback_0.call(
    null,
    ((lastArg = castTo(arg0, 13)), castTo(arg1, 55), lastArg)
  );
};
idwcs.$getClass_530 = function $getClass_530() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$25$Type =
  function ClientTableState$lambda$25$Type($$outer_0, updates_1) {
    this.$$outer_0 = $$outer_0;
    this.updates_1 = updates_1;
  };
defineClass(
  1354,
  $wnd.Function,
  $intern_30,
  idwcs.ClientTableState$lambda$25$Type
);
_.apply_0 = function apply_235(arg0, arg1) {
  var lastArg;
  idwcs.$lambda$25_1(
    this.$$outer_0,
    this.updates_1,
    ((lastArg = castTo(arg0, 13)), castTo(arg1, 175), lastArg)
  );
};
idwcs.ClientTableState$lambda$28$Type =
  function ClientTableState$lambda$28$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(575, 1, {}, idwcs.ClientTableState$lambda$28$Type);
_.test_0 = function test_26(arg0) {
  return idwcs.$lambda$28_0(this.$$outer_0, castTo(arg0, 13));
};
cggl.Lio_deephaven_web_client_state_ClientTableState$lambda$28$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/lambda$28$Type",
    575
  );
idwcs.$getClass_531 = function $getClass_531() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$29$Type =
  function ClientTableState$lambda$29$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  1355,
  $wnd.Function,
  $intern_48,
  idwcs.ClientTableState$lambda$29$Type
);
_.apply_3 = function apply_236(arg0) {
  castTo(arg0, 14);
  idwcs.$cleanup(this.$$outer_0);
};
idwcs.ClientTableState$lambda$3$Type = function ClientTableState$lambda$3$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(567, 1, $intern_19, idwcs.ClientTableState$lambda$3$Type);
_.accept = function accept_88(arg0) {
  idwcs.$lambda$3_6(this.$$outer_0, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_state_ClientTableState$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/lambda$3$Type",
    567
  );
idwcs.ClientTableState$lambda$31$Type =
  function ClientTableState$lambda$31$Type() {};
defineClass(576, 1, {}, idwcs.ClientTableState$lambda$31$Type);
_.compare_0 = function compare_2(arg0, arg1) {
  return idwcs.lambda$31_0(castTo(arg0, 14), castTo(arg1, 14));
};
_.equals_0 = function equals_14(other) {
  return this === other;
};
cggl.Lio_deephaven_web_client_state_ClientTableState$lambda$31$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/lambda$31$Type",
    576
  );
idwcs.ClientTableState$lambda$33$Type =
  function ClientTableState$lambda$33$Type($$outer_0, metadata_1) {
    this.$$outer_0 = $$outer_0;
    this.metadata_1 = metadata_1;
  };
defineClass(344, 1, $intern_19, idwcs.ClientTableState$lambda$33$Type);
_.accept = function accept_89(arg0) {
  idwcs.$lambda$33_2(this.$$outer_0, this.metadata_1, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_state_ClientTableState$lambda$33$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/lambda$33$Type",
    344
  );
idwcs.$getClass_532 = function $getClass_532() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$34$Type =
  function ClientTableState$lambda$34$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  981,
  $wnd.Function,
  $intern_36,
  idwcs.ClientTableState$lambda$34$Type
);
_.onInvoke_5 = function onInvoke_316(arg0) {
  return idwcs.$lambda$34_2(
    this.$$outer_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableCreationResponse
    )
  );
};
idwcs.ClientTableState$lambda$4$Type = function ClientTableState$lambda$4$Type(
  failMsg_0
) {
  this.failMsg_0 = failMsg_0;
};
defineClass(568, 1, $intern_19, idwcs.ClientTableState$lambda$4$Type);
_.accept = function accept_90(arg0) {
  idwcs.lambda$4_11(this.failMsg_0, castToFunction(arg0));
};
cggl.Lio_deephaven_web_client_state_ClientTableState$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "ClientTableState/lambda$4$Type",
    568
  );
idwcs.$getClass_533 = function $getClass_533() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$5$Type = function ClientTableState$lambda$5$Type(
  failMsg_0
) {
  this.failMsg_0 = failMsg_0;
};
defineClass(
  1344,
  $wnd.Function,
  $intern_48,
  idwcs.ClientTableState$lambda$5$Type
);
_.apply_3 = function apply_237(arg0) {
  idwcs.lambda$5_8(this.failMsg_0, castTo(arg0, 13));
};
idwcs.$apply_10 = function $apply_10(this$static, arg0) {
  idwcs.$lambda$9_6(
    this$static.$$outer_0,
    this$static.size_1,
    castTo(arg0, 13)
  );
};
idwcs.$getClass_534 = function $getClass_534() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.ClientTableState$lambda$9$Type = function ClientTableState$lambda$9$Type(
  $$outer_0,
  size_1
) {
  this.$$outer_0 = $$outer_0;
  this.size_1 = size_1;
};
defineClass(
  1345,
  $wnd.Function,
  $intern_48,
  idwcs.ClientTableState$lambda$9$Type
);
_.apply_3 = function apply_238(arg0) {
  idwcs.$apply_10(this, arg0);
};
_.size_1 = 0;
idwcs.PausedTableBinding = function PausedTableBinding(active) {
  this.active = active;
};
defineClass(67, 1, { 375: 1, 67: 1 }, idwcs.PausedTableBinding);
_.isActive = function isActive_0() {
  return false;
};
cggl.Lio_deephaven_web_client_state_PausedTableBinding_2_classLit =
  createForClass("io.deephaven.web.client.state", "PausedTableBinding", 67);
idwcs.$doRevive = function $doRevive(this$static, states, metadata) {
  var all,
    builder,
    cnt,
    newestFirst,
    page,
    rebuild,
    reviveFirst,
    reviveLast,
    s,
    s$iterator,
    state,
    state$array,
    state$index,
    state$iterator,
    state$max;
  reviveFirst = new ju.ArrayList();
  reviveLast = new ju.ArrayList();
  for (
    state$array = states, state$index = 0, state$max = state$array.length;
    state$index < state$max;
    ++state$index
  ) {
    state = state$array[state$index];
    reviveFirst.array[reviveFirst.array.length] = state;
  }
  newestFirst = new idwcs.ClientTableState$lambda$31$Type();
  ju.sort_2(reviveFirst.array, reviveFirst.array.length, newestFirst);
  ju.sort_2(reviveLast.array, reviveLast.array.length, newestFirst);
  for (
    state$iterator = new ju.ArrayList$1(reviveFirst);
    state$iterator.i < state$iterator.this$01.array.length;

  ) {
    state = castTo(ju.$next_8(state$iterator), 14);
    idwcs
      .$maybeRevive(state, metadata)
      .then(
        makeLambdaFunction(
          idwcs.TableReviver$lambda$3$Type.prototype.onInvoke_5,
          idwcs.TableReviver$lambda$3$Type,
          [state]
        ),
        makeLambdaFunction(
          idwcs.TableReviver$lambda$4$Type.prototype.onInvoke_5,
          idwcs.TableReviver$lambda$4$Type,
          [state]
        )
      );
  }
  if (reviveLast.array.length != 0) {
    cnt = 0;
    page = 6;
    builder = new idwcab2.BatchBuilder();
    all = new ju.LinkedHashMap();
    for (
      s$iterator = new ju.ArrayList$1(reviveLast);
      s$iterator.i < s$iterator.this$01.array.length;

    ) {
      s = castTo(ju.$next_8(s$iterator), 14);
      ju.$put_6(all, s.handle, s);
      rebuild = idwcab2.$getOp(builder);
      idwcab2.$fromState(rebuild, s);
      idwcab2.$setAppendTo(rebuild, s.source_0);
      idwcab2.$setHandles(rebuild, s.source_0.handle, s.handle);
      ju.$indexOf_3(builder.ops, rebuild, 0) != -1 ||
        ju.$add(builder.ops, rebuild);
      builder.next_0 == rebuild && (builder.next_0 = null);
      if (++cnt == page) {
        cnt = 0;
        page += 4;
        idwcs.$sendRequest(this$static, builder, all);
        all = new ju.LinkedHashMap();
      }
    }
    idwcs.$sendRequest(this$static, builder, all);
  }
};
idwcs.$lambda$0_13 = function $lambda$0_13(this$static, metadata_1) {
  var toRevive;
  toRevive = castTo(
    jus.$toArray_6(
      jus.$filter_1(
        new jus.StreamImpl(
          null,
          new ju.Spliterators$IteratorSpliterator(this$static.enqueued, 1)
        ),
        new idwcs.TableReviver$0methodref$shouldResuscitate$Type()
      ),
      new idwcs.TableReviver$1methodref$lambda$2$Type()
    ),
    193
  );
  this$static.enqueued = null;
  idwcs.$doRevive(this$static, toRevive, metadata_1);
};
idwcs.$revive_0 = function $revive_0(this$static, metadata, states) {
  if (!this$static.enqueued) {
    this$static.enqueued = new idwsf.IdentityHashSet();
    idwcf.runLater(
      makeLambdaFunction(
        idwcs.TableReviver$lambda$0$Type.prototype.run,
        idwcs.TableReviver$lambda$0$Type,
        [this$static, metadata]
      )
    );
  }
  ju.$addAll(this$static.enqueued, new ju.Arrays$ArrayList(states));
};
idwcs.$sendRequest = function $sendRequest(this$static, requester, all) {
  var ops, req, stream;
  ops = idwcab2.$serializable(requester);
  if (ops.length == 0) {
    return;
  }
  req = new $wnd.dhinternal.io.deephaven.proto.table_pb.BatchTableRequest();
  req.setOpsList(ops);
  requester.ops.array = initUnidimensionalArray(
    cggl.Ljava_lang_Object_2_classLit,
    $intern_7,
    1,
    0,
    5,
    1
  );
  requester.next_0 = null;
  stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    ["Sending revivification request", idwca.of_1(req)]
  );
  stream = castToJsObject(
    this$static.connection.tableServiceClient.batch(
      req,
      this$static.connection.metadata_0
    )
  );
  stream.on(
    "data",
    castToFunction(
      makeLambdaFunction(
        idwcs.TableReviver$lambda$7$Type.prototype.apply_3,
        idwcs.TableReviver$lambda$7$Type,
        [all]
      )
    )
  );
  stream.on(
    "end",
    castToFunction(
      makeLambdaFunction(
        idwcs.TableReviver$lambda$10$Type.prototype.apply_3,
        idwcs.TableReviver$lambda$10$Type,
        [all]
      )
    )
  );
};
idwcs.TableReviver = function TableReviver(connection) {
  new $wnd.Map();
  this.connection = connection;
};
idwcs.lambda$10_5 = function lambda$10_5(all_0, status_1) {
  var entry, failed, failed$iterator, outerIter;
  if (idwcabs.$isOk(status_1)) {
    for (
      failed$iterator =
        ((outerIter = new ju.AbstractMap$2(all_0).this$01
          .entrySet_0()
          .iterator_0()),
        new ju.AbstractMap$2$1(outerIter));
      failed$iterator.val$outerIter2.hasNext_1();

    ) {
      failed =
        ((entry = castTo(failed$iterator.val$outerIter2.next_1(), 27)),
        castTo(entry.getValue_0(), 14));
      idwcs.$forActiveLifecycles(
        failed,
        makeLambdaFunction(
          idwcs.TableReviver$lambda$11$Type.prototype.apply_3,
          idwcs.TableReviver$lambda$11$Type,
          [status_1]
        )
      );
    }
  }
};
idwcs.lambda$11_6 = function lambda$11_6(status_0, t_1) {
  idwcal.$die(t_1, status_0.details);
};
idwcs.lambda$3_7 = function lambda$3_7(state_0) {
  idwcs.$forActiveLifecycles(
    state_0,
    makeLambdaFunction(
      idwcs.TableReviver$lambda$5$Type.prototype.apply_3,
      idwcs.TableReviver$lambda$5$Type,
      [state_0]
    )
  );
  return null;
};
idwcs.lambda$5_9 = function lambda$5_9(state_0, t_1) {
  idwca.$revive(castTo(t_1, 13), state_0);
};
idwcs.lambda$6_5 = function lambda$6_5(failure_0, t_1) {
  idwcal.$die(t_1, failure_0);
};
idwcs.lambda$7_5 = function lambda$7_5(all_0, response_1) {
  var dead, resultid, succeeded, ticket;
  resultid = response_1.getResultId();
  if (!resultid.hasTicket()) {
    return;
  }
  ticket = resultid.getTicket();
  if (response_1.getSuccess()) {
    succeeded = castTo(
      ju.$remove_11(all_0, new idwca.TableTicket(ticket.getTicket_asU8())),
      14
    );
    idwcs.$setResolution(
      succeeded,
      (idwcs.$clinit_ClientTableState$ResolutionState(), idwcs.RUNNING_0)
    );
    idwcs.$forActiveLifecycles(
      succeeded,
      makeLambdaFunction(
        idwcs.TableReviver$lambda$9$Type.prototype.apply_3,
        idwcs.TableReviver$lambda$9$Type,
        [succeeded]
      )
    );
  } else {
    dead = castTo(
      ju.$remove_11(all_0, new idwca.TableTicket(ticket.getTicket_asU8())),
      14
    );
    idwcs.$forActiveLifecycles(
      dead,
      makeLambdaFunction(
        idwcs.TableReviver$lambda$8$Type.prototype.apply_3,
        idwcs.TableReviver$lambda$8$Type,
        [response_1]
      )
    );
  }
};
idwcs.lambda$8_5 = function lambda$8_5(response_0, t_1) {
  idwcal.$die(t_1, response_0.getErrorInfo());
};
idwcs.lambda$9_4 = function lambda$9_4(succeeded_0, t_1) {
  idwca.$revive(castTo(t_1, 13), succeeded_0);
};
defineClass(851, 1, { 979: 1 }, idwcs.TableReviver);
cggl.Lio_deephaven_web_client_state_TableReviver_2_classLit = createForClass(
  "io.deephaven.web.client.state",
  "TableReviver",
  851
);
idwcs.TableReviver$0methodref$shouldResuscitate$Type =
  function TableReviver$0methodref$shouldResuscitate$Type() {};
defineClass(852, 1, {}, idwcs.TableReviver$0methodref$shouldResuscitate$Type);
_.test_0 = function test_27(arg0) {
  return idwcs.$shouldResuscitate(castTo(arg0, 14));
};
cggl.Lio_deephaven_web_client_state_TableReviver$0methodref$shouldResuscitate$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "TableReviver/0methodref$shouldResuscitate$Type",
    852
  );
idwcs.TableReviver$1methodref$lambda$2$Type =
  function TableReviver$1methodref$lambda$2$Type() {};
defineClass(853, 1, {}, idwcs.TableReviver$1methodref$lambda$2$Type);
_.apply_2 = function apply_239(arg0) {
  return initUnidimensionalArray(
    cggl.Lio_deephaven_web_client_state_ClientTableState_2_classLit,
    $intern_45,
    14,
    arg0,
    0,
    1
  );
};
cggl.Lio_deephaven_web_client_state_TableReviver$1methodref$lambda$2$Type_2_classLit =
  createForClass(
    "io.deephaven.web.client.state",
    "TableReviver/1methodref$lambda$2$Type",
    853
  );
idwcs.$getClass_535 = function $getClass_535() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$0$Type = function TableReviver$lambda$0$Type(
  $$outer_0,
  metadata_1
) {
  this.$$outer_0 = $$outer_0;
  this.metadata_1 = metadata_1;
};
defineClass(1577, $wnd.Function, $intern_49, idwcs.TableReviver$lambda$0$Type);
_.run = function run_46() {
  idwcs.$lambda$0_13(this.$$outer_0, this.metadata_1);
};
idwcs.$getClass_536 = function $getClass_536() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$10$Type = function TableReviver$lambda$10$Type(
  all_0
) {
  this.all_0 = all_0;
};
defineClass(1581, $wnd.Function, $intern_48, idwcs.TableReviver$lambda$10$Type);
_.apply_3 = function apply_240(arg0) {
  idwcs.lambda$10_5(this.all_0, arg0);
};
idwcs.$getClass_537 = function $getClass_537() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$11$Type = function TableReviver$lambda$11$Type(
  status_0
) {
  this.status_0 = status_0;
};
defineClass(1585, $wnd.Function, $intern_48, idwcs.TableReviver$lambda$11$Type);
_.apply_3 = function apply_241(arg0) {
  idwcs.lambda$11_6(this.status_0, castTo(arg0, 51));
};
idwcs.$getClass_538 = function $getClass_538() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$3$Type = function TableReviver$lambda$3$Type(
  state_0
) {
  this.state_0 = state_0;
};
defineClass(1578, $wnd.Function, $intern_36, idwcs.TableReviver$lambda$3$Type);
_.onInvoke_5 = function onInvoke_317(arg0) {
  var lastArg;
  return idwcs.lambda$3_7(
    ((lastArg = this.state_0), castTo(arg0, 14), lastArg)
  );
};
idwcs.$getClass_539 = function $getClass_539() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$4$Type = function TableReviver$lambda$4$Type(
  state_0
) {
  this.state_0 = state_0;
};
defineClass(1579, $wnd.Function, {}, idwcs.TableReviver$lambda$4$Type);
_.onInvoke_5 = function onInvoke_318(arg0) {
  return (
    idwcs.$forActiveLifecycles(
      this.state_0,
      makeLambdaFunction(
        idwcs.TableReviver$lambda$6$Type.prototype.apply_3,
        idwcs.TableReviver$lambda$6$Type,
        [arg0]
      )
    ),
    null
  );
};
idwcs.$getClass_540 = function $getClass_540() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$5$Type = function TableReviver$lambda$5$Type(
  state_0
) {
  this.state_0 = state_0;
};
defineClass(1582, $wnd.Function, $intern_48, idwcs.TableReviver$lambda$5$Type);
_.apply_3 = function apply_242(arg0) {
  idwcs.lambda$5_9(this.state_0, castTo(arg0, 51));
};
idwcs.$getClass_541 = function $getClass_541() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$6$Type = function TableReviver$lambda$6$Type(
  failure_0
) {
  this.failure_0 = failure_0;
};
defineClass(1586, $wnd.Function, $intern_48, idwcs.TableReviver$lambda$6$Type);
_.apply_3 = function apply_243(arg0) {
  idwcs.lambda$6_5(this.failure_0, castTo(arg0, 51));
};
idwcs.$getClass_542 = function $getClass_542() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$7$Type = function TableReviver$lambda$7$Type(all_0) {
  this.all_0 = all_0;
};
defineClass(1580, $wnd.Function, $intern_48, idwcs.TableReviver$lambda$7$Type);
_.apply_3 = function apply_244(arg0) {
  idwcs.lambda$7_5(
    this.all_0,
    castToNative(
      arg0,
      $wnd.dhinternal.io.deephaven.proto.table_pb.ExportedTableCreationResponse
    )
  );
};
idwcs.$getClass_543 = function $getClass_543() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$8$Type = function TableReviver$lambda$8$Type(
  response_0
) {
  this.response_0 = response_0;
};
defineClass(1584, $wnd.Function, $intern_48, idwcs.TableReviver$lambda$8$Type);
_.apply_3 = function apply_245(arg0) {
  idwcs.lambda$8_5(this.response_0, castTo(arg0, 51));
};
idwcs.$getClass_544 = function $getClass_544() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwcs.TableReviver$lambda$9$Type = function TableReviver$lambda$9$Type(
  succeeded_0
) {
  this.succeeded_0 = succeeded_0;
};
defineClass(1583, $wnd.Function, $intern_48, idwcs.TableReviver$lambda$9$Type);
_.apply_3 = function apply_246(arg0) {
  idwcs.lambda$9_4(this.succeeded_0, castTo(arg0, 51));
};
idwsd.$setType_1 = function $setType_1(this$static, type_0) {
  this$static.type_0 = type_0;
};
idwsd.$setValue = function $setValue(this$static, value_0) {
  this$static.value_0 = value_0;
};
idwsd.ConnectToken = function ConnectToken() {};
idwsd.bytesToBase64 = function bytesToBase64(bytes) {
  var i, stringOfBytes;
  stringOfBytes = "";
  for (i = 0; i < bytes.length; i++) {
    stringOfBytes += $wnd.String.fromCharCode(bytes[i] & 255);
  }
  return $wnd.btoa(stringOfBytes);
};
defineClass(290, 1, { 290: 1, 3: 1 }, idwsd.ConnectToken);
cggl.Lio_deephaven_web_shared_data_ConnectToken_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "ConnectToken",
  290
);
idwsd.$getClass_545 = function $getClass_545() {
  return cggl.Lio_deephaven_web_shared_data_CustomColumnDescriptor_2_classLit;
};
idwsd.$setExpression = function $setExpression(this$static, expression) {
  this$static.expression_0 = expression;
  this$static.name_0 = null;
  return this$static;
};
idwsd.CustomColumnDescriptor = function CustomColumnDescriptor() {};
idwsd.extractColumnName = function extractColumnName(expression) {
  var result;
  expression = jl.$trim(expression);
  result = jl.$trim(jl.$split(expression, "=")[0]);
  if (!new RegExp("^(^[a-zA-Z_$][a-zA-Z0-9_$]*$)$").test(result)) {
    debugger;
    throw toJs(
      new jl.AssertionError_0(
        "Invalid column name " + result + " extracted from " + expression
      )
    );
  }
  return result;
};
idwsd.from_3 = function from_3(newCustomColumns) {
  var col, col$array, col$index, col$max, descriptor, descriptorNames, list;
  descriptorNames = new ju.HashSet();
  list = new ju.ArrayList();
  for (
    col$array = newCustomColumns, col$index = 0, col$max = col$array.length;
    col$index < col$max;
    ++col$index
  ) {
    col = col$array[col$index];
    descriptor = idwsd.$setExpression(new idwsd.CustomColumnDescriptor(), col);
    if (
      !ju.$add_0(
        descriptorNames,
        (descriptor.name_0 == null &&
          (descriptor.name_0 = idwsd.extractColumnName(
            descriptor.expression_0
          )),
        descriptor.name_0)
      )
    ) {
      throw toJs(
        new jl.IllegalArgumentException_0(
          (descriptor.name_0 == null &&
            (descriptor.name_0 = idwsd.extractColumnName(
              descriptor.expression_0
            )),
          "Duplicate custom column: " + descriptor.name_0)
        )
      );
    }
    list.array[list.array.length] = descriptor;
  }
  return list;
};
defineClass(148, 1, { 148: 1, 3: 1 }, idwsd.CustomColumnDescriptor);
_.equals_0 = function equals_15(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_CustomColumnDescriptor_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 148);
  return this.expression_0 == that.expression_0 && this.name_0 == that.name_0;
};
_.hashCode_1 = function hashCode_15() {
  return ju.hashCode_57(
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
      $intern_7,
      1,
      5,
      [this.expression_0, this.name_0]
    )
  );
};
_.toString_0 = function toString_32() {
  return "CustomColumnDescriptor { " + this.expression_0 + " }";
};
cggl.Lio_deephaven_web_shared_data_CustomColumnDescriptor_2_classLit =
  createForClass("io.deephaven.web.shared.data", "CustomColumnDescriptor", 148);
idwsd.$setAdded = function $setAdded(this$static, added) {
  this$static.added_0 = added;
};
idwsd.$setIncludedAdditions = function $setIncludedAdditions(
  this$static,
  includedAdditions
) {
  this$static.includedAdditions = includedAdditions;
};
idwsd.$setRemoved = function $setRemoved(this$static, removed) {
  this$static.removed_0 = removed;
};
idwsd.$setSerializedAdditions = function $setSerializedAdditions(
  this$static,
  serializedAdditions
) {
  this$static.serializedAdditions = serializedAdditions;
};
idwsd.$setSerializedModifications = function $setSerializedModifications(
  this$static,
  serializedModifications
) {
  this$static.serializedModifications = serializedModifications;
};
idwsd.$setShiftedRanges = function $setShiftedRanges(
  this$static,
  shiftedRanges
) {
  this$static.shiftedRanges = shiftedRanges;
};
idwsd.DeltaUpdates = function DeltaUpdates() {};
defineClass(583, 1, $intern_64, idwsd.DeltaUpdates);
cggl.Lio_deephaven_web_shared_data_DeltaUpdates_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "DeltaUpdates",
  583
);
idwsd.DeltaUpdates$ColumnAdditions = function DeltaUpdates$ColumnAdditions(
  colIndex,
  values
) {
  this.columnIndex = colIndex;
  this.values_0 = values;
};
defineClass(249, 1, { 249: 1, 3: 1 }, idwsd.DeltaUpdates$ColumnAdditions);
_.columnIndex = 0;
cggl.Lio_deephaven_web_shared_data_DeltaUpdates$ColumnAdditions_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data",
    "DeltaUpdates/ColumnAdditions",
    249
  );
idwsd.DeltaUpdates$ColumnModifications =
  function DeltaUpdates$ColumnModifications(
    columnIndex,
    includedModifications,
    columnData
  ) {
    this.columnIndex = columnIndex;
    this.rowsIncluded = includedModifications;
    this.values_0 = columnData;
  };
defineClass(250, 1, { 250: 1, 3: 1 }, idwsd.DeltaUpdates$ColumnModifications);
_.columnIndex = 0;
cggl.Lio_deephaven_web_shared_data_DeltaUpdates$ColumnModifications_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data",
    "DeltaUpdates/ColumnModifications",
    250
  );
idwsd.LocalDate = function LocalDate(year, monthValue, dayOfMonth) {
  this.year_0 = year;
  this.monthValue = monthValue;
  this.dayOfMonth = dayOfMonth;
};
defineClass(217, 1, { 217: 1, 3: 1 }, idwsd.LocalDate);
_.dayOfMonth = 0;
_.monthValue = 0;
_.year_0 = 0;
cggl.Lio_deephaven_web_shared_data_LocalDate_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "LocalDate",
  217
);
idwsd.LocalTime = function LocalTime(hour, minute, second, nano) {
  this.hour = hour;
  this.minute = minute;
  this.second = second;
  this.nano = nano;
};
defineClass(218, 1, { 218: 1, 3: 1 }, idwsd.LocalTime);
_.hour = 0;
_.minute = 0;
_.nano = 0;
_.second = 0;
cggl.Lio_deephaven_web_shared_data_LocalTime_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "LocalTime",
  218
);
idwsd.$compareTo_1 = function $compareTo_1(this$static, o) {
  return compare_6(this$static.first_0, o.first_0);
};
idwsd.$equals_4 = function $equals_4(this$static, o) {
  var range;
  if (maskUndefined(this$static) === maskUndefined(o)) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_Range_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  range = castTo(o, 24);
  if (neq(this$static.first_0, range.first_0)) return false;
  return eq(this$static.last_0, range.last_0);
};
idwsd.$getClass_546 = function $getClass_546() {
  return cggl.Lio_deephaven_web_shared_data_Range_2_classLit;
};
idwsd.$minus = function $minus(this$static, range) {
  if (
    gt(range.first_0, this$static.last_0) ||
    lt(range.last_0, this$static.first_0)
  ) {
    return null;
  }
  if (
    lte(range.first_0, this$static.first_0) &&
    gte_0(range.last_0, this$static.last_0)
  ) {
    return initUnidimensionalArray(
      cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
      $intern_44,
      24,
      0,
      0,
      1
    );
  }
  if (
    gt(range.first_0, this$static.first_0) &&
    lt(range.last_0, this$static.last_0)
  ) {
    return stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
        1
      ),
      $intern_44,
      24,
      0,
      [
        new idwsd.Range_0(this$static.first_0, sub_3(range.first_0, 1)),
        new idwsd.Range_0(add_1(range.last_0, 1), this$static.last_0),
      ]
    );
  }
  if (lte(range.first_0, this$static.first_0)) {
    if (lt(range.last_0, this$static.first_0)) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "removed range expected to not end before existing range"
        )
      );
    }
    return stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
        1
      ),
      $intern_44,
      24,
      0,
      [new idwsd.Range_0(add_1(range.last_0, 1), this$static.last_0)]
    );
  } else {
    if (lt(range.last_0, this$static.last_0)) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "removed range expected to end by the end of the existing range"
        )
      );
    }
    if (gt(range.first_0, this$static.last_0)) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "removed range expected to start before existing range"
        )
      );
    }
    return stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
        1
      ),
      $intern_44,
      24,
      0,
      [new idwsd.Range_0(this$static.first_0, sub_3(range.first_0, 1))]
    );
  }
};
idwsd.$overlap = function $overlap(this$static, range) {
  if (
    gt(range.first_0, add_1(this$static.last_0, 1)) ||
    lt(range.last_0, sub_3(this$static.first_0, 1))
  ) {
    return null;
  }
  return new idwsd.Range_0(
    jl.min_1(this$static.first_0, range.first_0),
    jl.max_1(this$static.last_0, range.last_0)
  );
};
idwsd.$size_0 = function $size_0(this$static) {
  return add_1(sub_3(this$static.last_0, this$static.first_0), 1);
};
idwsd.Range_0 = function Range_0(first, last) {
  if (compare_1(first, last) > 0) {
    throw toJs(
      new jl.IllegalStateException_0(
        toString_6(first) + " > " + toString_6(last)
      )
    );
  }
  this.first_0 = first;
  this.last_0 = last;
};
defineClass(24, 1, { 24: 1, 3: 1, 33: 1 }, idwsd.Range_0);
_.compareTo_0 = function compareTo_2(o) {
  return idwsd.$compareTo_1(this, castTo(o, 24));
};
_.equals_0 = function equals_16(o) {
  return idwsd.$equals_4(this, o);
};
_.hashCode_1 = function hashCode_16() {
  var result;
  result = toInt_0(xor_0(this.first_0, shru_0(this.first_0, 32)));
  result = 31 * result + toInt_0(xor_0(this.last_0, shru_0(this.last_0, 32)));
  return result;
};
_.toString_0 = function toString_33() {
  return (
    "Range{first=" +
    toString_6(this.first_0) +
    ", last=" +
    toString_6(this.last_0) +
    "}"
  );
};
_.first_0 = 0;
_.last_0 = 0;
cggl.Lio_deephaven_web_shared_data_Range_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "Range",
  24
);
idwsd.$$init_49 = function $$init_49(this$static) {
  this$static.sortedRanges = initUnidimensionalArray(
    cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
    $intern_44,
    24,
    0,
    0,
    1
  );
};
idwsd.$addRange = function $addRange(this$static, range) {
  var before,
    end,
    existing,
    i,
    index_0,
    merged,
    newArray,
    newLength,
    overlap,
    proposedIndex;
  if (this$static.sortedRanges.length == 0) {
    this$static.sortedRanges = stampJavaTypeInfo(
      getClassLiteralForArray(
        cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
        1
      ),
      $intern_44,
      24,
      0,
      [range]
    );
    return;
  }
  if (this$static.sortedRanges.length == 1) {
    existing = this$static.sortedRanges[0];
    overlap = idwsd.$overlap(range, existing);
    if (overlap) {
      this$static.sortedRanges = stampJavaTypeInfo(
        getClassLiteralForArray(
          cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
          1
        ),
        $intern_44,
        24,
        0,
        [overlap]
      );
    } else if (compare_6(existing.first_0, range.first_0) < 0) {
      this$static.sortedRanges = stampJavaTypeInfo(
        getClassLiteralForArray(
          cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
          1
        ),
        $intern_44,
        24,
        0,
        [existing, range]
      );
    } else {
      if (compare_6(existing.first_0, range.first_0) <= 0) {
        debugger;
        throw toJs(new jl.AssertionError());
      }
      this$static.sortedRanges = stampJavaTypeInfo(
        getClassLiteralForArray(
          cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
          1
        ),
        $intern_44,
        24,
        0,
        [range, existing]
      );
    }
    return;
  }
  index_0 = ju.binarySearch(this$static.sortedRanges, range);
  if (index_0 >= 0) {
    merged = range;
    end = this$static.sortedRanges.length - 1;
    for (i = index_0; i < this$static.sortedRanges.length; i++) {
      existing = this$static.sortedRanges[i];
      overlap = idwsd.$overlap(existing, merged);
      if (!overlap) {
        end = i - 1;
        break;
      }
      if (idwsd.$equals_4(overlap, existing)) {
        return;
      }
      merged = overlap;
    }
    newLength = this$static.sortedRanges.length - (end - index_0);
    newArray = initUnidimensionalArray(
      cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
      $intern_44,
      24,
      newLength,
      0,
      1
    );
    index_0 > 0 &&
      jl.arraycopy(this$static.sortedRanges, 0, newArray, 0, index_0);
    newArray[index_0] = merged;
    end < this$static.sortedRanges.length - 1 &&
      jl.arraycopy(
        this$static.sortedRanges,
        end + 1,
        newArray,
        index_0 + 1,
        this$static.sortedRanges.length - 1 - end
      );
    this$static.sortedRanges = newArray;
  } else {
    proposedIndex = -index_0 - 1;
    merged = range;
    if (proposedIndex > 0) {
      before = this$static.sortedRanges[proposedIndex - 1];
      overlap = idwsd.$overlap(before, merged);
      if (overlap) {
        merged = overlap;
        --proposedIndex;
      }
    }
    end = this$static.sortedRanges.length - 1;
    for (i = proposedIndex; i < this$static.sortedRanges.length; i++) {
      existing = this$static.sortedRanges[i];
      overlap = idwsd.$overlap(existing, merged);
      if (!overlap) {
        end = i - 1;
        break;
      }
      merged = overlap;
    }
    newLength = this$static.sortedRanges.length - (end - proposedIndex);
    if (!(newLength > 0 && newLength <= this$static.sortedRanges.length + 1)) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    newArray = initUnidimensionalArray(
      cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
      $intern_44,
      24,
      newLength,
      0,
      1
    );
    proposedIndex > 0 &&
      jl.arraycopy(this$static.sortedRanges, 0, newArray, 0, proposedIndex);
    newArray[proposedIndex] = merged;
    end < this$static.sortedRanges.length - 1 &&
      jl.arraycopy(
        this$static.sortedRanges,
        end + 1,
        newArray,
        proposedIndex + 1,
        this$static.sortedRanges.length - (end + 1)
      );
    this$static.sortedRanges = newArray;
  }
};
idwsd.$equals_5 = function $equals_5(this$static, o) {
  var rangeSet;
  if (maskUndefined(this$static) === maskUndefined(o)) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_RangeSet_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  rangeSet = castTo(o, 70);
  return ju.equals_57(this$static.sortedRanges, rangeSet.sortedRanges);
};
idwsd.$getClass_547 = function $getClass_547() {
  return cggl.Lio_deephaven_web_shared_data_RangeSet_2_classLit;
};
idwsd.$getLastRow = function $getLastRow(this$static) {
  return this$static.sortedRanges[this$static.sortedRanges.length - 1].last_0;
};
idwsd.$hashCode_4 = function $hashCode_4(this$static) {
  return ju.hashCode_57(this$static.sortedRanges);
};
idwsd.$includesAllOf = function $includesAllOf(this$static, other) {
  var current, match_0, mustMatchIterator, seenIterator;
  seenIterator = new ju.AbstractList$IteratorImpl(
    new ju.Arrays$ArrayList(this$static.sortedRanges)
  );
  mustMatchIterator = new ju.AbstractList$IteratorImpl(
    new ju.Arrays$ArrayList(other.sortedRanges)
  );
  if (mustMatchIterator.i >= mustMatchIterator.this$01_0.size()) {
    return true;
  }
  if (seenIterator.i >= seenIterator.this$01_0.size()) {
    return false;
  }
  while (mustMatchIterator.i < mustMatchIterator.this$01_0.size()) {
    match_0 =
      (ji.checkCriticalElement(
        mustMatchIterator.i < mustMatchIterator.this$01_0.size()
      ),
      castTo(
        mustMatchIterator.this$01_0.getAtIndex(
          (mustMatchIterator.last_0 = mustMatchIterator.i++)
        ),
        24
      ));
    while (seenIterator.i < seenIterator.this$01_0.size()) {
      current =
        (ji.checkCriticalElement(
          seenIterator.i < seenIterator.this$01_0.size()
        ),
        castTo(
          seenIterator.this$01_0.getAtIndex(
            (seenIterator.last_0 = seenIterator.i++)
          ),
          24
        ));
      if (lt(match_0.first_0, current.first_0)) {
        return false;
      }
      if (gt(match_0.first_0, current.last_0)) {
        continue;
      }
      if (gt(match_0.last_0, current.last_0)) {
        return false;
      }
      break;
    }
  }
  return true;
};
idwsd.$removeRange = function $removeRange(this$static, range) {
  var beforeCount, index_0, remaining, replacement, toCheck, toRemove;
  if (this$static.sortedRanges.length == 0) {
    return;
  }
  index_0 = ju.binarySearch(this$static.sortedRanges, range);
  index_0 < 0 && (index_0 = $wnd.Math.max(0, -index_0 - 2));
  beforeCount = -1;
  toRemove = 0;
  for (; index_0 < this$static.sortedRanges.length; index_0++) {
    toCheck = this$static.sortedRanges[index_0];
    if (gt(toCheck.first_0, range.last_0)) {
      break;
    }
    if (lt(toCheck.last_0, range.first_0)) {
      continue;
    }
    remaining = idwsd.$minus(toCheck, range);
    if (remaining == null) {
      debugger;
      throw toJs(
        new jl.AssertionError_0(
          "Only early ranges are allowed to not match at all"
        )
      );
    }
    if (remaining.length == 2) {
      if (gte_0(toCheck.first_0, range.first_0)) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "Expected " + range + " to start after " + toCheck
          )
        );
      }
      if (lte(toCheck.last_0, range.last_0)) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "Expected " + range + " to end after " + toCheck
          )
        );
      }
      if (!(toRemove == 0 && beforeCount == -1)) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "Expected that no previous items in the RangeSet had been removed toRemove=" +
              toRemove +
              ", beforeCount=" +
              beforeCount
          )
        );
      }
      replacement = initUnidimensionalArray(
        cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
        $intern_44,
        24,
        this$static.sortedRanges.length + 1,
        0,
        1
      );
      index_0 > 0 &&
        jl.arraycopy(this$static.sortedRanges, 0, replacement, 0, index_0);
      replacement[index_0] = remaining[0];
      replacement[index_0 + 1] = remaining[1];
      jl.arraycopy(
        this$static.sortedRanges,
        index_0 + 1,
        replacement,
        index_0 + 2,
        this$static.sortedRanges.length - (index_0 + 1)
      );
      this$static.sortedRanges = replacement;
      return;
    }
    if (remaining.length == 1) {
      setCheck(this$static.sortedRanges, index_0, remaining[0]);
    } else {
      if (remaining.length != 0) {
        debugger;
        throw toJs(
          new jl.AssertionError_0(
            "Array contains a surprising number of items: " + remaining.length
          )
        );
      }
      toRemove == 0 && (beforeCount = index_0);
      ++toRemove;
    }
  }
  if (toRemove > 0) {
    replacement = initUnidimensionalArray(
      cggl.Lio_deephaven_web_shared_data_Range_2_classLit,
      $intern_44,
      24,
      this$static.sortedRanges.length - toRemove,
      0,
      1
    );
    jl.arraycopy(this$static.sortedRanges, 0, replacement, 0, beforeCount);
    jl.arraycopy(
      this$static.sortedRanges,
      beforeCount + toRemove,
      replacement,
      beforeCount,
      this$static.sortedRanges.length - beforeCount - toRemove
    );
    this$static.sortedRanges = replacement;
  } else {
    if (beforeCount != -1) {
      debugger;
      throw toJs(
        new jl.AssertionError_0("No items to remove, but beforeCount set?")
      );
    }
  }
};
idwsd.RangeSet = function RangeSet() {
  idwsd.$$init_49(this);
};
idwsd.fromSortedRanges = function fromSortedRanges(sortedRanges) {
  var rangeSet;
  if (!idwsd.orderedAndNonOverlapping(sortedRanges)) {
    debugger;
    throw toJs(new jl.AssertionError_0(ju.toString_62(sortedRanges)));
  }
  rangeSet = new idwsd.RangeSet();
  rangeSet.sortedRanges = sortedRanges;
  return rangeSet;
};
idwsd.lambda$0_19 = function lambda$0_19(range_0) {
  return jus.rangeClosed_0(range_0.first_0, range_0.last_0);
};
idwsd.ofItems_0 = function ofItems_0(items) {
  var i, item_0, rangeSet;
  rangeSet = new idwsd.RangeSet();
  for (i = 0; i < items.length; i++) {
    item_0 = items[i];
    idwsd.$addRange(rangeSet, new idwsd.Range_0(item_0, item_0));
  }
  return rangeSet;
};
idwsd.ofRange_0 = function ofRange_0(first, last) {
  var rangeSet;
  rangeSet = new idwsd.RangeSet();
  idwsd.$addRange(rangeSet, new idwsd.Range_0(first, last));
  return rangeSet;
};
idwsd.orderedAndNonOverlapping = function orderedAndNonOverlapping(
  sortedRanges
) {
  var i, lastSeen;
  lastSeen = -1;
  for (i = 0; i < sortedRanges.length; i++) {
    if (gte_0(lastSeen, sortedRanges[i].first_0)) {
      return false;
    }
    lastSeen = sortedRanges[i].last_0;
  }
  return true;
};
defineClass(70, 1, { 70: 1, 3: 1 }, idwsd.RangeSet);
_.equals_0 = function equals_17(o) {
  return idwsd.$equals_5(this, o);
};
_.hashCode_1 = function hashCode_17() {
  return idwsd.$hashCode_4(this);
};
_.toString_0 = function toString_34() {
  return "RangeSet{sortedRanges=" + ju.toString_62(this.sortedRanges) + "}";
};
cggl.Lio_deephaven_web_shared_data_RangeSet_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "RangeSet",
  70
);
idwsd.RangeSet$0methodref$size$Type =
  function RangeSet$0methodref$size$Type() {};
defineClass(69, 1, {}, idwsd.RangeSet$0methodref$size$Type);
cggl.Lio_deephaven_web_shared_data_RangeSet$0methodref$size$Type_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data",
    "RangeSet/0methodref$size$Type",
    69
  );
idwsd.RangeSet$lambda$0$Type = function RangeSet$lambda$0$Type() {};
defineClass(71, 1, {}, idwsd.RangeSet$lambda$0$Type);
_.apply_1 = function apply_247(arg0) {
  return idwsd.lambda$0_19(castTo(arg0, 24));
};
cggl.Lio_deephaven_web_shared_data_RangeSet$lambda$0$Type_2_classLit =
  createForClass("io.deephaven.web.shared.data", "RangeSet/lambda$0$Type", 71);
idwsd.ShiftedRange = function ShiftedRange(range, delta) {
  this.range_0 = range;
  this.delta = delta;
};
defineClass(306, 1, { 306: 1, 3: 1 }, idwsd.ShiftedRange);
_.delta = 0;
cggl.Lio_deephaven_web_shared_data_ShiftedRange_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "ShiftedRange",
  306
);
idwsd.TableSnapshot = function TableSnapshot(
  includedAdditions,
  dataColumns,
  tableSize
) {
  this.snapshotType =
    (idwsd.$clinit_TableSnapshot$SnapshotType(), idwsd.INITIAL_SNAPSHOT);
  this.dataColumns = dataColumns;
  this.includedRows = includedAdditions;
  this.tableSize = tableSize;
};
defineClass(287, 1, { 287: 1, 3: 1 }, idwsd.TableSnapshot);
_.tableSize = 0;
cggl.Lio_deephaven_web_shared_data_TableSnapshot_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "TableSnapshot",
  287
);
idwsd.$clinit_TableSnapshot$SnapshotType =
  function $clinit_TableSnapshot$SnapshotType() {
    idwsd.$clinit_TableSnapshot$SnapshotType = emptyMethod;
    idwsd.INITIAL_SNAPSHOT = new idwsd.TableSnapshot$SnapshotType(
      "INITIAL_SNAPSHOT",
      0
    );
    idwsd.UPDATE_COLUMN_SNAPSHOT = new idwsd.TableSnapshot$SnapshotType(
      "UPDATE_COLUMN_SNAPSHOT",
      1
    );
    idwsd.UPDATE_ROW_SNAPSHOT = new idwsd.TableSnapshot$SnapshotType(
      "UPDATE_ROW_SNAPSHOT",
      2
    );
    idwsd.FORCED_SNAPSHOT = new idwsd.TableSnapshot$SnapshotType(
      "FORCED_SNAPSHOT",
      3
    );
  };
idwsd.TableSnapshot$SnapshotType = function TableSnapshot$SnapshotType(
  enum$name,
  enum$ordinal
) {
  Enum.call(this, enum$name, enum$ordinal);
};
idwsd.values_7 = function values_7() {
  idwsd.$clinit_TableSnapshot$SnapshotType();
  return stampJavaTypeInfo(
    getClassLiteralForArray(
      cggl.Lio_deephaven_web_shared_data_TableSnapshot$SnapshotType_2_classLit,
      1
    ),
    $intern_17,
    173,
    0,
    [
      idwsd.INITIAL_SNAPSHOT,
      idwsd.UPDATE_COLUMN_SNAPSHOT,
      idwsd.UPDATE_ROW_SNAPSHOT,
      idwsd.FORCED_SNAPSHOT,
    ]
  );
};
defineClass(
  173,
  37,
  { 173: 1, 3: 1, 33: 1, 37: 1 },
  idwsd.TableSnapshot$SnapshotType
);
cggl.Lio_deephaven_web_shared_data_TableSnapshot$SnapshotType_2_classLit =
  createForEnum(
    "io.deephaven.web.shared.data",
    "TableSnapshot/SnapshotType",
    173,
    idwsd.values_7
  );
idwsd.TableSubscriptionRequest = function TableSubscriptionRequest(
  subscriptionId,
  rows_0,
  columns
) {
  this.subscriptionId = subscriptionId;
  this.rows_0 = rows_0;
  this.columns_0 = columns;
};
defineClass(191, 1, { 191: 1, 3: 1 }, idwsd.TableSubscriptionRequest);
_.toString_0 = function toString_35() {
  return (
    "TableSubscriptionRequest{subscriptionId=" +
    this.subscriptionId +
    ", rows=" +
    this.rows_0 +
    ", columns=" +
    this.columns_0 +
    "}"
  );
};
_.subscriptionId = 0;
cggl.Lio_deephaven_web_shared_data_TableSubscriptionRequest_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data",
    "TableSubscriptionRequest",
    191
  );
idwsd.$getClass_548 = function $getClass_548() {
  return cggl.Lio_deephaven_web_shared_data_Viewport_2_classLit;
};
idwsd.Viewport = function Viewport(rows_0, columns) {
  this.rows_0 = rows_0;
  this.columns_0 = columns;
};
defineClass(175, 1, { 175: 1, 3: 1 }, idwsd.Viewport);
_.equals_0 = function equals_18(o) {
  var viewport;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_Viewport_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  viewport = castTo(o, 175);
  if (!idwsd.$equals_5(this.rows_0, viewport.rows_0)) return false;
  return ju.$equals_16(this.columns_0, viewport.columns_0);
};
_.hashCode_1 = function hashCode_18() {
  var result;
  result = ju.hashCode_57(this.rows_0.sortedRanges);
  result = 31 * result + ju.$hashCode_16(this.columns_0);
  return result;
};
_.toString_0 = function toString_36() {
  return "Viewport{rows=" + this.rows_0 + ", columns=" + this.columns_0 + "}";
};
cggl.Lio_deephaven_web_shared_data_Viewport_2_classLit = createForClass(
  "io.deephaven.web.shared.data",
  "Viewport",
  175
);
defineClass(76, 1, { 76: 1, 3: 1 });
cggl.Lio_deephaven_web_shared_data_columns_ColumnData_2_classLit =
  createForClass("io.deephaven.web.shared.data.columns", "ColumnData", 76);
idwsdc.$getClass_549 = function $getClass_549() {
  return cggl.Lio_deephaven_web_shared_data_columns_BigDecimalArrayColumnData_2_classLit;
};
idwsdc.BigDecimalArrayColumnData = function BigDecimalArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(319, 76, { 319: 1, 76: 1, 3: 1 }, idwsdc.BigDecimalArrayColumnData);
_.getData_2 = function getData_8() {
  return this.data_0;
};
_.equals_0 = function equals_19(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_BigDecimalArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 319);
  return ju.deepEquals(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_19() {
  return ju.deepHashCode(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_BigDecimalArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "BigDecimalArrayColumnData",
    319
  );
idwsdc.$getClass_550 = function $getClass_550() {
  return cggl.Lio_deephaven_web_shared_data_columns_BigIntegerArrayColumnData_2_classLit;
};
idwsdc.BigIntegerArrayColumnData = function BigIntegerArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(320, 76, { 320: 1, 76: 1, 3: 1 }, idwsdc.BigIntegerArrayColumnData);
_.getData_2 = function getData_9() {
  return this.data_0;
};
_.equals_0 = function equals_20(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_BigIntegerArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 320);
  return ju.deepEquals(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_20() {
  return ju.deepHashCode(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_BigIntegerArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "BigIntegerArrayColumnData",
    320
  );
idwsdc.$getClass_551 = function $getClass_551() {
  return cggl.Lio_deephaven_web_shared_data_columns_BooleanArrayColumnData_2_classLit;
};
idwsdc.BooleanArrayColumnData = function BooleanArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(309, 76, { 309: 1, 76: 1, 3: 1 }, idwsdc.BooleanArrayColumnData);
_.getData_2 = function getData_10() {
  return this.data_0;
};
_.equals_0 = function equals_21(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_BooleanArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 309);
  return ju.equals_57(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_21() {
  return ju.hashCode_57(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_BooleanArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "BooleanArrayColumnData",
    309
  );
idwsdc.$getClass_552 = function $getClass_552() {
  return cggl.Lio_deephaven_web_shared_data_columns_ByteArrayColumnData_2_classLit;
};
idwsdc.ByteArrayColumnData = function ByteArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(310, 76, { 310: 1, 76: 1, 3: 1 }, idwsdc.ByteArrayColumnData);
_.getData_2 = function getData_11() {
  return this.data_0;
};
_.equals_0 = function equals_22(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_ByteArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 310);
  return ju.equals_51(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_22() {
  return ju.hashCode_51(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_ByteArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "ByteArrayColumnData",
    310
  );
idwsdc.$getClass_553 = function $getClass_553() {
  return cggl.Lio_deephaven_web_shared_data_columns_CharArrayColumnData_2_classLit;
};
idwsdc.CharArrayColumnData = function CharArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(313, 76, { 313: 1, 76: 1, 3: 1 }, idwsdc.CharArrayColumnData);
_.getData_2 = function getData_12() {
  return this.data_0;
};
_.equals_0 = function equals_23(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_CharArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 313);
  return ju.equals_52(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_23() {
  return ju.hashCode_52(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_CharArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "CharArrayColumnData",
    313
  );
idwsdc.$getClass_554 = function $getClass_554() {
  return cggl.Lio_deephaven_web_shared_data_columns_DoubleArrayColumnData_2_classLit;
};
idwsdc.DoubleArrayColumnData = function DoubleArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(311, 76, { 76: 1, 311: 1, 3: 1 }, idwsdc.DoubleArrayColumnData);
_.getData_2 = function getData_13() {
  return this.data_0;
};
_.equals_0 = function equals_24(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_DoubleArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 311);
  return ju.equals_53(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_24() {
  return ju.hashCode_53(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_DoubleArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "DoubleArrayColumnData",
    311
  );
idwsdc.$getClass_555 = function $getClass_555() {
  return cggl.Lio_deephaven_web_shared_data_columns_FloatArrayColumnData_2_classLit;
};
idwsdc.FloatArrayColumnData = function FloatArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(312, 76, { 76: 1, 312: 1, 3: 1 }, idwsdc.FloatArrayColumnData);
_.getData_2 = function getData_14() {
  return this.data_0;
};
_.equals_0 = function equals_25(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_FloatArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 312);
  return ju.equals_54(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_25() {
  return ju.hashCode_54(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_FloatArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "FloatArrayColumnData",
    312
  );
idwsdc.$getClass_556 = function $getClass_556() {
  return cggl.Lio_deephaven_web_shared_data_columns_IntArrayColumnData_2_classLit;
};
idwsdc.IntArrayColumnData = function IntArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(307, 76, { 76: 1, 307: 1, 3: 1 }, idwsdc.IntArrayColumnData);
_.getData_2 = function getData_15() {
  return this.data_0;
};
_.equals_0 = function equals_26(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_IntArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 307);
  return ju.equals_55(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_26() {
  return ju.hashCode_55(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_IntArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "IntArrayColumnData",
    307
  );
idwsdc.$getClass_557 = function $getClass_557() {
  return cggl.Lio_deephaven_web_shared_data_columns_LocalDateArrayColumnData_2_classLit;
};
idwsdc.LocalDateArrayColumnData = function LocalDateArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(315, 76, { 76: 1, 315: 1, 3: 1 }, idwsdc.LocalDateArrayColumnData);
_.getData_2 = function getData_16() {
  return this.data_0;
};
_.equals_0 = function equals_27(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_LocalDateArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 315);
  return ju.deepEquals(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_27() {
  return ju.deepHashCode(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_LocalDateArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "LocalDateArrayColumnData",
    315
  );
idwsdc.$getClass_558 = function $getClass_558() {
  return cggl.Lio_deephaven_web_shared_data_columns_LocalTimeArrayColumnData_2_classLit;
};
idwsdc.LocalTimeArrayColumnData = function LocalTimeArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(316, 76, { 76: 1, 316: 1, 3: 1 }, idwsdc.LocalTimeArrayColumnData);
_.getData_2 = function getData_17() {
  return this.data_0;
};
_.equals_0 = function equals_28(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_LocalTimeArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 316);
  return ju.deepEquals(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_28() {
  return ju.deepHashCode(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_LocalTimeArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "LocalTimeArrayColumnData",
    316
  );
idwsdc.$getClass_559 = function $getClass_559() {
  return cggl.Lio_deephaven_web_shared_data_columns_LongArrayColumnData_2_classLit;
};
idwsdc.LongArrayColumnData = function LongArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(314, 76, { 76: 1, 314: 1, 3: 1 }, idwsdc.LongArrayColumnData);
_.getData_2 = function getData_18() {
  return this.data_0;
};
_.equals_0 = function equals_29(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_LongArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 314);
  return ju.equals_56(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_29() {
  return ju.hashCode_56(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_LongArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "LongArrayColumnData",
    314
  );
idwsdc.$getClass_560 = function $getClass_560() {
  return cggl.Lio_deephaven_web_shared_data_columns_ShortArrayColumnData_2_classLit;
};
idwsdc.ShortArrayColumnData = function ShortArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(308, 76, { 76: 1, 308: 1, 3: 1 }, idwsdc.ShortArrayColumnData);
_.getData_2 = function getData_19() {
  return this.data_0;
};
_.equals_0 = function equals_30(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_ShortArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 308);
  return ju.equals_58(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_30() {
  return ju.hashCode_58(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_ShortArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "ShortArrayColumnData",
    308
  );
idwsdc.$getClass_561 = function $getClass_561() {
  return cggl.Lio_deephaven_web_shared_data_columns_StringArrayArrayColumnData_2_classLit;
};
idwsdc.StringArrayArrayColumnData = function StringArrayArrayColumnData(
  data_0
) {
  this.data_0 = data_0;
};
defineClass(
  317,
  76,
  { 76: 1, 317: 1, 3: 1 },
  idwsdc.StringArrayArrayColumnData
);
_.getData_2 = function getData_20() {
  return this.data_0;
};
_.equals_0 = function equals_31(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_StringArrayArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 317);
  return ju.deepEquals(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_31() {
  return ju.deepHashCode(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_StringArrayArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "StringArrayArrayColumnData",
    317
  );
idwsdc.$getClass_562 = function $getClass_562() {
  return cggl.Lio_deephaven_web_shared_data_columns_StringArrayColumnData_2_classLit;
};
idwsdc.StringArrayColumnData = function StringArrayColumnData(data_0) {
  this.data_0 = data_0;
};
defineClass(318, 76, { 76: 1, 318: 1, 3: 1 }, idwsdc.StringArrayColumnData);
_.getData_2 = function getData_21() {
  return this.data_0;
};
_.equals_0 = function equals_32(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_data_columns_StringArrayColumnData_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 318);
  return ju.equals_57(this.data_0, that.data_0);
};
_.hashCode_1 = function hashCode_32() {
  return ju.hashCode_57(this.data_0);
};
cggl.Lio_deephaven_web_shared_data_columns_StringArrayColumnData_2_classLit =
  createForClass(
    "io.deephaven.web.shared.data.columns",
    "StringArrayColumnData",
    318
  );
idwsf.$$init_50 = function $$init_50(this$static) {
  this$static.map_0 = new ju.IdentityHashMap();
};
idwsf.IdentityHashSet = function IdentityHashSet() {
  idwsf.$$init_50(this);
};
defineClass(876, 909, $intern_14, idwsf.IdentityHashSet);
_.add = function add_3(t) {
  return ju.$put_2(this.map_0, t, t) != null;
};
_.contains = function contains_2(o) {
  return ju.$containsKey(this.map_0, o);
};
_.isEmpty = function isEmpty_0() {
  return ju.$size_1(this.map_0) == 0;
};
_.iterator_0 = function iterator_3() {
  var outerIter;
  return (
    (outerIter = new ju.AbstractMap$1(this.map_0).this$01
      .entrySet_0()
      .iterator_0()),
    new ju.AbstractMap$1$1(outerIter)
  );
};
_.remove = function remove_5(o) {
  return ju.$remove_0(this.map_0, o) != null;
};
_.size = function size_3() {
  return ju.$size_1(this.map_0);
};
cggl.Lio_deephaven_web_shared_fu_IdentityHashSet_2_classLit = createForClass(
  "io.deephaven.web.shared.fu",
  "IdentityHashSet",
  876
);
idwsf.$getClass_563 = function $getClass_563() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwsf.JsRunnable$1 = function JsRunnable$1(val$self, val$second) {
  this.val$self2 = val$self;
  this.val$second3 = val$second;
};
defineClass(29, $wnd.Function, $intern_49, idwsf.JsRunnable$1);
_.run = function run_47() {
  this.val$self2.call(null);
  this.val$second3.call(null);
};
idwsf.$getClass_564 = function $getClass_564() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwsf.JsRunnable$lambda$0$Type = function JsRunnable$lambda$0$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(31, $wnd.Function, $intern_48, idwsf.JsRunnable$lambda$0$Type);
_.apply_3 = function apply_248(arg0) {
  this.$$outer_0.call(null);
};
idwsf.$iterator_1 = function $iterator_1(this$static) {
  var itr;
  itr = new idwsf.LinkedIterable$Itr(this$static);
  itr.node = this$static.head_0;
  itr.computed = !this$static.skipHead;
  return itr;
};
idwsf.LinkedIterable = function LinkedIterable(head, next) {
  idwsf.LinkedIterable_0.call(this, head, next, false);
};
idwsf.LinkedIterable_0 = function LinkedIterable_0(head, next, skipHead) {
  this.head_0 = head;
  this.next_0 = next;
  this.skipHead = skipHead;
};
defineClass(161, 1, {}, idwsf.LinkedIterable, idwsf.LinkedIterable_0);
_.forEach_0 = function forEach_2(action) {
  jl.$forEach_2(this, action);
};
_.iterator_0 = function iterator_4() {
  return idwsf.$iterator_1(this);
};
_.skipHead = false;
cggl.Lio_deephaven_web_shared_fu_LinkedIterable_2_classLit = createForClass(
  "io.deephaven.web.shared.fu",
  "LinkedIterable",
  161
);
idwsf.$hasNext_1 = function $hasNext_1(this$static) {
  var newNode;
  if (!this$static.computed) {
    this$static.computed = true;
    newNode = this$static.this$01.next_0.apply_1(this$static.node);
    if (maskUndefined(this$static.node) === maskUndefined(newNode)) {
      return false;
    }
    this$static.node = newNode;
  }
  return this$static.node != null;
};
idwsf.$next_0 = function $next_0(this$static) {
  this$static.computed || idwsf.$hasNext_1(this$static);
  this$static.computed = false;
  if (this$static.node == null) {
    throw toJs(new ju.NoSuchElementException());
  }
  return this$static.node;
};
idwsf.LinkedIterable$Itr = function LinkedIterable$Itr(this$0) {
  this.this$01 = this$0;
};
defineClass(813, 1, $intern_12, idwsf.LinkedIterable$Itr);
_.forEachRemaining = function forEachRemaining_2(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_3() {
  return idwsf.$hasNext_1(this);
};
_.next_1 = function next_6() {
  return idwsf.$next_0(this);
};
_.remove_0 = function remove_6() {
  ju.$remove_10();
};
_.computed = false;
cggl.Lio_deephaven_web_shared_fu_LinkedIterable$Itr_2_classLit = createForClass(
  "io.deephaven.web.shared.fu",
  "LinkedIterable/Itr",
  813
);
idwsf.$iterator_2 = function $iterator_2(this$static) {
  return new ju.ArrayList$1(this$static.$$outer_0);
};
idwsf.MappedIterable$0methodref$iterator$Type =
  function MappedIterable$0methodref$iterator$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(204, 1, {}, idwsf.MappedIterable$0methodref$iterator$Type);
_.forEach_0 = function forEach_3(action) {
  jl.$forEach_2(this, action);
};
_.iterator_0 = function iterator_5() {
  return idwsf.$iterator_2(this);
};
cggl.Lio_deephaven_web_shared_fu_MappedIterable$0methodref$iterator$Type_2_classLit =
  createForClass(
    "io.deephaven.web.shared.fu",
    "MappedIterable/0methodref$iterator$Type",
    204
  );
idwsf.MappedIterable$1methodref$nonNull$Type =
  function MappedIterable$1methodref$nonNull$Type() {};
defineClass(205, 1, {}, idwsf.MappedIterable$1methodref$nonNull$Type);
_.apply_1 = function apply_249(arg0) {
  return (
    jl.$clinit_Boolean(),
    arg0 != null ? ji.uncheckedCast(true) : ji.uncheckedCast(false)
  );
};
cggl.Lio_deephaven_web_shared_fu_MappedIterable$1methodref$nonNull$Type_2_classLit =
  createForClass(
    "io.deephaven.web.shared.fu",
    "MappedIterable/1methodref$nonNull$Type",
    205
  );
idwsf.$hasNext_2 = function $hasNext_2(this$static) {
  var candidate;
  if (this$static.next_0 != null) {
    return true;
  }
  while (this$static.val$source2.hasNext_1()) {
    candidate = this$static.val$source2.next_1();
    if (
      jl.$booleanValue(
        castToBoolean(this$static.val$filter3.apply_1(candidate))
      )
    ) {
      this$static.next_0 = candidate;
      return true;
    }
  }
  return false;
};
idwsf.$next_1 = function $next_1(this$static) {
  try {
    return this$static.next_0;
  } finally {
    this$static.next_0 = null;
  }
};
idwsf.MappedIterable$2 = function MappedIterable$2(val$source, val$filter) {
  this.val$source2 = val$source;
  this.val$filter3 = val$filter;
};
defineClass(651, 1, $intern_12, idwsf.MappedIterable$2);
_.forEachRemaining = function forEachRemaining_3(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_4() {
  return idwsf.$hasNext_2(this);
};
_.next_1 = function next_7() {
  return idwsf.$next_1(this);
};
_.remove_0 = function remove_7() {
  this.val$source2.remove_0();
};
cggl.Lio_deephaven_web_shared_fu_MappedIterable$2_2_classLit = createForClass(
  "io.deephaven.web.shared.fu",
  "MappedIterable/2",
  651
);
idwsf.MappedIterable$3 = function MappedIterable$3(val$source, val$mapper) {
  this.val$source2 = val$source;
  this.val$mapper3 = val$mapper;
};
defineClass(652, 1, $intern_12, idwsf.MappedIterable$3);
_.forEachRemaining = function forEachRemaining_4(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_5() {
  return ju.$hasNext_8(this.val$source2);
};
_.next_1 = function next_8() {
  var result;
  result = idwcab2.$apply_6(ju.$next_8(this.val$source2));
  return result;
};
_.remove_0 = function remove_8() {
  ju.$remove_5(this.val$source2);
};
cggl.Lio_deephaven_web_shared_fu_MappedIterable$3_2_classLit = createForClass(
  "io.deephaven.web.shared.fu",
  "MappedIterable/3",
  652
);
idwsf.$$init_51 = function $$init_51(this$static) {
  this$static.delegate = this$static.val$mine2;
};
idwsf.MappedIterable$4 = function MappedIterable$4(val$mine, val$yours) {
  this.val$mine2 = val$mine;
  this.val$yours3 = val$yours;
  idwsf.$$init_51(this);
};
defineClass(653, 1, $intern_12, idwsf.MappedIterable$4);
_.forEachRemaining = function forEachRemaining_5(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_6() {
  if (this.delegate.hasNext_1()) {
    return true;
  } else {
    this.delegate = this.val$yours3;
  }
  return this.delegate.hasNext_1();
};
_.next_1 = function next_9() {
  return this.delegate.next_1();
};
_.remove_0 = function remove_9() {
  this.delegate.remove_0();
};
cggl.Lio_deephaven_web_shared_fu_MappedIterable$4_2_classLit = createForClass(
  "io.deephaven.web.shared.fu",
  "MappedIterable/4",
  653
);
idwsf.$iterator_3 = function $iterator_3(this$static) {
  return idwsf.$lambda$3_7(this$static.$$outer_0, this$static.filter_1);
};
idwsf.MappedIterable$lambda$3$Type = function MappedIterable$lambda$3$Type(
  $$outer_0,
  filter_1
) {
  this.$$outer_0 = $$outer_0;
  this.filter_1 = filter_1;
};
defineClass(118, 1, {}, idwsf.MappedIterable$lambda$3$Type);
_.forEach_0 = function forEach_4(action) {
  jl.$forEach_2(this, action);
};
_.iterator_0 = function iterator_6() {
  return idwsf.$iterator_3(this);
};
cggl.Lio_deephaven_web_shared_fu_MappedIterable$lambda$3$Type_2_classLit =
  createForClass(
    "io.deephaven.web.shared.fu",
    "MappedIterable/lambda$3$Type",
    118
  );
idwsf.MappedIterable$lambda$4$Type = function MappedIterable$lambda$4$Type(
  $$outer_0,
  mapper_1
) {
  this.$$outer_0 = $$outer_0;
  this.mapper_1 = mapper_1;
};
defineClass(206, 1, {}, idwsf.MappedIterable$lambda$4$Type);
_.forEach_0 = function forEach_5(action) {
  jl.$forEach_2(this, action);
};
_.iterator_0 = function iterator_7() {
  return idwsf.$lambda$4_9(this.$$outer_0, this.mapper_1);
};
cggl.Lio_deephaven_web_shared_fu_MappedIterable$lambda$4$Type_2_classLit =
  createForClass(
    "io.deephaven.web.shared.fu",
    "MappedIterable/lambda$4$Type",
    206
  );
idwsf.$forEach_1 = function $forEach_1(this$static, action) {
  jl.$forEach_2(this$static, action);
};
idwsf.MappedIterable$lambda$5$Type = function MappedIterable$lambda$5$Type(
  $$outer_0,
  more_1
) {
  this.$$outer_0 = $$outer_0;
  this.more_1 = more_1;
};
defineClass(654, 1, {}, idwsf.MappedIterable$lambda$5$Type);
_.forEach_0 = function forEach_6(action) {
  idwsf.$forEach_1(this, action);
};
_.iterator_0 = function iterator_8() {
  return idwsf.$lambda$5_9(this.$$outer_0, this.more_1);
};
cggl.Lio_deephaven_web_shared_fu_MappedIterable$lambda$5$Type_2_classLit =
  createForClass(
    "io.deephaven.web.shared.fu",
    "MappedIterable/lambda$5$Type",
    654
  );
idwsf.$clinit_RunnableHelper = function $clinit_RunnableHelper() {
  idwsf.$clinit_RunnableHelper = emptyMethod;
  idwsf.DO_NOTHING_0 = makeLambdaFunction(
    idwsf.RunnableHelper$lambda$0$Type.prototype.run,
    idwsf.RunnableHelper$lambda$0$Type,
    []
  );
};
idwsf.$getClass_565 = function $getClass_565() {
  return cggl.Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
};
idwsf.$run_3 = function $run_3() {
  idwsf.$clinit_RunnableHelper();
};
idwsf.RunnableHelper$lambda$0$Type = function RunnableHelper$lambda$0$Type() {};
defineClass(
  1062,
  $wnd.Function,
  $intern_49,
  idwsf.RunnableHelper$lambda$0$Type
);
_.run = function run_48() {
  idwsf.$run_3();
};
idwsil.$getClass_566 = function $getClass_566() {
  return cggl.Lio_deephaven_web_shared_ide_lsp_CompletionItem_2_classLit;
};
idwsil.$setLength = function $setLength(this$static, length_0) {
  this$static.length_0 = length_0;
};
idwsil.$setStart = function $setStart(this$static, start_0) {
  this$static.start_0 = start_0;
};
idwsil.$sortText = function $sortText(this$static, sortText) {
  this$static.sortText = sortText;
  return this$static;
};
idwsil.CompletionItem = function CompletionItem() {
  this.start_0 = this.length_0 = 0;
};
defineClass(294, 1, { 294: 1, 3: 1 }, idwsil.CompletionItem);
_.equals_0 = function equals_34(o) {
  var that;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_ide_lsp_CompletionItem_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  that = castTo(o, 294);
  if (this.start_0 != that.start_0) return false;
  if (this.length_0 != that.length_0) return false;
  if (!ju.equals_68(this.textEdit, that.textEdit)) return false;
  return ju.equals_68(this.additionalTextEdits, that.additionalTextEdits);
};
_.hashCode_1 = function hashCode_34() {
  var result;
  result = this.start_0;
  result = 31 * result + this.length_0;
  result = 31 * result + idwsil.$hashCode_7(this.textEdit);
  result = 31 * result + ju.hashCode_67(this.additionalTextEdits);
  return result;
};
_.toString_0 = function toString_38() {
  return (
    "CompletionItem{start=" +
    this.start_0 +
    ", length=" +
    this.length_0 +
    ", textEdit=" +
    this.textEdit +
    "}\n"
  );
};
_.deprecated = false;
_.insertTextFormat = 0;
_.kind = 0;
_.length_0 = 0;
_.preselect = false;
_.start_0 = 0;
cggl.Lio_deephaven_web_shared_ide_lsp_CompletionItem_2_classLit =
  createForClass("io.deephaven.web.shared.ide.lsp", "CompletionItem", 294);
idwsil.$equals_6 = function $equals_6(this$static, o) {
  var range;
  if (maskUndefined(this$static) === maskUndefined(o)) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_ide_lsp_DocumentRange_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  range = castTo(o, 296);
  if (!idwsil.$equals_7(this$static.start, range.start)) return false;
  return idwsil.$equals_7(this$static.end, range.end);
};
idwsil.$getClass_567 = function $getClass_567() {
  return cggl.Lio_deephaven_web_shared_ide_lsp_DocumentRange_2_classLit;
};
idwsil.$hashCode_5 = function $hashCode_5(this$static) {
  var result;
  result = idwsil.$hashCode_6(this$static.start);
  result = 31 * result + idwsil.$hashCode_6(this$static.end);
  return result;
};
idwsil.$toString_12 = function $toString_12(this$static) {
  return "Range{start=" + this$static.start + ", end=" + this$static.end + "}";
};
idwsil.DocumentRange = function DocumentRange() {};
defineClass(296, 1, { 296: 1, 3: 1 }, idwsil.DocumentRange);
_.equals_0 = function equals_35(o) {
  return idwsil.$equals_6(this, o);
};
_.hashCode_1 = function hashCode_35() {
  return idwsil.$hashCode_5(this);
};
_.isInside = function isInside(innerStart, innerEnd) {
  return (
    innerStart.line >= this.start.line &&
    innerStart.character >= this.start.character &&
    innerEnd.line <= this.end.line &&
    innerEnd.character <= this.end.character
  );
};
_.toString_0 = function toString_39() {
  return idwsil.$toString_12(this);
};
cggl.Lio_deephaven_web_shared_ide_lsp_DocumentRange_2_classLit = createForClass(
  "io.deephaven.web.shared.ide.lsp",
  "DocumentRange",
  296
);
idwsil.Hover = function Hover() {};
defineClass(706, 1, $intern_64, idwsil.Hover);
_.toString_0 = function toString_40() {
  return (
    "Hover{contents=" +
    this.contents +
    ", range='" +
    idwsil.$toString_12(this.range) +
    "'" +
    "}"
  );
};
cggl.Lio_deephaven_web_shared_ide_lsp_Hover_2_classLit = createForClass(
  "io.deephaven.web.shared.ide.lsp",
  "Hover",
  706
);
idwsil.MarkupContent = function MarkupContent() {};
defineClass(704, 1, $intern_64, idwsil.MarkupContent);
_.toString_0 = function toString_41() {
  return "MarkupContent{kind=" + this.kind + ", value=" + this.value + "}";
};
cggl.Lio_deephaven_web_shared_ide_lsp_MarkupContent_2_classLit = createForClass(
  "io.deephaven.web.shared.ide.lsp",
  "MarkupContent",
  704
);
idwsil.ParameterInformation = function ParameterInformation() {};
defineClass(349, 1, { 349: 1, 3: 1 }, idwsil.ParameterInformation);
_.toString_0 = function toString_42() {
  return (
    "ParameterInformation{label=" +
    this.label +
    ", documentation='" +
    this.documentation +
    "'" +
    "}"
  );
};
cggl.Lio_deephaven_web_shared_ide_lsp_ParameterInformation_2_classLit =
  createForClass(
    "io.deephaven.web.shared.ide.lsp",
    "ParameterInformation",
    349
  );
idwsil.$equals_7 = function $equals_7(this$static, o) {
  var position;
  if (maskUndefined(this$static) === maskUndefined(o)) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_ide_lsp_Position_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  position = castTo(o, 261);
  if (this$static.line != position.line) return false;
  return this$static.character == position.character;
};
idwsil.$getClass_568 = function $getClass_568() {
  return cggl.Lio_deephaven_web_shared_ide_lsp_Position_2_classLit;
};
idwsil.$hashCode_6 = function $hashCode_6(this$static) {
  var result;
  result = this$static.line;
  result = 31 * result + this$static.character;
  return result;
};
idwsil.Position_0 = function Position_0() {};
idwsil.Position_1 = function Position_1(line, character) {
  this.line = line;
  this.character = character;
};
defineClass(261, 1, { 261: 1, 3: 1 }, idwsil.Position_0, idwsil.Position_1);
_.copy = function copy_2() {
  return new idwsil.Position_1(this.line, this.character);
};
_.equals_0 = function equals_36(o) {
  return idwsil.$equals_7(this, o);
};
_.greaterOrEqual = function greaterOrEqual(end) {
  return this.line == end.line
    ? this.character >= end.character
    : this.line > end.line;
};
_.greaterThan = function greaterThan_0(end) {
  return this.line == end.line
    ? this.character > end.character
    : this.line > end.line;
};
_.hashCode_1 = function hashCode_36() {
  return idwsil.$hashCode_6(this);
};
_.lessOrEqual = function lessOrEqual(start_0) {
  return this.line == start_0.line
    ? this.character <= start_0.character
    : this.line < start_0.line;
};
_.lessThan = function lessThan_0(start_0) {
  return this.line == start_0.line
    ? this.character < start_0.character
    : this.line < start_0.line;
};
_.toString_0 = function toString_43() {
  return "Position{line=" + this.line + ", character=" + this.character + "}";
};
_.character = 0;
_.line = 0;
cggl.Lio_deephaven_web_shared_ide_lsp_Position_2_classLit = createForClass(
  "io.deephaven.web.shared.ide.lsp",
  "Position",
  261
);
idwsil.SignatureInformation = function SignatureInformation() {};
defineClass(705, 1, $intern_64, idwsil.SignatureInformation);
_.toString_0 = function toString_44() {
  return (
    "SignatureInformation{label=" +
    this.label +
    ", documentation=" +
    this.documentation +
    ", parameters=" +
    this.parameters +
    ", activeParameter=" +
    this.activeParameter +
    "}\n"
  );
};
_.activeParameter = 0;
cggl.Lio_deephaven_web_shared_ide_lsp_SignatureInformation_2_classLit =
  createForClass(
    "io.deephaven.web.shared.ide.lsp",
    "SignatureInformation",
    705
  );
idwsil.TextDocumentContentChangeEvent =
  function TextDocumentContentChangeEvent() {};
defineClass(928, 1, $intern_64, idwsil.TextDocumentContentChangeEvent);
_.toString_0 = function toString_45() {
  return (
    "TextDocumentContentChangeEvent{range=" +
    this.range +
    ", rangeLength=" +
    this.rangeLength +
    ", text='" +
    this.text +
    "'" +
    "}"
  );
};
_.rangeLength = 0;
cggl.Lio_deephaven_web_shared_ide_lsp_TextDocumentContentChangeEvent_2_classLit =
  createForClass(
    "io.deephaven.web.shared.ide.lsp",
    "TextDocumentContentChangeEvent",
    928
  );
idwsil.$getClass_569 = function $getClass_569() {
  return cggl.Lio_deephaven_web_shared_ide_lsp_TextEdit_2_classLit;
};
idwsil.$hashCode_7 = function $hashCode_7(this$static) {
  var result;
  result = idwsil.$hashCode_5(this$static.range);
  result = 31 * result + ji.getHashCode_2(this$static.text);
  return result;
};
idwsil.TextEdit = function TextEdit() {};
defineClass(295, 1, { 295: 1, 3: 1 }, idwsil.TextEdit);
_.equals_0 = function equals_37(o) {
  var textEdit;
  if (this === o) return true;
  if (
    o == null ||
    cggl.Lio_deephaven_web_shared_ide_lsp_TextEdit_2_classLit !=
      jl.getClass__Ljava_lang_Class___devirtual$(o)
  )
    return false;
  textEdit = castTo(o, 295);
  if (!idwsil.$equals_6(this.range, textEdit.range)) return false;
  return jl.$equals_12(this.text, textEdit.text);
};
_.hashCode_1 = function hashCode_37() {
  return idwsil.$hashCode_7(this);
};
_.toString_0 = function toString_46() {
  return "TextEdit{range=" + this.range + ", text='" + this.text + "'" + "}";
};
cggl.Lio_deephaven_web_shared_ide_lsp_TextEdit_2_classLit = createForClass(
  "io.deephaven.web.shared.ide.lsp",
  "TextEdit",
  295
);
defineClass(896, 1, { 144: 1 });
cggl.Ljava_io_OutputStream_2_classLit = createForClass(
  "java.io",
  "OutputStream",
  896
);
defineClass(895, 896, { 144: 1 });
cggl.Ljava_io_FilterOutputStream_2_classLit = createForClass(
  "java.io",
  "FilterOutputStream",
  895
);
ji2.PrintStream = function PrintStream() {};
defineClass(391, 895, { 144: 1 }, ji2.PrintStream);
cggl.Ljava_io_PrintStream_2_classLit = createForClass(
  "java.io",
  "PrintStream",
  391
);
jl.$charAt = function $charAt(this$static, index_0) {
  return jl.$charAt_0(this$static.string, index_0);
};
jl.$replace0 = function $replace0(this$static, start_0, end, toInsert) {
  this$static.string =
    jl.$substring_0(this$static.string, 0, start_0) +
    ("" + toInsert) +
    jl.$substring(this$static.string, end);
};
jl.$setCharAt = function $setCharAt(this$static, index_0, x_0) {
  jl.$replace0(this$static, index_0, index_0 + 1, String.fromCharCode(x_0));
};
jl.$toString_13 = function $toString_13(this$static) {
  return this$static.string;
};
jl.AbstractStringBuilder = function AbstractStringBuilder(string) {
  this.string = string;
};
defineClass(240, 1, { 278: 1 });
_.toString_0 = function toString_47() {
  return jl.$toString_13(this);
};
cggl.Ljava_lang_AbstractStringBuilder_2_classLit = createForClass(
  "java.lang",
  "AbstractStringBuilder",
  240
);
jl.ArithmeticException = function ArithmeticException(explanation) {
  jl.RuntimeException_1.call(this, explanation);
};
defineClass(163, 26, $intern_6, jl.ArithmeticException);
cggl.Ljava_lang_ArithmeticException_2_classLit = createForClass(
  "java.lang",
  "ArithmeticException",
  163
);
jl.Error_0 = function Error_0() {
  jl.Throwable.call(this);
};
jl.Error_1 = function Error_1(message, cause) {
  jl.Throwable_1.call(this, message, cause);
};
defineClass(142, 25, $intern_65);
cggl.Ljava_lang_Error_2_classLit = createForClass("java.lang", "Error", 142);
jl.AssertionError = function AssertionError() {
  jl.Error_0.call(this);
};
jl.AssertionError_0 = function AssertionError_0(message) {
  jl.Error_1.call(
    this,
    message == null ? "null" : toString_7(message),
    instanceOf(message, 25) ? castTo(message, 25) : null
  );
};
defineClass(7, 142, $intern_65, jl.AssertionError, jl.AssertionError_0);
cggl.Ljava_lang_AssertionError_2_classLit = createForClass(
  "java.lang",
  "AssertionError",
  7
);
function codePointAt(cs, index_0, limit) {
  var hiSurrogate, loSurrogate;
  hiSurrogate = jl.$charAt_0(cs, index_0++);
  if (
    hiSurrogate >= 55296 &&
    hiSurrogate <= 56319 &&
    index_0 < limit &&
    isLowSurrogate(
      (loSurrogate =
        (ji.checkCriticalStringElementIndex(
          index_0,
          ji.uncheckedCast(cs).length
        ),
        ji.uncheckedCast(cs).charCodeAt(index_0)))
    )
  ) {
    return $intern_9 + ((hiSurrogate & 1023) << 10) + (loSurrogate & 1023);
  }
  return hiSurrogate;
}

function digit_0(c) {
  if (c >= 48 && c < 48 + $wnd.Math.min(10, 10)) {
    return c - 48;
  }
  if (c >= 97 && c < 97) {
    return c - 97 + 10;
  }
  if (c >= 65 && c < 65) {
    return c - 65 + 10;
  }
  return -1;
}

function isLowSurrogate(ch_0) {
  return ch_0 >= 56320 && ch_0 <= 57343;
}

function toChars(codePoint, dst, dstIndex) {
  ji.checkCriticalArgument(codePoint >= 0 && codePoint <= 1114111);
  if (codePoint >= $intern_9) {
    dst[dstIndex++] =
      (55296 + (((codePoint - $intern_9) >> 10) & 1023)) & $intern_10;
    dst[dstIndex] = (56320 + ((codePoint - $intern_9) & 1023)) & $intern_10;
    return 2;
  } else {
    dst[dstIndex] = codePoint & $intern_10;
    return 1;
  }
}

jl.$clinit_Integer$BoxedValues = function $clinit_Integer$BoxedValues() {
  jl.$clinit_Integer$BoxedValues = emptyMethod;
  jl.boxedValues = initUnidimensionalArray(
    cggl.Ljava_lang_Integer_2_classLit,
    $intern_17,
    98,
    256,
    0,
    1
  );
};
jl.$compareTo_7 = function $compareTo_7(this$static, b) {
  return compare_6(this$static.value_0, b.value_0);
};
jl.$equals_11 = function $equals_11(this$static, o) {
  return instanceOf(o, 66) && eq(castTo(o, 66).value_0, this$static.value_0);
};
jl.$hashCode_11 = function $hashCode_11(this$static) {
  return toInt_0(this$static.value_0);
};
jl.$longValue_0 = function $longValue_0(this$static) {
  return this$static.value_0;
};
jl.Long = function Long(value_0) {
  this.value_0 = value_0;
};
function compare_6(x_0, y_0) {
  return compare_1(x_0, y_0) < 0 ? -1 : compare_1(x_0, y_0) > 0 ? 1 : 0;
}

jl.valueOf_30 = function valueOf_30(i) {
  var rebase, result;
  if (compare_1(i, -129) > 0 && compare_1(i, 128) < 0) {
    rebase = toInt_0(i) + 128;
    result = (jl.$clinit_Long$BoxedValues(), jl.boxedValues_0)[rebase];
    !result && (result = jl.boxedValues_0[rebase] = new jl.Long(i));
    return result;
  }
  return new jl.Long(i);
};
defineClass(66, 114, { 3: 1, 33: 1, 66: 1, 114: 1 }, jl.Long);
_.compareTo_0 = function compareTo_4(b) {
  return jl.$compareTo_7(this, castTo(b, 66));
};
_.doubleValue_0 = function doubleValue_0() {
  return toDouble_0(this.value_0);
};
_.equals_0 = function equals_39(o) {
  return jl.$equals_11(this, o);
};
_.hashCode_1 = function hashCode_39() {
  return jl.$hashCode_11(this);
};
_.longValue_0 = function longValue_1() {
  return jl.$longValue_0(this);
};
_.toString_0 = function toString_50() {
  return "" + toString_6(this.value_0);
};
_.value_0 = 0;
cggl.Ljava_lang_Long_2_classLit = createForClass("java.lang", "Long", 66);
jl.$clinit_Long$BoxedValues = function $clinit_Long$BoxedValues() {
  jl.$clinit_Long$BoxedValues = emptyMethod;
  jl.boxedValues_0 = initUnidimensionalArray(
    cggl.Ljava_lang_Long_2_classLit,
    $intern_17,
    66,
    256,
    0,
    1
  );
};
jl.NegativeArraySizeException = function NegativeArraySizeException(message) {
  jl.RuntimeException_1.call(this, message);
};
defineClass(832, 26, $intern_6, jl.NegativeArraySizeException);
cggl.Ljava_lang_NegativeArraySizeException_2_classLit = createForClass(
  "java.lang",
  "NegativeArraySizeException",
  832
);
jl.$clinit_Number$__ParseLong = function $clinit_Number$__ParseLong() {
  jl.$clinit_Number$__ParseLong = emptyMethod;
  var i;
  jl.maxDigitsForRadix = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.I_classLit, 1),
    $intern_20,
    18,
    15,
    [
      -1, -1, 30, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7,
      6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5,
    ]
  );
  jl.maxDigitsRadixPower = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    37,
    15,
    1
  );
  jl.maxLengthForRadix = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.I_classLit, 1),
    $intern_20,
    18,
    15,
    [
      -1, -1, 63, 40, 32, 28, 25, 23, 21, 20, 19, 19, 18, 18, 17, 17, 16, 16,
      16, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13,
      13,
    ]
  );
  jl.maxValueForRadix = initUnidimensionalArray(
    cggl.J_classLit,
    $intern_43,
    18,
    37,
    14,
    1
  );
  for (i = 2; i <= 36; i++) {
    jl.maxDigitsRadixPower[i] = round_int(
      $wnd.Math.pow(i, jl.maxDigitsForRadix[i])
    );
    jl.maxValueForRadix[i] = div(
      $intern_66,
      fromInt(jl.maxDigitsRadixPower[i])
    );
  }
};
jl.NumberFormatException = function NumberFormatException(message) {
  jl.IllegalArgumentException_0.call(this, message);
};
defineClass(
  63,
  19,
  { 3: 1, 41: 1, 19: 1, 63: 1, 26: 1, 25: 1 },
  jl.NumberFormatException
);
cggl.Ljava_lang_NumberFormatException_2_classLit = createForClass(
  "java.lang",
  "NumberFormatException",
  63
);
jl.StackTraceElement = function StackTraceElement(
  methodName,
  fileName,
  lineNumber
) {
  if (methodName == null) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  this.className = "Unknown";
  this.methodName_0 = methodName;
  this.fileName = fileName;
  this.lineNumber = lineNumber;
};
defineClass(113, 1, { 3: 1, 113: 1 }, jl.StackTraceElement);
_.equals_0 = function equals_40(other) {
  var st;
  if (instanceOf(other, 113)) {
    st = castTo(other, 113);
    return (
      this.lineNumber == st.lineNumber &&
      this.methodName_0 == st.methodName_0 &&
      this.className == st.className &&
      this.fileName == st.fileName
    );
  }
  return false;
};
_.hashCode_1 = function hashCode_40() {
  return ju.hashCode_57(
    stampJavaTypeInfo(
      getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
      $intern_7,
      1,
      5,
      [
        jl.valueOf_29(this.lineNumber),
        this.className,
        this.methodName_0,
        this.fileName,
      ]
    )
  );
};
_.toString_0 = function toString_51() {
  return (
    this.className +
    "." +
    this.methodName_0 +
    "(" +
    (this.fileName != null ? this.fileName : "Unknown Source") +
    (this.lineNumber >= 0 ? ":" + this.lineNumber : "") +
    ")"
  );
};
_.lineNumber = 0;
cggl.Ljava_lang_StackTraceElement_2_classLit = createForClass(
  "java.lang",
  "StackTraceElement",
  113
);
jl.$append_2 = function $append_2(this$static, x_0) {
  this$static.string += x_0;
  return this$static;
};
jl.$append_3 = function $append_3(this$static, x_0) {
  this$static.string += "" + x_0;
  return this$static;
};
jl.StringBuffer = function StringBuffer() {
  jl.AbstractStringBuilder.call(this, "");
};
defineClass(282, 240, { 278: 1 }, jl.StringBuffer);
cggl.Ljava_lang_StringBuffer_2_classLit = createForClass(
  "java.lang",
  "StringBuffer",
  282
);
jl.$append_4 = function $append_4(this$static, x_0) {
  this$static.string += String.fromCharCode(x_0);
  return this$static;
};
jl.$append_5 = function $append_5(this$static, x_0) {
  this$static.string += x_0;
  return this$static;
};
jl.$append_6 = function $append_6(this$static, x_0) {
  this$static.string += "" + x_0;
  return this$static;
};
jl.$append_7 = function $append_7(this$static, x_0, start_0, end) {
  this$static.string +=
    "" + jl.$substring_0(!x_0 ? "null" : x_0.string, start_0, end);
  return this$static;
};
jl.$append_8 = function $append_8(this$static, x_0) {
  this$static.string += "" + x_0;
  return this$static;
};
jl.$append_9 = function $append_9(this$static, x_0) {
  this$static.string += "" + x_0;
  return this$static;
};
jl.$append_10 = function $append_10(this$static, x_0) {
  this$static.string += x_0;
  return this$static;
};
jl.$delete = function $delete(this$static, start_0, end) {
  this$static.string =
    jl.$substring_0(this$static.string, 0, start_0) +
    "" +
    jl.$substring(this$static.string, end);
  return this$static;
};
jl.$insert = function $insert(this$static, index_0, x_0) {
  this$static.string =
    jl.$substring_0(this$static.string, 0, index_0) +
    ("" + x_0) +
    jl.$substring(this$static.string, index_0);
  return this$static;
};
jl.StringBuilder = function StringBuilder() {
  jl.AbstractStringBuilder.call(this, "");
};
jl.StringBuilder_0 = function StringBuilder_0() {
  jl.AbstractStringBuilder.call(this, "");
};
jl.StringBuilder_1 = function StringBuilder_1(s) {
  jl.AbstractStringBuilder.call(this, (ji.checkCriticalNotNull(s), s));
};
defineClass(
  47,
  240,
  { 278: 1 },
  jl.StringBuilder,
  jl.StringBuilder_0,
  jl.StringBuilder_1
);
cggl.Ljava_lang_StringBuilder_2_classLit = createForClass(
  "java.lang",
  "StringBuilder",
  47
);
jl.$clinit_System = function $clinit_System() {
  jl.$clinit_System = emptyMethod;
  jl.err = new ji2.PrintStream();
};
jl.arraycopy = function arraycopy(src_0, srcOfs, dest, destOfs, len) {
  jl.$clinit_System();
  var destArray,
    destComp,
    destEnd,
    destType,
    destlen,
    srcArray,
    srcComp,
    srcType,
    srclen;
  ji.checkCriticalNotNull_0(src_0, "src");
  ji.checkCriticalNotNull_0(dest, "dest");
  srcType = jl.getClass__Ljava_lang_Class___devirtual$(src_0);
  destType = jl.getClass__Ljava_lang_Class___devirtual$(dest);
  ji.checkCriticalArrayType_0(
    (srcType.modifiers & 4) != 0,
    "srcType is not an array"
  );
  ji.checkCriticalArrayType_0(
    (destType.modifiers & 4) != 0,
    "destType is not an array"
  );
  srcComp = srcType.componentType;
  destComp = destType.componentType;
  ji.checkCriticalArrayType_0(
    (srcComp.modifiers & 1) != 0
      ? srcComp == destComp
      : (destComp.modifiers & 1) == 0,
    "Array types don't match"
  );
  srclen = ji.uncheckedCast(src_0).length;
  destlen = ji.uncheckedCast(dest).length;
  if (
    srcOfs < 0 ||
    destOfs < 0 ||
    len < 0 ||
    srcOfs + len > srclen ||
    destOfs + len > destlen
  ) {
    throw toJs(new jl.IndexOutOfBoundsException());
  }
  if ((srcComp.modifiers & 1) == 0 && srcType != destType) {
    srcArray = castToArray(src_0);
    destArray = castToArray(dest);
    if (src_0 === dest && srcOfs < destOfs) {
      srcOfs += len;
      for (destEnd = destOfs + len; destEnd-- > destOfs; ) {
        setCheck(destArray, destEnd, srcArray[--srcOfs]);
      }
    } else {
      for (destEnd = destOfs + len; destOfs < destEnd; ) {
        setCheck(destArray, destOfs++, srcArray[srcOfs++]);
      }
    }
  } else len > 0 && ji.copy_3(src_0, srcOfs, dest, destOfs, len, true);
};
defineClass(4690, 1, {});
jm.$clinit_BigDecimal = function $clinit_BigDecimal() {
  jm.$clinit_BigDecimal = emptyMethod;
  var i, j, j0;
  new jm.BigDecimal_0(1, 0);
  new jm.BigDecimal_0(10, 0);
  new jm.BigDecimal_0(0, 0);
  jm.BI_SCALED_BY_ZERO = initUnidimensionalArray(
    cggl.Ljava_math_BigDecimal_2_classLit,
    $intern_17,
    50,
    11,
    0,
    1
  );
  jm.CH_ZEROS = initUnidimensionalArray(
    cggl.C_classLit,
    $intern_23,
    18,
    100,
    15,
    1
  );
  jm.DOUBLE_FIVE_POW = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.D_classLit, 1),
    $intern_31,
    18,
    15,
    [
      1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625,
      48828125, 244140625, 1220703125, 6103515625, 30517578125, 152587890625,
      762939453125, 3814697265625, 19073486328125, 95367431640625,
      476837158203125, 2384185791015625,
    ]
  );
  jm.DOUBLE_FIVE_POW_BIT_LENGTH = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    jm.DOUBLE_FIVE_POW.length,
    15,
    1
  );
  jm.DOUBLE_TEN_POW = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.D_classLit, 1),
    $intern_31,
    18,
    15,
    [
      1,
      10,
      100,
      $intern_21,
      10000,
      100000,
      $intern_37,
      10000000,
      100000000,
      $intern_29,
      10000000000,
      100000000000,
      1000000000000,
      10000000000000,
      100000000000000,
      1000000000000000,
      10000000000000000,
    ]
  );
  jm.DOUBLE_TEN_POW_BIT_LENGTH = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    jm.DOUBLE_TEN_POW.length,
    15,
    1
  );
  jm.ZERO_SCALED_BY = initUnidimensionalArray(
    cggl.Ljava_math_BigDecimal_2_classLit,
    $intern_17,
    50,
    11,
    0,
    1
  );
  i = 0;
  for (; i < jm.ZERO_SCALED_BY.length; i++) {
    jm.BI_SCALED_BY_ZERO[i] = new jm.BigDecimal_0(
      cggl.createSmallLongEmul0(i),
      0
    );
    jm.ZERO_SCALED_BY[i] = new jm.BigDecimal_0(0, i);
    jm.CH_ZEROS[i] = 48;
  }
  for (; i < jm.CH_ZEROS.length; i++) {
    jm.CH_ZEROS[i] = 48;
  }
  for (j0 = 0; j0 < jm.DOUBLE_FIVE_POW_BIT_LENGTH.length; j0++) {
    jm.DOUBLE_FIVE_POW_BIT_LENGTH[j0] = jm.bitLength(jm.DOUBLE_FIVE_POW[j0]);
  }
  for (j = 0; j < jm.DOUBLE_TEN_POW_BIT_LENGTH.length; j++) {
    jm.DOUBLE_TEN_POW_BIT_LENGTH[j] = jm.bitLength(jm.DOUBLE_TEN_POW[j]);
  }
  jm.$clinit_Multiplication();
};
jm.$compareTo_10 = function $compareTo_10(this$static, val) {
  var diffPrecision, diffScale, thisSign, thisUnscaled, valUnscaled, valueSign;
  thisSign = jm.$signum(this$static);
  valueSign = jm.$signum(val);
  if (thisSign == valueSign) {
    if (
      this$static.scale_0 == val.scale_0 &&
      this$static.bitLength < 54 &&
      val.bitLength < 54
    ) {
      return this$static.smallValue < val.smallValue
        ? -1
        : this$static.smallValue > val.smallValue
        ? 1
        : 0;
    }
    diffScale = this$static.scale_0 - val.scale_0;
    diffPrecision =
      (this$static.precision_0 > 0
        ? this$static.precision_0
        : $wnd.Math.floor((this$static.bitLength - 1) * $intern_67) + 1) -
      (val.precision_0 > 0
        ? val.precision_0
        : $wnd.Math.floor((val.bitLength - 1) * $intern_67) + 1);
    if (diffPrecision > diffScale + 1) {
      return thisSign;
    } else if (diffPrecision < diffScale - 1) {
      return -thisSign;
    } else {
      thisUnscaled =
        (!this$static.intVal &&
          (this$static.intVal = jm.valueOf_36(this$static.smallValue)),
        this$static.intVal);
      valUnscaled =
        (!val.intVal && (val.intVal = jm.valueOf_36(val.smallValue)),
        val.intVal);
      diffScale < 0
        ? (thisUnscaled = jm.$multiply_0(
            thisUnscaled,
            jm.powerOf10(-diffScale)
          ))
        : diffScale > 0 &&
          (valUnscaled = jm.$multiply_0(valUnscaled, jm.powerOf10(diffScale)));
      return jm.$compareTo_11(thisUnscaled, valUnscaled);
    }
  } else return thisSign < valueSign ? -1 : 1;
};
jm.$doubleValue_0 = function $doubleValue_0(this$static) {
  return jl.__parseAndValidateDouble(jm.$toString_14(this$static));
};
jm.$initFrom = function $initFrom(this$static, val) {
  var begin, ch_0, i, last, offset, scaleString, unscaled, unscaledBuffer;
  begin = 0;
  offset = 0;
  last = ji.uncheckedCast(val).length;
  scaleString = null;
  unscaledBuffer = (ji.uncheckedCast(val), new jl.StringBuilder_0());
  if (
    offset < last &&
    (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
    ji.uncheckedCast(val).charCodeAt(offset) == 43)
  ) {
    ++offset;
    ++begin;
    if (
      offset < last &&
      (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
      ji.uncheckedCast(val).charCodeAt(offset) == 43 ||
        (ji.checkCriticalStringElementIndex(
          offset,
          ji.uncheckedCast(val).length
        ),
        ji.uncheckedCast(val).charCodeAt(offset) == 45))
    ) {
      throw toJs(
        new jl.NumberFormatException('For input string: "' + val + '"')
      );
    }
  }
  while (
    offset < last &&
    (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
    ji.uncheckedCast(val).charCodeAt(offset) != 46) &&
    (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
    ji.uncheckedCast(val).charCodeAt(offset) != 101) &&
    (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
    ji.uncheckedCast(val).charCodeAt(offset) != 69)
  ) {
    ++offset;
  }
  unscaledBuffer.string +=
    "" +
    ji.uncheckedCast(val == null ? "null" : val).substr(begin, offset - begin);
  if (
    offset < last &&
    (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
    ji.uncheckedCast(val).charCodeAt(offset) == 46)
  ) {
    ++offset;
    begin = offset;
    while (
      offset < last &&
      (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
      ji.uncheckedCast(val).charCodeAt(offset) != 101) &&
      (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
      ji.uncheckedCast(val).charCodeAt(offset) != 69)
    ) {
      ++offset;
    }
    this$static.scale_0 = offset - begin;
    unscaledBuffer.string +=
      "" +
      ji
        .uncheckedCast(val == null ? "null" : val)
        .substr(begin, offset - begin);
  } else {
    this$static.scale_0 = 0;
  }
  if (
    offset < last &&
    (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
    ji.uncheckedCast(val).charCodeAt(offset) == 101 ||
      (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
      ji.uncheckedCast(val).charCodeAt(offset) == 69))
  ) {
    ++offset;
    begin = offset;
    if (
      offset < last &&
      (ji.checkCriticalStringElementIndex(offset, ji.uncheckedCast(val).length),
      ji.uncheckedCast(val).charCodeAt(offset) == 43)
    ) {
      ++offset;
      offset < last &&
        (ji.checkCriticalStringElementIndex(
          offset,
          ji.uncheckedCast(val).length
        ),
        ji.uncheckedCast(val).charCodeAt(offset) != 45) &&
        ++begin;
    }
    scaleString = ji.uncheckedCast(val).substr(begin, last - begin);
    this$static.scale_0 =
      this$static.scale_0 -
      jl.__parseAndValidateInt(scaleString, $intern_22, $intern_1);
    if (this$static.scale_0 != round_int(this$static.scale_0)) {
      throw toJs(new jl.NumberFormatException("Scale out of range."));
    }
  }
  unscaled = unscaledBuffer.string;
  if (ji.uncheckedCast(unscaled).length < 16) {
    this$static.smallValue =
      (jm.unscaledRegex == null &&
        (jm.unscaledRegex = new RegExp("^[+-]?\\d*$", "i")),
      jm.unscaledRegex.test(unscaled) ? parseInt(unscaled, 10) : NaN);
    if (isNaN(this$static.smallValue)) {
      throw toJs(
        new jl.NumberFormatException('For input string: "' + val + '"')
      );
    }
    this$static.bitLength = jm.bitLength(this$static.smallValue);
  } else {
    jm.$setUnscaledValue(this$static, new jm.BigInteger_4(unscaled));
  }
  this$static.precision_0 = ji.uncheckedCast(unscaledBuffer.string).length;
  for (i = 0; i < ji.uncheckedCast(unscaledBuffer.string).length; ++i) {
    ch_0 = jl.$charAt_0(unscaledBuffer.string, i);
    if (ch_0 != 45 && ch_0 != 48) {
      break;
    }
    --this$static.precision_0;
  }
  this$static.precision_0 == 0 && (this$static.precision_0 = 1);
};
jm.$multiply = function $multiply(this$static, multiplicand) {
  var newScale;
  newScale = this$static.scale_0 + multiplicand.scale_0;
  if (
    (this$static.bitLength == 0 && this$static.smallValue != -1) ||
    (multiplicand.bitLength == 0 && multiplicand.smallValue != -1)
  ) {
    return jm.zeroScaledBy(newScale);
  }
  if (this$static.bitLength + multiplicand.bitLength < 54) {
    return new jm.BigDecimal(
      this$static.smallValue * multiplicand.smallValue,
      jm.toIntScale(newScale)
    );
  }
  return new jm.BigDecimal_3(
    jm.$multiply_0(
      (!this$static.intVal &&
        (this$static.intVal = jm.valueOf_36(this$static.smallValue)),
      this$static.intVal),
      (!multiplicand.intVal &&
        (multiplicand.intVal = jm.valueOf_36(multiplicand.smallValue)),
      multiplicand.intVal)
    ),
    jm.toIntScale(newScale)
  );
};
jm.$negate = function $negate(this$static) {
  if (this$static.bitLength < 54) {
    return new jm.BigDecimal(-this$static.smallValue, this$static.scale_0);
  }
  return new jm.BigDecimal_2(
    jm.$negate_0(
      (!this$static.intVal &&
        (this$static.intVal = jm.valueOf_36(this$static.smallValue)),
      this$static.intVal)
    ),
    this$static.scale_0
  );
};
jm.$setUnscaledValue = function $setUnscaledValue(this$static, unscaledValue) {
  var value_0;
  this$static.intVal = unscaledValue;
  this$static.bitLength = jm.bitLength_1(unscaledValue);
  this$static.bitLength < 54 &&
    (this$static.smallValue =
      ((value_0 =
        unscaledValue.numberLength > 1
          ? or_1(
              shl_0(fromInt(unscaledValue.digits[1]), 32),
              and_1(fromInt(unscaledValue.digits[0]), $intern_68)
            )
          : and_1(fromInt(unscaledValue.digits[0]), $intern_68)),
      toDouble_0(mul_0(fromInt(unscaledValue.sign), value_0))));
};
jm.$signum = function $signum(this$static) {
  if (this$static.bitLength < 54) {
    return this$static.smallValue < 0 ? -1 : this$static.smallValue > 0 ? 1 : 0;
  }
  return (!this$static.intVal &&
    (this$static.intVal = jm.valueOf_36(this$static.smallValue)),
  this$static.intVal).sign;
};
jm.$toString_14 = function $toString_14(this$static) {
  var begin, end, exponent, intString, result;
  if (this$static.toStringImage != null) {
    return this$static.toStringImage;
  }
  if (this$static.bitLength < 32) {
    this$static.toStringImage = jm.toDecimalScaledString(
      fromDouble_0(this$static.smallValue),
      round_int(this$static.scale_0)
    );
    return this$static.toStringImage;
  }
  intString = jm.toDecimalScaledString_0(
    (!this$static.intVal &&
      (this$static.intVal = jm.valueOf_36(this$static.smallValue)),
    this$static.intVal),
    0
  );
  if (this$static.scale_0 == 0) {
    return intString;
  }
  begin =
    (!this$static.intVal &&
      (this$static.intVal = jm.valueOf_36(this$static.smallValue)),
    this$static.intVal).sign < 0
      ? 2
      : 1;
  end = ji.uncheckedCast(intString).length;
  exponent = -this$static.scale_0 + end - begin;
  result = new jl.StringBuilder();
  result.string += "" + intString;
  if (this$static.scale_0 > 0 && exponent >= -6) {
    if (exponent >= 0) {
      jl.$insert(
        result,
        end - round_int(this$static.scale_0),
        String.fromCharCode(46)
      );
    } else {
      result.string =
        jl.$substring_0(result.string, 0, begin - 1) +
        "0." +
        jl.$substring(result.string, begin - 1);
      jl.$insert(
        result,
        begin + 1,
        jl.valueOf_33(jm.CH_ZEROS, 0, -round_int(exponent) - 1)
      );
    }
  } else {
    if (end - begin >= 1) {
      jl.$insert(result, begin, String.fromCharCode(46));
      ++end;
    }
    jl.$insert(result, end, String.fromCharCode(69));
    exponent > 0 && jl.$insert(result, ++end, String.fromCharCode(43));
    jl.$insert(result, ++end, "" + toString_6(fromDouble_0(exponent)));
  }
  this$static.toStringImage = result.string;
  return this$static.toStringImage;
};
jm.BigDecimal = function BigDecimal(smallValue, scale) {
  this.smallValue = smallValue;
  this.scale_0 = scale;
  this.bitLength = jm.bitLength(smallValue);
};
jm.BigDecimal_0 = function BigDecimal_0(smallValue, scale) {
  this.scale_0 = scale;
  this.bitLength = jm.bitLength_0(smallValue);
  this.bitLength < 54
    ? (this.smallValue = toDouble_0(smallValue))
    : (this.intVal = jm.valueOf_37(smallValue));
};
jm.BigDecimal_1 = function BigDecimal_1(val) {
  jm.$clinit_BigDecimal();
  jm.$initFrom(this, val);
};
jm.BigDecimal_2 = function BigDecimal_2(unscaledVal, scale) {
  this.scale_0 = scale;
  jm.$setUnscaledValue(
    this,
    (ji.checkCriticalNotNull(unscaledVal), unscaledVal)
  );
};
jm.BigDecimal_3 = function BigDecimal_3(unscaledVal, scale) {
  jm.$clinit_BigDecimal();
  jm.BigDecimal_2.call(this, unscaledVal, scale);
};
jm.bitLength = function bitLength(value_0) {
  var negative, result;
  if (value_0 > -140737488355328 && value_0 < 140737488355328) {
    if (value_0 == 0) {
      return 0;
    }
    negative = value_0 < 0;
    negative && (value_0 = -value_0);
    result = round_int(
      $wnd.Math.floor($wnd.Math.log(value_0) / 0.6931471805599453)
    );
    (!negative || value_0 != $wnd.Math.pow(2, result)) && ++result;
    return result;
  }
  return jm.bitLength_0(fromDouble_0(value_0));
};
jm.bitLength_0 = function bitLength_0(value_0) {
  var high;
  compare_1(value_0, 0) < 0 &&
    (value_0 = cggl.createLongEmul(
      cggl.not_0(
        cggl.isSmallLong0(value_0)
          ? cggl.toBigLong(cggl.asSmallLong0(value_0))
          : cggl.asBigLong0(value_0)
      )
    ));
  return (
    (high = toInt_0(shr_0(value_0, 32))),
    64 -
      (high != 0
        ? numberOfLeadingZeros_0(high)
        : numberOfLeadingZeros_0(toInt_0(value_0)) + 32)
  );
};
jm.toIntScale = function toIntScale(doubleScale) {
  if (doubleScale < $intern_22) {
    throw toJs(new jl.ArithmeticException("Overflow"));
  } else if (doubleScale > $intern_1) {
    throw toJs(new jl.ArithmeticException("Underflow"));
  } else {
    return round_int(doubleScale);
  }
};
jm.valueOf_34 = function valueOf_34(unscaledVal) {
  jm.$clinit_BigDecimal();
  if (compare_1(unscaledVal, 0) >= 0 && compare_1(unscaledVal, 11) < 0) {
    return jm.BI_SCALED_BY_ZERO[toInt_0(unscaledVal)];
  }
  return new jm.BigDecimal_0(unscaledVal, 0);
};
jm.valueOf_35 = function valueOf_35(scale) {
  if (scale == 0) {
    return jm.valueOf_34(0);
  }
  if (scale >= 0 && scale < jm.ZERO_SCALED_BY.length) {
    return jm.ZERO_SCALED_BY[scale];
  }
  return new jm.BigDecimal_0(0, scale);
};
jm.zeroScaledBy = function zeroScaledBy(doubleScale) {
  if (doubleScale == round_int(doubleScale)) {
    return jm.valueOf_35(round_int(doubleScale));
  }
  if (doubleScale >= 0) {
    return new jm.BigDecimal_0(0, $intern_1);
  }
  return new jm.BigDecimal_0(0, $intern_22);
};
defineClass(
  50,
  114,
  { 3: 1, 33: 1, 114: 1, 50: 1 },
  jm.BigDecimal,
  jm.BigDecimal_0,
  jm.BigDecimal_1,
  jm.BigDecimal_2,
  jm.BigDecimal_3
);
_.compareTo_0 = function compareTo_5(val) {
  return jm.$compareTo_10(this, castTo(val, 50));
};
_.doubleValue_0 = function doubleValue_1() {
  return jm.$doubleValue_0(this);
};
_.equals_0 = function equals_41(x_0) {
  var x1;
  if (this === x_0) {
    return true;
  }
  if (instanceOf(x_0, 50)) {
    x1 = castTo(x_0, 50);
    return this.scale_0 == x1.scale_0 && jm.$compareTo_10(this, x1) == 0;
  }
  return false;
};
_.hashCode_1 = function hashCode_41() {
  var longValue;
  if (this.hashCode_0 != 0) {
    return this.hashCode_0;
  }
  if (this.bitLength < 54) {
    longValue = fromDouble_0(this.smallValue);
    this.hashCode_0 = toInt_0(and_1(longValue, -1));
    this.hashCode_0 =
      33 * this.hashCode_0 + toInt_0(and_1(shr_0(longValue, 32), -1));
    this.hashCode_0 = 17 * this.hashCode_0 + round_int(this.scale_0);
    return this.hashCode_0;
  }
  this.hashCode_0 = 17 * jm.$hashCode_13(this.intVal) + round_int(this.scale_0);
  return this.hashCode_0;
};
_.longValue_0 = function longValue_2() {
  return this.scale_0 <= -64 ||
    this.scale_0 >
      (this.precision_0 > 0
        ? this.precision_0
        : $wnd.Math.floor((this.bitLength - 1) * $intern_67) + 1)
    ? 0
    : jm.$longValue_1(
        this.scale_0 == 0 || (this.bitLength == 0 && this.smallValue != -1)
          ? (!this.intVal && (this.intVal = jm.valueOf_36(this.smallValue)),
            this.intVal)
          : this.scale_0 < 0
          ? jm.$multiply_0(
              (!this.intVal && (this.intVal = jm.valueOf_36(this.smallValue)),
              this.intVal),
              jm.powerOf10(-this.scale_0)
            )
          : jm.$divide(
              (!this.intVal && (this.intVal = jm.valueOf_36(this.smallValue)),
              this.intVal),
              jm.powerOf10(this.scale_0)
            )
      );
};
_.toString_0 = function toString_52() {
  return jm.$toString_14(this);
};
_.bitLength = 0;
_.hashCode_0 = 0;
_.precision_0 = 0;
_.scale_0 = 0;
_.smallValue = 0;
cggl.Ljava_math_BigDecimal_2_classLit = createForClass(
  "java.math",
  "BigDecimal",
  50
);
jm.$clinit_BigInteger = function $clinit_BigInteger() {
  jm.$clinit_BigInteger = emptyMethod;
  var i;
  jm.ONE_0 = new jm.BigInteger_0(1, 1);
  jm.TEN = new jm.BigInteger_0(1, 10);
  jm.ZERO_0 = new jm.BigInteger_0(0, 0);
  jm.MINUS_ONE = new jm.BigInteger_0(-1, 1);
  jm.SMALL_VALUES = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_math_BigInteger_2_classLit, 1),
    $intern_17,
    28,
    0,
    [
      jm.ZERO_0,
      jm.ONE_0,
      new jm.BigInteger_0(1, 2),
      new jm.BigInteger_0(1, 3),
      new jm.BigInteger_0(1, 4),
      new jm.BigInteger_0(1, 5),
      new jm.BigInteger_0(1, 6),
      new jm.BigInteger_0(1, 7),
      new jm.BigInteger_0(1, 8),
      new jm.BigInteger_0(1, 9),
      jm.TEN,
    ]
  );
  jm.TWO_POWS = initUnidimensionalArray(
    cggl.Ljava_math_BigInteger_2_classLit,
    $intern_17,
    28,
    32,
    0,
    1
  );
  for (i = 0; i < jm.TWO_POWS.length; i++) {
    jm.TWO_POWS[i] = jm.valueOf_37(shl_0(1, i));
  }
};
jm.$$init_52 = function $$init_52(this$static) {};
jm.$compareTo_11 = function $compareTo_11(this$static, val) {
  if (this$static.sign > val.sign) {
    return 1;
  }
  if (this$static.sign < val.sign) {
    return -1;
  }
  if (this$static.numberLength > val.numberLength) {
    return this$static.sign;
  }
  if (this$static.numberLength < val.numberLength) {
    return -val.sign;
  }
  return (
    this$static.sign *
    jm.compareArrays(this$static.digits, val.digits, this$static.numberLength)
  );
};
jm.$cutOffLeadingZeroes = function $cutOffLeadingZeroes(this$static) {
  while (
    this$static.numberLength > 0 &&
    this$static.digits[--this$static.numberLength] == 0
  );
  this$static.digits[this$static.numberLength++] == 0 && (this$static.sign = 0);
};
jm.$divide = function $divide(this$static, divisor) {
  var cmp,
    divisorLen,
    divisorSign,
    resDigits,
    resLength,
    resSign,
    result,
    thisLen,
    thisSign,
    val;
  if (divisor.sign == 0) {
    throw toJs(new jl.ArithmeticException("BigInteger divide by zero"));
  }
  divisorSign = divisor.sign;
  if (divisor.numberLength == 1 && divisor.digits[0] == 1) {
    return divisor.sign > 0
      ? this$static
      : this$static.sign == 0
      ? this$static
      : new jm.BigInteger_1(
          -this$static.sign,
          this$static.numberLength,
          this$static.digits
        );
  }
  thisSign = this$static.sign;
  thisLen = this$static.numberLength;
  divisorLen = divisor.numberLength;
  if (thisLen + divisorLen == 2) {
    val = div(
      and_1(fromInt(this$static.digits[0]), $intern_68),
      and_1(fromInt(divisor.digits[0]), $intern_68)
    );
    thisSign != divisorSign && (val = neg_0(val));
    return jm.valueOf_37(val);
  }
  cmp =
    thisLen != divisorLen
      ? thisLen > divisorLen
        ? 1
        : -1
      : jm.compareArrays(this$static.digits, divisor.digits, thisLen);
  if (cmp == 0) {
    return thisSign == divisorSign ? jm.ONE_0 : jm.MINUS_ONE;
  }
  if (cmp == -1) {
    return jm.ZERO_0;
  }
  resLength = thisLen - divisorLen + 1;
  resDigits = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    resLength,
    15,
    1
  );
  resSign = thisSign == divisorSign ? 1 : -1;
  divisorLen == 1
    ? jm.divideArrayByInt(
        resDigits,
        this$static.digits,
        thisLen,
        divisor.digits[0]
      )
    : jm.divide(
        resDigits,
        resLength,
        this$static.digits,
        thisLen,
        divisor.digits,
        divisorLen
      );
  result = new jm.BigInteger_1(resSign, resLength, resDigits);
  jm.$cutOffLeadingZeroes(result);
  return result;
};
jm.$doubleValue_1 = function $doubleValue_1(this$static) {
  return jl.__parseAndValidateDouble(
    jm.toDecimalScaledString_0(this$static, 0)
  );
};
jm.$equals_13 = function $equals_13(this$static, x_0) {
  var x1;
  if (maskUndefined(this$static) === maskUndefined(x_0)) {
    return true;
  }
  if (instanceOf(x_0, 28)) {
    x1 = castTo(x_0, 28);
    return (
      this$static.sign == x1.sign &&
      this$static.numberLength == x1.numberLength &&
      jm.$equalsArrays(this$static, x1.digits)
    );
  }
  return false;
};
jm.$equalsArrays = function $equalsArrays(this$static, b) {
  var i;
  for (
    i = this$static.numberLength - 1;
    i >= 0 && this$static.digits[i] == b[i];
    i--
  );
  return i < 0;
};
jm.$getFirstNonzeroDigit = function $getFirstNonzeroDigit(this$static) {
  var i;
  if (this$static.firstNonzeroDigit == -2) {
    if (this$static.sign == 0) {
      i = -1;
    } else {
      for (i = 0; this$static.digits[i] == 0; i++);
    }
    this$static.firstNonzeroDigit = i;
  }
  return this$static.firstNonzeroDigit;
};
jm.$hashCode_13 = function $hashCode_13(this$static) {
  var i;
  if (this$static.hashCode_0 != 0) {
    return this$static.hashCode_0;
  }
  for (i = 0; i < this$static.digits.length; i++) {
    this$static.hashCode_0 =
      this$static.hashCode_0 * 33 + (this$static.digits[i] & -1);
  }
  this$static.hashCode_0 = this$static.hashCode_0 * this$static.sign;
  return this$static.hashCode_0;
};
jm.$longValue_1 = function $longValue_1(this$static) {
  var value_0;
  value_0 =
    this$static.numberLength > 1
      ? or_1(
          shl_0(fromInt(this$static.digits[1]), 32),
          and_1(fromInt(this$static.digits[0]), $intern_68)
        )
      : and_1(fromInt(this$static.digits[0]), $intern_68);
  return mul_0(fromInt(this$static.sign), value_0);
};
jm.$multiply_0 = function $multiply_0(this$static, val) {
  if (val.sign == 0) {
    return jm.ZERO_0;
  }
  if (this$static.sign == 0) {
    return jm.ZERO_0;
  }
  return jm.$clinit_Multiplication(), jm.karatsuba(this$static, val);
};
jm.$negate_0 = function $negate_0(this$static) {
  return this$static.sign == 0
    ? this$static
    : new jm.BigInteger_1(
        -this$static.sign,
        this$static.numberLength,
        this$static.digits
      );
};
jm.$pow = function $pow(this$static, exp_0) {
  var x_0;
  if (exp_0 < 0) {
    throw toJs(new jl.ArithmeticException("Negative exponent"));
  }
  if (exp_0 == 0) {
    return jm.ONE_0;
  } else if (
    exp_0 == 1 ||
    jm.$equals_13(this$static, jm.ONE_0) ||
    jm.$equals_13(this$static, jm.ZERO_0)
  ) {
    return this$static;
  }
  if (!jm.$testBit(this$static, 0)) {
    x_0 = 1;
    while (!jm.$testBit(this$static, x_0)) {
      ++x_0;
    }
    return jm.$multiply_0(
      jm.getPowerOfTwo(x_0 * exp_0),
      jm.$pow(jm.$shiftRight(this$static, x_0), exp_0)
    );
  }
  return jm.pow_0(this$static, exp_0);
};
jm.$putBytesNegativeToIntegers = function $putBytesNegativeToIntegers(
  this$static,
  byteValues
) {
  var bytesLen, highBytes, i, j;
  bytesLen = byteValues.length;
  highBytes = bytesLen & 3;
  this$static.numberLength = (bytesLen >> 2) + (highBytes == 0 ? 0 : 1);
  this$static.digits = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    this$static.numberLength,
    15,
    1
  );
  i = 0;
  this$static.digits[this$static.numberLength - 1] = -1;
  while (bytesLen > highBytes) {
    this$static.digits[i] =
      (byteValues[--bytesLen] & 255) |
      ((byteValues[--bytesLen] & 255) << 8) |
      ((byteValues[--bytesLen] & 255) << 16) |
      ((byteValues[--bytesLen] & 255) << 24);
    if (this$static.digits[i] != 0) {
      this$static.digits[i] = -this$static.digits[i];
      this$static.firstNonzeroDigit = i;
      ++i;
      while (bytesLen > highBytes) {
        this$static.digits[i] =
          (byteValues[--bytesLen] & 255) |
          ((byteValues[--bytesLen] & 255) << 8) |
          ((byteValues[--bytesLen] & 255) << 16) |
          ((byteValues[--bytesLen] & 255) << 24);
        this$static.digits[i] = ~this$static.digits[i];
        ++i;
      }
      break;
    }
    ++i;
  }
  if (highBytes != 0) {
    if (this$static.firstNonzeroDigit != -2) {
      for (j = 0; j < bytesLen; j++) {
        this$static.digits[i] =
          (this$static.digits[i] << 8) | (byteValues[j] & 255);
      }
      this$static.digits[i] = ~this$static.digits[i];
    } else {
      for (j = 0; j < bytesLen; j++) {
        this$static.digits[i] =
          (this$static.digits[i] << 8) | (byteValues[j] & 255);
      }
      this$static.digits[i] = -this$static.digits[i];
    }
  }
};
jm.$putBytesPositiveToIntegers = function $putBytesPositiveToIntegers(
  this$static,
  byteValues
) {
  var bytesLen, highBytes, i, j;
  bytesLen = byteValues.length;
  highBytes = bytesLen & 3;
  this$static.numberLength = (bytesLen >> 2) + (highBytes == 0 ? 0 : 1);
  this$static.digits = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    this$static.numberLength,
    15,
    1
  );
  i = 0;
  while (bytesLen > highBytes) {
    this$static.digits[i++] =
      (byteValues[--bytesLen] & 255) |
      ((byteValues[--bytesLen] & 255) << 8) |
      ((byteValues[--bytesLen] & 255) << 16) |
      ((byteValues[--bytesLen] & 255) << 24);
  }
  for (j = 0; j < bytesLen; j++) {
    this$static.digits[i] =
      (this$static.digits[i] << 8) | (byteValues[j] & 255);
  }
};
jm.$shiftLeft = function $shiftLeft(this$static, n) {
  if (n == 0 || this$static.sign == 0) {
    return this$static;
  }
  return n > 0 ? jm.shiftLeft(this$static, n) : jm.shiftRight(this$static, -n);
};
jm.$shiftRight = function $shiftRight(this$static, n) {
  if (n == 0 || this$static.sign == 0) {
    return this$static;
  }
  return n > 0 ? jm.shiftRight(this$static, n) : jm.shiftLeft(this$static, -n);
};
jm.$testBit = function $testBit(this$static, n) {
  var digit, firstNonZeroDigit, intCount;
  if (n == 0) {
    return (this$static.digits[0] & 1) != 0;
  }
  if (n < 0) {
    throw toJs(new jl.ArithmeticException("Negative bit address"));
  }
  intCount = n >> 5;
  if (intCount >= this$static.numberLength) {
    return this$static.sign < 0;
  }
  digit = this$static.digits[intCount];
  n = 1 << (n & 31);
  if (this$static.sign < 0) {
    firstNonZeroDigit = jm.$getFirstNonzeroDigit(this$static);
    if (intCount < firstNonZeroDigit) {
      return false;
    } else firstNonZeroDigit == intCount ? (digit = -digit) : (digit = ~digit);
  }
  return (digit & n) != 0;
};
jm.$toString_15 = function $toString_15(this$static) {
  return jm.toDecimalScaledString_0(this$static, 0);
};
jm.BigInteger = function BigInteger(sign, val) {
  jm.$$init_52(this);
  this.sign = sign;
  if (val < $intern_69) {
    this.numberLength = 1;
    this.digits = stampJavaTypeInfo(
      getClassLiteralForArray(cggl.I_classLit, 1),
      $intern_20,
      18,
      15,
      [jm.toUnsignedInt(val)]
    );
  } else {
    this.numberLength = 2;
    this.digits = stampJavaTypeInfo(
      getClassLiteralForArray(cggl.I_classLit, 1),
      $intern_20,
      18,
      15,
      [jm.toUnsignedInt(val % $intern_69), jm.toUnsignedInt(val / $intern_69)]
    );
  }
};
jm.BigInteger_0 = function BigInteger_0(sign, value_0) {
  jm.$clinit_BigInteger();
  jm.$$init_52(this);
  this.sign = sign;
  this.numberLength = 1;
  this.digits = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.I_classLit, 1),
    $intern_20,
    18,
    15,
    [value_0]
  );
};
jm.BigInteger_1 = function BigInteger_1(sign, numberLength, digits) {
  jm.$clinit_BigInteger();
  jm.$$init_52(this);
  this.sign = sign;
  this.numberLength = numberLength;
  this.digits = digits;
};
jm.BigInteger_2 = function BigInteger_2(sign, val) {
  jm.$$init_52(this);
  this.sign = sign;
  if (eq(and_1(val, -4294967296), 0)) {
    this.numberLength = 1;
    this.digits = stampJavaTypeInfo(
      getClassLiteralForArray(cggl.I_classLit, 1),
      $intern_20,
      18,
      15,
      [toInt_0(val)]
    );
  } else {
    this.numberLength = 2;
    this.digits = stampJavaTypeInfo(
      getClassLiteralForArray(cggl.I_classLit, 1),
      $intern_20,
      18,
      15,
      [toInt_0(val), toInt_0(shr_0(val, 32))]
    );
  }
};
jm.BigInteger_3 = function BigInteger_3(digits) {
  jm.$clinit_BigInteger();
  jm.$$init_52(this);
  if (digits.length == 0) {
    this.sign = 0;
    this.numberLength = 1;
    this.digits = stampJavaTypeInfo(
      getClassLiteralForArray(cggl.I_classLit, 1),
      $intern_20,
      18,
      15,
      [0]
    );
  } else {
    this.sign = 1;
    this.numberLength = digits.length;
    this.digits = digits;
    jm.$cutOffLeadingZeroes(this);
  }
};
jm.BigInteger_4 = function BigInteger_4(val) {
  jm.$clinit_BigInteger();
  jm.BigInteger_5.call(this, val);
};
jm.BigInteger_5 = function BigInteger_5(val) {
  jm.$$init_52(this);
  ji.checkCriticalNotNull(val);
  if (ji.uncheckedCast(val).length == 0) {
    throw toJs(new jl.NumberFormatException("Zero length BigInteger"));
  }
  jm.setFromString(this, val);
};
jm.BigInteger_6 = function BigInteger_6(val) {
  jm.$clinit_BigInteger();
  jm.$$init_52(this);
  if (val.length == 0) {
    throw toJs(new jl.NumberFormatException("Zero length BigInteger"));
  }
  if (val[0] < 0) {
    this.sign = -1;
    jm.$putBytesNegativeToIntegers(this, val);
  } else {
    this.sign = 1;
    jm.$putBytesPositiveToIntegers(this, val);
  }
  jm.$cutOffLeadingZeroes(this);
};
jm.getPowerOfTwo = function getPowerOfTwo(exp_0) {
  var bitN, intCount, resDigits;
  if (exp_0 < jm.TWO_POWS.length) {
    return jm.TWO_POWS[exp_0];
  }
  intCount = exp_0 >> 5;
  bitN = exp_0 & 31;
  resDigits = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    intCount + 1,
    15,
    1
  );
  resDigits[intCount] = 1 << bitN;
  return new jm.BigInteger_1(1, intCount + 1, resDigits);
};
jm.setFromString = function setFromString(bi, val) {
  var bigRadix,
    bigRadixDigit,
    bigRadixDigitsLength,
    charsPerInt,
    digitIndex,
    digits,
    endChar,
    newDigit,
    numberLength,
    sign,
    startChar,
    stringLength,
    substrEnd,
    substrStart,
    topChars;
  stringLength = ji.uncheckedCast(val).length;
  endChar = stringLength;
  ji.checkCriticalStringElementIndex(0, ji.uncheckedCast(val).length);
  if (ji.uncheckedCast(val).charCodeAt(0) == 45) {
    sign = -1;
    startChar = 1;
    --stringLength;
  } else {
    sign = 1;
    startChar = 0;
  }
  charsPerInt = (jm.$clinit_Conversion(), jm.digitFitInInt)[10];
  bigRadixDigitsLength = (stringLength / charsPerInt) | 0;
  topChars = stringLength % charsPerInt;
  topChars != 0 && ++bigRadixDigitsLength;
  digits = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    bigRadixDigitsLength,
    15,
    1
  );
  bigRadix = jm.bigRadices[8];
  digitIndex = 0;
  substrEnd = startChar + (topChars == 0 ? charsPerInt : topChars);
  for (
    substrStart = startChar;
    substrStart < endChar;
    substrStart = substrEnd, substrEnd = substrStart + charsPerInt
  ) {
    bigRadixDigit = jl.__parseAndValidateInt(
      ji.uncheckedCast(val).substr(substrStart, substrEnd - substrStart),
      $intern_22,
      $intern_1
    );
    newDigit =
      (jm.$clinit_Multiplication(),
      jm.multiplyByInt(digits, digits, digitIndex, bigRadix));
    newDigit += jm.inplaceAdd(digits, digitIndex, bigRadixDigit);
    digits[digitIndex++] = newDigit;
  }
  numberLength = digitIndex;
  bi.sign = sign;
  bi.numberLength = numberLength;
  bi.digits = digits;
  jm.$cutOffLeadingZeroes(bi);
};
jm.toUnsignedInt = function toUnsignedInt(val) {
  return val | 0;
};
jm.valueOf_36 = function valueOf_36(val) {
  jm.$clinit_BigInteger();
  if (val < 0) {
    if (val != -1) {
      return new jm.BigInteger(-1, -val);
    }
    return jm.MINUS_ONE;
  } else
    return val <= 10
      ? jm.SMALL_VALUES[round_int(val)]
      : new jm.BigInteger(1, val);
};
jm.valueOf_37 = function valueOf_37(val) {
  jm.$clinit_BigInteger();
  if (compare_1(val, 0) < 0) {
    if (compare_1(val, -1) != 0) {
      return new jm.BigInteger_2(-1, neg_0(val));
    }
    return jm.MINUS_ONE;
  } else
    return compare_1(val, 10) <= 0
      ? jm.SMALL_VALUES[toInt_0(val)]
      : new jm.BigInteger_2(1, val);
};
defineClass(
  28,
  114,
  { 3: 1, 33: 1, 114: 1, 28: 1 },
  jm.BigInteger,
  jm.BigInteger_0,
  jm.BigInteger_1,
  jm.BigInteger_2,
  jm.BigInteger_3,
  jm.BigInteger_4,
  jm.BigInteger_6
);
_.compareTo_0 = function compareTo_6(val) {
  return jm.$compareTo_11(this, castTo(val, 28));
};
_.doubleValue_0 = function doubleValue_2() {
  return jm.$doubleValue_1(this);
};
_.equals_0 = function equals_42(x_0) {
  return jm.$equals_13(this, x_0);
};
_.hashCode_1 = function hashCode_42() {
  return jm.$hashCode_13(this);
};
_.longValue_0 = function longValue_3() {
  return jm.$longValue_1(this);
};
_.toString_0 = function toString_53() {
  return jm.$toString_15(this);
};
_.firstNonzeroDigit = -2;
_.hashCode_0 = 0;
_.numberLength = 0;
_.sign = 0;
cggl.Ljava_math_BigInteger_2_classLit = createForClass(
  "java.math",
  "BigInteger",
  28
);
jm.bitLength_1 = function bitLength_1(val) {
  var bLength, highDigit, i;
  if (val.sign == 0) {
    return 0;
  }
  bLength = val.numberLength << 5;
  highDigit = val.digits[val.numberLength - 1];
  if (val.sign < 0) {
    i = jm.$getFirstNonzeroDigit(val);
    if (i == val.numberLength - 1) {
      --highDigit;
      highDigit = highDigit | 0;
    }
  }
  bLength -= numberOfLeadingZeros_0(highDigit);
  return bLength;
};
jm.shiftLeft = function shiftLeft(source, count) {
  var intCount, resDigits, resLength, result;
  intCount = count >> 5;
  count &= 31;
  resLength = source.numberLength + intCount + (count == 0 ? 0 : 1);
  resDigits = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    resLength,
    15,
    1
  );
  jm.shiftLeft_0(resDigits, source.digits, intCount, count);
  result = new jm.BigInteger_1(source.sign, resLength, resDigits);
  jm.$cutOffLeadingZeroes(result);
  return result;
};
jm.shiftLeft_0 = function shiftLeft_0(result, source, intCount, count) {
  var i, i0, rightShiftCount;
  if (count == 0) {
    jl.arraycopy(source, 0, result, intCount, result.length - intCount);
  } else {
    rightShiftCount = 32 - count;
    result[result.length - 1] = 0;
    for (i0 = result.length - 1; i0 > intCount; i0--) {
      result[i0] |= source[i0 - intCount - 1] >>> rightShiftCount;
      result[i0 - 1] = source[i0 - intCount - 1] << count;
    }
  }
  for (i = 0; i < intCount; i++) {
    result[i] = 0;
  }
};
jm.shiftLeftOneBit = function shiftLeftOneBit(result, source, srcLen) {
  var carry, i, val;
  carry = 0;
  for (i = 0; i < srcLen; i++) {
    val = source[i];
    result[i] = (val << 1) | carry;
    carry = val >>> 31;
  }
  carry != 0 && (result[srcLen] = carry);
};
jm.shiftRight = function shiftRight(source, count) {
  var i, intCount, resDigits, resLength, result;
  intCount = count >> 5;
  count &= 31;
  if (intCount >= source.numberLength) {
    return source.sign < 0
      ? (jm.$clinit_BigInteger(), jm.MINUS_ONE)
      : (jm.$clinit_BigInteger(), jm.ZERO_0);
  }
  resLength = source.numberLength - intCount;
  resDigits = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    resLength + 1,
    15,
    1
  );
  jm.shiftRight_0(resDigits, resLength, source.digits, intCount, count);
  if (source.sign < 0) {
    for (i = 0; i < intCount && source.digits[i] == 0; i++);
    if (i < intCount || (count > 0 && source.digits[i] << (32 - count) != 0)) {
      for (i = 0; i < resLength && resDigits[i] == -1; i++) {
        resDigits[i] = 0;
      }
      i == resLength && ++resLength;
      ++resDigits[i];
    }
  }
  result = new jm.BigInteger_1(source.sign, resLength, resDigits);
  jm.$cutOffLeadingZeroes(result);
  return result;
};
jm.shiftRight_0 = function shiftRight_0(
  result,
  resultLen,
  source,
  intCount,
  count
) {
  var allZero, i, leftShiftCount;
  allZero = true;
  for (i = 0; i < intCount; i++) {
    allZero = allZero & (source[i] == 0);
  }
  if (count == 0) {
    jl.arraycopy(source, intCount, result, 0, resultLen);
    i = resultLen;
  } else {
    leftShiftCount = 32 - count;
    allZero = allZero & (source[i] << leftShiftCount == 0);
    for (i = 0; i < resultLen - 1; i++) {
      result[i] =
        (source[i + intCount] >>> count) |
        (source[i + intCount + 1] << leftShiftCount);
    }
    result[i] = source[i + intCount] >>> count;
    ++i;
  }
  return allZero;
};
jm.$clinit_Conversion = function $clinit_Conversion() {
  jm.$clinit_Conversion = emptyMethod;
  jm.bigRadices = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.I_classLit, 1),
    $intern_20,
    18,
    15,
    [
      $intern_22,
      1162261467,
      $intern_70,
      1220703125,
      362797056,
      1977326743,
      $intern_70,
      387420489,
      $intern_29,
      214358881,
      429981696,
      815730721,
      1475789056,
      170859375,
      268435456,
      410338673,
      612220032,
      893871739,
      1280000000,
      1801088541,
      113379904,
      148035889,
      191102976,
      244140625,
      308915776,
      387420489,
      481890304,
      594823321,
      729000000,
      887503681,
      $intern_70,
      1291467969,
      1544804416,
      1838265625,
      60466176,
    ]
  );
  jm.digitFitInInt = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.I_classLit, 1),
    $intern_20,
    18,
    15,
    [
      -1, -1, 31, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7,
      6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5,
    ]
  );
};
jm.divideLongByBillion = function divideLongByBillion(a) {
  var aPos, quot, rem;
  if (compare_1(a, 0) >= 0) {
    quot = div(a, $intern_29);
    rem = mod(a, $intern_29);
  } else {
    aPos = shru_0(a, 1);
    quot = div(aPos, 500000000);
    rem = mod(aPos, 500000000);
    rem = add_1(shl_0(rem, 1), and_1(a, 1));
  }
  return or_1(shl_0(rem, 32), and_1(quot, $intern_68));
};
jm.toDecimalScaledString = function toDecimalScaledString(value_0, scale) {
  jm.$clinit_Conversion();
  var currentChar,
    endPoint,
    exponent,
    insertPoint,
    j,
    j0,
    negNumber,
    prev,
    resLengthInChars,
    result,
    result1,
    result10,
    startPoint,
    v;
  negNumber = compare_1(value_0, 0) < 0;
  negNumber && (value_0 = neg_0(value_0));
  if (compare_1(value_0, 0) == 0) {
    switch (scale) {
      case 0:
        return "0";
      case 1:
        return "0.0";
      case 2:
        return "0.00";
      case 3:
        return "0.000";
      case 4:
        return "0.0000";
      case 5:
        return "0.00000";
      case 6:
        return "0.000000";
      default:
        result10 = new jl.StringBuilder();
        scale < 0
          ? ((result10.string += "0E+"), result10)
          : ((result10.string += "0E"), result10);
        result10.string += scale == $intern_22 ? "2147483648" : "" + -scale;
        return result10.string;
    }
  }
  resLengthInChars = 18;
  result = initUnidimensionalArray(
    cggl.C_classLit,
    $intern_23,
    18,
    resLengthInChars + 1,
    15,
    1
  );
  currentChar = resLengthInChars;
  v = value_0;
  do {
    prev = v;
    v = div(v, 10);
    result[--currentChar] =
      toInt_0(add_1(48, sub_3(prev, mul_0(v, 10)))) & $intern_10;
  } while (compare_1(v, 0) != 0);
  exponent = sub_3(
    sub_3(
      sub_3(
        cggl.createSmallLongEmul0(resLengthInChars),
        cggl.createSmallLongEmul0(currentChar)
      ),
      cggl.createSmallLongEmul0(scale)
    ),
    1
  );
  if (scale == 0) {
    negNumber && (result[--currentChar] = 45);
    return jl.valueOf_33(result, currentChar, resLengthInChars - currentChar);
  }
  if (scale > 0 && compare_1(exponent, -6) >= 0) {
    if (compare_1(exponent, 0) >= 0) {
      insertPoint = currentChar + toInt_0(exponent);
      for (j0 = resLengthInChars - 1; j0 >= insertPoint; j0--) {
        result[j0 + 1] = result[j0];
      }
      result[++insertPoint] = 46;
      negNumber && (result[--currentChar] = 45);
      return jl.valueOf_33(
        result,
        currentChar,
        resLengthInChars - currentChar + 1
      );
    }
    for (
      j = 2;
      lt(cggl.createSmallLongEmul0(j), add_1(neg_0(exponent), 1));
      j++
    ) {
      result[--currentChar] = 48;
    }
    result[--currentChar] = 46;
    result[--currentChar] = 48;
    negNumber && (result[--currentChar] = 45);
    return jl.valueOf_33(result, currentChar, resLengthInChars - currentChar);
  }
  startPoint = currentChar + 1;
  endPoint = resLengthInChars;
  result1 = new jl.StringBuilder_0();
  negNumber && ((result1.string += "-"), result1);
  if (endPoint - startPoint >= 1) {
    jl.$append_4(result1, result[currentChar]);
    result1.string += ".";
    result1.string += jl.valueOf_33(
      result,
      currentChar + 1,
      resLengthInChars - currentChar - 1
    );
  } else {
    result1.string += jl.valueOf_33(
      result,
      currentChar,
      resLengthInChars - currentChar
    );
  }
  result1.string += "E";
  compare_1(exponent, 0) > 0 && ((result1.string += "+"), result1);
  result1.string += "" + toString_6(exponent);
  return result1.string;
};
jm.toDecimalScaledString_0 = function toDecimalScaledString_0(val, scale) {
  jm.$clinit_Conversion();
  var currentChar,
    delta,
    digits,
    endPoint,
    exponent,
    highDigit,
    i,
    i1,
    insertPoint,
    j,
    j0,
    negNumber,
    numberLength,
    prev,
    previous,
    res,
    resDigit,
    resLengthInChars,
    result,
    result1,
    result10,
    result11,
    sign,
    startPoint,
    temp,
    temp1,
    tempLen,
    v;
  sign = val.sign;
  numberLength = val.numberLength;
  digits = val.digits;
  if (sign == 0) {
    switch (scale) {
      case 0:
        return "0";
      case 1:
        return "0.0";
      case 2:
        return "0.00";
      case 3:
        return "0.000";
      case 4:
        return "0.0000";
      case 5:
        return "0.00000";
      case 6:
        return "0.000000";
      default:
        result10 = new jl.StringBuilder();
        scale < 0
          ? ((result10.string += "0E+"), result10)
          : ((result10.string += "0E"), result10);
        result10.string += -scale;
        return result10.string;
    }
  }
  resLengthInChars = numberLength * 10 + 1 + 7;
  result = initUnidimensionalArray(
    cggl.C_classLit,
    $intern_23,
    18,
    resLengthInChars + 1,
    15,
    1
  );
  currentChar = resLengthInChars;
  if (numberLength == 1) {
    highDigit = digits[0];
    if (highDigit < 0) {
      v = and_1(cggl.createSmallLongEmul0(highDigit), $intern_68);
      do {
        prev = v;
        v = div(v, 10);
        result[--currentChar] =
          (48 + toInt_0(sub_3(prev, mul_0(v, 10)))) & $intern_10;
      } while (compare_1(v, 0) != 0);
    } else {
      v = highDigit;
      do {
        prev = v;
        v = (v / 10) | 0;
        result[--currentChar] = (48 + (prev - v * 10)) & $intern_10;
      } while (v != 0);
    }
  } else {
    temp = initUnidimensionalArray(
      cggl.I_classLit,
      $intern_20,
      18,
      numberLength,
      15,
      1
    );
    tempLen = numberLength;
    jl.arraycopy(digits, 0, temp, 0, tempLen);
    BIG_LOOP: while (true) {
      result11 = 0;
      for (i1 = tempLen - 1; i1 >= 0; i1--) {
        temp1 = add_1(
          shl_0(result11, 32),
          and_1(cggl.createSmallLongEmul0(temp[i1]), $intern_68)
        );
        res = jm.divideLongByBillion(temp1);
        temp[i1] = toInt_0(res);
        result11 = fromInt(toInt_0(shr_0(res, 32)));
      }
      resDigit = toInt_0(result11);
      previous = currentChar;
      do {
        result[--currentChar] = (48 + (resDigit % 10)) & $intern_10;
      } while ((resDigit = (resDigit / 10) | 0) != 0 && currentChar != 0);
      delta = 9 - previous + currentChar;
      for (i = 0; i < delta && currentChar > 0; i++) {
        result[--currentChar] = 48;
      }
      j = tempLen - 1;
      for (; temp[j] == 0; j--) {
        if (j == 0) {
          break BIG_LOOP;
        }
      }
      tempLen = j + 1;
    }
    while (result[currentChar] == 48) {
      ++currentChar;
    }
  }
  negNumber = sign < 0;
  exponent = resLengthInChars - currentChar - scale - 1;
  if (scale == 0) {
    negNumber && (result[--currentChar] = 45);
    return jl.valueOf_33(result, currentChar, resLengthInChars - currentChar);
  }
  if (scale > 0 && exponent >= -6) {
    if (exponent >= 0) {
      insertPoint = currentChar + exponent;
      for (j0 = resLengthInChars - 1; j0 >= insertPoint; j0--) {
        result[j0 + 1] = result[j0];
      }
      result[++insertPoint] = 46;
      negNumber && (result[--currentChar] = 45);
      return jl.valueOf_33(
        result,
        currentChar,
        resLengthInChars - currentChar + 1
      );
    }
    for (j = 2; j < -exponent + 1; j++) {
      result[--currentChar] = 48;
    }
    result[--currentChar] = 46;
    result[--currentChar] = 48;
    negNumber && (result[--currentChar] = 45);
    return jl.valueOf_33(result, currentChar, resLengthInChars - currentChar);
  }
  startPoint = currentChar + 1;
  endPoint = resLengthInChars;
  result1 = new jl.StringBuilder_0();
  negNumber && ((result1.string += "-"), result1);
  if (endPoint - startPoint >= 1) {
    jl.$append_4(result1, result[currentChar]);
    result1.string += ".";
    result1.string += jl.valueOf_33(
      result,
      currentChar + 1,
      resLengthInChars - currentChar - 1
    );
  } else {
    result1.string += jl.valueOf_33(
      result,
      currentChar,
      resLengthInChars - currentChar
    );
  }
  result1.string += "E";
  exponent > 0 && ((result1.string += "+"), result1);
  result1.string += "" + exponent;
  return result1.string;
};
jm.divide = function divide(quot, quotLength, a, aLength, b, bLength) {
  var borrow,
    carry,
    divisorShift,
    firstDivisorDigit,
    guessDigit,
    i,
    j,
    k,
    leftHand,
    longR,
    normA,
    normB,
    normBLength,
    product,
    rOverflowed,
    rem,
    res,
    rightHand;
  normA = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    aLength + 1,
    15,
    1
  );
  normB = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    bLength + 1,
    15,
    1
  );
  normBLength = bLength;
  divisorShift = numberOfLeadingZeros_0(b[bLength - 1]);
  if (divisorShift != 0) {
    jm.shiftLeft_0(normB, b, 0, divisorShift);
    jm.shiftLeft_0(normA, a, 0, divisorShift);
  } else {
    jl.arraycopy(a, 0, normA, 0, aLength);
    jl.arraycopy(b, 0, normB, 0, bLength);
  }
  firstDivisorDigit = normB[normBLength - 1];
  i = quotLength - 1;
  j = aLength;
  while (i >= 0) {
    guessDigit = 0;
    if (normA[j] == firstDivisorDigit) {
      guessDigit = -1;
    } else {
      product = add_1(
        shl_0(and_1(cggl.createSmallLongEmul0(normA[j]), $intern_68), 32),
        and_1(cggl.createSmallLongEmul0(normA[j - 1]), $intern_68)
      );
      res = jm.divideLongByInt(product, firstDivisorDigit);
      guessDigit = toInt_0(res);
      rem = toInt_0(shr_0(res, 32));
      if (guessDigit != 0) {
        leftHand = 0;
        rightHand = 0;
        rOverflowed = false;
        ++guessDigit;
        do {
          --guessDigit;
          if (rOverflowed) {
            break;
          }
          leftHand = mul_0(
            and_1(cggl.createSmallLongEmul0(guessDigit), $intern_68),
            and_1(cggl.createSmallLongEmul0(normB[normBLength - 2]), $intern_68)
          );
          rightHand = add_1(
            shl_0(cggl.createSmallLongEmul0(rem), 32),
            and_1(cggl.createSmallLongEmul0(normA[j - 2]), $intern_68)
          );
          longR = add_1(
            and_1(cggl.createSmallLongEmul0(rem), $intern_68),
            and_1(cggl.createSmallLongEmul0(firstDivisorDigit), $intern_68)
          );
          numberOfLeadingZeros_0(toInt_0(shru_0(longR, 32))) < 32
            ? (rOverflowed = true)
            : (rem = toInt_0(longR));
        } while (gt(xor_0(leftHand, $intern_59), xor_0(rightHand, $intern_59)));
      }
    }
    if (guessDigit != 0) {
      borrow = jm.multiplyAndSubtract(
        normA,
        j - normBLength,
        normB,
        normBLength,
        guessDigit
      );
      if (borrow != 0) {
        --guessDigit;
        carry = 0;
        for (k = 0; k < normBLength; k++) {
          carry = add_1(
            carry,
            add_1(
              and_1(
                cggl.createSmallLongEmul0(normA[j - normBLength + k]),
                $intern_68
              ),
              and_1(cggl.createSmallLongEmul0(normB[k]), $intern_68)
            )
          );
          normA[j - normBLength + k] = toInt_0(carry);
          carry = shru_0(carry, 32);
        }
      }
    }
    quot[i] = guessDigit;
    --j;
    --i;
  }
  if (divisorShift != 0) {
    jm.shiftRight_0(normB, normBLength, normA, 0, divisorShift);
    return normB;
  }
  jl.arraycopy(normA, 0, normB, 0, bLength);
  return normA;
};
jm.divideArrayByInt = function divideArrayByInt(
  dest,
  src_0,
  srcLength,
  divisor
) {
  var aPos, bLong, bPos, i, quot, rem, temp;
  rem = 0;
  bLong = and_1(cggl.createSmallLongEmul0(divisor), $intern_68);
  for (i = srcLength - 1; i >= 0; i--) {
    temp = or_1(
      shl_0(rem, 32),
      and_1(cggl.createSmallLongEmul0(src_0[i]), $intern_68)
    );
    if (compare_1(temp, 0) >= 0) {
      quot = div(temp, bLong);
      rem = mod(temp, bLong);
    } else {
      aPos = shru_0(temp, 1);
      bPos = cggl.createSmallLongEmul0(divisor >>> 1);
      quot = div(aPos, bPos);
      rem = mod(aPos, bPos);
      rem = add_1(shl_0(rem, 1), and_1(temp, 1));
      if ((divisor & 1) != 0) {
        if (compare_1(quot, rem) <= 0) {
          rem = sub_3(rem, quot);
        } else {
          if (lte(sub_3(quot, rem), bLong)) {
            rem = add_1(rem, sub_3(bLong, quot));
            quot = sub_3(quot, 1);
          } else {
            rem = add_1(rem, sub_3(shl_0(bLong, 1), quot));
            quot = sub_3(quot, 2);
          }
        }
      }
    }
    dest[i] = toInt_0(and_1(quot, $intern_68));
  }
  return toInt_0(rem);
};
jm.divideLongByInt = function divideLongByInt(a, b) {
  var aPos, bLong, bPos, quot, rem;
  bLong = and_1(cggl.createSmallLongEmul0(b), $intern_68);
  if (compare_1(a, 0) >= 0) {
    quot = div(a, bLong);
    rem = mod(a, bLong);
  } else {
    aPos = shru_0(a, 1);
    bPos = cggl.createSmallLongEmul0(b >>> 1);
    quot = div(aPos, bPos);
    rem = mod(aPos, bPos);
    rem = add_1(shl_0(rem, 1), and_1(a, 1));
    if ((b & 1) != 0) {
      if (compare_1(quot, rem) <= 0) {
        rem = sub_3(rem, quot);
      } else {
        if (lte(sub_3(quot, rem), bLong)) {
          rem = add_1(rem, sub_3(bLong, quot));
          quot = sub_3(quot, 1);
        } else {
          rem = add_1(rem, sub_3(shl_0(bLong, 1), quot));
          quot = sub_3(quot, 2);
        }
      }
    }
  }
  return or_1(shl_0(rem, 32), and_1(quot, $intern_68));
};
jm.multiplyAndSubtract = function multiplyAndSubtract(a, start_0, b, bLen, c) {
  var carry0, carry1, i;
  carry0 = 0;
  carry1 = 0;
  for (i = 0; i < bLen; i++) {
    carry0 =
      (jm.$clinit_Multiplication(),
      add_1(
        mul_0(
          and_1(cggl.createSmallLongEmul0(b[i]), $intern_68),
          and_1(cggl.createSmallLongEmul0(c), $intern_68)
        ),
        and_1(fromInt(toInt_0(carry0)), $intern_68)
      ));
    carry1 = add_1(
      sub_3(
        and_1(cggl.createSmallLongEmul0(a[start_0 + i]), $intern_68),
        and_1(carry0, $intern_68)
      ),
      carry1
    );
    a[start_0 + i] = toInt_0(carry1);
    carry1 = shr_0(carry1, 32);
    carry0 = shru_0(carry0, 32);
  }
  carry1 = add_1(
    sub_3(
      and_1(cggl.createSmallLongEmul0(a[start_0 + bLen]), $intern_68),
      carry0
    ),
    carry1
  );
  a[start_0 + bLen] = toInt_0(carry1);
  return toInt_0(shr_0(carry1, 32));
};
jm.add_4 = function add_4(op1, op2) {
  var a,
    b,
    cmp,
    op1Len,
    op1Sign,
    op2Len,
    op2Sign,
    res,
    res0,
    resDigits,
    resSign,
    valueHi,
    valueLo;
  op1Sign = op1.sign;
  op2Sign = op2.sign;
  if (op1Sign == 0) {
    return op2;
  }
  if (op2Sign == 0) {
    return op1;
  }
  op1Len = op1.numberLength;
  op2Len = op2.numberLength;
  if (op1Len + op2Len == 2) {
    a = and_1(fromInt(op1.digits[0]), $intern_68);
    b = and_1(fromInt(op2.digits[0]), $intern_68);
    if (op1Sign == op2Sign) {
      res0 = add_1(a, b);
      valueLo = toInt_0(res0);
      valueHi = toInt_0(shru_0(res0, 32));
      return valueHi == 0
        ? new jm.BigInteger_0(op1Sign, valueLo)
        : new jm.BigInteger_1(
            op1Sign,
            2,
            stampJavaTypeInfo(
              getClassLiteralForArray(cggl.I_classLit, 1),
              $intern_20,
              18,
              15,
              [valueLo, valueHi]
            )
          );
    }
    return jm.valueOf_37(op1Sign < 0 ? sub_3(b, a) : sub_3(a, b));
  } else if (op1Sign == op2Sign) {
    resSign = op1Sign;
    resDigits =
      op1Len >= op2Len
        ? jm.add_5(op1.digits, op1Len, op2.digits, op2Len)
        : jm.add_5(op2.digits, op2Len, op1.digits, op1Len);
  } else {
    cmp =
      op1Len != op2Len
        ? op1Len > op2Len
          ? 1
          : -1
        : jm.compareArrays(op1.digits, op2.digits, op1Len);
    if (cmp == 0) {
      return jm.$clinit_BigInteger(), jm.ZERO_0;
    }
    if (cmp == 1) {
      resSign = op1Sign;
      resDigits = jm.subtract_0(op1.digits, op1Len, op2.digits, op2Len);
    } else {
      resSign = op2Sign;
      resDigits = jm.subtract_0(op2.digits, op2Len, op1.digits, op1Len);
    }
  }
  res = new jm.BigInteger_1(resSign, resDigits.length, resDigits);
  jm.$cutOffLeadingZeroes(res);
  return res;
};
jm.add_5 = function add_5(a, aSize, b, bSize) {
  var res;
  res = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    aSize + 1,
    15,
    1
  );
  jm.add_6(res, a, aSize, b, bSize);
  return res;
};
jm.add_6 = function add_6(res, a, aSize, b, bSize) {
  var carry, i;
  carry = add_1(
    and_1(cggl.createSmallLongEmul0(a[0]), $intern_68),
    and_1(cggl.createSmallLongEmul0(b[0]), $intern_68)
  );
  res[0] = toInt_0(carry);
  carry = shr_0(carry, 32);
  if (aSize >= bSize) {
    for (i = 1; i < bSize; i++) {
      carry = add_1(
        carry,
        add_1(
          and_1(cggl.createSmallLongEmul0(a[i]), $intern_68),
          and_1(cggl.createSmallLongEmul0(b[i]), $intern_68)
        )
      );
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
    for (; i < aSize; i++) {
      carry = add_1(carry, and_1(cggl.createSmallLongEmul0(a[i]), $intern_68));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
  } else {
    for (i = 1; i < aSize; i++) {
      carry = add_1(
        carry,
        add_1(
          and_1(cggl.createSmallLongEmul0(a[i]), $intern_68),
          and_1(cggl.createSmallLongEmul0(b[i]), $intern_68)
        )
      );
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
    for (; i < bSize; i++) {
      carry = add_1(carry, and_1(cggl.createSmallLongEmul0(b[i]), $intern_68));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
  }
  compare_1(carry, 0) != 0 && (res[i] = toInt_0(carry));
};
jm.compareArrays = function compareArrays(a, b, size_0) {
  var i;
  for (i = size_0 - 1; i >= 0 && a[i] == b[i]; i--);
  return i < 0
    ? 0
    : lt(
        and_1(cggl.createSmallLongEmul0(a[i]), $intern_68),
        and_1(cggl.createSmallLongEmul0(b[i]), $intern_68)
      )
    ? -1
    : 1;
};
jm.inplaceAdd = function inplaceAdd(a, aSize, addend) {
  var carry, i;
  carry = and_1(cggl.createSmallLongEmul0(addend), $intern_68);
  for (i = 0; compare_1(carry, 0) != 0 && i < aSize; i++) {
    carry = add_1(carry, and_1(cggl.createSmallLongEmul0(a[i]), $intern_68));
    a[i] = toInt_0(carry);
    carry = shr_0(carry, 32);
  }
  return toInt_0(carry);
};
jm.subtract = function subtract(op1, op2) {
  var a, b, cmp, op1Len, op1Sign, op2Len, op2Sign, res, resDigits, resSign;
  op1Sign = op1.sign;
  op2Sign = op2.sign;
  if (op2Sign == 0) {
    return op1;
  }
  if (op1Sign == 0) {
    return op2.sign == 0
      ? op2
      : new jm.BigInteger_1(-op2.sign, op2.numberLength, op2.digits);
  }
  op1Len = op1.numberLength;
  op2Len = op2.numberLength;
  if (op1Len + op2Len == 2) {
    a = and_1(fromInt(op1.digits[0]), $intern_68);
    b = and_1(fromInt(op2.digits[0]), $intern_68);
    op1Sign < 0 && (a = neg_0(a));
    op2Sign < 0 && (b = neg_0(b));
    return jm.valueOf_37(sub_3(a, b));
  }
  cmp =
    op1Len != op2Len
      ? op1Len > op2Len
        ? 1
        : -1
      : jm.compareArrays(op1.digits, op2.digits, op1Len);
  if (cmp == -1) {
    resSign = -op2Sign;
    resDigits =
      op1Sign == op2Sign
        ? jm.subtract_0(op2.digits, op2Len, op1.digits, op1Len)
        : jm.add_5(op2.digits, op2Len, op1.digits, op1Len);
  } else {
    resSign = op1Sign;
    if (op1Sign == op2Sign) {
      if (cmp == 0) {
        return jm.$clinit_BigInteger(), jm.ZERO_0;
      }
      resDigits = jm.subtract_0(op1.digits, op1Len, op2.digits, op2Len);
    } else {
      resDigits = jm.add_5(op1.digits, op1Len, op2.digits, op2Len);
    }
  }
  res = new jm.BigInteger_1(resSign, resDigits.length, resDigits);
  jm.$cutOffLeadingZeroes(res);
  return res;
};
jm.subtract_0 = function subtract_0(a, aSize, b, bSize) {
  var res;
  res = initUnidimensionalArray(cggl.I_classLit, $intern_20, 18, aSize, 15, 1);
  jm.subtract_1(res, a, aSize, b, bSize);
  return res;
};
jm.subtract_1 = function subtract_1(res, a, aSize, b, bSize) {
  var borrow, i;
  borrow = 0;
  for (i = 0; i < bSize; i++) {
    borrow = add_1(
      borrow,
      sub_3(
        and_1(cggl.createSmallLongEmul0(a[i]), $intern_68),
        and_1(cggl.createSmallLongEmul0(b[i]), $intern_68)
      )
    );
    res[i] = toInt_0(borrow);
    borrow = shr_0(borrow, 32);
  }
  for (; i < aSize; i++) {
    borrow = add_1(borrow, and_1(cggl.createSmallLongEmul0(a[i]), $intern_68));
    res[i] = toInt_0(borrow);
    borrow = shr_0(borrow, 32);
  }
};
jm.$clinit_Multiplication = function $clinit_Multiplication() {
  jm.$clinit_Multiplication = emptyMethod;
  var fivePow, i;
  jm.bigFivePows = initUnidimensionalArray(
    cggl.Ljava_math_BigInteger_2_classLit,
    $intern_17,
    28,
    32,
    0,
    1
  );
  jm.bigTenPows = initUnidimensionalArray(
    cggl.Ljava_math_BigInteger_2_classLit,
    $intern_17,
    28,
    32,
    0,
    1
  );
  fivePow = 1;
  for (i = 0; i <= 18; i++) {
    jm.bigFivePows[i] = jm.valueOf_37(fivePow);
    jm.bigTenPows[i] = jm.valueOf_37(shl_0(fivePow, i));
    fivePow = mul_0(fivePow, 5);
  }
  for (; i < jm.bigTenPows.length; i++) {
    jm.bigFivePows[i] = jm.$multiply_0(
      jm.bigFivePows[i - 1],
      jm.bigFivePows[1]
    );
    jm.bigTenPows[i] = jm.$multiply_0(
      jm.bigTenPows[i - 1],
      (jm.$clinit_BigInteger(), jm.TEN)
    );
  }
};
jm.karatsuba = function karatsuba(op1, op2) {
  jm.$clinit_Multiplication();
  var lower, lowerOp1, lowerOp2, middle, ndiv2, temp, upper, upperOp1, upperOp2;
  if (op2.numberLength > op1.numberLength) {
    temp = op1;
    op1 = op2;
    op2 = temp;
  }
  if (op2.numberLength < 63) {
    return jm.multiplyPAP(op1, op2);
  }
  ndiv2 = (op1.numberLength & -2) << 4;
  upperOp1 = jm.$shiftRight(op1, ndiv2);
  upperOp2 = jm.$shiftRight(op2, ndiv2);
  lowerOp1 = jm.subtract(op1, jm.$shiftLeft(upperOp1, ndiv2));
  lowerOp2 = jm.subtract(op2, jm.$shiftLeft(upperOp2, ndiv2));
  upper = jm.karatsuba(upperOp1, upperOp2);
  lower = jm.karatsuba(lowerOp1, lowerOp2);
  middle = jm.karatsuba(
    jm.subtract(upperOp1, lowerOp1),
    jm.subtract(lowerOp2, upperOp2)
  );
  middle = jm.add_4(jm.add_4(middle, upper), lower);
  middle = jm.$shiftLeft(middle, ndiv2);
  upper = jm.$shiftLeft(upper, ndiv2 << 1);
  return jm.add_4(jm.add_4(upper, middle), lower);
};
jm.multArraysPAP = function multArraysPAP(
  aDigits,
  aLen,
  bDigits,
  bLen,
  resDigits
) {
  if (aLen == 0 || bLen == 0) {
    return;
  }
  aLen == 1
    ? (resDigits[bLen] = jm.multiplyByInt(resDigits, bDigits, bLen, aDigits[0]))
    : bLen == 1
    ? (resDigits[aLen] = jm.multiplyByInt(resDigits, aDigits, aLen, bDigits[0]))
    : jm.multPAP(aDigits, bDigits, resDigits, aLen, bLen);
};
jm.multPAP = function multPAP(a, b, t, aLen, bLen) {
  var aI, carry, i, j;
  if (maskUndefined(a) === maskUndefined(b) && aLen == bLen) {
    jm.square(a, aLen, t);
    return;
  }
  for (i = 0; i < aLen; i++) {
    carry = 0;
    aI = a[i];
    for (j = 0; j < bLen; j++) {
      carry = add_1(
        add_1(
          mul_0(
            and_1(cggl.createSmallLongEmul0(aI), $intern_68),
            and_1(cggl.createSmallLongEmul0(b[j]), $intern_68)
          ),
          and_1(cggl.createSmallLongEmul0(t[i + j]), $intern_68)
        ),
        and_1(fromInt(toInt_0(carry)), $intern_68)
      );
      t[i + j] = toInt_0(carry);
      carry = shru_0(carry, 32);
    }
    t[i + bLen] = toInt_0(carry);
  }
};
jm.multiplyByInt = function multiplyByInt(res, a, aSize, factor) {
  jm.$clinit_Multiplication();
  var carry, i;
  carry = 0;
  for (i = 0; i < aSize; i++) {
    carry = add_1(
      mul_0(
        and_1(cggl.createSmallLongEmul0(a[i]), $intern_68),
        and_1(cggl.createSmallLongEmul0(factor), $intern_68)
      ),
      and_1(fromInt(toInt_0(carry)), $intern_68)
    );
    res[i] = toInt_0(carry);
    carry = shru_0(carry, 32);
  }
  return toInt_0(carry);
};
jm.multiplyPAP = function multiplyPAP(a, b) {
  var aDigits,
    aLen,
    bDigits,
    bLen,
    resDigits,
    resLength,
    resSign,
    result,
    val,
    valueHi,
    valueLo;
  aLen = a.numberLength;
  bLen = b.numberLength;
  resLength = aLen + bLen;
  resSign = a.sign != b.sign ? -1 : 1;
  if (resLength == 2) {
    val = mul_0(
      and_1(fromInt(a.digits[0]), $intern_68),
      and_1(fromInt(b.digits[0]), $intern_68)
    );
    valueLo = toInt_0(val);
    valueHi = toInt_0(shru_0(val, 32));
    return valueHi == 0
      ? new jm.BigInteger_0(resSign, valueLo)
      : new jm.BigInteger_1(
          resSign,
          2,
          stampJavaTypeInfo(
            getClassLiteralForArray(cggl.I_classLit, 1),
            $intern_20,
            18,
            15,
            [valueLo, valueHi]
          )
        );
  }
  aDigits = a.digits;
  bDigits = b.digits;
  resDigits = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    resLength,
    15,
    1
  );
  jm.multArraysPAP(aDigits, aLen, bDigits, bLen, resDigits);
  result = new jm.BigInteger_1(resSign, resLength, resDigits);
  jm.$cutOffLeadingZeroes(result);
  return result;
};
jm.pow_0 = function pow_0(base, exponent) {
  jm.$clinit_Multiplication();
  var acc, res;
  res = (jm.$clinit_BigInteger(), jm.ONE_0);
  acc = base;
  for (; exponent > 1; exponent >>= 1) {
    (exponent & 1) != 0 && (res = jm.$multiply_0(res, acc));
    acc.numberLength == 1
      ? (acc = jm.$multiply_0(acc, acc))
      : (acc = new jm.BigInteger_3(
          jm.square(
            acc.digits,
            acc.numberLength,
            initUnidimensionalArray(
              cggl.I_classLit,
              $intern_20,
              18,
              acc.numberLength << 1,
              15,
              1
            )
          )
        ));
  }
  res = jm.$multiply_0(res, acc);
  return res;
};
jm.powerOf10 = function powerOf10(exp_0) {
  jm.$clinit_Multiplication();
  var intExp, longExp, powerOfFive, res;
  intExp = round_int(exp_0);
  if (exp_0 < jm.bigTenPows.length) {
    return jm.bigTenPows[intExp];
  } else if (exp_0 <= 50) {
    return jm.$pow((jm.$clinit_BigInteger(), jm.TEN), intExp);
  } else if (exp_0 <= $intern_21) {
    return jm.$shiftLeft(jm.$pow(jm.bigFivePows[1], intExp), intExp);
  }
  if (exp_0 > $intern_37) {
    throw toJs(new jl.ArithmeticException("power of ten too big"));
  }
  if (exp_0 <= $intern_1) {
    return jm.$shiftLeft(jm.$pow(jm.bigFivePows[1], intExp), intExp);
  }
  powerOfFive = jm.$pow(jm.bigFivePows[1], $intern_1);
  res = powerOfFive;
  longExp = fromDouble_0(exp_0 - $intern_1);
  intExp = round_int(exp_0 % $intern_1);
  while (compare_1(longExp, $intern_1) > 0) {
    res = jm.$multiply_0(res, powerOfFive);
    longExp = sub_3(longExp, $intern_1);
  }
  res = jm.$multiply_0(res, jm.$pow(jm.bigFivePows[1], intExp));
  res = jm.$shiftLeft(res, $intern_1);
  longExp = fromDouble_0(exp_0 - $intern_1);
  while (compare_1(longExp, $intern_1) > 0) {
    res = jm.$shiftLeft(res, $intern_1);
    longExp = sub_3(longExp, $intern_1);
  }
  res = jm.$shiftLeft(res, intExp);
  return res;
};
jm.square = function square(a, aLen, res) {
  var carry, i, i0, index_0, j;
  for (i0 = 0; i0 < aLen; i0++) {
    carry = 0;
    for (j = i0 + 1; j < aLen; j++) {
      carry = add_1(
        add_1(
          mul_0(
            and_1(cggl.createSmallLongEmul0(a[i0]), $intern_68),
            and_1(cggl.createSmallLongEmul0(a[j]), $intern_68)
          ),
          and_1(cggl.createSmallLongEmul0(res[i0 + j]), $intern_68)
        ),
        and_1(fromInt(toInt_0(carry)), $intern_68)
      );
      res[i0 + j] = toInt_0(carry);
      carry = shru_0(carry, 32);
    }
    res[i0 + aLen] = toInt_0(carry);
  }
  jm.shiftLeftOneBit(res, res, aLen << 1);
  carry = 0;
  for (i = 0, index_0 = 0; i < aLen; ++i, index_0++) {
    carry = add_1(
      add_1(
        mul_0(
          and_1(cggl.createSmallLongEmul0(a[i]), $intern_68),
          and_1(cggl.createSmallLongEmul0(a[i]), $intern_68)
        ),
        and_1(cggl.createSmallLongEmul0(res[index_0]), $intern_68)
      ),
      and_1(fromInt(toInt_0(carry)), $intern_68)
    );
    res[index_0] = toInt_0(carry);
    carry = shru_0(carry, 32);
    ++index_0;
    carry = add_1(
      carry,
      and_1(cggl.createSmallLongEmul0(res[index_0]), $intern_68)
    );
    res[index_0] = toInt_0(carry);
    carry = shru_0(carry, 32);
  }
  return res;
};
jn.$$init_53 = function $$init_53(this$static) {};
jn.$clear = function $clear(this$static) {
  this$static.position_0 = 0;
  this$static.mark_0 = -1;
  this$static.limit = this$static.capacity_0;
  return this$static;
};
jn.$flip = function $flip(this$static) {
  this$static.limit = this$static.position_0;
  this$static.position_0 = 0;
  this$static.mark_0 = -1;
  return this$static;
};
jn.$limit = function $limit(this$static, newLimit) {
  if (newLimit < 0 || newLimit > this$static.capacity_0) {
    throw toJs(new jl.IllegalArgumentException());
  }
  this$static.limit = newLimit;
  this$static.position_0 > newLimit && (this$static.position_0 = newLimit);
  this$static.mark_0 != -1 &&
    this$static.mark_0 > newLimit &&
    (this$static.mark_0 = -1);
  return this$static;
};
jn.$position = function $position(this$static, newPosition) {
  if (newPosition < 0 || newPosition > this$static.limit) {
    throw toJs(new jl.IllegalArgumentException());
  }
  this$static.position_0 = newPosition;
  this$static.mark_0 != -1 &&
    this$static.mark_0 > this$static.position_0 &&
    (this$static.mark_0 = -1);
  return this$static;
};
jn.Buffer = function Buffer(capacity) {
  jn.$$init_53(this);
  if (capacity < 0) {
    throw toJs(new jl.IllegalArgumentException());
  }
  this.capacity_0 = this.limit = capacity;
};
defineClass(120, 1, { 120: 1 });
_.capacity_0 = 0;
_.limit = 0;
_.mark_0 = -1;
_.position_0 = 0;
cggl.Ljava_nio_Buffer_2_classLit = createForClass("java.nio", "Buffer", 120);
jn.BufferOverflowException = function BufferOverflowException() {
  jl.RuntimeException.call(this);
};
defineClass(875, 26, $intern_6, jn.BufferOverflowException);
cggl.Ljava_nio_BufferOverflowException_2_classLit = createForClass(
  "java.nio",
  "BufferOverflowException",
  875
);
jn.BufferUnderflowException = function BufferUnderflowException() {
  jl.RuntimeException.call(this);
};
defineClass(833, 26, $intern_6, jn.BufferUnderflowException);
cggl.Ljava_nio_BufferUnderflowException_2_classLit = createForClass(
  "java.nio",
  "BufferUnderflowException",
  833
);
jn.$$init_54 = function $$init_54(this$static) {
  this$static.order = (jn.$clinit_ByteOrder(), jn.BIG_ENDIAN);
};
jn.$asIntBuffer = function $asIntBuffer(this$static) {
  if (
    this$static.order !=
    (jn.$clinit_ByteOrder(), jn.$clinit_ByteOrder(), jn.NATIVE_ORDER)
  ) {
    throw toJs(new jl.RuntimeException_1("Native order supported only."));
  }
  return new jn.IntBuffer(jn.$slice(this$static));
};
jn.$asShortBuffer = function $asShortBuffer(this$static) {
  if (
    this$static.order !=
    (jn.$clinit_ByteOrder(), jn.$clinit_ByteOrder(), jn.NATIVE_ORDER)
  ) {
    throw toJs(new jl.RuntimeException_1("Native order supported only."));
  }
  return new jn.ShortBuffer(jn.$slice(this$static));
};
jn.$compareTo_12 = function $compareTo_12(this$static, otherBuffer) {
  var compareRemaining, otherByte, otherPos, thisByte, thisPos;
  compareRemaining =
    this$static.limit - this$static.position_0 <
    otherBuffer.limit - otherBuffer.position_0
      ? this$static.limit - this$static.position_0
      : otherBuffer.limit - otherBuffer.position_0;
  thisPos = this$static.position_0;
  otherPos = otherBuffer.position_0;
  while (compareRemaining > 0) {
    thisByte = round_byte(
      jl.$doubleValue(castToDouble(jb.$getAt(this$static.byteArray, thisPos)))
    );
    otherByte = round_byte(
      jl.$doubleValue(castToDouble(jb.$getAt(otherBuffer.byteArray, otherPos)))
    );
    if (thisByte != otherByte) {
      return thisByte < otherByte ? -1 : 1;
    }
    ++thisPos;
    ++otherPos;
    --compareRemaining;
  }
  return (
    this$static.limit -
    this$static.position_0 -
    (otherBuffer.limit - otherBuffer.position_0)
  );
};
jn.$get_12 = function $get_12(this$static, index_0) {
  return round_byte(
    jl.$doubleValue(castToDouble(jb.$getAt(this$static.byteArray, index_0)))
  );
};
jn.$get_13 = function $get_13(this$static, dest, len) {
  var i, length_0;
  length_0 = dest.length;
  if (
    len < 0 ||
    gt(cggl.createSmallLongEmul0(len), cggl.createSmallLongEmul0(length_0))
  ) {
    throw toJs(new jl.IndexOutOfBoundsException());
  }
  if (len > this$static.limit - this$static.position_0) {
    throw toJs(new jn.BufferUnderflowException());
  }
  for (i = 0; i < len; i++) {
    dest[i] = jn.$get_12(this$static, this$static.position_0 + i);
  }
  this$static.position_0 += len;
  return this$static;
};
jn.$getClass_573 = function $getClass_573() {
  return cggl.Ljava_nio_ByteBuffer_2_classLit;
};
jn.$getInt = function $getInt(this$static) {
  var newPosition, result;
  newPosition = this$static.position_0 + 4;
  result = jn.$getInt_0(this$static, this$static.position_0);
  this$static.position_0 = newPosition;
  return result;
};
jn.$getInt_0 = function $getInt_0(this$static, index_0) {
  var bytes, i;
  bytes = 0;
  if (this$static.order == (jn.$clinit_ByteOrder(), jn.BIG_ENDIAN)) {
    for (i = 0; i < 4; i++) {
      bytes = bytes << 8;
      bytes =
        bytes |
        (round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(this$static.byteArray, index_0 + i))
          )
        ) &
          255);
    }
  } else {
    for (i = 3; i >= 0; i--) {
      bytes = bytes << 8;
      bytes =
        bytes |
        (round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(this$static.byteArray, index_0 + i))
          )
        ) &
          255);
    }
  }
  return bytes;
};
jn.$getLong = function $getLong(this$static) {
  var newPosition, result;
  newPosition = this$static.position_0 + 8;
  result = jn.$getLong_0(this$static, this$static.position_0);
  this$static.position_0 = newPosition;
  return result;
};
jn.$getLong_0 = function $getLong_0(this$static, baseOffset) {
  var bytes, i;
  bytes = 0;
  if (this$static.order == (jn.$clinit_ByteOrder(), jn.BIG_ENDIAN)) {
    for (i = 0; i < 8; i++) {
      bytes = shl_0(bytes, 8);
      bytes = or_1(
        bytes,
        fromInt(
          round_byte(
            jl.$doubleValue(
              castToDouble(jb.$getAt(this$static.byteArray, baseOffset + i))
            )
          ) & 255
        )
      );
    }
  } else {
    for (i = 7; i >= 0; i--) {
      bytes = shl_0(bytes, 8);
      bytes = or_1(
        bytes,
        fromInt(
          round_byte(
            jl.$doubleValue(
              castToDouble(jb.$getAt(this$static.byteArray, baseOffset + i))
            )
          ) & 255
        )
      );
    }
  }
  return bytes;
};
jn.$getShort = function $getShort(this$static) {
  var newPosition, result;
  newPosition = this$static.position_0 + 2;
  result = jn.$getShort_0(this$static, this$static.position_0);
  this$static.position_0 = newPosition;
  return result;
};
jn.$getShort_0 = function $getShort_0(this$static, baseOffset) {
  var bytes;
  bytes = 0;
  if (this$static.order == (jn.$clinit_ByteOrder(), jn.BIG_ENDIAN)) {
    bytes =
      ((round_byte(
        jl.$doubleValue(
          castToDouble(jb.$getAt(this$static.byteArray, baseOffset))
        )
      ) <<
        8) <<
        16) >>
      16;
    bytes =
      ((bytes |
        (round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(this$static.byteArray, baseOffset + 1))
          )
        ) &
          255)) <<
        16) >>
      16;
  } else {
    bytes =
      ((round_byte(
        jl.$doubleValue(
          castToDouble(jb.$getAt(this$static.byteArray, baseOffset + 1))
        )
      ) <<
        8) <<
        16) >>
      16;
    bytes =
      ((bytes |
        (round_byte(
          jl.$doubleValue(
            castToDouble(jb.$getAt(this$static.byteArray, baseOffset))
          )
        ) &
          255)) <<
        16) >>
      16;
  }
  return bytes;
};
jn.$order = function $order(this$static, byteOrder) {
  this$static.order = byteOrder;
  return this$static;
};
jn.$put = function $put(this$static, b) {
  jb.$setAt(this$static.byteArray, this$static.position_0++, b);
  return this$static;
};
jn.$put_0 = function $put_0(this$static, src_0, off, len) {
  var i, length_0;
  length_0 = src_0.length;
  if (off < 0 || len < 0 || off + len > length_0) {
    throw toJs(new jl.IndexOutOfBoundsException());
  }
  if (len > this$static.limit - this$static.position_0) {
    throw toJs(new jn.BufferOverflowException());
  }
  for (i = 0; i < len; i++) {
    jb.$setAt(
      this$static.byteArray,
      i + this$static.position_0,
      src_0[off + i]
    );
  }
  this$static.position_0 += len;
  return this$static;
};
jn.$putInt = function $putInt(this$static, value_0) {
  var newPosition;
  newPosition = this$static.position_0 + 4;
  jn.$putInt_0(this$static, this$static.position_0, value_0);
  this$static.position_0 = newPosition;
  return this$static;
};
jn.$putInt_0 = function $putInt_0(this$static, baseOffset, value_0) {
  var i;
  if (this$static.order == (jn.$clinit_ByteOrder(), jn.BIG_ENDIAN)) {
    for (i = 3; i >= 0; i--) {
      jb.$setAt(this$static.byteArray, baseOffset + i, value_0 & 255);
      value_0 = value_0 >> 8;
    }
  } else {
    for (i = 0; i <= 3; i++) {
      jb.$setAt(this$static.byteArray, baseOffset + i, value_0 & 255);
      value_0 = value_0 >> 8;
    }
  }
  return this$static;
};
jn.$putLong = function $putLong(this$static, baseOffset, value_0) {
  var i;
  if (this$static.order == (jn.$clinit_ByteOrder(), jn.BIG_ENDIAN)) {
    for (i = 7; i >= 0; i--) {
      jb.$setAt(
        this$static.byteArray,
        baseOffset + i,
        (toInt_0(and_1(value_0, 255)) << 24) >> 24
      );
      value_0 = shr_0(value_0, 8);
    }
  } else {
    for (i = 0; i <= 7; i++) {
      jb.$setAt(
        this$static.byteArray,
        baseOffset + i,
        (toInt_0(and_1(value_0, 255)) << 24) >> 24
      );
      value_0 = shr_0(value_0, 8);
    }
  }
  return this$static;
};
jn.$putLong_0 = function $putLong_0(this$static, value_0) {
  var newPosition;
  newPosition = this$static.position_0 + 8;
  jn.$putLong(this$static, this$static.position_0, value_0);
  this$static.position_0 = newPosition;
  return this$static;
};
jn.$putShort = function $putShort(this$static, baseOffset, value_0) {
  if (this$static.order == (jn.$clinit_ByteOrder(), jn.BIG_ENDIAN)) {
    jb.$setAt(
      this$static.byteArray,
      baseOffset,
      (((value_0 >> 8) & 255) << 24) >> 24
    );
    jb.$setAt(
      this$static.byteArray,
      baseOffset + 1,
      ((value_0 & 255) << 24) >> 24
    );
  } else {
    jb.$setAt(
      this$static.byteArray,
      baseOffset + 1,
      (((value_0 >> 8) & 255) << 24) >> 24
    );
    jb.$setAt(this$static.byteArray, baseOffset, ((value_0 & 255) << 24) >> 24);
  }
  return this$static;
};
jn.$putShort_0 = function $putShort_0(this$static, value_0) {
  var newPosition;
  newPosition = this$static.position_0 + 2;
  jn.$putShort(this$static, this$static.position_0, value_0);
  this$static.position_0 = newPosition;
  return this$static;
};
jn.$slice = function $slice(this$static) {
  var slice_0;
  slice_0 = new jn.ByteBuffer_1(
    this$static.byteArray.buffer,
    this$static.limit - this$static.position_0,
    this$static.byteArray.byteOffset + this$static.position_0
  );
  slice_0.order = this$static.order;
  return slice_0;
};
jn.ByteBuffer = function ByteBuffer(capacity) {
  jn.ByteBuffer_0.call(this, new $wnd.ArrayBuffer(capacity));
};
jn.ByteBuffer_0 = function ByteBuffer_0(buf) {
  jn.Buffer.call(this, buf.byteLength);
  jn.$$init_54(this);
  this.byteArray = new $wnd.Int8Array(buf);
};
jn.ByteBuffer_1 = function ByteBuffer_1(buffer, capacity, offset) {
  jn.Buffer.call(this, capacity);
  jn.$$init_54(this);
  this.byteArray = new $wnd.Int8Array(buffer, offset, capacity);
};
jn.allocateDirect = function allocateDirect(capacity) {
  if (capacity < 0) {
    throw toJs(new jl.IllegalArgumentException());
  }
  return new jn.ByteBuffer(capacity);
};
defineClass(
  103,
  120,
  { 33: 1, 120: 1, 103: 1 },
  jn.ByteBuffer,
  jn.ByteBuffer_0,
  jn.ByteBuffer_1
);
_.compareTo_0 = function compareTo_7(otherBuffer) {
  return jn.$compareTo_12(this, castTo(otherBuffer, 103));
};
_.equals_0 = function equals_43(other) {
  var equalSoFar, myPosition, otherBuffer, otherPosition;
  if (!instanceOf(other, 103)) {
    return false;
  }
  otherBuffer = castTo(other, 103);
  if (
    this.limit - this.position_0 !=
    otherBuffer.limit - otherBuffer.position_0
  ) {
    return false;
  }
  myPosition = this.position_0;
  otherPosition = otherBuffer.position_0;
  equalSoFar = true;
  while (equalSoFar && myPosition < this.limit) {
    equalSoFar =
      jn.$get_12(this, myPosition++) ==
      jn.$get_12(otherBuffer, otherPosition++);
  }
  return equalSoFar;
};
_.hashCode_1 = function hashCode_43() {
  var hash, myPosition;
  myPosition = this.position_0;
  hash = 0;
  while (myPosition < this.limit) {
    hash = hash + jn.$get_12(this, myPosition++);
  }
  return hash;
};
_.toString_0 = function toString_54() {
  var buf;
  buf = new jl.StringBuffer();
  jl.$append_3(
    buf,
    (jl.$ensureNamesAreInitialized(cggl.Ljava_nio_ByteBuffer_2_classLit),
    cggl.Ljava_nio_ByteBuffer_2_classLit.typeName)
  );
  buf.string += ", status: capacity=";
  jl.$append_2(buf, this.capacity_0);
  buf.string += " position=";
  jl.$append_2(buf, this.position_0);
  buf.string += " limit=";
  jl.$append_2(buf, this.limit);
  return buf.string;
};
cggl.Ljava_nio_ByteBuffer_2_classLit = createForClass(
  "java.nio",
  "ByteBuffer",
  103
);
jn.$clinit_ByteOrder = function $clinit_ByteOrder() {
  jn.$clinit_ByteOrder = emptyMethod;
  jn.BIG_ENDIAN = new jn.ByteOrder("BIG_ENDIAN");
  jn.LITTLE_ENDIAN = new jn.ByteOrder("LITTLE_ENDIAN");
  jn.NATIVE_ORDER = jn.LITTLE_ENDIAN;
};
jn.ByteOrder = function ByteOrder(name_0) {
  this.name_0 = name_0;
};
defineClass(360, 1, {}, jn.ByteOrder);
_.toString_0 = function toString_55() {
  return this.name_0;
};
cggl.Ljava_nio_ByteOrder_2_classLit = createForClass(
  "java.nio",
  "ByteOrder",
  360
);
jn.$compareTo_13 = function $compareTo_13(this$static, otherBuffer) {
  var compareRemaining, otherInt, otherPos, thisInt, thisPos;
  compareRemaining =
    this$static.limit - this$static.position_0 <
    otherBuffer.limit - otherBuffer.position_0
      ? this$static.limit - this$static.position_0
      : otherBuffer.limit - otherBuffer.position_0;
  thisPos = this$static.position_0;
  otherPos = otherBuffer.position_0;
  while (compareRemaining > 0) {
    thisInt = round_int(
      jl.$doubleValue(castToDouble(jb.$getAt(this$static.intArray, thisPos)))
    );
    otherInt = round_int(
      jl.$doubleValue(castToDouble(jb.$getAt(otherBuffer.intArray, otherPos)))
    );
    if (thisInt != otherInt) {
      return thisInt < otherInt ? -1 : 1;
    }
    ++thisPos;
    ++otherPos;
    --compareRemaining;
  }
  return (
    this$static.limit -
    this$static.position_0 -
    (otherBuffer.limit - otherBuffer.position_0)
  );
};
jn.$get_14 = function $get_14(this$static, index_0) {
  return round_int(
    jl.$doubleValue(castToDouble(jb.$getAt(this$static.intArray, index_0)))
  );
};
jn.$getClass_574 = function $getClass_574() {
  return cggl.Ljava_nio_IntBuffer_2_classLit;
};
jn.IntBuffer = function IntBuffer(byteBuffer) {
  jn.Buffer.call(this, byteBuffer.capacity_0 >> 2);
  this.byteBuffer = byteBuffer;
  jn.$clear(this.byteBuffer);
  this.intArray = new $wnd.Int32Array(
    byteBuffer.byteArray.buffer,
    byteBuffer.byteArray.byteOffset,
    this.capacity_0
  );
};
jn.allocate = function allocate() {
  var bb;
  bb = jn.allocateDirect(4);
  jn.$order(
    bb,
    (jn.$clinit_ByteOrder(), jn.$clinit_ByteOrder(), jn.NATIVE_ORDER)
  );
  return jn.$asIntBuffer(bb);
};
defineClass(222, 120, { 33: 1, 120: 1, 222: 1 }, jn.IntBuffer);
_.compareTo_0 = function compareTo_8(otherBuffer) {
  return jn.$compareTo_13(this, castTo(otherBuffer, 222));
};
_.equals_0 = function equals_44(other) {
  var equalSoFar, myPosition, otherBuffer, otherPosition;
  if (!instanceOf(other, 222)) {
    return false;
  }
  otherBuffer = castTo(other, 222);
  if (
    this.limit - this.position_0 !=
    otherBuffer.limit - otherBuffer.position_0
  ) {
    return false;
  }
  myPosition = this.position_0;
  otherPosition = otherBuffer.position_0;
  equalSoFar = true;
  while (equalSoFar && myPosition < this.limit) {
    equalSoFar =
      jn.$get_14(this, myPosition++) ==
      jn.$get_14(otherBuffer, otherPosition++);
  }
  return equalSoFar;
};
_.hashCode_1 = function hashCode_44() {
  var hash, myPosition;
  myPosition = this.position_0;
  hash = 0;
  while (myPosition < this.limit) {
    hash = hash + jn.$get_14(this, myPosition++);
  }
  return hash;
};
_.toString_0 = function toString_56() {
  var buf;
  buf = new jl.StringBuffer();
  jl.$append_3(
    buf,
    (jl.$ensureNamesAreInitialized(cggl.Ljava_nio_IntBuffer_2_classLit),
    cggl.Ljava_nio_IntBuffer_2_classLit.typeName)
  );
  buf.string += ", status: capacity=";
  jl.$append_2(buf, this.capacity_0);
  buf.string += " position=";
  jl.$append_2(buf, this.position_0);
  buf.string += " limit=";
  jl.$append_2(buf, this.limit);
  return buf.string;
};
cggl.Ljava_nio_IntBuffer_2_classLit = createForClass(
  "java.nio",
  "IntBuffer",
  222
);
jn.$compareTo_14 = function $compareTo_14(this$static, otherBuffer) {
  var compareRemaining, otherByte, otherPos, thisByte, thisPos;
  compareRemaining =
    this$static.limit - this$static.position_0 <
    otherBuffer.limit - otherBuffer.position_0
      ? this$static.limit - this$static.position_0
      : otherBuffer.limit - otherBuffer.position_0;
  thisPos = this$static.position_0;
  otherPos = otherBuffer.position_0;
  while (compareRemaining > 0) {
    thisByte = round_short(
      jl.$doubleValue(castToDouble(jb.$getAt(this$static.shortArray, thisPos)))
    );
    otherByte = round_short(
      jl.$doubleValue(castToDouble(jb.$getAt(otherBuffer.shortArray, otherPos)))
    );
    if (thisByte != otherByte) {
      return thisByte < otherByte ? -1 : 1;
    }
    ++thisPos;
    ++otherPos;
    --compareRemaining;
  }
  return (
    this$static.limit -
    this$static.position_0 -
    (otherBuffer.limit - otherBuffer.position_0)
  );
};
jn.$get_15 = function $get_15(this$static, index_0) {
  return round_short(
    jl.$doubleValue(castToDouble(jb.$getAt(this$static.shortArray, index_0)))
  );
};
jn.$getClass_575 = function $getClass_575() {
  return cggl.Ljava_nio_ShortBuffer_2_classLit;
};
jn.$put_1 = function $put_1(this$static, c) {
  jb.$setAt(this$static.shortArray, this$static.position_0++, c);
  return this$static;
};
jn.ShortBuffer = function ShortBuffer(byteBuffer) {
  jn.Buffer.call(this, byteBuffer.capacity_0 >> 1);
  this.byteBuffer = byteBuffer;
  jn.$clear(this.byteBuffer);
  this.shortArray = new $wnd.Int16Array(
    byteBuffer.byteArray.buffer,
    byteBuffer.byteArray.byteOffset,
    this.capacity_0
  );
};
jn.allocate_0 = function allocate_0(capacity) {
  var bb;
  if (capacity < 0) {
    throw toJs(new jl.IllegalArgumentException());
  }
  bb = jn.allocateDirect(capacity * 2);
  jn.$order(
    bb,
    (jn.$clinit_ByteOrder(), jn.$clinit_ByteOrder(), jn.NATIVE_ORDER)
  );
  return jn.$asShortBuffer(bb);
};
defineClass(221, 120, { 33: 1, 120: 1, 221: 1 }, jn.ShortBuffer);
_.compareTo_0 = function compareTo_9(otherBuffer) {
  return jn.$compareTo_14(this, castTo(otherBuffer, 221));
};
_.equals_0 = function equals_45(other) {
  var equalSoFar, myPosition, otherBuffer, otherPosition;
  if (!instanceOf(other, 221)) {
    return false;
  }
  otherBuffer = castTo(other, 221);
  if (
    this.limit - this.position_0 !=
    otherBuffer.limit - otherBuffer.position_0
  ) {
    return false;
  }
  myPosition = this.position_0;
  otherPosition = otherBuffer.position_0;
  equalSoFar = true;
  while (equalSoFar && myPosition < this.limit) {
    equalSoFar =
      jn.$get_15(this, myPosition++) ==
      jn.$get_15(otherBuffer, otherPosition++);
  }
  return equalSoFar;
};
_.hashCode_1 = function hashCode_45() {
  var hash, myPosition;
  myPosition = this.position_0;
  hash = 0;
  while (myPosition < this.limit) {
    hash = hash + jn.$get_15(this, myPosition++);
  }
  return hash;
};
_.toString_0 = function toString_57() {
  var buf;
  buf = new jl.StringBuffer();
  jl.$append_3(
    buf,
    (jl.$ensureNamesAreInitialized(cggl.Ljava_nio_ShortBuffer_2_classLit),
    cggl.Ljava_nio_ShortBuffer_2_classLit.typeName)
  );
  buf.string += ", status: capacity=";
  jl.$append_2(buf, this.capacity_0);
  buf.string += " position=";
  jl.$append_2(buf, this.position_0);
  buf.string += " limit=";
  jl.$append_2(buf, this.limit);
  return buf.string;
};
cggl.Ljava_nio_ShortBuffer_2_classLit = createForClass(
  "java.nio",
  "ShortBuffer",
  221
);
jnc.$compareTo_15 = function $compareTo_15(this$static, that) {
  return jl.$compareToIgnoreCase(this$static.name_0, that.name_0);
};
jnc.Charset = function Charset(name_0) {
  this.name_0 = name_0;
};
defineClass(127, 1, $intern_71);
_.compareTo_0 = function compareTo_10(that) {
  return jnc.$compareTo_15(this, castTo(that, 127));
};
_.equals_0 = function equals_46(o) {
  var that;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, 127)) {
    return false;
  }
  that = castTo(o, 127);
  return jl.$equals_12(this.name_0, that.name_0);
};
_.hashCode_1 = function hashCode_46() {
  return ji.getHashCode_2(this.name_0);
};
_.toString_0 = function toString_58() {
  return this.name_0;
};
cggl.Ljava_nio_charset_Charset_2_classLit = createForClass(
  "java.nio.charset",
  "Charset",
  127
);
jnc.$clinit_StandardCharsets = function $clinit_StandardCharsets() {
  jnc.$clinit_StandardCharsets = emptyMethod;
  ji.$clinit_EmulatedCharset();
};
ju.$clear_0 = function $clear_0(this$static) {
  ju.$reset(this$static);
};
ju.$containsKey = function $containsKey(this$static, key) {
  return instanceOfString(key)
    ? ju.$hasStringValue(this$static, ji.uncheckedCast(key))
    : !!ju.$getEntry(this$static.hashCodeMap, key);
};
ju.$containsValue = function $containsValue(this$static, value_0) {
  return (
    ju.$containsValue_0(this$static, value_0, this$static.stringMap) ||
    ju.$containsValue_0(this$static, value_0, this$static.hashCodeMap)
  );
};
ju.$containsValue_0 = function $containsValue_0(this$static, value_0, entries) {
  var entry, entry$iterator;
  for (entry$iterator = entries.iterator_0(); entry$iterator.hasNext_1(); ) {
    entry = castTo(entry$iterator.next_1(), 27);
    if (this$static.equals_1(value_0, entry.getValue_0())) {
      return true;
    }
  }
  return false;
};
ju.$entrySet = function $entrySet(this$static) {
  return new ju.AbstractHashMap$EntrySet(this$static);
};
ju.$get_16 = function $get_16(this$static, key) {
  return instanceOfString(key)
    ? ju.$getStringValue(this$static, ji.uncheckedCast(key))
    : ju.getEntryValueOrNull(ju.$getEntry(this$static.hashCodeMap, key));
};
ju.$getStringValue = function $getStringValue(this$static, key) {
  return key == null
    ? ju.getEntryValueOrNull(ju.$getEntry(this$static.hashCodeMap, null))
    : ju.$get_22(this$static.stringMap, key);
};
ju.$hasStringValue = function $hasStringValue(this$static, key) {
  return key == null
    ? !!ju.$getEntry(this$static.hashCodeMap, null)
    : ju.$contains_5(this$static.stringMap, key);
};
ju.$put_2 = function $put_2(this$static, key, value_0) {
  return instanceOfString(key)
    ? ju.$putStringValue(this$static, ji.uncheckedCast(key), value_0)
    : ju.$put_4(this$static.hashCodeMap, key, value_0);
};
ju.$putStringValue = function $putStringValue(this$static, key, value_0) {
  return key == null
    ? ju.$put_4(this$static.hashCodeMap, null, value_0)
    : ju.$put_5(this$static.stringMap, key, value_0);
};
ju.$remove_0 = function $remove_0(this$static, key) {
  return instanceOfString(key)
    ? ju.$removeStringValue(this$static, ji.uncheckedCast(key))
    : ju.$remove_8(this$static.hashCodeMap, key);
};
ju.$removeStringValue = function $removeStringValue(this$static, key) {
  return key == null
    ? ju.$remove_8(this$static.hashCodeMap, null)
    : ju.$remove_9(this$static.stringMap, key);
};
ju.$reset = function $reset(this$static) {
  this$static.hashCodeMap = new ju.InternalHashCodeMap(this$static);
  this$static.stringMap = new ju.InternalStringMap(this$static);
  ju.structureChanged(this$static);
};
ju.$size_1 = function $size_1(this$static) {
  return this$static.hashCodeMap.size_0 + this$static.stringMap.size_0;
};
ju.AbstractHashMap = function AbstractHashMap() {
  ju.$reset(this);
};
ju.AbstractHashMap_0 = function AbstractHashMap_0(ignored) {
  ju.AbstractHashMap_1.call(this, ignored);
};
ju.AbstractHashMap_1 = function AbstractHashMap_1(ignored) {
  ji.checkCriticalArgument_0(ignored >= 0, "Negative initial capacity");
  ji.checkCriticalArgument_0(true, "Non-positive load factor");
  ju.$reset(this);
};
defineClass(262, 931, $intern_13);
_.clear = function clear_2() {
  ju.$clear_0(this);
};
_.containsKey = function containsKey_0(key) {
  return ju.$containsKey(this, key);
};
_.containsValue = function containsValue_0(value_0) {
  return ju.$containsValue(this, value_0);
};
_.entrySet_0 = function entrySet() {
  return ju.$entrySet(this);
};
_.get = function get_26(key) {
  return ju.$get_16(this, key);
};
_.put = function put_0(key, value_0) {
  return ju.$put_2(this, key, value_0);
};
_.remove = function remove_11(key) {
  return ju.$remove_0(this, key);
};
_.size = function size_5() {
  return ju.$size_1(this);
};
cggl.Ljava_util_AbstractHashMap_2_classLit = createForClass(
  "java.util",
  "AbstractHashMap",
  262
);
ju.$contains = function $contains(this$static, o) {
  if (instanceOf(o, 27)) {
    return ju.$containsEntry(this$static.this$01, castTo(o, 27));
  }
  return false;
};
ju.$iterator_4 = function $iterator_4(this$static) {
  return new ju.AbstractHashMap$EntrySetIterator(this$static.this$01);
};
ju.AbstractHashMap$EntrySet = function AbstractHashMap$EntrySet(this$0) {
  this.this$01 = this$0;
};
defineClass(159, 909, $intern_14, ju.AbstractHashMap$EntrySet);
_.clear = function clear_3() {
  this.this$01.clear();
};
_.contains = function contains_3(o) {
  return ju.$contains(this, o);
};
_.iterator_0 = function iterator_9() {
  return ju.$iterator_4(this);
};
_.remove = function remove_12(entry) {
  var key;
  if (ju.$contains(this, entry)) {
    key = castTo(entry, 27).getKey();
    this.this$01.remove(key);
    return true;
  }
  return false;
};
_.size = function size_6() {
  return this.this$01.size();
};
cggl.Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass(
  "java.util",
  "AbstractHashMap/EntrySet",
  159
);
ju.$$init_55 = function $$init_55(this$static) {
  this$static.stringMapEntries = new ju.InternalStringMap$1(
    this$static.this$01.stringMap
  );
  this$static.current = this$static.stringMapEntries;
  this$static.hasNext_0 = ju.$computeHasNext(this$static);
};
ju.$computeHasNext = function $computeHasNext(this$static) {
  if (this$static.current.hasNext_1()) {
    return true;
  }
  if (this$static.current != this$static.stringMapEntries) {
    return false;
  }
  this$static.current = new ju.InternalHashCodeMap$1(
    this$static.this$01.hashCodeMap
  );
  return this$static.current.hasNext_1();
};
ju.$hasNext_3 = function $hasNext_3(this$static) {
  return this$static.hasNext_0;
};
ju.$next_2 = function $next_2(this$static) {
  return ju.$next_3(this$static);
};
ju.$next_3 = function $next_3(this$static) {
  var rv;
  ju.checkStructuralChange(this$static.this$01, this$static);
  ji.checkCriticalElement(this$static.hasNext_0);
  this$static.last_0 = this$static.current;
  rv = castTo(this$static.current.next_1(), 27);
  this$static.hasNext_0 = ju.$computeHasNext(this$static);
  return rv;
};
ju.AbstractHashMap$EntrySetIterator = function AbstractHashMap$EntrySetIterator(
  this$0
) {
  this.this$01 = this$0;
  ju.$$init_55(this);
  this.$modCount = this$0.$modCount;
};
defineClass(213, 1, $intern_12, ju.AbstractHashMap$EntrySetIterator);
_.forEachRemaining = function forEachRemaining_6(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.next_1 = function next_10() {
  return ju.$next_2(this);
};
_.hasNext_1 = function hasNext_7() {
  return ju.$hasNext_3(this);
};
_.remove_0 = function remove_13() {
  ji.checkCriticalState(!!this.last_0);
  ju.checkStructuralChange(this.this$01, this);
  this.last_0.remove_0();
  this.last_0 = null;
  this.hasNext_0 = ju.$computeHasNext(this);
  ju.recordLastKnownStructure(this.this$01, this);
};
_.hasNext_0 = false;
cggl.Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass(
  "java.util",
  "AbstractHashMap/EntrySetIterator",
  213
);
defineClass(933, 1, { 27: 1 });
_.equals_0 = function equals_50(other) {
  var entry;
  if (!instanceOf(other, 27)) {
    return false;
  }
  entry = castTo(other, 27);
  return (
    ju.equals_68(ji.uncheckedCast(this.val$entry2.value[0]), entry.getKey()) &&
    ju.equals_68(ju.$getValue_0(this), entry.getValue_0())
  );
};
_.hashCode_1 = function hashCode_50() {
  return (
    ju.hashCode_67(ji.uncheckedCast(this.val$entry2.value[0])) ^
    ju.hashCode_67(ju.$getValue_0(this))
  );
};
_.toString_0 = function toString_61() {
  return (
    ji.uncheckedCast(this.val$entry2.value[0]) + "=" + ju.$getValue_0(this)
  );
};
cggl.Ljava_util_AbstractMapEntry_2_classLit = createForClass(
  "java.util",
  "AbstractMapEntry",
  933
);
ju.$containsEntry_0 = function $containsEntry_0(this$static, entry) {
  var key, lookupEntry;
  key = entry.getKey();
  lookupEntry = this$static.getEntry(key);
  return (
    !!lookupEntry && ju.equals_68(lookupEntry.getValue_0(), entry.getValue_0())
  );
};
ju.$containsKey_0 = function $containsKey_0(this$static, k) {
  var key;
  key = k;
  return !!this$static.getEntry(key);
};
ju.$get_17 = function $get_17(this$static, k) {
  var key;
  key = k;
  return ju.getEntryValueOrNull(this$static.getEntry(key));
};
defineClass(932, 931, $intern_13);
_.containsEntry = function containsEntry_0(entry) {
  return ju.$containsEntry_0(this, entry);
};
_.containsKey = function containsKey_1(k) {
  return ju.$containsKey_0(this, k);
};
_.descendingMap = function descendingMap() {
  return new ju.AbstractNavigableMap$DescendingMap(this);
};
_.entrySet_0 = function entrySet_0() {
  return new ju.AbstractNavigableMap$EntrySet(this);
};
_.get = function get_28(k) {
  return ju.$get_17(this, k);
};
_.keySet = function keySet_0() {
  return new ju.AbstractNavigableMap$NavigableKeySet(this);
};
cggl.Ljava_util_AbstractNavigableMap_2_classLit = createForClass(
  "java.util",
  "AbstractNavigableMap",
  932
);
ju.AbstractNavigableMap$DescendingMap =
  function AbstractNavigableMap$DescendingMap(this$0) {
    this.this$01 = this$0;
  };
defineClass(799, 932, $intern_13, ju.AbstractNavigableMap$DescendingMap);
_.clear = function clear_7() {
  this.this$01.clear();
};
_.descendingEntryIterator = function descendingEntryIterator() {
  return this.this$01.entryIterator();
};
_.descendingMap = function descendingMap_0() {
  return this.this$01;
};
_.entryIterator = function entryIterator_0() {
  return this.this$01.descendingEntryIterator();
};
_.getEntry = function getEntry(key) {
  return this.this$01.getEntry(key);
};
_.put = function put_1(key, value_0) {
  return this.this$01.put(key, value_0);
};
_.remove = function remove_21(key) {
  return this.this$01.remove(key);
};
_.removeEntry = function removeEntry(entry) {
  return this.this$01.removeEntry(entry);
};
_.size = function size_10() {
  return this.this$01.size();
};
_.subMap = function subMap(fromKey, fromInclusive, toKey, toInclusive) {
  return this.this$01
    .subMap(toKey, toInclusive, fromKey, fromInclusive)
    .descendingMap();
};
cggl.Ljava_util_AbstractNavigableMap$DescendingMap_2_classLit = createForClass(
  "java.util",
  "AbstractNavigableMap/DescendingMap",
  799
);
ju.$iterator_8 = function $iterator_8(this$static) {
  return this$static.this$01_0.entryIterator();
};
ju.AbstractNavigableMap$EntrySet = function AbstractNavigableMap$EntrySet(
  this$0
) {
  this.this$01_0 = this$0;
};
defineClass(302, 909, $intern_14, ju.AbstractNavigableMap$EntrySet);
_.contains = function contains_6(o) {
  return (
    instanceOf(o, 27) && ju.$containsEntry_0(this.this$01_0, castTo(o, 27))
  );
};
_.iterator_0 = function iterator_13() {
  return ju.$iterator_8(this);
};
_.remove = function remove_22(o) {
  var entry;
  if (instanceOf(o, 27)) {
    entry = castTo(o, 27);
    return this.this$01_0.removeEntry(entry);
  }
  return false;
};
_.size = function size_11() {
  return this.this$01_0.size();
};
cggl.Ljava_util_AbstractNavigableMap$EntrySet_2_classLit = createForClass(
  "java.util",
  "AbstractNavigableMap/EntrySet",
  302
);
ju.$spliterator_6 = function $spliterator_6(this$static) {
  return new ju.SortedSet$1(this$static);
};
ju.$iterator_9 = function $iterator_9(this$static) {
  var entryIterator;
  entryIterator = this$static.map_0.entrySet_0().this$01_0.entryIterator();
  return new ju.AbstractNavigableMap$NavigableKeySet$1(entryIterator);
};
ju.$subSet = function $subSet(this$static, fromElement, toElement) {
  return new ju.AbstractNavigableMap$NavigableKeySet(
    this$static.map_0.subMap(fromElement, true, toElement, true)
  );
};
ju.AbstractNavigableMap$NavigableKeySet =
  function AbstractNavigableMap$NavigableKeySet(map_0) {
    this.map_0 = map_0;
  };
defineClass(220, 909, $intern_14, ju.AbstractNavigableMap$NavigableKeySet);
_.spliterator_0 = function spliterator_3() {
  return new ju.SortedSet$1(this);
};
_.clear = function clear_8() {
  this.map_0.clear();
};
_.contains = function contains_7(o) {
  return ju.$containsKey_0(this.map_0, o);
};
_.iterator_0 = function iterator_14() {
  return ju.$iterator_9(this);
};
_.remove = function remove_23(o) {
  if (ju.$containsKey_0(this.map_0, o)) {
    this.map_0.remove(o);
    return true;
  }
  return false;
};
_.size = function size_12() {
  return this.map_0.size();
};
cggl.Ljava_util_AbstractNavigableMap$NavigableKeySet_2_classLit =
  createForClass("java.util", "AbstractNavigableMap/NavigableKeySet", 220);
ju.$hasNext_7 = function $hasNext_7(this$static) {
  return this$static.val$entryIterator2.hasNext_1();
};
ju.$next_7 = function $next_7(this$static) {
  var entry;
  entry = castTo(this$static.val$entryIterator2.next_1(), 27);
  return entry.getKey();
};
ju.AbstractNavigableMap$NavigableKeySet$1 =
  function AbstractNavigableMap$NavigableKeySet$1(val$entryIterator) {
    this.val$entryIterator2 = val$entryIterator;
  };
defineClass(303, 1, $intern_12, ju.AbstractNavigableMap$NavigableKeySet$1);
_.forEachRemaining = function forEachRemaining_10(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_11() {
  return ju.$hasNext_7(this);
};
_.next_1 = function next_14() {
  return ju.$next_7(this);
};
_.remove_0 = function remove_24() {
  this.val$entryIterator2.remove_0();
};
cggl.Ljava_util_AbstractNavigableMap$NavigableKeySet$1_2_classLit =
  createForClass("java.util", "AbstractNavigableMap/NavigableKeySet/1", 303);
ju.$contains_2 = function $contains_2(this$static, o) {
  return ju.$indexOf_1(this$static, o) != -1;
};
ju.$get_19 = function $get_19(this$static, index_0) {
  ji.checkCriticalElementIndex(index_0, this$static.array.length);
  return this$static.array[index_0];
};
ju.$size_3 = function $size_3(this$static) {
  return this$static.array.length;
};
ju.$toArray_3 = function $toArray_3(this$static, out) {
  var i, size_0;
  size_0 = this$static.array.length;
  out.length < size_0 && (out = ji.stampJavaTypeInfo_1(new Array(size_0), out));
  for (i = 0; i < size_0; ++i) {
    setCheck(out, i, this$static.array[i]);
  }
  out.length > size_0 && setCheck(out, size_0, null);
  return out;
};
ju.Arrays$ArrayList = function Arrays$ArrayList(array) {
  ji.checkCriticalNotNull(array);
  this.array = array;
};
defineClass(34, 920, $intern_15, ju.Arrays$ArrayList);
_.contains = function contains_9(o) {
  return ju.$contains_2(this, o);
};
_.forEach_0 = function forEach_8(consumer) {
  var e, e$array, e$index, e$max;
  ji.checkCriticalNotNull(consumer);
  for (
    e$array = this.array, e$index = 0, e$max = e$array.length;
    e$index < e$max;
    ++e$index
  ) {
    e = e$array[e$index];
    idwcas.$release_1(consumer.$$outer_0, castTo(e, 14));
  }
};
_.getAtIndex = function get_30(index_0) {
  return ju.$get_19(this, index_0);
};
_.setAtIndex = function set_5(index_0, value_0) {
  var was;
  was =
    (ji.checkCriticalElementIndex(index_0, this.array.length),
    this.array[index_0]);
  setCheck(this.array, index_0, value_0);
  return was;
};
_.size = function size_14() {
  return ju.$size_3(this);
};
_.toArray = function toArray_3() {
  return ju.$toArray_3(
    this,
    initUnidimensionalArray(
      cggl.Ljava_lang_Object_2_classLit,
      $intern_7,
      1,
      this.array.length,
      5,
      1
    )
  );
};
_.toArray_0 = function toArray_4(out) {
  return ju.$toArray_3(this, out);
};
cggl.Ljava_util_Arrays$ArrayList_2_classLit = createForClass(
  "java.util",
  "Arrays/ArrayList",
  34
);
ju.$equals_16 = function $equals_16(this$static, obj) {
  var index_0, lastIndex, other;
  if (maskUndefined(this$static) === maskUndefined(obj)) {
    return true;
  }
  if (!instanceOf(obj, 73)) {
    return false;
  }
  other = castTo(obj, 73);
  lastIndex = ju.lastSetWordIndex(this$static.array);
  if (lastIndex != ju.lastSetWordIndex(other.array)) {
    return false;
  }
  for (index_0 = 0; index_0 <= lastIndex; index_0++) {
    if ((this$static.array[index_0] | 0) != (other.array[index_0] | 0)) {
      return false;
    }
  }
  return true;
};
ju.$get_20 = function $get_20(this$static, bitIndex) {
  var index_0;
  ju.checkIndex(bitIndex);
  index_0 = (bitIndex / 31) | 0;
  return (
    index_0 < this$static.array.length &&
    (((this$static.array[index_0] | 0) >>> bitIndex % 31) & 1) == 1
  );
};
ju.$hashCode_16 = function $hashCode_16(this$static) {
  var hash, i, lastIndex, value_0;
  lastIndex = ju.lastSetWordIndex(this$static.array);
  hash = -2128831035 ^ lastIndex;
  for (i = 0; i <= lastIndex; i++) {
    value_0 = this$static.array[i] | 0;
    hash = ((hash * $intern_72) & -1) ^ (value_0 & 255);
    hash = ((hash * $intern_72) & -1) ^ ((value_0 >>> 8) & 255);
    hash = ((hash * $intern_72) & -1) ^ ((value_0 >>> 16) & 255);
    hash = ((hash * $intern_72) & -1) ^ (value_0 >>> 24);
  }
  return hash;
};
ju.$length_2 = function $length_2(this$static) {
  var lastIndex, word;
  lastIndex = ju.lastSetWordIndex(this$static.array);
  if (lastIndex == -1) {
    return 0;
  }
  word = this$static.array[lastIndex] | 0;
  return lastIndex * 31 + (32 - numberOfLeadingZeros_0(word));
};
ju.$nextSetBit = function $nextSetBit(this$static, fromIndex) {
  var index_0, length_0, word;
  ju.checkIndex(fromIndex);
  index_0 = (fromIndex / 31) | 0;
  length_0 = this$static.array.length;
  if (index_0 >= length_0) {
    return -1;
  }
  word = (this$static.array[index_0] | 0) & ($intern_1 << fromIndex % 31);
  while (word == 0) {
    if (++index_0 >= length_0) {
      return -1;
    }
    word = this$static.array[index_0] | 0;
  }
  return index_0 * 31 + numberOfTrailingZeros(word);
};
ju.$or = function $or(this$static, set_0) {
  var index_0, word;
  if (this$static == set_0) {
    return;
  }
  ju.maybeGrowArrayToIndex(this$static.array, set_0.array.length - 1);
  for (index_0 = 0; index_0 < set_0.array.length; index_0++) {
    word = set_0.array[index_0] | 0;
    word != 0 &&
      (this$static.array[index_0] = this$static.array[index_0] | 0 | word);
  }
};
ju.$previousSetBit = function $previousSetBit(this$static) {
  var index_0, word;
  ju.checkIndex(2147483646);
  index_0 = 69273666;
  if (index_0 >= this$static.array.length) {
    return ju.$length_2(this$static) - 1;
  }
  word = (this$static.array[index_0] | 0) & 1;
  while (word == 0) {
    if (--index_0 < 0) {
      return -1;
    }
    word = this$static.array[index_0] | 0;
  }
  return index_0 * 31 + (32 - numberOfLeadingZeros_0(word)) - 1;
};
ju.$set = function $set(this$static, bitIndex) {
  var index_0;
  ju.checkIndex(bitIndex);
  index_0 = (bitIndex / 31) | 0;
  ju.maybeGrowArrayToIndex(this$static.array, index_0);
  this$static.array[index_0] =
    this$static.array[index_0] | 0 | (1 << bitIndex % 31);
};
ju.$toByteArray = function $toByteArray(this$static) {
  var bitOffset, bytes, i, nbits, nbytes;
  nbits = ju.$length_2(this$static);
  nbytes = (nbits / 8) | 0;
  nbits % 8 != 0 && ++nbytes;
  bytes = initUnidimensionalArray(
    cggl.B_classLit,
    $intern_55,
    18,
    nbytes,
    15,
    1
  );
  bitOffset = 0;
  for (i = 0; i < nbytes; i++) {
    bytes[i] = ju.getByte(this$static.array, bitOffset);
    bitOffset += 8;
  }
  return bytes;
};
ju.BitSet = function BitSet() {
  this.array = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    0,
    15,
    1
  );
};
ju.BitSet_0 = function BitSet_0(nbits) {
  var length_0;
  ji.checkCriticalArraySize(nbits);
  length_0 = (((nbits - 1) / 31) | 0) + 1;
  this.array = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    0,
    15,
    1
  );
  ji.setLength(this.array, length_0);
};
ju.BitSet_1 = function BitSet_1(array) {
  this.array = array;
};
ju.addByte = function addByte(words, bits, bitIndex) {
  var bitOffset, first, second, wordIndex;
  if (bits != 0) {
    wordIndex = (bitIndex / 31) | 0;
    bitOffset = bitIndex % 31;
    first = ((bits & 255) << bitOffset) & $intern_1;
    first != 0 && (words[wordIndex] = words[wordIndex] | 0 | first);
    second = bitOffset == 0 ? 0 : (bits & 255) >>> (31 - bitOffset);
    second != 0 && (words[wordIndex + 1] = words[wordIndex + 1] | 0 | second);
  }
};
ju.checkIndex = function checkIndex(bitIndex) {
  if (bitIndex < 0) {
    throw toJs(new jl.IndexOutOfBoundsException_0("bitIndex < 0: " + bitIndex));
  }
};
ju.getByte = function getByte(words, bitIndex) {
  var b, bitOffset, leftBits, word, wordIndex;
  wordIndex = (bitIndex / 31) | 0;
  if (wordIndex >= words.length) {
    return 0;
  }
  bitOffset = bitIndex % 31;
  word = words[wordIndex] | 0;
  b = word >>> bitOffset;
  leftBits = -23 + bitOffset;
  if (leftBits > 0 && wordIndex + 1 < words.length) {
    word = words[wordIndex + 1] | 0;
    if (word != 0) {
      word &= ~($intern_1 << leftBits);
      word <<= 8 - leftBits;
      b |= word;
    }
  }
  return ((b & 255) << 24) >> 24;
};
ju.lastSetWordIndex = function lastSetWordIndex(array) {
  var i;
  i = array.length - 1;
  for (; i >= 0 && (array[i] | 0) == 0; --i);
  return i;
};
ju.maybeGrowArrayToIndex = function maybeGrowArrayToIndex(array, newMaxIndex) {
  var newLength;
  newLength = newMaxIndex + 1;
  newLength > array.length && (ji.uncheckedCast(array).length = newLength);
};
ju.valueOf_38 = function valueOf_38(words) {
  var array, bitIndex, i, len;
  len = words.length;
  while (len > 0 && words[len - 1] == 0) {
    --len;
  }
  array = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    len * 8,
    15,
    1
  );
  bitIndex = 0;
  for (i = 0; i < len; i++) {
    ju.addByte(array, words[i], bitIndex);
    bitIndex += 8;
  }
  return new ju.BitSet_1(array);
};
defineClass(73, 1, { 73: 1 }, ju.BitSet, ju.BitSet_0, ju.BitSet_1);
_.equals_0 = function equals_60(obj) {
  return ju.$equals_16(this, obj);
};
_.hashCode_1 = function hashCode_60() {
  return ju.$hashCode_16(this);
};
_.toString_0 = function toString_63() {
  var next, sb;
  if (ju.$length_2(this) == 0) {
    return "{}";
  }
  sb = new jl.StringBuilder_1("{");
  next = ju.$nextSetBit(this, 0);
  sb.string += next;
  while ((next = ju.$nextSetBit(this, next + 1)) != -1) {
    sb.string += ", ";
    sb.string += next;
  }
  sb.string += "}";
  return sb.string;
};
cggl.Ljava_util_BitSet_2_classLit = createForClass("java.util", "BitSet", 73);
ju.$contains_3 = function $contains_3(this$static, o) {
  return this$static.coll.contains(o);
};
ju.$containsAll_0 = function $containsAll_0(this$static, c) {
  return this$static.coll.containsAll(c);
};
ju.$iterator_11 = function $iterator_11(this$static) {
  return new ju.Collections$UnmodifiableCollectionIterator(
    this$static.coll.iterator_0()
  );
};
ju.$stream_1 = function $stream_1(this$static) {
  return new jus.StreamImpl(null, this$static.spliterator_0());
};
ju.$toArray_4 = function $toArray_4(this$static) {
  return this$static.coll.toArray();
};
ju.$toArray_5 = function $toArray_5(this$static, a) {
  return this$static.coll.toArray_0(a);
};
ju.Collections$UnmodifiableCollection =
  function Collections$UnmodifiableCollection(coll) {
    this.coll = coll;
  };
defineClass(353, 1, { 53: 1 }, ju.Collections$UnmodifiableCollection);
_.forEach_0 = function forEach_9(action) {
  jl.$forEach_2(this, action);
};
_.spliterator_0 = function spliterator_6() {
  return new ju.Spliterators$IteratorSpliterator(this, 0);
};
_.stream_0 = function stream_5() {
  return ju.$stream_1(this);
};
_.add = function add_12(o) {
  throw toJs(new jl.UnsupportedOperationException());
};
_.addAll = function addAll_3(c) {
  throw toJs(new jl.UnsupportedOperationException());
};
_.clear = function clear_10() {
  throw toJs(new jl.UnsupportedOperationException());
};
_.contains = function contains_12(o) {
  return ju.$contains_3(this, o);
};
_.containsAll = function containsAll_0(c) {
  return ju.$containsAll_0(this, c);
};
_.isEmpty = function isEmpty_3() {
  return this.coll.isEmpty();
};
_.iterator_0 = function iterator_18() {
  return ju.$iterator_11(this);
};
_.remove = function remove_29(o) {
  throw toJs(new jl.UnsupportedOperationException());
};
_.removeAll = function removeAll_1(c) {
  throw toJs(new jl.UnsupportedOperationException());
};
_.retainAll = function retainAll_0(c) {
  throw toJs(new jl.UnsupportedOperationException());
};
_.size = function size_18() {
  return this.coll.size();
};
_.toArray = function toArray_5() {
  return ju.$toArray_4(this);
};
_.toArray_0 = function toArray_6(a) {
  return ju.$toArray_5(this, a);
};
_.toString_0 = function toString_64() {
  return toString_7(this.coll);
};
cggl.Ljava_util_Collections$UnmodifiableCollection_2_classLit = createForClass(
  "java.util",
  "Collections/UnmodifiableCollection",
  353
);
ju.$remove_6 = function $remove_6() {
  throw toJs(new jl.UnsupportedOperationException());
};
ju.Collections$UnmodifiableCollectionIterator =
  function Collections$UnmodifiableCollectionIterator(it) {
    this.it = it;
  };
defineClass(751, 1, $intern_12, ju.Collections$UnmodifiableCollectionIterator);
_.forEachRemaining = function forEachRemaining_13(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.hasNext_1 = function hasNext_14() {
  return this.it.hasNext_1();
};
_.next_1 = function next_17() {
  return this.it.next_1();
};
_.remove_0 = function remove_30() {
  ju.$remove_6();
};
cggl.Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit =
  createForClass(
    "java.util",
    "Collections/UnmodifiableCollectionIterator",
    751
  );
ju.$containsKey_1 = function $containsKey_1(this$static, key) {
  return ju.$containsKey(this$static.map_0, key);
};
ju.$get_21 = function $get_21(this$static, key) {
  return ju.$get_16(this$static.map_0, key);
};
ju.$put_3 = function $put_3() {
  throw toJs(new jl.UnsupportedOperationException());
};
ju.Collections$UnmodifiableMap = function Collections$UnmodifiableMap(map_0) {
  this.map_0 = map_0;
};
defineClass(749, 1, $intern_13, ju.Collections$UnmodifiableMap);
_.computeIfAbsent = function computeIfAbsent_0(key, remappingFunction) {
  return ju.$computeIfAbsent_0(this, key, remappingFunction);
};
_.getOrDefault = function getOrDefault_0(key, defaultValue) {
  var currentValue;
  return (
    (currentValue = ju.$get_16(this.map_0, key)),
    currentValue == null && !ju.$containsKey(this.map_0, key)
      ? defaultValue
      : currentValue
  );
};
_.merge_0 = function merge_1(key, value_0, remappingFunction) {
  return ju.$merge_1(this, key, value_0, remappingFunction);
};
_.putIfAbsent = function putIfAbsent_0(key, value_0) {
  var currentValue;
  return (
    (currentValue = ju.$get_16(this.map_0, key)),
    currentValue != null ? currentValue : ju.$put_3()
  );
};
_.replace = function replace_1(key, value_0) {
  return ju.$containsKey(this.map_0, key) ? ju.$put_3() : null;
};
_.clear = function clear_11() {
  throw toJs(new jl.UnsupportedOperationException());
};
_.containsKey = function containsKey_3(key) {
  return ju.$containsKey_1(this, key);
};
_.containsValue = function containsValue_2(val) {
  return ju.$containsValue(this.map_0, val);
};
_.entrySet_0 = function entrySet_2() {
  !this.entrySet &&
    (this.entrySet = new ju.Collections$UnmodifiableMap$UnmodifiableEntrySet(
      new ju.AbstractHashMap$EntrySet(this.map_0)
    ));
  return this.entrySet;
};
_.equals_0 = function equals_61(o) {
  return ju.$equals_14(this.map_0, o);
};
_.get = function get_33(key) {
  return ju.$get_21(this, key);
};
_.hashCode_1 = function hashCode_63() {
  return ju.hashCode_61(new ju.AbstractHashMap$EntrySet(this.map_0));
};
_.isEmpty = function isEmpty_4() {
  return ju.$size_1(this.map_0) == 0;
};
_.keySet = function keySet_2() {
  !this.keySet_0 &&
    (this.keySet_0 = new ju.Collections$UnmodifiableSet(
      new ju.AbstractMap$1(this.map_0)
    ));
  return this.keySet_0;
};
_.put = function put_2(key, value_0) {
  return ju.$put_3();
};
_.putAll = function putAll_0(t) {
  throw toJs(new jl.UnsupportedOperationException());
};
_.remove = function remove_31(key) {
  throw toJs(new jl.UnsupportedOperationException());
};
_.size = function size_19() {
  return ju.$size_1(this.map_0);
};
_.toString_0 = function toString_65() {
  return ju.$toString_16(this.map_0);
};
_.values = function values_10() {
  !this.values_0 &&
    (this.values_0 = new ju.Collections$UnmodifiableCollection(
      new ju.AbstractMap$2(this.map_0)
    ));
  return this.values_0;
};
cggl.Ljava_util_Collections$UnmodifiableMap_2_classLit = createForClass(
  "java.util",
  "Collections/UnmodifiableMap",
  749
);
ju.$hashCode_17 = function $hashCode_17(this$static) {
  return jl.hashCode__I__devirtual$(this$static.coll);
};
ju.$spliterator_3 = function $spliterator_3(this$static) {
  return new ju.Spliterators$IteratorSpliterator(this$static, 1);
};
ju.Collections$UnmodifiableSet = function Collections$UnmodifiableSet(set_0) {
  ju.Collections$UnmodifiableCollection.call(this, set_0);
};
defineClass(219, 353, $intern_14, ju.Collections$UnmodifiableSet);
_.spliterator_0 = function spliterator_7() {
  return ju.$spliterator_3(this);
};
_.equals_0 = function equals_62(o) {
  return jl.equals_Ljava_lang_Object__Z__devirtual$(this.coll, o);
};
_.hashCode_1 = function hashCode_64() {
  return ju.$hashCode_17(this);
};
cggl.Ljava_util_Collections$UnmodifiableSet_2_classLit = createForClass(
  "java.util",
  "Collections/UnmodifiableSet",
  219
);
ju.$wrap = function $wrap(array, size_0) {
  var i;
  for (i = 0; i < size_0; ++i) {
    setCheck(
      array,
      i,
      new ju.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(
        castTo(array[i], 27)
      )
    );
  }
};
ju.Collections$UnmodifiableMap$UnmodifiableEntrySet =
  function Collections$UnmodifiableMap$UnmodifiableEntrySet(s) {
    ju.Collections$UnmodifiableSet.call(this, s);
  };
defineClass(
  750,
  219,
  $intern_14,
  ju.Collections$UnmodifiableMap$UnmodifiableEntrySet
);
_.contains = function contains_13(o) {
  return this.coll.contains(o);
};
_.containsAll = function containsAll_1(o) {
  return this.coll.containsAll(o);
};
_.iterator_0 = function iterator_19() {
  var it;
  it = this.coll.iterator_0();
  return new ju.Collections$UnmodifiableMap$UnmodifiableEntrySet$1(it);
};
_.toArray = function toArray_7() {
  var array;
  array = this.coll.toArray();
  ju.$wrap(array, array.length);
  return array;
};
_.toArray_0 = function toArray_8(a) {
  var result;
  result = this.coll.toArray_0(a);
  ju.$wrap(result, this.coll.size());
  return result;
};
cggl.Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet_2_classLit =
  createForClass(
    "java.util",
    "Collections/UnmodifiableMap/UnmodifiableEntrySet",
    750
  );
ju.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 =
  function Collections$UnmodifiableMap$UnmodifiableEntrySet$1(val$it) {
    this.val$it2 = val$it;
  };
defineClass(
  752,
  1,
  $intern_12,
  ju.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
);
_.forEachRemaining = function forEachRemaining_14(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.next_1 = function next_18() {
  return new ju.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(
    castTo(this.val$it2.next_1(), 27)
  );
};
_.hasNext_1 = function hasNext_15() {
  return this.val$it2.hasNext_1();
};
_.remove_0 = function remove_32() {
  throw toJs(new jl.UnsupportedOperationException());
};
cggl.Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$1_2_classLit =
  createForClass(
    "java.util",
    "Collections/UnmodifiableMap/UnmodifiableEntrySet/1",
    752
  );
ju.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry =
  function Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(
    entry
  ) {
    this.entry = entry;
  };
defineClass(
  354,
  1,
  { 27: 1 },
  ju.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry
);
_.equals_0 = function equals_63(o) {
  return this.entry.equals_0(o);
};
_.getKey = function getKey_0() {
  return this.entry.getKey();
};
_.getValue_0 = function getValue_0() {
  return this.entry.getValue_0();
};
_.hashCode_1 = function hashCode_65() {
  return this.entry.hashCode_1();
};
_.setValue_0 = function setValue_0(value_0) {
  throw toJs(new jl.UnsupportedOperationException());
};
_.toString_0 = function toString_66() {
  return toString_7(this.entry);
};
cggl.Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_2_classLit =
  createForClass(
    "java.util",
    "Collections/UnmodifiableMap/UnmodifiableEntrySet/UnmodifiableEntry",
    354
  );
ju.$clinit_Comparators = function $clinit_Comparators() {
  ju.$clinit_Comparators = emptyMethod;
  ju.INTERNAL_NATURAL_ORDER = new ju.Comparators$NaturalOrderComparator();
};
ju.$compare = function $compare(a, b) {
  return (
    ji.checkCriticalNotNull(a),
    jl.compareTo_Ljava_lang_Object__I__devirtual$(
      a,
      (ji.checkCriticalNotNull(b), b)
    )
  );
};
ju.$compare_0 = function $compare_0(a, b) {
  return ju.$compare(castTo(a, 33), castTo(b, 33));
};
ju.Comparators$NaturalOrderComparator =
  function Comparators$NaturalOrderComparator() {};
defineClass(831, 1, $intern_64, ju.Comparators$NaturalOrderComparator);
_.compare_0 = function compare_7(a, b) {
  return ju.$compare_0(a, b);
};
_.equals_0 = function equals_64(other) {
  return this === other;
};
cggl.Ljava_util_Comparators$NaturalOrderComparator_2_classLit = createForClass(
  "java.util",
  "Comparators/NaturalOrderComparator",
  831
);
ju.checkStructuralChange = function checkStructuralChange(host, iterator) {
  if (iterator.$modCount != host.$modCount) {
    throw toJs(new ju.ConcurrentModificationException());
  }
};
ju.recordLastKnownStructure = function recordLastKnownStructure(
  host,
  iterator
) {
  iterator.$modCount = host.$modCount;
};
ju.structureChanged = function structureChanged(host) {
  var modCount, modCountable;
  modCountable = host;
  modCount = modCountable.$modCount | 0;
  modCountable.$modCount = modCount + 1;
};
ju.ConcurrentModificationException =
  function ConcurrentModificationException() {
    jl.RuntimeException.call(this);
  };
defineClass(873, 26, $intern_6, ju.ConcurrentModificationException);
cggl.Ljava_util_ConcurrentModificationException_2_classLit = createForClass(
  "java.util",
  "ConcurrentModificationException",
  873
);
ju.$clinit_Date$StringData = function $clinit_Date$StringData() {
  ju.$clinit_Date$StringData = emptyMethod;
  ju.DAYS = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
    $intern_8,
    2,
    6,
    ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
  );
  ju.MONTHS = stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_String_2_classLit, 1),
    $intern_8,
    2,
    6,
    [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec",
    ]
  );
};
ju.HashMap = function HashMap() {
  ju.AbstractHashMap.call(this);
};
ju.HashMap_0 = function HashMap_0(ignored) {
  ju.AbstractHashMap_0.call(this, ignored);
};
defineClass(40, 262, $intern_16, ju.HashMap, ju.HashMap_0);
_.equals_1 = function equals_65(value1, value2) {
  return (
    maskUndefined(value1) === maskUndefined(value2) ||
    (value1 != null &&
      jl.equals_Ljava_lang_Object__Z__devirtual$(value1, value2))
  );
};
_.getHashCode = function getHashCode(key) {
  var hashCode;
  hashCode = jl.hashCode__I__devirtual$(key);
  return hashCode | 0;
};
cggl.Ljava_util_HashMap_2_classLit = createForClass("java.util", "HashMap", 40);
ju.$add_0 = function $add_0(this$static, o) {
  var old;
  old = this$static.map_0.put(o, this$static);
  return old == null;
};
ju.$clear_2 = function $clear_2(this$static) {
  this$static.map_0.clear();
};
ju.$contains_4 = function $contains_4(this$static, o) {
  return this$static.map_0.containsKey(o);
};
ju.$isEmpty_2 = function $isEmpty_2(this$static) {
  return this$static.map_0.size() == 0;
};
ju.$iterator_12 = function $iterator_12(this$static) {
  var outerIter;
  return (
    (outerIter = new ju.AbstractMap$1(this$static.map_0).this$01
      .entrySet_0()
      .iterator_0()),
    new ju.AbstractMap$1$1(outerIter)
  );
};
ju.$remove_7 = function $remove_7(this$static, o) {
  return this$static.map_0.remove(o) != null;
};
ju.$size_4 = function $size_4(this$static) {
  return this$static.map_0.size();
};
ju.HashSet = function HashSet() {
  this.map_0 = new ju.HashMap();
};
ju.HashSet_0 = function HashSet_0() {
  this.map_0 = new ju.HashMap_0(1);
};
ju.HashSet_1 = function HashSet_1(c) {
  this.map_0 = new ju.HashMap_0(c.size());
  ju.$addAll(this, c);
};
ju.HashSet_2 = function HashSet_2(map_0) {
  this.map_0 = map_0;
};
defineClass(
  54,
  909,
  { 3: 1, 53: 1, 54: 1, 81: 1 },
  ju.HashSet,
  ju.HashSet_0,
  ju.HashSet_1
);
_.add = function add_13(o) {
  return ju.$add_0(this, o);
};
_.clear = function clear_12() {
  ju.$clear_2(this);
};
_.contains = function contains_14(o) {
  return ju.$contains_4(this, o);
};
_.isEmpty = function isEmpty_5() {
  return ju.$isEmpty_2(this);
};
_.iterator_0 = function iterator_20() {
  return ju.$iterator_12(this);
};
_.remove = function remove_33(o) {
  return ju.$remove_7(this, o);
};
_.size = function size_20() {
  return ju.$size_4(this);
};
cggl.Ljava_util_HashSet_2_classLit = createForClass("java.util", "HashSet", 54);
ju.IdentityHashMap = function IdentityHashMap() {
  ju.AbstractHashMap.call(this);
};
defineClass(298, 262, $intern_16, ju.IdentityHashMap);
_.equals_0 = function equals_66(obj) {
  var entry, entry$iterator, otherKey, otherMap, otherValue;
  if (obj === this) {
    return true;
  }
  if (!instanceOf(obj, 30)) {
    return false;
  }
  otherMap = castTo(obj, 30);
  if (this.hashCodeMap.size_0 + this.stringMap.size_0 != otherMap.size()) {
    return false;
  }
  for (
    entry$iterator = otherMap.entrySet_0().iterator_0();
    entry$iterator.hasNext_1();

  ) {
    entry = castTo(entry$iterator.next_1(), 27);
    otherKey = entry.getKey();
    otherValue = entry.getValue_0();
    if (
      !(instanceOfString(otherKey)
        ? ju.$hasStringValue(this, ji.uncheckedCast(otherKey))
        : !!ju.$getEntry(this.hashCodeMap, otherKey))
    ) {
      return false;
    }
    if (
      maskUndefined(otherValue) !==
      maskUndefined(
        instanceOfString(otherKey)
          ? ju.$getStringValue(this, ji.uncheckedCast(otherKey))
          : ju.getEntryValueOrNull(ju.$getEntry(this.hashCodeMap, otherKey))
      )
    ) {
      return false;
    }
  }
  return true;
};
_.equals_1 = function equals_67(value1, value2) {
  return maskUndefined(value1) === maskUndefined(value2);
};
_.getHashCode = function getHashCode_0(key) {
  return ji.getHashCode_1(key);
};
_.hashCode_1 = function hashCode_66() {
  var entry, entry$iterator, hashCode;
  hashCode = 0;
  for (
    entry$iterator = new ju.AbstractHashMap$EntrySetIterator(
      new ju.AbstractHashMap$EntrySet(this).this$01
    );
    entry$iterator.hasNext_0;

  ) {
    entry = ju.$next_3(entry$iterator);
    hashCode += (jl.$clinit_System(), ji.getIdentityHashCode(entry.getKey()));
    hashCode += ji.getIdentityHashCode(entry.getValue_0());
  }
  return hashCode;
};
cggl.Ljava_util_IdentityHashMap_2_classLit = createForClass(
  "java.util",
  "IdentityHashMap",
  298
);
ju.$$init_59 = function $$init_59(this$static) {};
ju.$accept_2 = function $accept_2(this$static, value_0) {
  this$static.count_0 = add_1(this$static.count_0, 1);
  this$static.min_0 = $wnd.Math.min(this$static.min_0, value_0);
  this$static.max_0 = $wnd.Math.max(this$static.max_0, value_0);
  this$static.sum_0 = add_1(
    this$static.sum_0,
    cggl.createSmallLongEmul0(value_0)
  );
};
ju.IntSummaryStatistics = function IntSummaryStatistics() {
  ju.$$init_59(this);
};
defineClass(874, 1, $intern_62, ju.IntSummaryStatistics);
_.accept_2 = function accept_91(value_0) {
  ju.$accept_2(this, value_0);
};
_.toString_0 = function toString_67() {
  return (
    "IntSummaryStatistics[count = " +
    toString_6(this.count_0) +
    ", avg = " +
    (gt(this.count_0, 0)
      ? toDouble_0(this.sum_0) / toDouble_0(this.count_0)
      : 0) +
    ", min = " +
    this.min_0 +
    ", max = " +
    this.max_0 +
    ", sum = " +
    toString_6(this.sum_0) +
    "]"
  );
};
_.count_0 = 0;
_.max_0 = $intern_22;
_.min_0 = $intern_1;
_.sum_0 = 0;
cggl.Ljava_util_IntSummaryStatistics_2_classLit = createForClass(
  "java.util",
  "IntSummaryStatistics",
  874
);
ju.$$init_60 = function $$init_60(this$static) {
  this$static.backingMap = ju.newJsMap();
};
ju.$findEntryInChain = function $findEntryInChain(this$static, key, chain) {
  var entry, entry$array, entry$index, entry$max;
  for (
    entry$array = chain, entry$index = 0, entry$max = entry$array.length;
    entry$index < entry$max;
    ++entry$index
  ) {
    entry = entry$array[entry$index];
    if (this$static.host_0.equals_1(key, entry.getKey())) {
      return entry;
    }
  }
  return null;
};
ju.$getChainOrEmpty = function $getChainOrEmpty(this$static, hashCode) {
  var chain;
  chain = ji.uncheckedCast(this$static.backingMap.get(hashCode));
  return chain == null ? ji.uncheckedCast(new Array()) : chain;
};
ju.$getEntry = function $getEntry(this$static, key) {
  return ju.$findEntryInChain(
    this$static,
    key,
    ju.$getChainOrEmpty(
      this$static,
      key == null ? 0 : this$static.host_0.getHashCode(key)
    )
  );
};
ju.$iterator_13 = function $iterator_13(this$static) {
  return new ju.InternalHashCodeMap$1(this$static);
};
ju.$put_4 = function $put_4(this$static, key, value_0) {
  var chain, chain0, entry, hashCode;
  hashCode = key == null ? 0 : this$static.host_0.getHashCode(key);
  chain0 =
    ((chain = ji.uncheckedCast(this$static.backingMap.get(hashCode))),
    chain == null ? ji.uncheckedCast(new Array()) : chain);
  if (chain0.length == 0) {
    this$static.backingMap.set(hashCode, chain0);
  } else {
    entry = ju.$findEntryInChain(this$static, key, chain0);
    if (entry) {
      return entry.setValue_0(value_0);
    }
  }
  setCheck(chain0, chain0.length, new ju.AbstractMap$SimpleEntry(key, value_0));
  ++this$static.size_0;
  ju.structureChanged(this$static.host_0);
  return null;
};
ju.$remove_8 = function $remove_8(this$static, key) {
  var chain, chain0, entry, hashCode, i;
  hashCode = key == null ? 0 : this$static.host_0.getHashCode(key);
  chain0 =
    ((chain = ji.uncheckedCast(this$static.backingMap.get(hashCode))),
    chain == null ? ji.uncheckedCast(new Array()) : chain);
  for (i = 0; i < chain0.length; i++) {
    entry = chain0[i];
    if (this$static.host_0.equals_1(key, entry.getKey())) {
      if (chain0.length == 1) {
        ji.uncheckedCast(chain0).length = 0;
        ju.$delete_0(this$static.backingMap, hashCode);
      } else {
        ji.uncheckedCast(chain0).splice(i, 1);
      }
      --this$static.size_0;
      ju.structureChanged(this$static.host_0);
      return entry.getValue_0();
    }
  }
  return null;
};
ju.InternalHashCodeMap = function InternalHashCodeMap(host) {
  ju.$$init_60(this);
  this.host_0 = host;
};
defineClass(823, 1, {}, ju.InternalHashCodeMap);
_.forEach_0 = function forEach_10(action) {
  jl.$forEach_2(this, action);
};
_.iterator_0 = function iterator_21() {
  return ju.$iterator_13(this);
};
_.size_0 = 0;
cggl.Ljava_util_InternalHashCodeMap_2_classLit = createForClass(
  "java.util",
  "InternalHashCodeMap",
  823
);
ju.$$init_61 = function $$init_61(this$static) {
  this$static.chains = this$static.this$01.backingMap.entries();
  this$static.chain = ji.uncheckedCast(new Array());
};
ju.InternalHashCodeMap$1 = function InternalHashCodeMap$1(this$0) {
  this.this$01 = this$0;
  ju.$$init_61(this);
};
defineClass(364, 1, $intern_12, ju.InternalHashCodeMap$1);
_.forEachRemaining = function forEachRemaining_15(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.next_1 = function next_19() {
  return (this.lastEntry = this.chain[this.itemIndex++]), this.lastEntry;
};
_.hasNext_1 = function hasNext_16() {
  var current;
  if (this.itemIndex < this.chain.length) {
    return true;
  }
  current = this.chains.next();
  if (!current.done) {
    this.chain = ji.uncheckedCast(ji.uncheckedCast(current.value[1]));
    this.itemIndex = 0;
    return true;
  }
  return false;
};
_.remove_0 = function remove_34() {
  ju.$remove_8(this.this$01, this.lastEntry.getKey());
  this.itemIndex != 0 && --this.itemIndex;
};
_.itemIndex = 0;
_.lastEntry = null;
cggl.Ljava_util_InternalHashCodeMap$1_2_classLit = createForClass(
  "java.util",
  "InternalHashCodeMap/1",
  364
);
ju.$delete_0 = function $delete_0(this$static, key) {
  var fn;
  fn = ji.getProperty_0(this$static, "delete");
  fn.call(this$static, key);
};
ju.$delete_1 = function $delete_1(this$static, key) {
  var fn;
  fn = ji.getProperty_0(this$static, "delete");
  fn.call(this$static, key);
};
ju.$clinit_InternalJsMapFactory = function $clinit_InternalJsMapFactory() {
  ju.$clinit_InternalJsMapFactory = emptyMethod;
  ju.jsMapCtor = ju.getJsMapConstructor();
};
ju.canHandleObjectCreateAndProto = function canHandleObjectCreateAndProto() {
  if (!Object.create || !Object.getOwnPropertyNames) {
    return false;
  }
  var protoField = "__proto__";
  var map_0 = Object.create(null);
  if (map_0[protoField] !== undefined) {
    return false;
  }
  var keys_0 = Object.getOwnPropertyNames(map_0);
  if (keys_0.length != 0) {
    return false;
  }
  map_0[protoField] = 42;
  if (map_0[protoField] !== 42) {
    return false;
  }
  if (Object.getOwnPropertyNames(map_0).length == 0) {
    return false;
  }
  return true;
};
ju.getJsMapConstructor = function getJsMapConstructor() {
  function isCorrectIterationProtocol() {
    try {
      return new Map().entries().next().done;
    } catch (e) {
      return false;
    }
  }

  if (
    typeof Map === "function" &&
    Map.prototype.entries &&
    isCorrectIterationProtocol()
  ) {
    return Map;
  } else {
    return ju.getJsMapPolyFill();
  }
};
ju.getJsMapPolyFill = function getJsMapPolyFill() {
  function Stringmap() {
    this.obj = this.createObject();
  }

  Stringmap.prototype.createObject = function (key) {
    return Object.create(null);
  };
  Stringmap.prototype.get = function (key) {
    return this.obj[key];
  };
  Stringmap.prototype.set = function (key, value_0) {
    this.obj[key] = value_0;
  };
  Stringmap.prototype["delete"] = function (key) {
    delete this.obj[key];
  };
  Stringmap.prototype.keys = function () {
    return Object.getOwnPropertyNames(this.obj);
  };
  Stringmap.prototype.entries = function () {
    var keys_0 = this.keys();
    var map_0 = this;
    var nextIndex = 0;
    return {
      next: function () {
        if (nextIndex >= keys_0.length) return { done: true };
        var key = keys_0[nextIndex++];
        return { value: [key, map_0.get(key)], done: false };
      },
    };
  };
  if (!ju.canHandleObjectCreateAndProto()) {
    Stringmap.prototype.createObject = function () {
      return {};
    };
    Stringmap.prototype.get = function (key) {
      return this.obj[":" + key];
    };
    Stringmap.prototype.set = function (key, value_0) {
      this.obj[":" + key] = value_0;
    };
    Stringmap.prototype["delete"] = function (key) {
      delete this.obj[":" + key];
    };
    Stringmap.prototype.keys = function () {
      var result = [];
      for (var key in this.obj) {
        key.charCodeAt(0) == 58 && result.push(key.substring(1));
      }
      return result;
    };
  }
  return Stringmap;
};
ju.newJsMap = function newJsMap() {
  ju.$clinit_InternalJsMapFactory();
  return new ju.jsMapCtor();
};
ju.$$init_62 = function $$init_62(this$static) {
  this$static.backingMap = ju.newJsMap();
};
ju.$contains_5 = function $contains_5(this$static, key) {
  return !ji.isUndefined(this$static.backingMap.get(key));
};
ju.$get_22 = function $get_22(this$static, key) {
  return this$static.backingMap.get(key);
};
ju.$iterator_14 = function $iterator_14(this$static) {
  return new ju.InternalStringMap$1(this$static);
};
ju.$put_5 = function $put_5(this$static, key, value_0) {
  var oldValue;
  oldValue = this$static.backingMap.get(key);
  this$static.backingMap.set(key, ji.isUndefined(value_0) ? null : value_0);
  if (ji.isUndefined(oldValue)) {
    ++this$static.size_0;
    ju.structureChanged(this$static.host_0);
  } else {
    ++this$static.valueMod;
  }
  return oldValue;
};
ju.$remove_9 = function $remove_9(this$static, key) {
  var value_0;
  value_0 = this$static.backingMap.get(key);
  if (ji.isUndefined(value_0)) {
    ++this$static.valueMod;
  } else {
    ju.$delete_1(this$static.backingMap, key);
    --this$static.size_0;
    ju.structureChanged(this$static.host_0);
  }
  return value_0;
};
ju.InternalStringMap = function InternalStringMap(host) {
  ju.$$init_62(this);
  this.host_0 = host;
};
defineClass(821, 1, {}, ju.InternalStringMap);
_.forEach_0 = function forEach_11(action) {
  jl.$forEach_2(this, action);
};
_.iterator_0 = function iterator_22() {
  return ju.$iterator_14(this);
};
_.size_0 = 0;
_.valueMod = 0;
cggl.Ljava_util_InternalStringMap_2_classLit = createForClass(
  "java.util",
  "InternalStringMap",
  821
);
ju.$$init_63 = function $$init_63(this$static) {
  this$static.entries_0 = this$static.this$01.backingMap.entries();
  this$static.current = this$static.entries_0.next();
};
ju.$next_9 = function $next_9(this$static) {
  this$static.last_0 = this$static.current;
  this$static.current = this$static.entries_0.next();
  return new ju.InternalStringMap$2(
    this$static.this$01,
    this$static.last_0,
    this$static.this$01.valueMod
  );
};
ju.InternalStringMap$1 = function InternalStringMap$1(this$0) {
  this.this$01 = this$0;
  ju.$$init_63(this);
};
defineClass(363, 1, $intern_12, ju.InternalStringMap$1);
_.forEachRemaining = function forEachRemaining_16(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.next_1 = function next_20() {
  return ju.$next_9(this);
};
_.hasNext_1 = function hasNext_17() {
  return !this.current.done;
};
_.remove_0 = function remove_35() {
  ju.$remove_9(this.this$01, ji.uncheckedCast(this.last_0.value[0]));
};
cggl.Ljava_util_InternalStringMap$1_2_classLit = createForClass(
  "java.util",
  "InternalStringMap/1",
  363
);
ju.$getKey_0 = function $getKey_0(this$static) {
  return ji.uncheckedCast(this$static.val$entry2.value[0]);
};
ju.$getValue_0 = function $getValue_0(this$static) {
  if (this$static.this$01.valueMod != this$static.val$lastValueMod3) {
    return ju.$get_22(
      this$static.this$01,
      ji.uncheckedCast(this$static.val$entry2.value[0])
    );
  }
  return ji.uncheckedCast(this$static.val$entry2.value[1]);
};
ju.InternalStringMap$2 = function InternalStringMap$2(
  this$0,
  val$entry,
  val$lastValueMod
) {
  this.this$01 = this$0;
  this.val$entry2 = val$entry;
  this.val$lastValueMod3 = val$lastValueMod;
};
defineClass(822, 933, { 27: 1 }, ju.InternalStringMap$2);
_.getKey = function getKey_1() {
  return ju.$getKey_0(this);
};
_.getValue_0 = function getValue_1() {
  return ju.$getValue_0(this);
};
_.setValue_0 = function setValue_1(object) {
  return ju.$put_5(
    this.this$01,
    ji.uncheckedCast(this.val$entry2.value[0]),
    object
  );
};
_.val$lastValueMod3 = 0;
cggl.Ljava_util_InternalStringMap$2_2_classLit = createForClass(
  "java.util",
  "InternalStringMap/2",
  822
);
ju.$$init_64 = function $$init_64(this$static) {
  this$static.head_0 = new ju.LinkedHashMap$ChainEntry(this$static);
  this$static.map_0 = new ju.HashMap();
};
ju.$clear_3 = function $clear_3(this$static) {
  ju.$reset(this$static.map_0);
  this$static.head_0.prev = this$static.head_0;
  this$static.head_0.next_0 = this$static.head_0;
};
ju.$put_6 = function $put_6(this$static, key, value_0) {
  var newEntry, old, oldValue;
  old = castTo(ju.$get_16(this$static.map_0, key), 162);
  if (!old) {
    newEntry = new ju.LinkedHashMap$ChainEntry_0(this$static, key, value_0);
    ju.$put_2(this$static.map_0, key, newEntry);
    ju.$addToEnd(newEntry);
    return null;
  } else {
    oldValue = ju.$setValue_0(old, value_0);
    ju.$recordAccess(this$static, old);
    return oldValue;
  }
};
ju.$recordAccess = function $recordAccess(this$static, entry) {
  if (this$static.accessOrder) {
    ju.$remove_12(entry);
    ju.$addToEnd(entry);
  }
};
ju.$remove_11 = function $remove_11(this$static, key) {
  var entry;
  entry = castTo(ju.$remove_0(this$static.map_0, key), 162);
  if (entry) {
    ju.$remove_12(entry);
    return entry.value_0;
  }
  return null;
};
ju.$size_5 = function $size_5(this$static) {
  return ju.$size_1(this$static.map_0);
};
ju.LinkedHashMap = function LinkedHashMap() {
  ju.HashMap.call(this);
  ju.$$init_64(this);
  this.head_0.prev = this.head_0;
  this.head_0.next_0 = this.head_0;
};
defineClass(190, 40, $intern_16, ju.LinkedHashMap);
_.clear = function clear_13() {
  ju.$clear_3(this);
};
_.containsKey = function containsKey_4(key) {
  return ju.$containsKey(this.map_0, key);
};
_.containsValue = function containsValue_3(value_0) {
  var node;
  node = this.head_0.next_0;
  while (node != this.head_0) {
    if (ju.equals_68(node.value_0, value_0)) {
      return true;
    }
    node = node.next_0;
  }
  return false;
};
_.entrySet_0 = function entrySet_3() {
  return new ju.LinkedHashMap$EntrySet(this);
};
_.get = function get_34(key) {
  var entry;
  entry = castTo(ju.$get_16(this.map_0, key), 162);
  if (entry) {
    ju.$recordAccess(this, entry);
    return entry.value_0;
  }
  return null;
};
_.put = function put_3(key, value_0) {
  return ju.$put_6(this, key, value_0);
};
_.remove = function remove_36(key) {
  return ju.$remove_11(this, key);
};
_.size = function size_21() {
  return ju.$size_5(this);
};
_.accessOrder = false;
cggl.Ljava_util_LinkedHashMap_2_classLit = createForClass(
  "java.util",
  "LinkedHashMap",
  190
);
ju.$addToEnd = function $addToEnd(this$static) {
  var tail;
  tail = this$static.this$01.head_0.prev;
  if (!(!!this$static.this$01.head_0 && !!tail)) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  if (!(!this$static.next_0 && !this$static.prev)) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  this$static.prev = tail;
  this$static.next_0 = this$static.this$01.head_0;
  tail.next_0 = this$static.this$01.head_0.prev = this$static;
};
ju.$remove_12 = function $remove_12(this$static) {
  this$static.next_0.prev = this$static.prev;
  this$static.prev.next_0 = this$static.next_0;
  this$static.next_0 = this$static.prev = null;
};
ju.LinkedHashMap$ChainEntry = function LinkedHashMap$ChainEntry(this$0) {
  ju.LinkedHashMap$ChainEntry_0.call(this, this$0, null, null);
};
ju.LinkedHashMap$ChainEntry_0 = function LinkedHashMap$ChainEntry_0(
  this$0,
  key,
  value_0
) {
  this.this$01 = this$0;
  ju.AbstractMap$SimpleEntry.call(this, key, value_0);
};
defineClass(
  162,
  160,
  { 214: 1, 160: 1, 162: 1, 27: 1 },
  ju.LinkedHashMap$ChainEntry,
  ju.LinkedHashMap$ChainEntry_0
);
cggl.Ljava_util_LinkedHashMap$ChainEntry_2_classLit = createForClass(
  "java.util",
  "LinkedHashMap/ChainEntry",
  162
);
ju.$contains_6 = function $contains_6(this$static, o) {
  if (instanceOf(o, 27)) {
    return ju.$containsEntry(this$static.this$01, castTo(o, 27));
  }
  return false;
};
ju.LinkedHashMap$EntrySet = function LinkedHashMap$EntrySet(this$0) {
  this.this$01 = this$0;
};
defineClass(814, 909, $intern_14, ju.LinkedHashMap$EntrySet);
_.clear = function clear_14() {
  ju.$clear_3(this.this$01);
};
_.contains = function contains_15(o) {
  return ju.$contains_6(this, o);
};
_.iterator_0 = function iterator_23() {
  return new ju.LinkedHashMap$EntrySet$EntryIterator(this);
};
_.remove = function remove_37(entry) {
  var key;
  if (ju.$contains_6(this, entry)) {
    key = castTo(entry, 27).getKey();
    ju.$remove_11(this.this$01, key);
    return true;
  }
  return false;
};
_.size = function size_22() {
  return ju.$size_1(this.this$01.map_0);
};
cggl.Ljava_util_LinkedHashMap$EntrySet_2_classLit = createForClass(
  "java.util",
  "LinkedHashMap/EntrySet",
  814
);
ju.$hasNext_9 = function $hasNext_9(this$static) {
  return this$static.next_0 != this$static.this$11.this$01.head_0;
};
ju.$next_10 = function $next_10(this$static) {
  ju.checkStructuralChange(this$static.this$11.this$01.map_0, this$static);
  ji.checkCriticalElement(
    this$static.next_0 != this$static.this$11.this$01.head_0
  );
  this$static.last_0 = this$static.next_0;
  this$static.next_0 = this$static.next_0.next_0;
  return this$static.last_0;
};
ju.LinkedHashMap$EntrySet$EntryIterator =
  function LinkedHashMap$EntrySet$EntryIterator(this$1) {
    this.this$11 = this$1;
    this.next_0 = this$1.this$01.head_0.next_0;
    ju.recordLastKnownStructure(this$1.this$01.map_0, this);
  };
defineClass(815, 1, $intern_12, ju.LinkedHashMap$EntrySet$EntryIterator);
_.forEachRemaining = function forEachRemaining_17(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.next_1 = function next_21() {
  return ju.$next_10(this);
};
_.hasNext_1 = function hasNext_18() {
  return ju.$hasNext_9(this);
};
_.remove_0 = function remove_38() {
  ji.checkCriticalState(!!this.last_0);
  ju.checkStructuralChange(this.this$11.this$01.map_0, this);
  ju.$remove_12(this.last_0);
  ju.$remove_0(this.this$11.this$01.map_0, this.last_0.key_0);
  ju.recordLastKnownStructure(this.this$11.this$01.map_0, this);
  this.last_0 = null;
};
cggl.Ljava_util_LinkedHashMap$EntrySet$EntryIterator_2_classLit =
  createForClass("java.util", "LinkedHashMap/EntrySet/EntryIterator", 815);
ju.LinkedHashSet = function LinkedHashSet() {
  ju.HashSet_2.call(this, new ju.LinkedHashMap());
};
defineClass(128, 54, { 3: 1, 53: 1, 54: 1, 128: 1, 81: 1 }, ju.LinkedHashSet);
cggl.Ljava_util_LinkedHashSet_2_classLit = createForClass(
  "java.util",
  "LinkedHashSet",
  128
);
ju.$clinit_Locale = function $clinit_Locale() {
  ju.$clinit_Locale = emptyMethod;
  ju.ROOT = new ju.Locale$1();
  ju.defaultLocale = new ju.Locale$4();
};
defineClass(894, 1, {});
cggl.Ljava_util_Locale_2_classLit = createForClass("java.util", "Locale", 894);
ju.Locale$1 = function Locale$1() {};
defineClass(389, 894, {}, ju.Locale$1);
_.toString_0 = function toString_68() {
  return "";
};
cggl.Ljava_util_Locale$1_2_classLit = createForClass(
  "java.util",
  "Locale/1",
  389
);
ju.Locale$4 = function Locale$4() {};
defineClass(390, 894, {}, ju.Locale$4);
_.toString_0 = function toString_69() {
  return "unknown";
};
cggl.Ljava_util_Locale$4_2_classLit = createForClass(
  "java.util",
  "Locale/4",
  390
);
ju.$$init_65 = function $$init_65(this$static) {};
ju.$accept_3 = function $accept_3(this$static, value_0) {
  this$static.count_0 = add_1(this$static.count_0, 1);
  this$static.min_0 = jl.min_1(this$static.min_0, value_0);
  this$static.max_0 = jl.max_1(this$static.max_0, value_0);
  this$static.sum_0 = add_1(this$static.sum_0, value_0);
};
ju.LongSummaryStatistics = function LongSummaryStatistics() {
  ju.$$init_65(this);
};
defineClass(835, 1, { 36: 1, 44: 1 }, ju.LongSummaryStatistics);
_.accept_2 = function accept_92(value_0) {
  ju.$accept_3(this, cggl.createSmallLongEmul0(value_0));
};
_.accept_0 = function accept_93(value_0) {
  ju.$accept_3(this, value_0);
};
_.toString_0 = function toString_70() {
  return (
    "LongSummaryStatistics[count = " +
    toString_6(this.count_0) +
    ", avg = " +
    (gt(this.count_0, 0)
      ? toDouble_0(this.sum_0) / toDouble_0(this.count_0)
      : 0) +
    ", min = " +
    toString_6(this.min_0) +
    ", max = " +
    toString_6(this.max_0) +
    ", sum = " +
    toString_6(this.sum_0) +
    "]"
  );
};
_.count_0 = 0;
_.max_0 = $intern_59;
_.min_0 = $intern_66;
_.sum_0 = 0;
cggl.Ljava_util_LongSummaryStatistics_2_classLit = createForClass(
  "java.util",
  "LongSummaryStatistics",
  835
);
ju.$clinit_Optional = function $clinit_Optional() {
  ju.$clinit_Optional = emptyMethod;
  ju.EMPTY_1 = new ju.Optional(null);
};
ju.$ifPresent = function $ifPresent(this$static, consumer) {
  this$static.ref != null && consumer.accept(this$static.ref);
};
ju.$map = function $map(this$static, mapper) {
  ji.checkCriticalNotNull(mapper);
  if (this$static.ref != null) {
    return ju.ofNullable(idwcawp.$apply_7(this$static.ref));
  }
  return ju.EMPTY_1;
};
ju.$orElseThrow = function $orElseThrow(this$static, exceptionSupplier) {
  if (this$static.ref != null) {
    return this$static.ref;
  }
  throw toJs(castTo(exceptionSupplier.get_0(), 25));
};
ju.Optional = function Optional(ref) {
  ju.$clinit_Optional();
  this.ref = ref;
};
ju.ofNullable = function ofNullable(value_0) {
  ju.$clinit_Optional();
  return value_0 == null
    ? ju.EMPTY_1
    : new ju.Optional(ji.checkCriticalNotNull(value_0));
};
defineClass(164, 1, { 164: 1 }, ju.Optional);
_.equals_0 = function equals_69(obj) {
  var other;
  if (obj === this) {
    return true;
  }
  if (!instanceOf(obj, 164)) {
    return false;
  }
  other = castTo(obj, 164);
  return ju.equals_68(this.ref, other.ref);
};
_.hashCode_1 = function hashCode_68() {
  return ju.hashCode_67(this.ref);
};
_.toString_0 = function toString_71() {
  return this.ref != null
    ? "Optional.of(" + valueOf_31(this.ref) + ")"
    : "Optional.empty()";
};
cggl.Ljava_util_Optional_2_classLit = createForClass(
  "java.util",
  "Optional",
  164
);
ju.$clinit_OptionalLong = function $clinit_OptionalLong() {
  ju.$clinit_OptionalLong = emptyMethod;
  ju.EMPTY_2 = new ju.OptionalLong();
};
ju.$orElseThrow_0 = function $orElseThrow_0(this$static, exceptionSupplier) {
  if (this$static.present) {
    return this$static.ref;
  }
  throw toJs(castTo(exceptionSupplier.get_0(), 25));
};
ju.OptionalLong = function OptionalLong() {
  this.ref = 0;
  this.present = false;
};
ju.OptionalLong_0 = function OptionalLong_0(value_0) {
  ju.$clinit_OptionalLong();
  this.ref = value_0;
  this.present = true;
};
defineClass(131, 1, { 131: 1 }, ju.OptionalLong, ju.OptionalLong_0);
_.equals_0 = function equals_70(obj) {
  var other;
  if (obj === this) {
    return true;
  }
  if (!instanceOf(obj, 131)) {
    return false;
  }
  other = castTo(obj, 131);
  return this.present == other.present && compare_6(this.ref, other.ref) == 0;
};
_.hashCode_1 = function hashCode_69() {
  return this.present ? toInt_0(this.ref) : 0;
};
_.toString_0 = function toString_72() {
  return this.present
    ? "OptionalLong.of(" + ("" + toString_6(this.ref)) + ")"
    : "OptionalLong.empty()";
};
_.present = false;
_.ref = 0;
cggl.Ljava_util_OptionalLong_2_classLit = createForClass(
  "java.util",
  "OptionalLong",
  131
);
ju.$forEachRemaining_1 = function $forEachRemaining_1(this$static, consumer) {
  instanceOf(consumer, 36)
    ? ju.$forEachRemaining_2(this$static, castTo(consumer, 36))
    : ju.$forEachRemaining_2(
        this$static,
        new ju.PrimitiveIterator$OfInt$1methodref$accept$Type(consumer)
      );
};
ju.$forEachRemaining_2 = function $forEachRemaining_2(this$static, consumer) {
  ji.checkCriticalNotNull(consumer);
  while (
    (this$static.hasElement ||
      (this$static.hasElement =
        this$static.spliterator.tryAdvance_0(this$static)),
    this$static.hasElement)
  ) {
    consumer.accept_2(ju.$nextInt(this$static));
  }
};
ju.$next_11 = function $next_11(this$static) {
  return jl.valueOf_29(ju.$nextInt(this$static));
};
ju.PrimitiveIterator$OfInt$1methodref$accept$Type =
  function PrimitiveIterator$OfInt$1methodref$accept$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  332,
  1,
  $intern_62,
  ju.PrimitiveIterator$OfInt$1methodref$accept$Type
);
_.accept_2 = function accept_94(arg0) {
  this.$$outer_0.accept(jl.valueOf_29(arg0));
};
cggl.Ljava_util_PrimitiveIterator$OfInt$1methodref$accept$Type_2_classLit =
  createForClass(
    "java.util",
    "PrimitiveIterator/OfInt/1methodref$accept$Type",
    332
  );
ju.$forEachRemaining_3 = function $forEachRemaining_3(this$static, consumer) {
  instanceOf(consumer, 44)
    ? ju.$forEachRemaining_4(this$static, castTo(consumer, 44))
    : ju.$forEachRemaining_4(
        this$static,
        new ju.PrimitiveIterator$OfLong$2methodref$accept$Type(consumer)
      );
};
ju.$forEachRemaining_4 = function $forEachRemaining_4(this$static, consumer) {
  ji.checkCriticalNotNull(consumer);
  while (
    (this$static.hasElement ||
      (this$static.hasElement =
        this$static.spliterator.tryAdvance_0(this$static)),
    this$static.hasElement)
  ) {
    consumer.accept_0(ju.$nextLong(this$static));
  }
};
ju.$next_12 = function $next_12(this$static) {
  return jl.valueOf_30(ju.$nextLong(this$static));
};
ju.PrimitiveIterator$OfLong$2methodref$accept$Type =
  function PrimitiveIterator$OfLong$2methodref$accept$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(
  333,
  1,
  $intern_42,
  ju.PrimitiveIterator$OfLong$2methodref$accept$Type
);
_.accept_0 = function accept_95(arg0) {
  this.$$outer_0.accept(jl.valueOf_30(arg0));
};
cggl.Ljava_util_PrimitiveIterator$OfLong$2methodref$accept$Type_2_classLit =
  createForClass(
    "java.util",
    "PrimitiveIterator/OfLong/2methodref$accept$Type",
    333
  );
ju.$initIterator = function $initIterator(this$static) {
  if (!this$static.it) {
    this$static.it = this$static.collection.iterator_0();
    this$static.estimateSize = fromInt(this$static.collection.size());
  }
};
ju.$tryAdvance = function $tryAdvance(this$static, consumer) {
  ji.checkCriticalNotNull(consumer);
  ju.$initIterator(this$static);
  if (this$static.it.hasNext_1()) {
    consumer.accept(this$static.it.next_1());
    return true;
  }
  return false;
};
ju.Spliterators$IteratorSpliterator = function Spliterators$IteratorSpliterator(
  collection,
  characteristics
) {
  this.collection = (ji.checkCriticalNotNull(collection), collection);
  this.characteristics =
    (characteristics & 4096) == 0
      ? characteristics | 64 | 16384
      : characteristics;
};
ju.Spliterators$IteratorSpliterator_0 =
  function Spliterators$IteratorSpliterator_0(it) {
    this.it = (ji.checkCriticalNotNull(it), it);
    this.characteristics = 0;
    this.estimateSize = $intern_66;
  };
ju.Spliterators$IteratorSpliterator_1 =
  function Spliterators$IteratorSpliterator_1(it) {
    this.it = (ji.checkCriticalNotNull(it), it);
    this.characteristics = 16448;
    this.estimateSize = $intern_66;
  };
defineClass(
  22,
  1,
  {},
  ju.Spliterators$IteratorSpliterator,
  ju.Spliterators$IteratorSpliterator_0,
  ju.Spliterators$IteratorSpliterator_1
);
_.characteristics_0 = function characteristics_0() {
  return this.characteristics;
};
_.estimateSize_0 = function estimateSize() {
  ju.$initIterator(this);
  return this.estimateSize;
};
_.forEachRemaining = function forEachRemaining_18(consumer) {
  ju.$initIterator(this);
  this.it.forEachRemaining(consumer);
};
_.tryAdvance = function tryAdvance(consumer) {
  return ju.$tryAdvance(this, consumer);
};
_.characteristics = 0;
_.estimateSize = 0;
cggl.Ljava_util_Spliterators$IteratorSpliterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/IteratorSpliterator",
  22
);
ju.SortedSet$1 = function SortedSet$1($anonymous0) {
  ju.Spliterators$IteratorSpliterator.call(this, $anonymous0, 21);
};
defineClass(355, 22, {}, ju.SortedSet$1);
cggl.Ljava_util_SortedSet$1_2_classLit = createForClass(
  "java.util",
  "SortedSet/1",
  355
);
ju.$forEachRemaining_8 = function $forEachRemaining_8(this$static, consumer) {
  while (this$static.tryAdvance_0(consumer));
};
ju.$forEachRemaining_6 = function $forEachRemaining_6(this$static, consumer) {
  instanceOf(consumer, 36)
    ? this$static.forEachRemaining_0(castTo(consumer, 36))
    : this$static.forEachRemaining_0(
        new ju.Spliterator$OfInt$3methodref$accept$Type(consumer)
      );
};
ju.$tryAdvance_0 = function $tryAdvance_0(this$static, consumer) {
  return instanceOf(consumer, 36)
    ? this$static.tryAdvance_0(castTo(consumer, 36))
    : this$static.tryAdvance_0(
        new ju.Spliterator$OfInt$2methodref$accept$Type(consumer)
      );
};
ju.Spliterator$OfInt$2methodref$accept$Type =
  function Spliterator$OfInt$2methodref$accept$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(234, 1, $intern_62, ju.Spliterator$OfInt$2methodref$accept$Type);
_.accept_2 = function accept_96(arg0) {
  this.$$outer_0.accept(jl.valueOf_29(arg0));
};
cggl.Ljava_util_Spliterator$OfInt$2methodref$accept$Type_2_classLit =
  createForClass("java.util", "Spliterator/OfInt/2methodref$accept$Type", 234);
ju.Spliterator$OfInt$3methodref$accept$Type =
  function Spliterator$OfInt$3methodref$accept$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(235, 1, $intern_62, ju.Spliterator$OfInt$3methodref$accept$Type);
_.accept_2 = function accept_97(arg0) {
  this.$$outer_0.accept(jl.valueOf_29(arg0));
};
cggl.Ljava_util_Spliterator$OfInt$3methodref$accept$Type_2_classLit =
  createForClass("java.util", "Spliterator/OfInt/3methodref$accept$Type", 235);
ju.$forEachRemaining_7 = function $forEachRemaining_7(this$static, consumer) {
  instanceOf(consumer, 44)
    ? this$static.forEachRemaining_0(castTo(consumer, 44))
    : this$static.forEachRemaining_0(
        new ju.Spliterator$OfLong$5methodref$accept$Type(consumer)
      );
};
ju.$tryAdvance_1 = function $tryAdvance_1(this$static, consumer) {
  return instanceOf(consumer, 44)
    ? this$static.tryAdvance_0(castTo(consumer, 44))
    : this$static.tryAdvance_0(
        new ju.Spliterator$OfLong$4methodref$accept$Type(consumer)
      );
};
ju.Spliterator$OfLong$4methodref$accept$Type =
  function Spliterator$OfLong$4methodref$accept$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(280, 1, $intern_42, ju.Spliterator$OfLong$4methodref$accept$Type);
_.accept_0 = function accept_98(arg0) {
  this.$$outer_0.accept(jl.valueOf_30(arg0));
};
cggl.Ljava_util_Spliterator$OfLong$4methodref$accept$Type_2_classLit =
  createForClass("java.util", "Spliterator/OfLong/4methodref$accept$Type", 280);
ju.Spliterator$OfLong$5methodref$accept$Type =
  function Spliterator$OfLong$5methodref$accept$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(281, 1, $intern_42, ju.Spliterator$OfLong$5methodref$accept$Type);
_.accept_0 = function accept_99(arg0) {
  this.$$outer_0.accept(jl.valueOf_30(arg0));
};
cggl.Ljava_util_Spliterator$OfLong$5methodref$accept$Type_2_classLit =
  createForClass("java.util", "Spliterator/OfLong/5methodref$accept$Type", 281);
ju.$forEachRemaining_9 = function $forEachRemaining_9(this$static, consumer) {
  ju.$forEachRemaining_8(this$static, consumer);
};
ju.Spliterators$AbstractIntSpliterator =
  function Spliterators$AbstractIntSpliterator(size_0, characteristics) {
    ju.Spliterators$BaseSpliterator.call(this, size_0, characteristics);
  };
defineClass(233, 279, {});
_.forEachRemaining_0 = function forEachRemaining_20(consumer) {
  ju.$forEachRemaining_9(this, consumer);
};
_.forEachRemaining = function forEachRemaining_21(consumer) {
  instanceOf(consumer, 36)
    ? ju.$forEachRemaining_8(this, castTo(consumer, 36))
    : ju.$forEachRemaining_8(
        this,
        new ju.Spliterator$OfInt$3methodref$accept$Type(consumer)
      );
};
_.tryAdvance = function tryAdvance_0(consumer) {
  return instanceOf(consumer, 36)
    ? this.tryAdvance_0(castTo(consumer, 36))
    : this.tryAdvance_0(
        new ju.Spliterator$OfInt$2methodref$accept$Type(consumer)
      );
};
cggl.Ljava_util_Spliterators$AbstractIntSpliterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/AbstractIntSpliterator",
  233
);
ju.Spliterators$AbstractLongSpliterator =
  function Spliterators$AbstractLongSpliterator(size_0, characteristics) {
    ju.Spliterators$BaseSpliterator.call(this, size_0, characteristics);
  };
defineClass(236, 279, {});
_.forEachRemaining_0 = function forEachRemaining_22(consumer) {
  ju.$forEachRemaining_8(this, consumer);
};
_.forEachRemaining = function forEachRemaining_23(consumer) {
  instanceOf(consumer, 44)
    ? this.forEachRemaining_0(castTo(consumer, 44))
    : this.forEachRemaining_0(
        new ju.Spliterator$OfLong$5methodref$accept$Type(consumer)
      );
};
_.tryAdvance = function tryAdvance_1(consumer) {
  return instanceOf(consumer, 44)
    ? this.tryAdvance_0(castTo(consumer, 44))
    : this.tryAdvance_0(
        new ju.Spliterator$OfLong$4methodref$accept$Type(consumer)
      );
};
cggl.Ljava_util_Spliterators$AbstractLongSpliterator_2_classLit =
  createForClass("java.util", "Spliterators/AbstractLongSpliterator", 236);
ju.$$init_66 = function $$init_66(this$static) {};
ju.$hasNext_10 = function $hasNext_10(this$static) {
  this$static.hasElement ||
    (this$static.hasElement = this$static.spliterator.tryAdvance(this$static));
  return this$static.hasElement;
};
ju.$next_13 = function $next_13(this$static) {
  var element;
  ji.checkCriticalElement(
    (this$static.hasElement ||
      (this$static.hasElement =
        this$static.spliterator.tryAdvance(this$static)),
    this$static.hasElement)
  );
  this$static.hasElement = false;
  element = this$static.nextElement;
  this$static.nextElement = null;
  return element;
};
ju.Spliterators$ConsumerIterator = function Spliterators$ConsumerIterator(
  spliterator
) {
  ju.$$init_66(this);
  this.spliterator = (ji.checkCriticalNotNull(spliterator), spliterator);
};
defineClass(384, 1, { 56: 1, 15: 1 }, ju.Spliterators$ConsumerIterator);
_.forEachRemaining = function forEachRemaining_26(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.remove_0 = function remove_39() {
  ju.$remove_10();
};
_.accept = function accept_100(element) {
  this.nextElement = element;
};
_.hasNext_1 = function hasNext_19() {
  return ju.$hasNext_10(this);
};
_.next_1 = function next_22() {
  return ju.$next_13(this);
};
_.hasElement = false;
cggl.Ljava_util_Spliterators$ConsumerIterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/ConsumerIterator",
  384
);
ju.$clinit_Spliterators$EmptySpliterator =
  function $clinit_Spliterators$EmptySpliterator() {
    ju.$clinit_Spliterators$EmptySpliterator = emptyMethod;
    ju.OF_REF = new ju.Spliterators$EmptySpliterator$OfRef();
    ju.$clinit_Spliterators$EmptySpliterator();
    ju.OF_INT = new ju.Spliterators$EmptySpliterator$OfInt();
    ju.OF_LONG = new ju.Spliterators$EmptySpliterator$OfLong();
  };
defineClass(893, 1, {});
_.forEachRemaining = function forEachRemaining_27(consumer) {
  ju.$forEachRemaining_5(this, consumer);
};
_.characteristics_0 = function characteristics_3() {
  return 16448;
};
_.estimateSize_0 = function estimateSize_2() {
  return 0;
};
cggl.Ljava_util_Spliterators$EmptySpliterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/EmptySpliterator",
  893
);
ju.$forEachRemaining_11 = function $forEachRemaining_11(consumer) {
  ji.checkCriticalNotNull(consumer);
};
ju.$tryAdvance_3 = function $tryAdvance_3(consumer) {
  return ji.checkCriticalNotNull(consumer), false;
};
ju.Spliterators$EmptySpliterator$OfInt =
  function Spliterators$EmptySpliterator$OfInt() {};
defineClass(382, 893, {}, ju.Spliterators$EmptySpliterator$OfInt);
_.forEachRemaining_0 = function forEachRemaining_28(consumer) {
  ju.$forEachRemaining_11(consumer);
};
_.forEachRemaining = function forEachRemaining_29(consumer) {
  instanceOf(consumer, 36)
    ? ju.$forEachRemaining_11(castTo(consumer, 36))
    : ju.$forEachRemaining_11(
        new ju.Spliterator$OfInt$3methodref$accept$Type(consumer)
      );
};
_.tryAdvance_0 = function tryAdvance_3(consumer) {
  return ju.$tryAdvance_3(consumer);
};
_.tryAdvance = function tryAdvance_4(consumer) {
  return instanceOf(consumer, 36)
    ? ju.$tryAdvance_3(castTo(consumer, 36))
    : ju.$tryAdvance_3(
        new ju.Spliterator$OfInt$2methodref$accept$Type(consumer)
      );
};
cggl.Ljava_util_Spliterators$EmptySpliterator$OfInt_2_classLit = createForClass(
  "java.util",
  "Spliterators/EmptySpliterator/OfInt",
  382
);
ju.$forEachRemaining_12 = function $forEachRemaining_12(consumer) {
  ji.checkCriticalNotNull(consumer);
};
ju.$tryAdvance_4 = function $tryAdvance_4(consumer) {
  return ji.checkCriticalNotNull(consumer), false;
};
ju.Spliterators$EmptySpliterator$OfLong =
  function Spliterators$EmptySpliterator$OfLong() {};
defineClass(383, 893, {}, ju.Spliterators$EmptySpliterator$OfLong);
_.forEachRemaining_0 = function forEachRemaining_30(consumer) {
  ju.$forEachRemaining_12(consumer);
};
_.forEachRemaining = function forEachRemaining_31(consumer) {
  instanceOf(consumer, 44)
    ? ju.$forEachRemaining_12(castTo(consumer, 44))
    : ju.$forEachRemaining_12(
        new ju.Spliterator$OfLong$5methodref$accept$Type(consumer)
      );
};
_.tryAdvance_0 = function tryAdvance_5(consumer) {
  return ju.$tryAdvance_4(consumer);
};
_.tryAdvance = function tryAdvance_6(consumer) {
  return instanceOf(consumer, 44)
    ? ju.$tryAdvance_4(castTo(consumer, 44))
    : ju.$tryAdvance_4(
        new ju.Spliterator$OfLong$4methodref$accept$Type(consumer)
      );
};
cggl.Ljava_util_Spliterators$EmptySpliterator$OfLong_2_classLit =
  createForClass("java.util", "Spliterators/EmptySpliterator/OfLong", 383);
ju.Spliterators$EmptySpliterator$OfRef =
  function Spliterators$EmptySpliterator$OfRef() {};
defineClass(381, 893, {}, ju.Spliterators$EmptySpliterator$OfRef);
_.forEachRemaining = function forEachRemaining_32(consumer) {
  ji.checkCriticalNotNull(consumer);
};
_.tryAdvance = function tryAdvance_7(consumer) {
  return ji.checkCriticalNotNull(consumer), false;
};
cggl.Ljava_util_Spliterators$EmptySpliterator$OfRef_2_classLit = createForClass(
  "java.util",
  "Spliterators/EmptySpliterator/OfRef",
  381
);
ju.$consume_0 = function $consume_0(this$static, consumer, index_0) {
  consumer.accept_2(this$static.array[index_0]);
};
ju.$forEachRemaining_13 = function $forEachRemaining_13(this$static, consumer) {
  ju.$forEachRemaining_10(this$static, consumer);
};
ju.$tryAdvance_5 = function $tryAdvance_5(this$static, consumer) {
  return ju.$tryAdvance_2(this$static, consumer);
};
ju.Spliterators$IntArraySpliterator = function Spliterators$IntArraySpliterator(
  array,
  limit
) {
  ju.Spliterators$BaseArraySpliterator.call(this, limit);
  this.array = array;
};
defineClass(387, 336, {}, ju.Spliterators$IntArraySpliterator);
_.consume = function consume_0(consumer, index_0) {
  ju.$consume_0(this, castTo(consumer, 36), index_0);
};
_.forEachRemaining_0 = function forEachRemaining_33(consumer) {
  ju.$forEachRemaining_13(this, consumer);
};
_.forEachRemaining = function forEachRemaining_34(consumer) {
  instanceOf(consumer, 36)
    ? ju.$forEachRemaining_10(this, castTo(consumer, 36))
    : ju.$forEachRemaining_10(
        this,
        new ju.Spliterator$OfInt$3methodref$accept$Type(consumer)
      );
};
_.tryAdvance_0 = function tryAdvance_8(consumer) {
  return ju.$tryAdvance_5(this, consumer);
};
_.tryAdvance = function tryAdvance_9(consumer) {
  return instanceOf(consumer, 36)
    ? ju.$tryAdvance_2(this, castTo(consumer, 36))
    : ju.$tryAdvance_2(
        this,
        new ju.Spliterator$OfInt$2methodref$accept$Type(consumer)
      );
};
cggl.Ljava_util_Spliterators$IntArraySpliterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/IntArraySpliterator",
  387
);
ju.$$init_67 = function $$init_67(this$static) {};
ju.$hasNext_11 = function $hasNext_11(this$static) {
  this$static.hasElement ||
    (this$static.hasElement =
      this$static.spliterator.tryAdvance_0(this$static));
  return this$static.hasElement;
};
ju.$nextInt = function $nextInt(this$static) {
  ji.checkCriticalElement(
    (this$static.hasElement ||
      (this$static.hasElement =
        this$static.spliterator.tryAdvance_0(this$static)),
    this$static.hasElement)
  );
  this$static.hasElement = false;
  return this$static.nextElement;
};
ju.Spliterators$IntConsumerIterator = function Spliterators$IntConsumerIterator(
  spliterator
) {
  ju.$$init_67(this);
  this.spliterator = (ji.checkCriticalNotNull(spliterator), spliterator);
};
defineClass(237, 1, { 56: 1, 36: 1 }, ju.Spliterators$IntConsumerIterator);
_.forEachRemaining = function forEachRemaining_35(consumer) {
  instanceOf(consumer, 36)
    ? ju.$forEachRemaining_2(this, castTo(consumer, 36))
    : ju.$forEachRemaining_2(
        this,
        new ju.PrimitiveIterator$OfInt$1methodref$accept$Type(consumer)
      );
};
_.next_1 = function next_23() {
  return jl.valueOf_29(ju.$nextInt(this));
};
_.remove_0 = function remove_40() {
  ju.$remove_10();
};
_.accept_2 = function accept_101(i) {
  this.nextElement = i;
};
_.hasNext_1 = function hasNext_20() {
  return ju.$hasNext_11(this);
};
_.hasElement = false;
_.nextElement = 0;
cggl.Ljava_util_Spliterators$IntConsumerIterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/IntConsumerIterator",
  237
);
ju.$$init_68 = function $$init_68(this$static) {};
ju.$hasNext_12 = function $hasNext_12(this$static) {
  this$static.hasElement ||
    (this$static.hasElement =
      this$static.spliterator.tryAdvance_0(this$static));
  return this$static.hasElement;
};
ju.$nextLong = function $nextLong(this$static) {
  ji.checkCriticalElement(
    (this$static.hasElement ||
      (this$static.hasElement =
        this$static.spliterator.tryAdvance_0(this$static)),
    this$static.hasElement)
  );
  this$static.hasElement = false;
  return this$static.nextElement;
};
ju.Spliterators$LongConsumerIterator =
  function Spliterators$LongConsumerIterator(spliterator) {
    ju.$$init_68(this);
    this.spliterator = (ji.checkCriticalNotNull(spliterator), spliterator);
  };
defineClass(238, 1, { 56: 1, 44: 1 }, ju.Spliterators$LongConsumerIterator);
_.forEachRemaining = function forEachRemaining_36(consumer) {
  instanceOf(consumer, 44)
    ? ju.$forEachRemaining_4(this, castTo(consumer, 44))
    : ju.$forEachRemaining_4(
        this,
        new ju.PrimitiveIterator$OfLong$2methodref$accept$Type(consumer)
      );
};
_.next_1 = function next_24() {
  return jl.valueOf_30(ju.$nextLong(this));
};
_.remove_0 = function remove_41() {
  ju.$remove_10();
};
_.accept_0 = function accept_102(l) {
  this.nextElement = l;
};
_.hasNext_1 = function hasNext_21() {
  return ju.$hasNext_12(this);
};
_.hasElement = false;
_.nextElement = 0;
cggl.Ljava_util_Spliterators$LongConsumerIterator_2_classLit = createForClass(
  "java.util",
  "Spliterators/LongConsumerIterator",
  238
);
ju.$forEachRemaining_14 = function $forEachRemaining_14(this$static, consumer) {
  ju.$forEachRemaining_4(this$static.it, consumer);
};
ju.$tryAdvance_6 = function $tryAdvance_6(this$static, consumer) {
  ji.checkCriticalNotNull(consumer);
  if (ju.$hasNext_12(this$static.it)) {
    consumer.accept_0(ju.$nextLong(this$static.it));
    return true;
  }
  return false;
};
ju.Spliterators$LongIteratorSpliterator =
  function Spliterators$LongIteratorSpliterator(it) {
    ju.Spliterators$AbstractLongSpliterator.call(this, $intern_66, 16448);
    this.it = (ji.checkCriticalNotNull(it), it);
  };
defineClass(385, 236, {}, ju.Spliterators$LongIteratorSpliterator);
_.forEachRemaining_0 = function forEachRemaining_37(consumer) {
  ju.$forEachRemaining_14(this, castTo(consumer, 44));
};
_.tryAdvance_0 = function tryAdvance_10(consumer) {
  return ju.$tryAdvance_6(this, castTo(consumer, 44));
};
cggl.Ljava_util_Spliterators$LongIteratorSpliterator_2_classLit =
  createForClass("java.util", "Spliterators/LongIteratorSpliterator", 385);
ju.$add_1 = function $add_1(this$static, newElement) {
  !this$static.builder
    ? (this$static.builder = new jl.StringBuilder_1(this$static.prefix))
    : jl.$append_9(this$static.builder, this$static.delimiter);
  jl.$append_6(this$static.builder, newElement);
  return this$static;
};
ju.$merge_2 = function $merge_2(this$static, other) {
  var otherLength;
  if (other.builder) {
    otherLength = ji.uncheckedCast(other.builder.string).length;
    !this$static.builder
      ? (this$static.builder = new jl.StringBuilder_1(this$static.prefix))
      : jl.$append_9(this$static.builder, this$static.delimiter);
    jl.$append_7(
      this$static.builder,
      other.builder,
      ji.uncheckedCast(other.prefix).length,
      otherLength
    );
  }
  return this$static;
};
ju.$toString_18 = function $toString_18(this$static) {
  return !this$static.builder
    ? this$static.emptyValue
    : ji.uncheckedCast(this$static.suffix).length == 0
    ? this$static.builder.string
    : this$static.builder.string + ("" + this$static.suffix);
};
ju.StringJoiner = function StringJoiner(delimiter, prefix, suffix) {
  this.delimiter = (ji.checkCriticalNotNull(delimiter), delimiter);
  this.prefix = (ji.checkCriticalNotNull(prefix), prefix);
  this.suffix = (ji.checkCriticalNotNull(suffix), suffix);
  this.emptyValue = this.prefix + ("" + this.suffix);
};
defineClass(132, 1, { 132: 1 }, ju.StringJoiner);
_.toString_0 = function toString_73() {
  return ju.$toString_18(this);
};
cggl.Ljava_util_StringJoiner_2_classLit = createForClass(
  "java.util",
  "StringJoiner",
  132
);
ju.$$init_69 = function $$init_69(this$static) {};
ju.$clear_4 = function $clear_4(this$static) {
  this$static.root_0 = null;
  this$static.size_0 = 0;
};
ju.$getEntry_0 = function $getEntry_0(this$static, key) {
  var c, childNum, tree;
  tree = this$static.root_0;
  while (tree) {
    c = ju.$compare_0(key, tree.key_0);
    if (c == 0) {
      return tree;
    }
    childNum = c < 0 ? 0 : 1;
    tree = tree.child[childNum];
  }
  return null;
};
ju.$getNodeAfter = function $getNodeAfter(this$static, key, inclusive) {
  var c, foundNode, node;
  foundNode = null;
  node = this$static.root_0;
  while (node) {
    c = ju.$compare_0(key, node.key_0);
    if (inclusive && c == 0) {
      return node;
    }
    if (c >= 0) {
      node = node.child[1];
    } else {
      foundNode = node;
      node = node.child[0];
    }
  }
  return foundNode;
};
ju.$inOrderAdd = function $inOrderAdd(
  this$static,
  list,
  type_0,
  current,
  fromKey,
  fromInclusive,
  toKey,
  toInclusive
) {
  var leftNode, rightNode;
  if (!current) {
    return;
  }
  leftNode = current.child[0];
  !!leftNode &&
    ju.$inOrderAdd(
      this$static,
      list,
      type_0,
      leftNode,
      fromKey,
      fromInclusive,
      toKey,
      toInclusive
    );
  ju.$inRange(
    this$static,
    type_0,
    current.key_0,
    fromKey,
    fromInclusive,
    toKey,
    toInclusive
  ) && list.add(current);
  rightNode = current.child[1];
  !!rightNode &&
    ju.$inOrderAdd(
      this$static,
      list,
      type_0,
      rightNode,
      fromKey,
      fromInclusive,
      toKey,
      toInclusive
    );
};
ju.$inRange = function $inRange(
  this$static,
  type_0,
  key,
  fromKey,
  fromInclusive,
  toKey,
  toInclusive
) {
  var compare, compare0;
  if (
    type_0.fromKeyValid() &&
    ((compare0 = ju.$compare_0(key, fromKey)),
    compare0 < 0 || (!fromInclusive && compare0 == 0))
  ) {
    return false;
  }
  if (
    type_0.toKeyValid() &&
    ((compare = ju.$compare_0(key, toKey)),
    compare > 0 || (!toInclusive && compare == 0))
  ) {
    return false;
  }
  return true;
};
ju.$insert_0 = function $insert_0(this$static, tree, newNode, state) {
  var c, childNum;
  if (!tree) {
    return newNode;
  } else {
    c = ju.$compare_0(newNode.key_0, tree.key_0);
    if (c == 0) {
      state.value_0 = ju.$setValue_0(tree, newNode.value_0);
      state.found = true;
      return tree;
    }
    childNum = c < 0 ? 0 : 1;
    tree.child[childNum] = ju.$insert_0(
      this$static,
      tree.child[childNum],
      newNode,
      state
    );
    if (ju.$isRed(tree.child[childNum])) {
      if (ju.$isRed(tree.child[ju.otherChild(childNum)])) {
        tree.isRed = true;
        tree.child[0].isRed = false;
        tree.child[1].isRed = false;
      } else {
        ju.$isRed(tree.child[childNum].child[childNum])
          ? (tree = ju.$rotateSingle(tree, ju.otherChild(childNum)))
          : ju.$isRed(tree.child[childNum].child[ju.otherChild(childNum)]) &&
            (tree = ju.$rotateDouble(tree, ju.otherChild(childNum)));
      }
    }
  }
  return tree;
};
ju.$isRed = function $isRed(node) {
  return !!node && node.isRed;
};
ju.$put_7 = function $put_7(this$static, key, value_0) {
  var node, state;
  node = new ju.TreeMap$Node(key, value_0);
  state = new ju.TreeMap$State();
  this$static.root_0 = ju.$insert_0(
    this$static,
    this$static.root_0,
    node,
    state
  );
  state.found || ++this$static.size_0;
  this$static.root_0.isRed = false;
  return state.value_0;
};
ju.$remove_13 = function $remove_13(this$static, k) {
  var key, state;
  key = k;
  state = new ju.TreeMap$State();
  ju.$removeWithState(this$static, key, state);
  return state.value_0;
};
ju.$removeEntry = function $removeEntry(this$static, entry) {
  var state;
  state = new ju.TreeMap$State();
  state.matchValue = true;
  state.value_0 = entry.getValue_0();
  return ju.$removeWithState(this$static, entry.getKey(), state);
};
ju.$removeWithState = function $removeWithState(this$static, key, state) {
  var c,
    dir_0,
    dir2,
    found,
    grandparent,
    head,
    last,
    newNode,
    node,
    parent_0,
    sibling;
  if (!this$static.root_0) {
    return false;
  }
  found = null;
  parent_0 = null;
  head = new ju.TreeMap$Node(null, null);
  dir_0 = 1;
  head.child[1] = this$static.root_0;
  node = head;
  while (node.child[dir_0]) {
    last = dir_0;
    grandparent = parent_0;
    parent_0 = node;
    node = node.child[dir_0];
    c = ju.$compare_0(key, node.key_0);
    dir_0 = c < 0 ? 0 : 1;
    c == 0 &&
      (!state.matchValue || ju.equals_68(node.value_0, state.value_0)) &&
      (found = node);
    if (!(!!node && node.isRed) && !ju.$isRed(node.child[dir_0])) {
      if (ju.$isRed(node.child[ju.otherChild(dir_0)])) {
        parent_0 = parent_0.child[last] = ju.$rotateSingle(node, dir_0);
      } else if (!ju.$isRed(node.child[ju.otherChild(dir_0)])) {
        sibling = parent_0.child[ju.otherChild(last)];
        if (sibling) {
          if (
            !ju.$isRed(sibling.child[ju.otherChild(last)]) &&
            !ju.$isRed(sibling.child[last])
          ) {
            parent_0.isRed = false;
            sibling.isRed = true;
            node.isRed = true;
          } else {
            if (!grandparent) {
              debugger;
              throw toJs(new jl.AssertionError());
            }
            dir2 = grandparent.child[1] == parent_0 ? 1 : 0;
            ju.$isRed(sibling.child[last])
              ? (grandparent.child[dir2] = ju.$rotateDouble(parent_0, last))
              : ju.$isRed(sibling.child[ju.otherChild(last)]) &&
                (grandparent.child[dir2] = ju.$rotateSingle(parent_0, last));
            node.isRed = grandparent.child[dir2].isRed = true;
            grandparent.child[dir2].child[0].isRed = false;
            grandparent.child[dir2].child[1].isRed = false;
          }
        }
      }
    }
  }
  if (found) {
    state.found = true;
    state.value_0 = found.value_0;
    if (node != found) {
      newNode = new ju.TreeMap$Node(node.key_0, node.value_0);
      ju.$replaceNode(this$static, head, found, newNode);
      parent_0 == found && (parent_0 = newNode);
    }
    parent_0.child[parent_0.child[1] == node ? 1 : 0] =
      node.child[!node.child[0] ? 1 : 0];
    --this$static.size_0;
  }
  this$static.root_0 = head.child[1];
  !!this$static.root_0 && (this$static.root_0.isRed = false);
  return state.found;
};
ju.$replaceNode = function $replaceNode(this$static, head, node, newNode) {
  var direction, parent_0;
  parent_0 = head;
  direction =
    parent_0.key_0 == null || ju.$compare_0(node.key_0, parent_0.key_0) > 0
      ? 1
      : 0;
  while (parent_0.child[direction] != node) {
    parent_0 = parent_0.child[direction];
    if (!parent_0) {
      debugger;
      throw toJs(new jl.AssertionError());
    }
    direction = ju.$compare_0(node.key_0, parent_0.key_0) > 0 ? 1 : 0;
  }
  parent_0.child[direction] = newNode;
  newNode.isRed = node.isRed;
  newNode.child[0] = node.child[0];
  newNode.child[1] = node.child[1];
  node.child[0] = null;
  node.child[1] = null;
};
ju.$rotateDouble = function $rotateDouble(tree, rotateDirection) {
  var otherChildDir;
  otherChildDir = ju.otherChild(rotateDirection);
  tree.child[otherChildDir] = ju.$rotateSingle(
    tree.child[otherChildDir],
    otherChildDir
  );
  return ju.$rotateSingle(tree, rotateDirection);
};
ju.$rotateSingle = function $rotateSingle(tree, rotateDirection) {
  var otherChildDir, save;
  otherChildDir = ju.otherChild(rotateDirection);
  save = tree.child[otherChildDir];
  tree.child[otherChildDir] = save.child[rotateDirection];
  save.child[rotateDirection] = tree;
  tree.isRed = true;
  save.isRed = false;
  return save;
};
ju.$size_6 = function $size_6(this$static) {
  return this$static.size_0;
};
ju.$subMap = function $subMap(
  this$static,
  fromKey,
  fromInclusive,
  toKey,
  toInclusive
) {
  return new ju.TreeMap$SubMap(
    this$static,
    (ju.$clinit_TreeMap$SubMapType(), ju.Range_1),
    fromKey,
    fromInclusive,
    toKey,
    toInclusive
  );
};
ju.TreeMap = function TreeMap() {
  ju.TreeMap_0.call(this);
};
ju.TreeMap_0 = function TreeMap_0() {
  ju.$$init_69(this);
  this.root_0 = null;
  this.cmp =
    (ju.$clinit_Comparators(),
    ju.$clinit_Comparators(),
    ju.INTERNAL_NATURAL_ORDER);
};
ju.otherChild = function otherChild(child) {
  if (!(child == 0 || child == 1)) {
    debugger;
    throw toJs(new jl.AssertionError());
  }
  return 1 - child;
};
defineClass(359, 932, $intern_16, ju.TreeMap);
_.clear = function clear_15() {
  ju.$clear_4(this);
};
_.descendingEntryIterator = function descendingEntryIterator_0() {
  return new ju.TreeMap$DescendingEntryIterator(this);
};
_.entryIterator = function entryIterator_1() {
  return new ju.TreeMap$EntryIterator(this);
};
_.entrySet_0 = function entrySet_4() {
  return new ju.TreeMap$EntrySet(this);
};
_.getEntry = function getEntry_0(key) {
  return ju.$getEntry_0(this, key);
};
_.put = function put_4(key, value_0) {
  return ju.$put_7(this, key, value_0);
};
_.remove = function remove_42(k) {
  return ju.$remove_13(this, k);
};
_.removeEntry = function removeEntry_0(entry) {
  return ju.$removeEntry(this, entry);
};
_.size = function size_23() {
  return ju.$size_6(this);
};
_.subMap = function subMap_0(fromKey, fromInclusive, toKey, toInclusive) {
  return ju.$subMap(this, fromKey, fromInclusive, toKey, toInclusive);
};
_.size_0 = 0;
cggl.Ljava_util_TreeMap_2_classLit = createForClass(
  "java.util",
  "TreeMap",
  359
);
ju.TreeMap$DescendingEntryIterator = function TreeMap$DescendingEntryIterator(
  this$0
) {
  ju.TreeMap$DescendingEntryIterator_0.call(
    this,
    this$0,
    (ju.$clinit_TreeMap$SubMapType(), ju.All),
    null,
    false,
    null,
    false
  );
};
ju.TreeMap$DescendingEntryIterator_0 =
  function TreeMap$DescendingEntryIterator_0(
    this$0,
    type_0,
    fromKey,
    fromInclusive,
    toKey,
    toInclusive
  ) {
    var list;
    this.this$01 = this$0;
    list = new ju.ArrayList();
    ju.$inOrderAdd(
      this$0,
      list,
      type_0,
      this$0.root_0,
      fromKey,
      fromInclusive,
      toKey,
      toInclusive
    );
    this.iter = new ju.AbstractList$ListIteratorImpl(list, list.array.length);
  };
defineClass(
  304,
  1,
  $intern_12,
  ju.TreeMap$DescendingEntryIterator,
  ju.TreeMap$DescendingEntryIterator_0
);
_.forEachRemaining = function forEachRemaining_38(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.next_1 = function next_25() {
  return (this.last_0 = castTo(ju.$previous(this.iter), 27));
};
_.hasNext_1 = function hasNext_22() {
  return this.iter.i > 0;
};
_.remove_0 = function remove_43() {
  ju.$remove_1(this.iter);
  ju.$removeEntry(this.this$01, this.last_0);
  this.last_0 = null;
};
cggl.Ljava_util_TreeMap$DescendingEntryIterator_2_classLit = createForClass(
  "java.util",
  "TreeMap/DescendingEntryIterator",
  304
);
ju.$hasNext_13 = function $hasNext_13(this$static) {
  return ju.$hasNext_4(this$static.iter);
};
ju.$next_14 = function $next_14(this$static) {
  return (this$static.last_0 = castTo(ju.$next_4(this$static.iter), 27));
};
ju.TreeMap$EntryIterator = function TreeMap$EntryIterator(this$0) {
  ju.TreeMap$EntryIterator_0.call(
    this,
    this$0,
    (ju.$clinit_TreeMap$SubMapType(), ju.All),
    null,
    false,
    null,
    false
  );
};
ju.TreeMap$EntryIterator_0 = function TreeMap$EntryIterator_0(
  this$0,
  type_0,
  fromKey,
  fromInclusive,
  toKey,
  toInclusive
) {
  var list;
  this.this$01 = this$0;
  list = new ju.ArrayList();
  ju.$inOrderAdd(
    this$0,
    list,
    type_0,
    this$0.root_0,
    fromKey,
    fromInclusive,
    toKey,
    toInclusive
  );
  this.iter = new ju.AbstractList$ListIteratorImpl(list, 0);
};
defineClass(
  268,
  1,
  $intern_12,
  ju.TreeMap$EntryIterator,
  ju.TreeMap$EntryIterator_0
);
_.forEachRemaining = function forEachRemaining_39(consumer) {
  ju.$forEachRemaining_0(this, consumer);
};
_.next_1 = function next_26() {
  return ju.$next_14(this);
};
_.hasNext_1 = function hasNext_23() {
  return ju.$hasNext_13(this);
};
_.remove_0 = function remove_44() {
  ju.$remove_1(this.iter);
  ju.$removeEntry(this.this$01, this.last_0);
  this.last_0 = null;
};
cggl.Ljava_util_TreeMap$EntryIterator_2_classLit = createForClass(
  "java.util",
  "TreeMap/EntryIterator",
  268
);
ju.TreeMap$EntrySet = function TreeMap$EntrySet(this$0) {
  this.this$01 = this$0;
  ju.AbstractNavigableMap$EntrySet.call(this, this$0);
};
defineClass(800, 302, $intern_14, ju.TreeMap$EntrySet);
_.clear = function clear_16() {
  ju.$clear_4(this.this$01);
};
cggl.Ljava_util_TreeMap$EntrySet_2_classLit = createForClass(
  "java.util",
  "TreeMap/EntrySet",
  800
);
ju.$$init_70 = function $$init_70(this$static) {
  this$static.child = initUnidimensionalArray(
    cggl.Ljava_util_TreeMap$Node_2_classLit,
    $intern_7,
    188,
    2,
    0,
    1
  );
};
ju.TreeMap$Node = function TreeMap$Node(key, value_0) {
  ju.TreeMap$Node_0.call(this, key, value_0);
};
ju.TreeMap$Node_0 = function TreeMap$Node_0(key, value_0) {
  ju.AbstractMap$SimpleEntry.call(this, key, value_0);
  ju.$$init_70(this);
  this.isRed = true;
};
defineClass(188, 160, { 214: 1, 160: 1, 27: 1, 188: 1 }, ju.TreeMap$Node);
_.isRed = false;
cggl.Ljava_util_TreeMap$Node_2_classLit = createForClass(
  "java.util",
  "TreeMap/Node",
  188
);
ju.TreeMap$State = function TreeMap$State() {};
defineClass(305, 1, {}, ju.TreeMap$State);
_.toString_0 = function toString_74() {
  return (
    "State: mv=" +
    this.matchValue +
    " value=" +
    this.value_0 +
    " done=" +
    this.done_0 +
    " found=" +
    this.found
  );
};
_.done_0 = false;
_.found = false;
_.matchValue = false;
cggl.Ljava_util_TreeMap$State_2_classLit = createForClass(
  "java.util",
  "TreeMap/State",
  305
);
ju.$entryIterator = function $entryIterator(this$static) {
  return new ju.TreeMap$EntryIterator_0(
    this$static.this$01,
    this$static.type_0,
    this$static.fromKey,
    this$static.fromInclusive,
    this$static.toKey,
    this$static.toInclusive
  );
};
ju.$guardInRange = function $guardInRange(this$static, entry) {
  return !!entry && ju.$inRange_0(this$static, entry.key_0) ? entry : null;
};
ju.$inRange_0 = function $inRange_0(this$static, key) {
  return ju.$inRange(
    this$static.this$01,
    this$static.type_0,
    key,
    this$static.fromKey,
    this$static.fromInclusive,
    this$static.toKey,
    this$static.toInclusive
  );
};
ju.TreeMap$SubMap = function TreeMap$SubMap(
  this$0,
  type_0,
  fromKey,
  fromInclusive,
  toKey,
  toInclusive
) {
  this.this$01 = this$0;
  switch (type_0.ordinal_0) {
    case 2:
      if (ju.$compare_0(toKey, fromKey) < 0) {
        throw toJs(
          new jl.IllegalArgumentException_0(
            "subMap: " + toKey + " less than " + fromKey
          )
        );
      }

      break;
    case 1:
      ju.$compare_0(toKey, toKey);
      break;
    case 3:
      ju.$compare_0(fromKey, fromKey);
  }
  this.type_0 = type_0;
  this.fromKey = fromKey;
  this.fromInclusive = fromInclusive;
  this.toKey = toKey;
  this.toInclusive = toInclusive;
};
defineClass(801, 932, $intern_13, ju.TreeMap$SubMap);
_.descendingEntryIterator = function descendingEntryIterator_1() {
  return new ju.TreeMap$DescendingEntryIterator_0(
    this.this$01,
    this.type_0,
    this.fromKey,
    this.fromInclusive,
    this.toKey,
    this.toInclusive
  );
};
_.entryIterator = function entryIterator_2() {
  return ju.$entryIterator(this);
};
_.entrySet_0 = function entrySet_5() {
  return new ju.AbstractNavigableMap$EntrySet(this);
};
_.getEntry = function getEntry_1(key) {
  return ju.$guardInRange(this, ju.$getEntry_0(this.this$01, key));
};
_.put = function put_5(key, value_0) {
  if (
    !ju.$inRange(
      this.this$01,
      this.type_0,
      key,
      this.fromKey,
      this.fromInclusive,
      this.toKey,
      this.toInclusive
    )
  ) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        key + " outside the range " + this.fromKey + " to " + this.toKey
      )
    );
  }
  return ju.$put_7(this.this$01, key, value_0);
};
_.remove = function remove_45(k) {
  var key;
  key = k;
  if (
    !ju.$inRange(
      this.this$01,
      this.type_0,
      key,
      this.fromKey,
      this.fromInclusive,
      this.toKey,
      this.toInclusive
    )
  ) {
    return null;
  }
  return ju.$remove_13(this.this$01, key);
};
_.removeEntry = function removeEntry_1(entry) {
  return (
    ju.$inRange_0(this, entry.getKey()) && ju.$removeEntry(this.this$01, entry)
  );
};
_.size = function size_24() {
  var count, entry, it;
  this.fromInclusive
    ? (entry = ju.$getNodeAfter(this.this$01, this.fromKey, true))
    : (entry = ju.$getNodeAfter(this.this$01, this.fromKey, false));
  if (!(!!entry && ju.$inRange_0(this, entry.key_0) ? entry : null)) {
    return 0;
  }
  count = 0;
  for (
    it = new ju.TreeMap$EntryIterator_0(
      this.this$01,
      this.type_0,
      this.fromKey,
      this.fromInclusive,
      this.toKey,
      this.toInclusive
    );
    ju.$hasNext_4(it.iter);
    it.last_0 = castTo(ju.$next_4(it.iter), 27)
  ) {
    ++count;
  }
  return count;
};
_.subMap = function subMap_1(
  newFromKey,
  newFromInclusive,
  newToKey,
  newToInclusive
) {
  if (ju.$compare_0(newFromKey, this.fromKey) < 0) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "subMap: " + newFromKey + " less than " + this.fromKey
      )
    );
  }
  if (ju.$compare_0(newToKey, this.toKey) > 0) {
    throw toJs(
      new jl.IllegalArgumentException_0(
        "subMap: " + newToKey + " greater than " + this.toKey
      )
    );
  }
  return ju.$subMap(
    this.this$01,
    newFromKey,
    newFromInclusive,
    newToKey,
    newToInclusive
  );
};
_.fromInclusive = false;
_.toInclusive = false;
cggl.Ljava_util_TreeMap$SubMap_2_classLit = createForClass(
  "java.util",
  "TreeMap/SubMap",
  801
);
ju.$clinit_TreeMap$SubMapType = function $clinit_TreeMap$SubMapType() {
  ju.$clinit_TreeMap$SubMapType = emptyMethod;
  ju.All = new ju.TreeMap$SubMapType("All", 0);
  ju.Head = new ju.TreeMap$SubMapType$1();
  ju.Range_1 = new ju.TreeMap$SubMapType$2();
  ju.Tail = new ju.TreeMap$SubMapType$3();
};
ju.TreeMap$SubMapType = function TreeMap$SubMapType(enum$name, enum$ordinal) {
  Enum.call(this, enum$name, enum$ordinal);
};
ju.values_11 = function values_11() {
  ju.$clinit_TreeMap$SubMapType();
  return stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_util_TreeMap$SubMapType_2_classLit, 1),
    $intern_17,
    121,
    0,
    [ju.All, ju.Head, ju.Range_1, ju.Tail]
  );
};
defineClass(121, 37, $intern_73, ju.TreeMap$SubMapType);
_.fromKeyValid = function fromKeyValid() {
  return false;
};
_.toKeyValid = function toKeyValid() {
  return false;
};
cggl.Ljava_util_TreeMap$SubMapType_2_classLit = createForEnum(
  "java.util",
  "TreeMap/SubMapType",
  121,
  ju.values_11
);
ju.TreeMap$SubMapType$1 = function TreeMap$SubMapType$1() {
  ju.TreeMap$SubMapType.call(this, "Head", 1);
};
defineClass(802, 121, $intern_73, ju.TreeMap$SubMapType$1);
_.toKeyValid = function toKeyValid_0() {
  return true;
};
cggl.Ljava_util_TreeMap$SubMapType$1_2_classLit = createForEnum(
  "java.util",
  "TreeMap/SubMapType/1",
  802,
  null
);
ju.$fromKeyValid = function $fromKeyValid() {
  return true;
};
ju.$toKeyValid = function $toKeyValid() {
  return true;
};
ju.TreeMap$SubMapType$2 = function TreeMap$SubMapType$2() {
  ju.TreeMap$SubMapType.call(this, "Range", 2);
};
defineClass(803, 121, $intern_73, ju.TreeMap$SubMapType$2);
_.fromKeyValid = function fromKeyValid_0() {
  return ju.$fromKeyValid();
};
_.toKeyValid = function toKeyValid_1() {
  return ju.$toKeyValid();
};
cggl.Ljava_util_TreeMap$SubMapType$2_2_classLit = createForEnum(
  "java.util",
  "TreeMap/SubMapType/2",
  803,
  null
);
ju.TreeMap$SubMapType$3 = function TreeMap$SubMapType$3() {
  ju.TreeMap$SubMapType.call(this, "Tail", 3);
};
defineClass(804, 121, $intern_73, ju.TreeMap$SubMapType$3);
_.fromKeyValid = function fromKeyValid_1() {
  return true;
};
cggl.Ljava_util_TreeMap$SubMapType$3_2_classLit = createForEnum(
  "java.util",
  "TreeMap/SubMapType/3",
  804,
  null
);
juf.Predicate$lambda$2$Type = function Predicate$lambda$2$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(465, 1, {}, juf.Predicate$lambda$2$Type);
_.test_0 = function test_28(t) {
  return !idwca.$test(t);
};
cggl.Ljava_util_function_Predicate$lambda$2$Type_2_classLit = createForClass(
  "java.util.function",
  "Predicate/lambda$2$Type",
  465
);
jus.Collectors$10methodref$merge$Type =
  function Collectors$10methodref$merge$Type() {};
defineClass(183, 1, {}, jus.Collectors$10methodref$merge$Type);
_.apply_4 = function apply_252(arg0, arg1) {
  return ju.$merge_2(castTo(arg0, 132), castTo(arg1, 132));
};
cggl.Ljava_util_stream_Collectors$10methodref$merge$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/10methodref$merge$Type", 183);
jus.Collectors$11methodref$toString$Type =
  function Collectors$11methodref$toString$Type() {};
defineClass(184, 1, {}, jus.Collectors$11methodref$toString$Type);
_.apply_1 = function apply_253(arg0) {
  return ju.$toString_18(castTo(arg0, 132));
};
cggl.Ljava_util_stream_Collectors$11methodref$toString$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "Collectors/11methodref$toString$Type",
    184
  );
jus.Collectors$12methodref$test$Type =
  function Collectors$12methodref$test$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(718, 1, {}, jus.Collectors$12methodref$test$Type);
_.apply_1 = function apply_254(arg0) {
  return (
    jl.$clinit_Boolean(),
    idwcabd.$test_0(arg0) ? ji.uncheckedCast(true) : ji.uncheckedCast(false)
  );
};
cggl.Ljava_util_stream_Collectors$12methodref$test$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/12methodref$test$Type", 718);
jus.Collectors$13methodref$ctor$Type =
  function Collectors$13methodref$ctor$Type() {};
defineClass(719, 1, {}, jus.Collectors$13methodref$ctor$Type);
_.get_0 = function get_35() {
  return new ju.HashMap();
};
cggl.Ljava_util_stream_Collectors$13methodref$ctor$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/13methodref$ctor$Type", 719);
jus.Collectors$22methodref$ctor$Type =
  function Collectors$22methodref$ctor$Type() {};
defineClass(216, 1, {}, jus.Collectors$22methodref$ctor$Type);
_.get_0 = function get_37() {
  return new ju.HashMap();
};
cggl.Ljava_util_stream_Collectors$22methodref$ctor$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/22methodref$ctor$Type", 216);
jus.Collectors$23methodref$ctor$Type =
  function Collectors$23methodref$ctor$Type() {};
defineClass(263, 1, {}, jus.Collectors$23methodref$ctor$Type);
_.get_0 = function get_38() {
  return new ju.HashSet();
};
cggl.Ljava_util_stream_Collectors$23methodref$ctor$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/23methodref$ctor$Type", 263);
jus.Collectors$24methodref$add$Type =
  function Collectors$24methodref$add$Type() {};
defineClass(264, 1, {}, jus.Collectors$24methodref$add$Type);
_.accept_1 = function accept_104(arg0, arg1) {
  ju.$add_0(castTo(arg0, 54), arg1);
};
cggl.Ljava_util_stream_Collectors$24methodref$add$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/24methodref$add$Type", 264);
jus.Collectors$3methodref$ctor$Type =
  function Collectors$3methodref$ctor$Type() {};
defineClass(712, 1, {}, jus.Collectors$3methodref$ctor$Type);
_.get_0 = function get_39() {
  return new ju.HashMap();
};
cggl.Ljava_util_stream_Collectors$3methodref$ctor$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/3methodref$ctor$Type", 712);
jus.Collectors$4methodref$addAll$Type =
  function Collectors$4methodref$addAll$Type() {};
defineClass(715, 1, {}, jus.Collectors$4methodref$addAll$Type);
_.apply_4 = function apply_255(arg0, arg1) {
  return jus.addAll_4(castTo(arg0, 79), castTo(arg1, 53));
};
cggl.Ljava_util_stream_Collectors$4methodref$addAll$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/4methodref$addAll$Type", 715);
jus.Collectors$9methodref$add$Type =
  function Collectors$9methodref$add$Type() {};
defineClass(182, 1, {}, jus.Collectors$9methodref$add$Type);
_.accept_1 = function accept_105(arg0, arg1) {
  ju.$add_1(castTo(arg0, 132), castTo(arg1, 278));
};
cggl.Ljava_util_stream_Collectors$9methodref$add$Type_2_classLit =
  createForClass("java.util.stream", "Collectors/9methodref$add$Type", 182);
jus.Collectors$lambda$15$Type = function Collectors$lambda$15$Type() {
  this.delimiter_0 = ",";
  this.prefix_1 = "";
  this.suffix_2 = "";
};
defineClass(181, 1, {}, jus.Collectors$lambda$15$Type);
_.get_0 = function get_40() {
  return new ju.StringJoiner(this.delimiter_0, this.prefix_1, this.suffix_2);
};
cggl.Ljava_util_stream_Collectors$lambda$15$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$15$Type",
  181
);
jus.Collectors$lambda$22$Type = function Collectors$lambda$22$Type() {};
defineClass(720, 1, {}, jus.Collectors$lambda$22$Type);
_.get_0 = function get_41() {
  return jus.lambda$22_0();
};
cggl.Ljava_util_stream_Collectors$lambda$22$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$22$Type",
  720
);
jus.Collectors$lambda$25$Type = function Collectors$lambda$25$Type(identity_0) {
  this.identity_0 = identity_0;
};
defineClass(721, 1, {}, jus.Collectors$lambda$25$Type);
_.get_0 = function get_42() {
  return stampJavaTypeInfo(
    getClassLiteralForArray(cggl.Ljava_lang_Object_2_classLit, 1),
    $intern_7,
    1,
    5,
    [this.identity_0]
  );
};
cggl.Ljava_util_stream_Collectors$lambda$25$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$25$Type",
  721
);
jus.Collectors$lambda$26$Type = function Collectors$lambda$26$Type(
  op_0,
  mapper_1
) {
  this.op_0 = op_0;
  this.mapper_1 = mapper_1;
};
defineClass(722, 1, {}, jus.Collectors$lambda$26$Type);
_.accept_1 = function accept_106(arg0, arg1) {
  jus.lambda$26_0(this.op_0, this.mapper_1, castToArray(arg0), arg1);
};
cggl.Ljava_util_stream_Collectors$lambda$26$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$26$Type",
  722
);
jus.Collectors$lambda$27$Type = function Collectors$lambda$27$Type(op_0) {
  this.op_0 = op_0;
};
defineClass(723, 1, {}, jus.Collectors$lambda$27$Type);
_.apply_4 = function apply_256(arg0, arg1) {
  return jus.lambda$27(this.op_0, castToArray(arg0), castToArray(arg1));
};
cggl.Ljava_util_stream_Collectors$lambda$27$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$27$Type",
  723
);
jus.Collectors$lambda$28$Type = function Collectors$lambda$28$Type() {};
defineClass(724, 1, {}, jus.Collectors$lambda$28$Type);
_.apply_1 = function apply_257(arg0) {
  return castToArray(arg0)[0];
};
cggl.Ljava_util_stream_Collectors$lambda$28$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$28$Type",
  724
);
jus.Collectors$lambda$44$Type = function Collectors$lambda$44$Type() {};
defineClass(215, 1, {}, jus.Collectors$lambda$44$Type);
_.apply_4 = function apply_259(arg0, arg1) {
  return jus.lambda$44();
};
cggl.Ljava_util_stream_Collectors$lambda$44$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$44$Type",
  215
);
jus.Collectors$lambda$46$Type = function Collectors$lambda$46$Type(
  keyMapper_0,
  valueMapper_1,
  mergeFunction_2
) {
  this.keyMapper_0 = keyMapper_0;
  this.valueMapper_1 = valueMapper_1;
  this.mergeFunction_2 = mergeFunction_2;
};
defineClass(725, 1, {}, jus.Collectors$lambda$46$Type);
_.accept_1 = function accept_107(arg0, arg1) {
  jus.lambda$46(
    this.keyMapper_0,
    this.valueMapper_1,
    this.mergeFunction_2,
    castTo(arg0, 30),
    arg1
  );
};
cggl.Ljava_util_stream_Collectors$lambda$46$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$46$Type",
  725
);
jus.Collectors$lambda$47$Type = function Collectors$lambda$47$Type(
  mergeFunction_0
) {
  this.mergeFunction_0 = mergeFunction_0;
};
defineClass(726, 1, {}, jus.Collectors$lambda$47$Type);
_.apply_4 = function apply_260(arg0, arg1) {
  return jus.lambda$47(
    this.mergeFunction_0,
    castTo(arg0, 30),
    castTo(arg1, 30)
  );
};
cggl.Ljava_util_stream_Collectors$lambda$47$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$47$Type",
  726
);
jus.Collectors$lambda$50$Type = function Collectors$lambda$50$Type() {};
defineClass(265, 1, {}, jus.Collectors$lambda$50$Type);
_.apply_4 = function apply_261(arg0, arg1) {
  return jus.lambda$50(castTo(arg0, 54), castTo(arg1, 54));
};
cggl.Ljava_util_stream_Collectors$lambda$50$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$50$Type",
  265
);
jus.Collectors$lambda$51$Type = function Collectors$lambda$51$Type() {};
defineClass(266, 1, {}, jus.Collectors$lambda$51$Type);
_.apply_1 = function apply_262(arg0) {
  return castTo(arg0, 54);
};
cggl.Ljava_util_stream_Collectors$lambda$51$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$51$Type",
  266
);
jus.Collectors$lambda$6$Type = function Collectors$lambda$6$Type() {};
defineClass(713, 1, {}, jus.Collectors$lambda$6$Type);
_.get_0 = function get_43() {
  return new ju.LinkedHashMap();
};
cggl.Ljava_util_stream_Collectors$lambda$6$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$6$Type",
  713
);
jus.Collectors$lambda$7$Type = function Collectors$lambda$7$Type(classifier_0) {
  this.classifier_0 = classifier_0;
};
defineClass(714, 1, {}, jus.Collectors$lambda$7$Type);
_.accept_1 = function accept_108(arg0, arg1) {
  jus.lambda$7_6(this.classifier_0, castTo(arg0, 30), arg1);
};
cggl.Ljava_util_stream_Collectors$lambda$7$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$7$Type",
  714
);
jus.Collectors$lambda$8$Type = function Collectors$lambda$8$Type() {};
defineClass(716, 1, {}, jus.Collectors$lambda$8$Type);
_.apply_4 = function apply_263(arg0, arg1) {
  return jus.mergeAll(
    castTo(arg0, 30),
    castTo(arg1, 30),
    new jus.Collectors$4methodref$addAll$Type()
  );
};
cggl.Ljava_util_stream_Collectors$lambda$8$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$8$Type",
  716
);
jus.Collectors$lambda$9$Type = function Collectors$lambda$9$Type(
  mapFactory_0,
  downstream_1
) {
  this.mapFactory_0 = mapFactory_0;
  this.downstream_1 = downstream_1;
};
defineClass(717, 1, {}, jus.Collectors$lambda$9$Type);
_.apply_1 = function apply_264(arg0) {
  return jus.lambda$9_5(this.mapFactory_0, this.downstream_1, castTo(arg0, 30));
};
cggl.Ljava_util_stream_Collectors$lambda$9$Type_2_classLit = createForClass(
  "java.util.stream",
  "Collectors/lambda$9$Type",
  717
);
jus.$iterator_15 = function $iterator_15(this$static) {
  return this$static.iterator_1();
};
jus.$spliterator_7 = function $spliterator_7(this$static) {
  return this$static.spliterator_1();
};
jus.range_2 = function range_2(endExclusive) {
  if (0 >= endExclusive) {
    return new jus.IntStreamImpl$Empty();
  }
  return jus.rangeClosed(endExclusive - 1);
};
jus.rangeClosed = function rangeClosed(endInclusive) {
  var count, spliterator;
  if (0 > endInclusive) {
    return new jus.IntStreamImpl$Empty();
  }
  count = endInclusive + 1;
  spliterator = new jus.IntStream$5(
    cggl.createSmallLongEmul0(count),
    endInclusive
  );
  return new jus.IntStreamImpl(null, spliterator);
};
jus.$$init_71 = function $$init_71(this$static) {
  this$static.items = initUnidimensionalArray(
    cggl.I_classLit,
    $intern_20,
    18,
    0,
    15,
    1
  );
};
jus.$accept_4 = function $accept_4(this$static, t) {
  ji.checkCriticalState_0(this$static.items != null);
  this$static.items[this$static.items.length] = t;
};
jus.$build_0 = function $build_0(this$static) {
  var stream;
  ji.checkCriticalState_0(this$static.items != null);
  stream = ju.stream_3(this$static.items);
  this$static.items = null;
  return stream;
};
jus.IntStream$1 = function IntStream$1() {
  jus.$$init_71(this);
};
defineClass(380, 1, $intern_62, jus.IntStream$1);
_.accept_2 = function accept_109(t) {
  jus.$accept_4(this, t);
};
cggl.Ljava_util_stream_IntStream$1_2_classLit = createForClass(
  "java.util.stream",
  "IntStream/1",
  380
);
jus.$$init_72 = function $$init_72(this$static) {
  this$static.next_0 = this$static.val$startInclusive4;
};
jus.$tryAdvance_7 = function $tryAdvance_7(this$static, action) {
  if (this$static.next_0 <= this$static.val$endInclusive5) {
    action.accept_2(this$static.next_0++);
    return true;
  }
  return false;
};
jus.IntStream$5 = function IntStream$5($anonymous0, val$endInclusive) {
  this.val$startInclusive4 = 0;
  this.val$endInclusive5 = val$endInclusive;
  ju.Spliterators$AbstractIntSpliterator.call(this, $anonymous0, 17493);
  jus.$$init_72(this);
};
defineClass(378, 233, {}, jus.IntStream$5);
_.tryAdvance_0 = function tryAdvance_11(action) {
  return jus.$tryAdvance_7(this, castTo(action, 36));
};
_.next_0 = 0;
_.val$endInclusive5 = 0;
_.val$startInclusive4 = 0;
cggl.Ljava_util_stream_IntStream$5_2_classLit = createForClass(
  "java.util.stream",
  "IntStream/5",
  378
);
jus.$collect = function $collect(this$static) {
  var acc;
  jus.$terminate(this$static);
  acc = new ju.IntSummaryStatistics();
  this$static.spliterator.forEachRemaining_0(
    new jus.IntStreamImpl$lambda$4$Type(acc)
  );
  return acc;
};
jus.$distinct = function $distinct(this$static) {
  var seen;
  jus.$throwIfTerminated(this$static);
  seen = new ju.HashSet();
  return jus.$filter_0(
    this$static,
    new jus.IntStreamImpl$2methodref$add$Type(seen)
  );
};
jus.$filter_0 = function $filter_0(this$static, predicate) {
  jus.$throwIfTerminated(this$static);
  return new jus.IntStreamImpl(
    this$static,
    new jus.IntStreamImpl$FilterSpliterator(predicate, this$static.spliterator)
  );
};
jus.$forEach_5 = function $forEach_5(this$static, action) {
  jus.$terminate(this$static);
  this$static.spliterator.forEachRemaining_0(action);
};
jus.$iterator_16 = function $iterator_16(this$static) {
  return new ju.Spliterators$IntConsumerIterator(
    (jus.$terminate(this$static), this$static.spliterator)
  );
};
jus.$spliterator_8 = function $spliterator_8(this$static) {
  jus.$terminate(this$static);
  return this$static.spliterator;
};
jus.IntStreamImpl = function IntStreamImpl(previous, spliterator) {
  jus.TerminatableStream.call(this, previous);
  this.spliterator = spliterator;
};
defineClass(196, 187, $intern_74, jus.IntStreamImpl);
_.close_0 = function close_12() {
  jus.$close_6(this);
};
_.iterator_0 = function iterator_24() {
  return new ju.Spliterators$IntConsumerIterator(
    (jus.$terminate(this), this.spliterator)
  );
};
_.onClose_0 = function onClose_0(arg0) {
  return jus.$onClose_0(this, arg0);
};
_.spliterator_0 = function spliterator_9() {
  return jus.$terminate(this), this.spliterator;
};
_.iterator_1 = function iterator_25() {
  return jus.$iterator_16(this);
};
_.mapToObj = function mapToObj(mapper) {
  jus.$throwIfTerminated(this);
  return new jus.StreamImpl(
    this,
    new jus.IntStreamImpl$MapToObjSpliterator(mapper, this.spliterator)
  );
};
_.spliterator_1 = function spliterator_8() {
  return jus.$spliterator_8(this);
};
cggl.Ljava_util_stream_IntStreamImpl_2_classLit = createForClass(
  "java.util.stream",
  "IntStreamImpl",
  196
);
jus.$test_3 = function $test_3(this$static, arg0) {
  return ju.$add_0(this$static.$$outer_0, jl.valueOf_29(arg0));
};
jus.IntStreamImpl$2methodref$add$Type =
  function IntStreamImpl$2methodref$add$Type($$outer_0) {
    this.$$outer_0 = $$outer_0;
  };
defineClass(830, 1, {}, jus.IntStreamImpl$2methodref$add$Type);
cggl.Ljava_util_stream_IntStreamImpl$2methodref$add$Type_2_classLit =
  createForClass("java.util.stream", "IntStreamImpl/2methodref$add$Type", 830);
jus.$iterator_17 = function $iterator_17(this$static) {
  return new ju.Spliterators$IntConsumerIterator(
    (jus.$terminate(this$static),
    ju.$clinit_Spliterators$EmptySpliterator(),
    ju.OF_INT)
  );
};
jus.$spliterator_9 = function $spliterator_9(this$static) {
  jus.$terminate(this$static);
  return ju.$clinit_Spliterators$EmptySpliterator(), ju.OF_INT;
};
jus.IntStreamImpl$Empty = function IntStreamImpl$Empty() {
  jus.TerminatableStream.call(this, null);
};
defineClass(334, 187, $intern_74, jus.IntStreamImpl$Empty);
_.close_0 = function close_13() {
  jus.$close_6(this);
};
_.iterator_0 = function iterator_26() {
  return new ju.Spliterators$IntConsumerIterator(
    (jus.$terminate(this),
    ju.$clinit_Spliterators$EmptySpliterator(),
    ju.OF_INT)
  );
};
_.onClose_0 = function onClose_1(arg0) {
  return jus.$onClose_0(this, arg0);
};
_.spliterator_0 = function spliterator_11() {
  return (
    jus.$terminate(this), ju.$clinit_Spliterators$EmptySpliterator(), ju.OF_INT
  );
};
_.iterator_1 = function iterator_27() {
  return jus.$iterator_17(this);
};
_.mapToObj = function mapToObj_0(mapper) {
  jus.$throwIfTerminated(this);
  return new jus.StreamImpl$Empty(this);
};
_.spliterator_1 = function spliterator_10() {
  return jus.$spliterator_9(this);
};
cggl.Ljava_util_stream_IntStreamImpl$Empty_2_classLit = createForClass(
  "java.util.stream",
  "IntStreamImpl/Empty",
  334
);
jus.$lambda$0_14 = function $lambda$0_14(this$static, action_1, item_1) {
  if (jus.$test_3(this$static.filter_0, item_1)) {
    this$static.found = true;
    action_1.accept_2(item_1);
  }
};
jus.$tryAdvance_8 = function $tryAdvance_8(this$static, action) {
  this$static.found = false;
  while (
    !this$static.found &&
    this$static.original.tryAdvance_0(
      new jus.IntStreamImpl$FilterSpliterator$lambda$0$Type(this$static, action)
    )
  );
  return this$static.found;
};
jus.IntStreamImpl$FilterSpliterator = function IntStreamImpl$FilterSpliterator(
  filter,
  original
) {
  ju.Spliterators$AbstractIntSpliterator.call(
    this,
    original.estimateSize_0(),
    original.characteristics_0() & -16449
  );
  ji.checkCriticalNotNull(filter);
  this.filter_0 = filter;
  this.original = original;
};
defineClass(826, 233, {}, jus.IntStreamImpl$FilterSpliterator);
_.tryAdvance_0 = function tryAdvance_12(action) {
  return jus.$tryAdvance_8(this, castTo(action, 36));
};
_.found = false;
cggl.Ljava_util_stream_IntStreamImpl$FilterSpliterator_2_classLit =
  createForClass("java.util.stream", "IntStreamImpl/FilterSpliterator", 826);
jus.IntStreamImpl$FilterSpliterator$lambda$0$Type =
  function IntStreamImpl$FilterSpliterator$lambda$0$Type($$outer_0, action_1) {
    this.$$outer_0 = $$outer_0;
    this.action_1 = action_1;
  };
defineClass(
  828,
  1,
  $intern_62,
  jus.IntStreamImpl$FilterSpliterator$lambda$0$Type
);
_.accept_2 = function accept_110(arg0) {
  jus.$lambda$0_14(this.$$outer_0, this.action_1, arg0);
};
cggl.Ljava_util_stream_IntStreamImpl$FilterSpliterator$lambda$0$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "IntStreamImpl/FilterSpliterator/lambda$0$Type",
    828
  );
jus.$lambda$0_15 = function $lambda$0_15(this$static, action_1, u_1) {
  action_1.accept(this$static.map_0.apply_2(u_1));
};
jus.IntStreamImpl$MapToObjSpliterator =
  function IntStreamImpl$MapToObjSpliterator(map_0, original) {
    ju.Spliterators$AbstractSpliterator.call(
      this,
      original.estimateSize_0(),
      original.characteristics_0() & -6
    );
    ji.checkCriticalNotNull(map_0);
    this.map_0 = map_0;
    this.original = original;
  };
defineClass(825, 145, {}, jus.IntStreamImpl$MapToObjSpliterator);
_.tryAdvance = function tryAdvance_13(action) {
  return this.original.tryAdvance_0(
    new jus.IntStreamImpl$MapToObjSpliterator$lambda$0$Type(this, action)
  );
};
cggl.Ljava_util_stream_IntStreamImpl$MapToObjSpliterator_2_classLit =
  createForClass("java.util.stream", "IntStreamImpl/MapToObjSpliterator", 825);
jus.IntStreamImpl$MapToObjSpliterator$lambda$0$Type =
  function IntStreamImpl$MapToObjSpliterator$lambda$0$Type(
    $$outer_0,
    action_1
  ) {
    this.$$outer_0 = $$outer_0;
    this.action_1 = action_1;
  };
defineClass(
  827,
  1,
  $intern_62,
  jus.IntStreamImpl$MapToObjSpliterator$lambda$0$Type
);
_.accept_2 = function accept_111(arg0) {
  jus.$lambda$0_15(this.$$outer_0, this.action_1, arg0);
};
cggl.Ljava_util_stream_IntStreamImpl$MapToObjSpliterator$lambda$0$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "IntStreamImpl/MapToObjSpliterator/lambda$0$Type",
    827
  );
jus.IntStreamImpl$lambda$4$Type = function IntStreamImpl$lambda$4$Type(acc_1) {
  this.acc_1 = acc_1;
};
defineClass(829, 1, $intern_62, jus.IntStreamImpl$lambda$4$Type);
_.accept_2 = function accept_112(arg0) {
  ju.$accept_2(this.acc_1, arg0);
};
cggl.Ljava_util_stream_IntStreamImpl$lambda$4$Type_2_classLit = createForClass(
  "java.util.stream",
  "IntStreamImpl/lambda$4$Type",
  829
);
jus.$iterator_18 = function $iterator_18(this$static) {
  return this$static.iterator_2();
};
jus.$spliterator_10 = function $spliterator_10(this$static) {
  return this$static.spliterator_2();
};
jus.rangeClosed_0 = function rangeClosed_0(startInclusive, endInclusive) {
  var count, spliterator;
  if (compare_1(startInclusive, endInclusive) > 0) {
    return new jus.LongStreamImpl$Empty();
  }
  count = add_1(sub_3(endInclusive, startInclusive), 1);
  spliterator = new jus.LongStream$5(count, startInclusive, endInclusive);
  return new jus.LongStreamImpl(null, spliterator);
};
jus.$$init_74 = function $$init_74(this$static) {
  this$static.next_0 = this$static.val$startInclusive4;
};
jus.$tryAdvance_9 = function $tryAdvance_9(this$static, action) {
  var $tmp;
  if (lte(this$static.next_0, this$static.val$endInclusive6)) {
    action.accept_0(
      (($tmp = this$static.next_0),
      (this$static.next_0 = add_1(this$static.next_0, 1)),
      $tmp)
    );
    return true;
  }
  return false;
};
jus.LongStream$5 = function LongStream$5(
  $anonymous0,
  val$startInclusive,
  val$endInclusive
) {
  this.val$startInclusive4 = val$startInclusive;
  this.val$endInclusive6 = val$endInclusive;
  ju.Spliterators$AbstractLongSpliterator.call(this, $anonymous0, 17493);
  jus.$$init_74(this);
};
defineClass(772, 236, {}, jus.LongStream$5);
_.tryAdvance_0 = function tryAdvance_14(action) {
  return jus.$tryAdvance_9(this, castTo(action, 44));
};
_.next_0 = 0;
_.val$endInclusive6 = 0;
_.val$startInclusive4 = 0;
cggl.Ljava_util_stream_LongStream$5_2_classLit = createForClass(
  "java.util.stream",
  "LongStream/5",
  772
);
jus.$collect_0 = function $collect_0(this$static) {
  var acc;
  jus.$terminate(this$static);
  acc = new ju.LongSummaryStatistics();
  this$static.spliterator.forEachRemaining_0(
    new jus.LongStreamImpl$lambda$2$Type(acc)
  );
  return acc;
};
jus.$iterator_19 = function $iterator_19(this$static) {
  return new ju.Spliterators$LongConsumerIterator(
    (jus.$terminate(this$static), this$static.spliterator)
  );
};
jus.$mapToObj = function $mapToObj(this$static, mapper) {
  jus.$throwIfTerminated(this$static);
  return new jus.StreamImpl(
    this$static,
    new jus.LongStreamImpl$MapToObjSpliterator(mapper, this$static.spliterator)
  );
};
jus.$spliterator_11 = function $spliterator_11(this$static) {
  jus.$terminate(this$static);
  return this$static.spliterator;
};
jus.LongStreamImpl = function LongStreamImpl(previous, spliterator) {
  jus.TerminatableStream.call(this, previous);
  this.spliterator = spliterator;
};
defineClass(269, 187, $intern_75, jus.LongStreamImpl);
_.close_0 = function close_14() {
  jus.$close_6(this);
};
_.iterator_0 = function iterator_28() {
  return new ju.Spliterators$LongConsumerIterator(
    (jus.$terminate(this), this.spliterator)
  );
};
_.onClose_0 = function onClose_2(arg0) {
  return jus.$onClose_0(this, arg0);
};
_.spliterator_0 = function spliterator_13() {
  return jus.$terminate(this), this.spliterator;
};
_.iterator_2 = function iterator_29() {
  return jus.$iterator_19(this);
};
_.spliterator_2 = function spliterator_12() {
  return jus.$spliterator_11(this);
};
cggl.Ljava_util_stream_LongStreamImpl_2_classLit = createForClass(
  "java.util.stream",
  "LongStreamImpl",
  269
);
jus.$iterator_20 = function $iterator_20(this$static) {
  return new ju.Spliterators$LongConsumerIterator(
    (jus.$terminate(this$static),
    ju.$clinit_Spliterators$EmptySpliterator(),
    ju.OF_LONG)
  );
};
jus.$spliterator_12 = function $spliterator_12(this$static) {
  jus.$terminate(this$static);
  return ju.$clinit_Spliterators$EmptySpliterator(), ju.OF_LONG;
};
jus.LongStreamImpl$Empty = function LongStreamImpl$Empty() {
  jus.TerminatableStream.call(this, null);
};
defineClass(816, 187, $intern_75, jus.LongStreamImpl$Empty);
_.close_0 = function close_15() {
  jus.$close_6(this);
};
_.iterator_0 = function iterator_30() {
  return new ju.Spliterators$LongConsumerIterator(
    (jus.$terminate(this),
    ju.$clinit_Spliterators$EmptySpliterator(),
    ju.OF_LONG)
  );
};
_.onClose_0 = function onClose_3(arg0) {
  return jus.$onClose_0(this, arg0);
};
_.spliterator_0 = function spliterator_15() {
  return (
    jus.$terminate(this), ju.$clinit_Spliterators$EmptySpliterator(), ju.OF_LONG
  );
};
_.iterator_2 = function iterator_31() {
  return jus.$iterator_20(this);
};
_.spliterator_2 = function spliterator_14() {
  return jus.$spliterator_12(this);
};
cggl.Ljava_util_stream_LongStreamImpl$Empty_2_classLit = createForClass(
  "java.util.stream",
  "LongStreamImpl/Empty",
  816
);
jus.LongStreamImpl$MapToObjSpliterator =
  function LongStreamImpl$MapToObjSpliterator(map_0, original) {
    ju.Spliterators$AbstractSpliterator.call(
      this,
      original.sizeEstimate,
      original.characteristics & -6
    );
    ji.checkCriticalNotNull(map_0);
    this.original = original;
  };
defineClass(817, 145, {}, jus.LongStreamImpl$MapToObjSpliterator);
_.tryAdvance = function tryAdvance_15(action) {
  return this.original.tryAdvance_0(
    new jus.LongStreamImpl$MapToObjSpliterator$lambda$0$Type(action)
  );
};
cggl.Ljava_util_stream_LongStreamImpl$MapToObjSpliterator_2_classLit =
  createForClass("java.util.stream", "LongStreamImpl/MapToObjSpliterator", 817);
jus.LongStreamImpl$MapToObjSpliterator$lambda$0$Type =
  function LongStreamImpl$MapToObjSpliterator$lambda$0$Type(action_1) {
    this.action_1 = action_1;
  };
defineClass(
  818,
  1,
  $intern_42,
  jus.LongStreamImpl$MapToObjSpliterator$lambda$0$Type
);
_.accept_0 = function accept_113(arg0) {
  this.action_1.accept(new idwca.LongWrapper(arg0));
};
cggl.Ljava_util_stream_LongStreamImpl$MapToObjSpliterator$lambda$0$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "LongStreamImpl/MapToObjSpliterator/lambda$0$Type",
    818
  );
jus.LongStreamImpl$lambda$2$Type = function LongStreamImpl$lambda$2$Type(
  acc_1
) {
  this.acc_1 = acc_1;
};
defineClass(819, 1, $intern_42, jus.LongStreamImpl$lambda$2$Type);
_.accept_0 = function accept_114(arg0) {
  ju.$accept_3(this.acc_1, arg0);
};
cggl.Ljava_util_stream_LongStreamImpl$lambda$2$Type_2_classLit = createForClass(
  "java.util.stream",
  "LongStreamImpl/lambda$2$Type",
  819
);
jus.Stream$0methodref$close$Type = function Stream$0methodref$close$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(664, 1, $intern_50, jus.Stream$0methodref$close$Type);
_.run = function run_49() {
  jus.$close_6(this.$$outer_0);
};
cggl.Ljava_util_stream_Stream$0methodref$close$Type_2_classLit = createForClass(
  "java.util.stream",
  "Stream/0methodref$close$Type",
  664
);
jus.Stream$1methodref$close$Type = function Stream$1methodref$close$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(665, 1, $intern_50, jus.Stream$1methodref$close$Type);
_.run = function run_50() {
  jus.$close_6(this.$$outer_0);
};
cggl.Ljava_util_stream_Stream$1methodref$close$Type_2_classLit = createForClass(
  "java.util.stream",
  "Stream/1methodref$close$Type",
  665
);
jus.$advanceToNextSpliterator = function $advanceToNextSpliterator(
  this$static
) {
  while (!this$static.next_0) {
    if (
      !ju.$tryAdvance(
        this$static.val$spliteratorOfStreams4,
        new jus.Stream$2$lambda$0$Type(this$static)
      )
    ) {
      return false;
    }
  }
  return true;
};
jus.$lambda$0_16 = function $lambda$0_16(this$static, n_0) {
  !!n_0 && (this$static.next_0 = n_0.spliterator_0());
};
jus.Stream$2 = function Stream$2(val$spliteratorOfStreams) {
  this.val$spliteratorOfStreams4 = val$spliteratorOfStreams;
  ju.Spliterators$AbstractSpliterator.call(this, $intern_66, 0);
};
defineClass(662, 145, {}, jus.Stream$2);
_.tryAdvance = function tryAdvance_16(action) {
  while (jus.$advanceToNextSpliterator(this)) {
    if (this.next_0.tryAdvance(action)) {
      return true;
    } else {
      this.next_0 = null;
    }
  }
  return false;
};
cggl.Ljava_util_stream_Stream$2_2_classLit = createForClass(
  "java.util.stream",
  "Stream/2",
  662
);
jus.Stream$2$lambda$0$Type = function Stream$2$lambda$0$Type($$outer_0) {
  this.$$outer_0 = $$outer_0;
};
defineClass(663, 1, $intern_19, jus.Stream$2$lambda$0$Type);
_.accept = function accept_115(arg0) {
  jus.$lambda$0_16(this.$$outer_0, castTo(arg0, 232));
};
cggl.Ljava_util_stream_Stream$2$lambda$0$Type_2_classLit = createForClass(
  "java.util.stream",
  "Stream/2/lambda$0$Type",
  663
);
jus.$advanceToNextSpliterator_0 = function $advanceToNextSpliterator_0(
  this$static
) {
  while (!this$static.next_0) {
    if (
      !jus.$tryAdvance_14(
        this$static.val$spliteratorOfStreams5,
        new jus.StreamImpl$1$lambda$0$Type(this$static)
      )
    ) {
      return false;
    }
  }
  return true;
};
jus.$lambda$0_17 = function $lambda$0_17(this$static, n_0) {
  if (n_0) {
    this$static.nextStream = n_0;
    this$static.next_0 = n_0.spliterator_0();
  }
};
jus.StreamImpl$1 = function StreamImpl$1(val$spliteratorOfStreams) {
  this.val$spliteratorOfStreams5 = val$spliteratorOfStreams;
  ju.Spliterators$AbstractSpliterator.call(this, $intern_66, 0);
};
defineClass(784, 145, {}, jus.StreamImpl$1);
_.tryAdvance = function tryAdvance_17(action) {
  while (jus.$advanceToNextSpliterator_0(this)) {
    if (this.next_0.tryAdvance(action)) {
      return true;
    } else {
      this.nextStream.close_0();
      this.nextStream = null;
      this.next_0 = null;
    }
  }
  return false;
};
cggl.Ljava_util_stream_StreamImpl$1_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/1",
  784
);
jus.StreamImpl$1$lambda$0$Type = function StreamImpl$1$lambda$0$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(785, 1, $intern_19, jus.StreamImpl$1$lambda$0$Type);
_.accept = function accept_116(arg0) {
  jus.$lambda$0_17(this.$$outer_0, castTo(arg0, 232));
};
cggl.Ljava_util_stream_StreamImpl$1$lambda$0$Type_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/1/lambda$0$Type",
  785
);
jus.StreamImpl$1methodref$add$Type = function StreamImpl$1methodref$add$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(790, 1, {}, jus.StreamImpl$1methodref$add$Type);
_.test_0 = function test_29(arg0) {
  return ju.$add_0(this.$$outer_0, arg0);
};
cggl.Ljava_util_stream_StreamImpl$1methodref$add$Type_2_classLit =
  createForClass("java.util.stream", "StreamImpl/1methodref$add$Type", 790);
jus.$advanceToNextSpliterator_1 = function $advanceToNextSpliterator_1(
  this$static
) {
  while (!this$static.next_0) {
    if (
      !jus.$tryAdvance_14(
        this$static.val$spliteratorOfStreams5,
        new jus.StreamImpl$2$lambda$0$Type(this$static)
      )
    ) {
      return false;
    }
  }
  return true;
};
jus.$lambda$0_18 = function $lambda$0_18(this$static, n_0) {
  if (n_0) {
    this$static.nextStream = n_0;
    this$static.next_0 = n_0.spliterator_1();
  }
};
jus.$tryAdvance_10 = function $tryAdvance_10(this$static, action) {
  while (jus.$advanceToNextSpliterator_1(this$static)) {
    if (this$static.next_0.tryAdvance_0(action)) {
      return true;
    } else {
      this$static.nextStream.close_0();
      this$static.nextStream = null;
      this$static.next_0 = null;
    }
  }
  return false;
};
jus.StreamImpl$2 = function StreamImpl$2(val$spliteratorOfStreams) {
  this.val$spliteratorOfStreams5 = val$spliteratorOfStreams;
  ju.Spliterators$AbstractIntSpliterator.call(this, $intern_66, 0);
};
defineClass(786, 233, {}, jus.StreamImpl$2);
_.tryAdvance_0 = function tryAdvance_18(action) {
  return jus.$tryAdvance_10(this, castTo(action, 36));
};
cggl.Ljava_util_stream_StreamImpl$2_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/2",
  786
);
jus.StreamImpl$2$lambda$0$Type = function StreamImpl$2$lambda$0$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(787, 1, $intern_19, jus.StreamImpl$2$lambda$0$Type);
_.accept = function accept_117(arg0) {
  jus.$lambda$0_18(this.$$outer_0, castTo(arg0, 379));
};
cggl.Ljava_util_stream_StreamImpl$2$lambda$0$Type_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/2/lambda$0$Type",
  787
);
jus.$advanceToNextSpliterator_2 = function $advanceToNextSpliterator_2(
  this$static
) {
  while (!this$static.next_0) {
    if (
      !jus.$tryAdvance_14(
        this$static.val$spliteratorOfStreams5,
        new jus.StreamImpl$3$lambda$0$Type(this$static)
      )
    ) {
      return false;
    }
  }
  return true;
};
jus.$lambda$0_19 = function $lambda$0_19(this$static, n_0) {
  if (n_0) {
    this$static.nextStream = n_0;
    this$static.next_0 = n_0.spliterator_2();
  }
};
jus.$tryAdvance_11 = function $tryAdvance_11(this$static, action) {
  while (jus.$advanceToNextSpliterator_2(this$static)) {
    if (this$static.next_0.tryAdvance_0(action)) {
      return true;
    } else {
      this$static.nextStream.close_0();
      this$static.nextStream = null;
      this$static.next_0 = null;
    }
  }
  return false;
};
jus.StreamImpl$3 = function StreamImpl$3(val$spliteratorOfStreams) {
  this.val$spliteratorOfStreams5 = val$spliteratorOfStreams;
  ju.Spliterators$AbstractLongSpliterator.call(this, $intern_66, 0);
};
defineClass(788, 236, {}, jus.StreamImpl$3);
_.tryAdvance_0 = function tryAdvance_19(action) {
  return jus.$tryAdvance_11(this, castTo(action, 44));
};
cggl.Ljava_util_stream_StreamImpl$3_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/3",
  788
);
jus.StreamImpl$3$lambda$0$Type = function StreamImpl$3$lambda$0$Type(
  $$outer_0
) {
  this.$$outer_0 = $$outer_0;
};
defineClass(789, 1, $intern_19, jus.StreamImpl$3$lambda$0$Type);
_.accept = function accept_118(arg0) {
  jus.$lambda$0_19(this.$$outer_0, castTo(arg0, 891));
};
cggl.Ljava_util_stream_StreamImpl$3$lambda$0$Type_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/3/lambda$0$Type",
  789
);
jus.StreamImpl$6 = function StreamImpl$6(
  this$0,
  $anonymous0,
  $anonymous1,
  val$action
) {
  this.this$01 = this$0;
  this.val$action5 = val$action;
  ju.Spliterators$AbstractSpliterator.call(this, $anonymous0, $anonymous1);
};
jus.lambda$0_21 = function lambda$0_21(action_0, innerAction_1, item_2) {
  action_0.accept(item_2);
  innerAction_1.accept(item_2);
};
defineClass(791, 145, {}, jus.StreamImpl$6);
_.tryAdvance = function tryAdvance_20(innerAction) {
  return this.this$01.spliterator.tryAdvance(
    new jus.StreamImpl$6$lambda$0$Type(this.val$action5, innerAction)
  );
};
cggl.Ljava_util_stream_StreamImpl$6_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/6",
  791
);
jus.StreamImpl$6$lambda$0$Type = function StreamImpl$6$lambda$0$Type(
  action_0,
  innerAction_1
) {
  this.action_0 = action_0;
  this.innerAction_1 = innerAction_1;
};
defineClass(792, 1, $intern_19, jus.StreamImpl$6$lambda$0$Type);
_.accept = function accept_119(arg0) {
  jus.lambda$0_21(this.action_0, this.innerAction_1, arg0);
};
cggl.Ljava_util_stream_StreamImpl$6$lambda$0$Type_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/6/lambda$0$Type",
  792
);
jus.StreamImpl$Empty = function StreamImpl$Empty(previous) {
  jus.TerminatableStream.call(this, previous);
};
defineClass(774, 187, $intern_18, jus.StreamImpl$Empty);
_.close_0 = function close_17() {
  jus.$close_6(this);
};
_.onClose_0 = function onClose_5(arg0) {
  return jus.$onClose_0(this, arg0);
};
_.iterator_0 = function iterator_33() {
  jus.$terminate(this);
  return (
    ju.$clinit_Collections(),
    ju.$clinit_Collections$EmptyListIterator(),
    ju.INSTANCE_0
  );
};
_.map_1 = function map_2(mapper) {
  jus.$throwIfTerminated(this);
  return this;
};
_.spliterator_0 = function spliterator_17() {
  jus.$terminate(this);
  return ju.$clinit_Spliterators$EmptySpliterator(), ju.OF_REF;
};
_.toArray_1 = function toArray_10(generator) {
  jus.$terminate(this);
  return castToArray(generator.apply_2(0));
};
cggl.Ljava_util_stream_StreamImpl$Empty_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/Empty",
  774
);
jus.$lambda$0_20 = function $lambda$0_20(this$static, action_1, item_1) {
  if (this$static.filter_0.test_0(item_1)) {
    this$static.found = true;
    action_1.accept(item_1);
  }
};
jus.StreamImpl$FilterSpliterator = function StreamImpl$FilterSpliterator(
  filter,
  original
) {
  ju.Spliterators$AbstractSpliterator.call(
    this,
    original.estimateSize_0(),
    original.characteristics_0() & -16449
  );
  ji.checkCriticalNotNull(filter);
  this.filter_0 = filter;
  this.original = original;
};
defineClass(299, 145, {}, jus.StreamImpl$FilterSpliterator);
_.tryAdvance = function tryAdvance_21(action) {
  this.found = false;
  while (
    !this.found &&
    this.original.tryAdvance(
      new jus.StreamImpl$FilterSpliterator$lambda$0$Type(this, action)
    )
  );
  return this.found;
};
_.found = false;
cggl.Ljava_util_stream_StreamImpl$FilterSpliterator_2_classLit = createForClass(
  "java.util.stream",
  "StreamImpl/FilterSpliterator",
  299
);
jus.StreamImpl$FilterSpliterator$lambda$0$Type =
  function StreamImpl$FilterSpliterator$lambda$0$Type($$outer_0, action_1) {
    this.$$outer_0 = $$outer_0;
    this.action_1 = action_1;
  };
defineClass(780, 1, $intern_19, jus.StreamImpl$FilterSpliterator$lambda$0$Type);
_.accept = function accept_120(arg0) {
  jus.$lambda$0_20(this.$$outer_0, this.action_1, arg0);
};
cggl.Ljava_util_stream_StreamImpl$FilterSpliterator$lambda$0$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "StreamImpl/FilterSpliterator/lambda$0$Type",
    780
  );
jus.$lambda$0_21 = function $lambda$0_21(this$static, action_1, u_1) {
  action_1.accept_2(this$static.map_0.applyAsInt(u_1));
};
jus.$tryAdvance_12 = function $tryAdvance_12(this$static, action) {
  return this$static.original.tryAdvance(
    new jus.StreamImpl$MapToIntSpliterator$lambda$0$Type(this$static, action)
  );
};
jus.StreamImpl$MapToIntSpliterator = function StreamImpl$MapToIntSpliterator(
  map_0,
  original
) {
  ju.Spliterators$AbstractIntSpliterator.call(
    this,
    original.estimateSize_0(),
    original.characteristics_0() & -6
  );
  ji.checkCriticalNotNull(map_0);
  this.map_0 = map_0;
  this.original = original;
};
defineClass(775, 233, {}, jus.StreamImpl$MapToIntSpliterator);
_.tryAdvance_0 = function tryAdvance_22(action) {
  return jus.$tryAdvance_12(this, castTo(action, 36));
};
cggl.Ljava_util_stream_StreamImpl$MapToIntSpliterator_2_classLit =
  createForClass("java.util.stream", "StreamImpl/MapToIntSpliterator", 775);
jus.StreamImpl$MapToIntSpliterator$lambda$0$Type =
  function StreamImpl$MapToIntSpliterator$lambda$0$Type($$outer_0, action_1) {
    this.$$outer_0 = $$outer_0;
    this.action_1 = action_1;
  };
defineClass(
  778,
  1,
  $intern_19,
  jus.StreamImpl$MapToIntSpliterator$lambda$0$Type
);
_.accept = function accept_121(arg0) {
  jus.$lambda$0_21(this.$$outer_0, this.action_1, arg0);
};
cggl.Ljava_util_stream_StreamImpl$MapToIntSpliterator$lambda$0$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "StreamImpl/MapToIntSpliterator/lambda$0$Type",
    778
  );
jus.$tryAdvance_13 = function $tryAdvance_13(this$static, action) {
  return this$static.original.tryAdvance(
    new jus.StreamImpl$MapToLongSpliterator$lambda$0$Type(action)
  );
};
jus.StreamImpl$MapToLongSpliterator = function StreamImpl$MapToLongSpliterator(
  map_0,
  original
) {
  ju.Spliterators$AbstractLongSpliterator.call(
    this,
    original.estimateSize_0(),
    original.characteristics_0() & -6
  );
  ji.checkCriticalNotNull(map_0);
  this.original = original;
};
defineClass(776, 236, {}, jus.StreamImpl$MapToLongSpliterator);
_.tryAdvance_0 = function tryAdvance_23(action) {
  return jus.$tryAdvance_13(this, castTo(action, 44));
};
cggl.Ljava_util_stream_StreamImpl$MapToLongSpliterator_2_classLit =
  createForClass("java.util.stream", "StreamImpl/MapToLongSpliterator", 776);
jus.StreamImpl$MapToLongSpliterator$lambda$0$Type =
  function StreamImpl$MapToLongSpliterator$lambda$0$Type(action_1) {
    this.action_1 = action_1;
  };
defineClass(
  779,
  1,
  $intern_19,
  jus.StreamImpl$MapToLongSpliterator$lambda$0$Type
);
_.accept = function accept_122(arg0) {
  this.action_1.accept_0(idwsd.$size_0(castTo(arg0, 24)));
};
cggl.Ljava_util_stream_StreamImpl$MapToLongSpliterator$lambda$0$Type_2_classLit =
  createForClass(
    "java.util.stream",
    "StreamImpl/MapToLongSpliterator/lambda$0$Type",
    779
  );
jus.TerminatableStream$lambda$0$Type =
  function TerminatableStream$lambda$0$Type(throwables_0) {
    this.throwables_0 = throwables_0;
  };
defineClass(793, 1, $intern_19, jus.TerminatableStream$lambda$0$Type);
_.accept = function accept_127(arg0) {
  jus.lambda$0_20(this.throwables_0, castTo(arg0, 239));
};
cggl.Ljava_util_stream_TerminatableStream$lambda$0$Type_2_classLit =
  createForClass("java.util.stream", "TerminatableStream/lambda$0$Type", 793);
ji.$clinit_EmulatedCharset = function $clinit_EmulatedCharset() {
  ji.$clinit_EmulatedCharset = emptyMethod;
  new ji.EmulatedCharset$UtfCharset();
  new ji.EmulatedCharset$LatinCharset("ISO-LATIN-1");
  new ji.EmulatedCharset$LatinCharset("ISO-8859-1");
};
ji.EmulatedCharset = function EmulatedCharset(name_0) {
  jnc.Charset.call(this, name_0);
};
defineClass(351, 127, $intern_71);
cggl.Ljavaemul_internal_EmulatedCharset_2_classLit = createForClass(
  "javaemul.internal",
  "EmulatedCharset",
  351
);
ji.EmulatedCharset$LatinCharset = function EmulatedCharset$LatinCharset(
  name_0
) {
  ji.EmulatedCharset.call(this, name_0);
};
defineClass(352, 351, $intern_71, ji.EmulatedCharset$LatinCharset);
cggl.Ljavaemul_internal_EmulatedCharset$LatinCharset_2_classLit =
  createForClass("javaemul.internal", "EmulatedCharset/LatinCharset", 352);
ji.$decodeString = function $decodeString(bytes, len) {
  var b, ch_0, charCount, chars, count, i, i0, number, outIdx;
  charCount = 0;
  for (i0 = 0; i0 < len; ) {
    ++charCount;
    ch_0 = bytes[i0];
    if ((ch_0 & 192) == 128) {
      throw toJs(new jl.IllegalArgumentException_0("Invalid UTF8 sequence"));
    } else if ((ch_0 & 128) == 0) {
      ++i0;
    } else if ((ch_0 & 224) == 192) {
      i0 += 2;
    } else if ((ch_0 & 240) == 224) {
      i0 += 3;
    } else if ((ch_0 & 248) == 240) {
      i0 += 4;
    } else {
      throw toJs(new jl.IllegalArgumentException_0("Invalid UTF8 sequence"));
    }
    if (i0 > len) {
      throw toJs(new jl.IndexOutOfBoundsException_0("Invalid UTF8 sequence"));
    }
  }
  chars = initUnidimensionalArray(
    cggl.C_classLit,
    $intern_23,
    18,
    charCount,
    15,
    1
  );
  outIdx = 0;
  count = 0;
  for (i = 0; i < len; ) {
    ch_0 = bytes[i++];
    if ((ch_0 & 128) == 0) {
      count = 1;
      ch_0 &= 127;
    } else if ((ch_0 & 224) == 192) {
      count = 2;
      ch_0 &= 31;
    } else if ((ch_0 & 240) == 224) {
      count = 3;
      ch_0 &= 15;
    } else if ((ch_0 & 248) == 240) {
      count = 4;
      ch_0 &= 7;
    } else if ((ch_0 & 252) == 248) {
      count = 5;
      ch_0 &= 3;
    }
    while (--count > 0) {
      b = bytes[i++];
      if ((b & 192) != 128) {
        throw toJs(
          new jl.IllegalArgumentException_0(
            "Invalid UTF8 sequence at " +
              (i - 1) +
              ", byte=" +
              ((number = ji.uncheckedCast(jl.toUnsigned(b))),
              number.toString(16))
          )
        );
      }
      ch_0 = (ch_0 << 6) | (b & 63);
    }
    outIdx += toChars(ch_0, chars, outIdx);
  }
  return chars;
};
ji.$encodeUtf8 = function $encodeUtf8(bytes, ofs, codePoint) {
  if (codePoint < 128) {
    bytes[ofs] = ((codePoint & 127) << 24) >> 24;
    return 1;
  } else if (codePoint < 2048) {
    bytes[ofs++] = ((((codePoint >> 6) & 31) | 192) << 24) >> 24;
    bytes[ofs] = (((codePoint & 63) | 128) << 24) >> 24;
    return 2;
  } else if (codePoint < $intern_9) {
    bytes[ofs++] = ((((codePoint >> 12) & 15) | 224) << 24) >> 24;
    bytes[ofs++] = ((((codePoint >> 6) & 63) | 128) << 24) >> 24;
    bytes[ofs] = (((codePoint & 63) | 128) << 24) >> 24;
    return 3;
  } else if (codePoint < 2097152) {
    bytes[ofs++] = ((((codePoint >> 18) & 7) | 240) << 24) >> 24;
    bytes[ofs++] = ((((codePoint >> 12) & 63) | 128) << 24) >> 24;
    bytes[ofs++] = ((((codePoint >> 6) & 63) | 128) << 24) >> 24;
    bytes[ofs] = (((codePoint & 63) | 128) << 24) >> 24;
    return 4;
  } else if (codePoint < 67108864) {
    bytes[ofs++] = ((((codePoint >> 24) & 3) | 248) << 24) >> 24;
    bytes[ofs++] = ((((codePoint >> 18) & 63) | 128) << 24) >> 24;
    bytes[ofs++] = ((((codePoint >> 12) & 63) | 128) << 24) >> 24;
    bytes[ofs++] = ((((codePoint >> 6) & 63) | 128) << 24) >> 24;
    bytes[ofs] = (((codePoint & 63) | 128) << 24) >> 24;
    return 5;
  }
  throw toJs(
    new jl.IllegalArgumentException_0("Character out of range: " + codePoint)
  );
};
ji.$getBytes_0 = function $getBytes_0(str) {
  var byteCount, bytes, ch_0, i, i0, n, out;
  n = ji.uncheckedCast(str).length;
  byteCount = 0;
  for (i0 = 0; i0 < n; ) {
    ch_0 = codePointAt(str, i0, ji.uncheckedCast(str).length);
    i0 += ch_0 >= $intern_9 ? 2 : 1;
    ch_0 < 128
      ? ++byteCount
      : ch_0 < 2048
      ? (byteCount += 2)
      : ch_0 < $intern_9
      ? (byteCount += 3)
      : ch_0 < 2097152
      ? (byteCount += 4)
      : ch_0 < 67108864 && (byteCount += 5);
  }
  bytes = initUnidimensionalArray(
    cggl.B_classLit,
    $intern_55,
    18,
    byteCount,
    15,
    1
  );
  out = 0;
  for (i = 0; i < n; ) {
    ch_0 = codePointAt(str, i, ji.uncheckedCast(str).length);
    i += ch_0 >= $intern_9 ? 2 : 1;
    out += ji.$encodeUtf8(bytes, out, ch_0);
  }
  return bytes;
};
ji.EmulatedCharset$UtfCharset = function EmulatedCharset$UtfCharset() {
  ji.EmulatedCharset.call(this, "UTF-8");
};
defineClass(707, 351, $intern_71, ji.EmulatedCharset$UtfCharset);
cggl.Ljavaemul_internal_EmulatedCharset$UtfCharset_2_classLit = createForClass(
  "javaemul.internal",
  "EmulatedCharset/UtfCharset",
  707
);
ji.getIdentityHashCode = function getIdentityHashCode(o) {
  switch (typeof o) {
    case "string":
      return ji.getHashCode_2(ji.uncheckedCast(o));
    case "number":
      return round_int(ji.unsafeCastToDouble(o));
    case "boolean":
      return jl.$clinit_Boolean(), ji.unsafeCastToBoolean(o) ? 1231 : 1237;
    default:
      return o == null ? 0 : ji.getHashCode_1(o);
  }
};
jb.$asArrayLike = function $asArrayLike(this$static) {
  return (
    jb.checkCriticalType_0(this$static == null || jb.hasLength(this$static)),
    this$static
  );
};
jb.$asBoolean = function $asBoolean(this$static) {
  return (
    jb.checkCriticalType_0(typeof this$static == "boolean"),
    jb.asBoolean(this$static)
  );
};
jb.$asDouble = function $asDouble(this$static) {
  return (
    jb.checkCriticalType_0(typeof this$static == "number"),
    jb.asDouble(this$static)
  );
};
jb.$asInt = function $asInt(this$static) {
  return jb.checkCriticalType_0(jb.isInt(this$static)), jb.asInt(this$static);
};
jb.$asLong = function $asLong(this$static) {
  return jb.checkCriticalType_0(jb.isLong(this$static)), jb.asLong(this$static);
};
jb.$asString_2 = function $asString_2(this$static) {
  return jb.checkCriticalType_0(typeof this$static == "string"), this$static;
};
jb.asBoolean = function asBoolean(obj) {
  return obj;
};
jb.asByte = function asByte(obj) {
  return obj;
};
jb.asChar = function asChar(obj) {
  return obj;
};
jb.asDouble = function asDouble(obj) {
  return obj;
};
jb.asInt = function asInt(obj) {
  return obj;
};
jb.asLong = function asLong(obj) {
  return obj;
};
jb.asShort = function asShort(obj) {
  return obj;
};
jb.delete_0 = function delete_0(obj, key) {
  delete obj[key];
};
jb.emptyObjectLiteral = function emptyObjectLiteral() {
  return {};
};
jb.forEach_12 = function forEach_12(obj, cb) {
  for (var element in obj) {
    cb(element);
  }
};
jb.get_44 = function get_44(obj, key) {
  return obj[key];
};
jb.getAt = function getAt(obj, key) {
  return obj[key];
};
jb.getLength = function getLength(obj) {
  return obj.length;
};
jb.has = function has(obj, key) {
  return key in obj;
};
jb.hasLength = function hasLength(obj) {
  return typeof obj == "object" && typeof obj.length == "number";
};
jb.isInt = function isInt(obj) {
  return (obj | 0) === obj;
};
jb.isLong = function isLong(obj) {
  if (typeof obj == "number") {
    return cggl.isSafeIntegerRange(obj) && Math.floor(obj) === obj;
  }
  if (typeof obj == "object" && obj) {
    return "h" in obj && "l" in obj && "m" in obj;
  }
  return false;
};
jb.set_6 = function set_6(obj, key, value_0) {
  obj[key] = value_0;
};
jb.setAt = function setAt(obj, key, value_0) {
  obj[key] = value_0;
};
jb.checkCriticalType_0 = function checkCriticalType_0(expression) {
  if (!expression) {
    throw toJs(new jl.ClassCastException());
  }
};
jb.asArrayLike = function asArrayLike(obj) {
  jb.checkCriticalType_0(obj == null || jb.hasLength(obj));
  return obj;
};
jb.asByte_0 = function asByte_0(obj) {
  var num;
  num = (jb.checkCriticalType_0(jb.isInt(obj)), jb.asInt(obj));
  jb.checkCriticalType_0(num == (num << 24) >> 24);
  return jb.asByte(obj);
};
jb.asChar_0 = function asChar_0(obj) {
  var num;
  num = (jb.checkCriticalType_0(jb.isInt(obj)), jb.asInt(obj));
  jb.checkCriticalType_0(num == (num & $intern_10));
  return jb.asChar(obj);
};
jb.asDouble_0 = function asDouble_0(obj) {
  jb.checkCriticalType_0(typeof obj == "number");
  return jb.asDouble(obj);
};
jb.asInt_0 = function asInt_0(obj) {
  jb.checkCriticalType_0(jb.isInt(obj));
  return jb.asInt(obj);
};
jb.asShort_0 = function asShort_0(obj) {
  var num;
  num = (jb.checkCriticalType_0(jb.isInt(obj)), jb.asInt(obj));
  jb.checkCriticalType_0(num == (num << 16) >> 16);
  return jb.asShort(obj);
};
jb.isFalsy = function isFalsy(obj) {
  return !obj;
};
defineClass(4691, 1, {});
cggl.C_classLit = createForPrimitive("char", "C");
cggl.I_classLit = createForPrimitive("int", "I");
cggl.Z_classLit = createForPrimitive("boolean", "Z");
cggl.J_classLit = createForPrimitive("long", "J");
cggl.D_classLit = createForPrimitive("double", "D");
cggl.B_classLit = createForPrimitive("byte", "B");
cggl.F_classLit = createForPrimitive("float", "F");
cggl.S_classLit = createForPrimitive("short", "S");
_ = provide("dh.AggregationOperation", idwcate.JsAggregationOperation);
_.ABS_SUM = idwcate.ABS_SUM_0;
_.AVG = idwcate.AVG_1;
_.COUNT = idwcate.COUNT_1;
_.COUNT_DISTINCT = idwcate.COUNT_DISTINCT;
_.DISTINCT = idwcate.DISTINCT;
_.FIRST = idwcate.FIRST_0;
_.LAST = idwcate.LAST_0;
_.MAX = idwcate.MAX_1;
_.MIN = idwcate.MIN_1;
_.SKIP = idwcate.SKIP_0;
_.STD = idwcate.STD_0;
_.SUM = idwcate.SUM_1;
_.UNIQUE = idwcate.UNIQUE;
_.VAR = idwcate.VAR_0;
_ = provide("dh.BigDecimalWrapper");
_.ofString = idwca.ofString;
_ = provide("dh.BigIntegerWrapper");
_.ofString = idwca.ofString_0;
_ = provide("dh.Client", idwca.ClientLegacyNamespace);
_.EVENT_REQUEST_FAILED = idwca.EVENT_REQUEST_FAILED;
_.EVENT_REQUEST_STARTED = idwca.EVENT_REQUEST_STARTED;
_.EVENT_REQUEST_SUCCEEDED = idwca.EVENT_REQUEST_SUCCEEDED;
_ = provide("dh.Column");
_.createCustomColumn = idwca.createCustomColumn;
_.formatRowColor = idwca.formatRowColor;
_ = provide("dh.CommandInfo", idwci.CommandInfo);
_ = provide("dh.ConnectOptions", idwca.ConnectOptions);
_ = provide("dh.CoreClient", idwca.CoreClient);
_.EVENT_CONNECT = idwca.EVENT_CONNECT;
_.EVENT_DISCONNECT = idwca.EVENT_DISCONNECT;
_.EVENT_RECONNECT = idwca.EVENT_RECONNECT;
_.EVENT_RECONNECT_AUTH_FAILED = idwca.EVENT_RECONNECT_AUTH_FAILED;
_.EVENT_REFRESH_TOKEN_UPDATED = idwca.EVENT_REFRESH_TOKEN_UPDATED;
_.EVENT_REQUEST_FAILED = idwca.EVENT_REQUEST_FAILED_0;
_.EVENT_REQUEST_STARTED = idwca.EVENT_REQUEST_STARTED_0;
_.EVENT_REQUEST_SUCCEEDED = idwca.EVENT_REQUEST_SUCCEEDED_0;
_.LOGIN_TYPE_ANONYMOUS = idwca.LOGIN_TYPE_ANONYMOUS;
_.LOGIN_TYPE_PASSWORD = idwca.LOGIN_TYPE_PASSWORD;
_ = provide("dh.CustomColumn");
_.TYPE_FORMAT_COLOR = idwca.TYPE_FORMAT_COLOR;
_.TYPE_FORMAT_DATE = idwca.TYPE_FORMAT_DATE;
_.TYPE_FORMAT_NUMBER = idwca.TYPE_FORMAT_NUMBER;
_.TYPE_NEW = idwca.TYPE_NEW;
_ = provide("dh.DateWrapper");
_.ofJsDate = idwca.ofJsDate;
_ = provide("dh.FilterCondition");
_.invoke = idwcaf.invoke_0;
_.search = idwcaf.search_0;
_ = provide("dh.FilterValue");
_.ofBoolean = idwcaf.ofBoolean;
_.ofNumber = idwcaf.ofNumber;
_.ofString = idwcaf.ofString_2;
_ = provide("dh.Ide", idwci.IdeClient);
_.getExistingSession = idwci.getExistingSession;
_ = provide("dh.IdeConnection", idwci.IdeConnection);
_.EVENT_DISCONNECT = idwci.EVENT_DISCONNECT_6;
_.EVENT_RECONNECT = idwci.EVENT_RECONNECT_6;
_.EVENT_SHUTDOWN = idwci.EVENT_SHUTDOWN;
_.HACK_CONNECTION_FAILURE = idwci.HACK_CONNECTION_FAILURE;
_ = provide("dh.IdeSession");
_.EVENT_COMMANDSTARTED = idwci.EVENT_COMMANDSTARTED;
_.EVENT_REQUEST_FAILED = idwci.EVENT_REQUEST_FAILED_3;
_ = provide("dh.LayoutHints", idwca.JsLayoutHints);
_ = provide("dh.LoginCredentials", idwca.LoginCredentials);
_ = provide("dh.LongWrapper");
_.ofString = idwca.ofString_1;
_ = provide("dh.PartitionedTable");
_.EVENT_DISCONNECT = idwca.EVENT_DISCONNECT_0;
_.EVENT_KEYADDED = idwca.EVENT_KEYADDED;
_.EVENT_RECONNECT = idwca.EVENT_RECONNECT_0;
_.EVENT_RECONNECTFAILED = idwca.EVENT_RECONNECTFAILED;
_ = provide("dh.QueryInfo");
_.EVENT_CONNECT = idwca.EVENT_CONNECT_0;
_.EVENT_DISCONNECT = idwca.EVENT_DISCONNECT_2;
_.EVENT_RECONNECT = idwca.EVENT_RECONNECT_2;
_.EVENT_TABLE_OPENED = idwca.EVENT_TABLE_OPENED;
_ = provide("dh.RangeSet");
_.ofItems = idwca.ofItems;
_.ofRange = idwca.ofRange;
_.ofRanges = idwca.ofRanges;
_.ofSortedRanges = idwca.ofSortedRanges;
_ = provide("dh.RollupConfig", idwcat.JsRollupConfig);
_ = provide("dh.SearchDisplayMode", idwca.SearchDisplayMode);
_.SEARCH_DISPLAY_DEFAULT = idwca.SEARCH_DISPLAY_DEFAULT;
_.SEARCH_DISPLAY_HIDE = idwca.SEARCH_DISPLAY_HIDE;
_.SEARCH_DISPLAY_SHOW = idwca.SEARCH_DISPLAY_SHOW;
_ = provide("dh.Sort");
_.ASCENDING = idwca.ASCENDING;
_.DESCENDING = idwca.DESCENDING;
_.REVERSE = idwca.REVERSE;
_ = provide("dh.Table");
_.EVENT_CUSTOMCOLUMNSCHANGED = idwca.EVENT_CUSTOMCOLUMNSCHANGED;
_.EVENT_DISCONNECT = idwca.EVENT_DISCONNECT_1;
_.EVENT_FILTERCHANGED = idwca.EVENT_FILTERCHANGED;
_.EVENT_RECONNECT = idwca.EVENT_RECONNECT_1;
_.EVENT_RECONNECTFAILED = idwca.EVENT_RECONNECTFAILED_0;
_.EVENT_REQUEST_FAILED = idwca.EVENT_REQUEST_FAILED_1;
_.EVENT_REQUEST_SUCCEEDED = idwca.EVENT_REQUEST_SUCCEEDED_1;
_.EVENT_ROWADDED = idwca.EVENT_ROWADDED;
_.EVENT_ROWREMOVED = idwca.EVENT_ROWREMOVED;
_.EVENT_ROWUPDATED = idwca.EVENT_ROWUPDATED;
_.EVENT_SIZECHANGED = idwca.EVENT_SIZECHANGED;
_.EVENT_SORTCHANGED = idwca.EVENT_SORTCHANGED;
_.EVENT_UPDATED = idwca.EVENT_UPDATED;
_.SIZE_UNCOALESCED = idwca.SIZE_UNCOALESCED;
_.reverse = idwca.reverse_0;
_ = provide("dh.TableMap");
_.EVENT_DISCONNECT = idwca.EVENT_DISCONNECT_3;
_.EVENT_KEYADDED = idwca.EVENT_KEYADDED_0;
_.EVENT_RECONNECT = idwca.EVENT_RECONNECT_3;
_.EVENT_RECONNECTFAILED = idwca.EVENT_RECONNECTFAILED_1;
_ = provide("dh.TableSubscription");
_.EVENT_UPDATED = idwcas3.EVENT_UPDATED_0;
idwca.$clinit_JsTotalsTableConfig();
_ = provide("dh.TotalsTableConfig", idwca.JsTotalsTableConfig);
_.ABS_SUM = idwca.ABS_SUM;
_.AVG = idwca.AVG_0;
_.COUNT = idwca.COUNT_0;
_.FIRST = idwca.FIRST;
_.LAST = idwca.LAST;
_.MAX = idwca.MAX_0;
_.MIN = idwca.MIN_0;
_.SKIP = idwca.SKIP;
_.STD = idwca.STD;
_.SUM = idwca.SUM_0;
_.VAR = idwca.VAR;
_ = provide("dh.TreeTable");
_.EVENT_DISCONNECT = idwcat.EVENT_DISCONNECT_4;
_.EVENT_RECONNECT = idwcat.EVENT_RECONNECT_4;
_.EVENT_RECONNECTFAILED = idwcat.EVENT_RECONNECTFAILED_2;
_.EVENT_REQUEST_FAILED = idwcat.EVENT_REQUEST_FAILED_2;
_.EVENT_UPDATED = idwcat.EVENT_UPDATED_1;
_ = provide("dh.TreeTableConfig", idwcat.JsTreeTableConfig);
_ = provide("dh.ValueType", idwca.ValueType);
_.BOOLEAN = idwca.BOOLEAN;
_.DATETIME = idwca.DATETIME;
_.DOUBLE = idwca.DOUBLE;
_.LONG = idwca.LONG;
_.NUMBER = idwca.NUMBER;
_.STRING = idwca.STRING;
_ = provide("dh.VariableType", idwcac.JsVariableType);
_.FIGURE = idwcac.FIGURE;
_.HIERARCHICALTABLE = idwcac.HIERARCHICALTABLE;
_.OTHERWIDGET = idwcac.OTHERWIDGET;
_.PANDAS = idwcac.PANDAS;
_.PARTITIONEDTABLE = idwcac.PARTITIONEDTABLE;
_.TABLE = idwcac.TABLE;
_.TABLEMAP = idwcac.TABLEMAP;
_.TREEMAP = idwcac.TREEMAP;
_.TREETABLE = idwcac.TREETABLE;
_ = provide("dh.Widget");
_.EVENT_CLOSE = idwcaw.EVENT_CLOSE;
_.EVENT_MESSAGE = idwcaw.EVENT_MESSAGE;
idwcawce.$clinit_JsDayOfWeek();
_ = provide("dh.calendar.DayOfWeek", idwcawce.JsDayOfWeek);
_.FRIDAY = idwcawce.FRIDAY;
_.MONDAY = idwcawce.MONDAY;
_.SATURDAY = idwcawce.SATURDAY;
_.SUNDAY = idwcawce.SUNDAY;
_.THURSDAY = idwcawce.THURSDAY;
_.TUESDAY = idwcawce.TUESDAY;
_.WEDNESDAY = idwcawce.WEDNESDAY;
_.values = idwcawce.values_5;
idwcai.$clinit_JsDateTimeFormat();
_ = provide("dh.i18n.DateTimeFormat", idwcai.JsDateTimeFormat);
_.NANOS_PER_MILLI = idwcai.NANOS_PER_MILLI;
_.format = idwcai.format_0;
_.getFormat = idwcai.getFormat_1;
_.parse = idwcai.parse_2;
_.parseAsDate = idwcai.parseAsDate_0;
idwcai.$clinit_JsNumberFormat();
_ = provide("dh.i18n.NumberFormat", idwcai.JsNumberFormat);
_.format = idwcai.format_3;
_.getFormat = idwcai.getFormat_2;
_.parse = idwcai.parse_4;
idwcai.$clinit_JsTimeZone();
_ = provide("dh.i18n.TimeZone");
_.getTimeZone = idwcai.getTimeZone;
_ = provide("dh.ide.VariableDescriptor", idwcac.JsVariableDescriptor);
_ = provide("dh.lsp.CompletionItem", idwsil.CompletionItem);
_ = provide("dh.lsp.Hover", idwsil.Hover);
_ = provide("dh.lsp.MarkupContent", idwsil.MarkupContent);
_ = provide("dh.lsp.ParameterInformation", idwsil.ParameterInformation);
_ = provide("dh.lsp.Position", idwsil.Position_0);
_ = provide("dh.lsp.Range", idwsil.DocumentRange);
_ = provide("dh.lsp.SignatureInformation", idwsil.SignatureInformation);
_ = provide(
  "dh.lsp.TextDocumentContentChangeEvent",
  idwsil.TextDocumentContentChangeEvent
);
_ = provide("dh.lsp.TextEdit", idwsil.TextEdit);
_ = provide("dh.plot.AxisDescriptor", idwcawp.JsAxisDescriptor);
idwcawpe.$clinit_JsAxisFormatType();
_ = provide("dh.plot.AxisFormatType", idwcawpe.JsAxisFormatType);
_.CATEGORY = idwcawpe.CATEGORY;
_.NUMBER = idwcawpe.NUMBER_0;
idwcawpe.$clinit_JsAxisPosition();
_ = provide("dh.plot.AxisPosition", idwcawpe.JsAxisPosition);
_.BOTTOM = idwcawpe.BOTTOM;
_.LEFT = idwcawpe.LEFT;
_.NONE = idwcawpe.NONE;
_.RIGHT = idwcawpe.RIGHT;
_.TOP = idwcawpe.TOP;
idwcawpe.$clinit_JsAxisType();
_ = provide("dh.plot.AxisType", idwcawpe.JsAxisType);
_.COLOR = idwcawpe.COLOR;
_.LABEL = idwcawpe.LABEL;
_.SHAPE = idwcawpe.SHAPE;
_.SIZE = idwcawpe.SIZE_0;
_.X = idwcawpe.X;
_.Y = idwcawpe.Y;
_ = provide("dh.plot.Chart");
_.EVENT_SERIES_ADDED = idwcawp.EVENT_SERIES_ADDED;
_ = provide("dh.plot.ChartData", idwcawp.ChartData);
_ = provide("dh.plot.ChartDescriptor", idwcawp.JsChartDescriptor);
idwcawpe.$clinit_JsChartType();
_ = provide("dh.plot.ChartType", idwcawpe.JsChartType);
_.CATEGORY = idwcawpe.CATEGORY_0;
_.CATEGORY_3D = idwcawpe.CATEGORY_3D;
_.OHLC = idwcawpe.OHLC;
_.PIE = idwcawpe.PIE;
_.TREEMAP = idwcawpe.TREEMAP_0;
_.XY = idwcawpe.XY;
_.XYZ = idwcawpe.XYZ;
idwcawp.$clinit_DownsampleOptions();
_ = provide("dh.plot.DownsampleOptions");
_.DEFAULT = idwcawp.DEFAULT;
_.DISABLE = idwcawp.DISABLE;
_.MAX_SERIES_SIZE = idwcawp.MAX_SERIES_SIZE;
_.MAX_SUBSCRIPTION_SIZE = idwcawp.MAX_SUBSCRIPTION_SIZE;
_ = provide("dh.plot.Figure");
_.EVENT_DISCONNECT = idwcawp.EVENT_DISCONNECT_5;
_.EVENT_DOWNSAMPLEFAILED = idwcawp.EVENT_DOWNSAMPLEFAILED;
_.EVENT_DOWNSAMPLEFINISHED = idwcawp.EVENT_DOWNSAMPLEFINISHED;
_.EVENT_DOWNSAMPLENEEDED = idwcawp.EVENT_DOWNSAMPLENEEDED;
_.EVENT_DOWNSAMPLESTARTED = idwcawp.EVENT_DOWNSAMPLESTARTED;
_.EVENT_RECONNECT = idwcawp.EVENT_RECONNECT_5;
_.EVENT_RECONNECTFAILED = idwcawp.EVENT_RECONNECTFAILED_3;
_.EVENT_SERIES_ADDED = idwcawp.EVENT_SERIES_ADDED_0;
_.EVENT_UPDATED = idwcawp.EVENT_UPDATED_2;
_.create = idwcawp.create_3;
_ = provide("dh.plot.FigureDescriptor", idwcawp.JsFigureDescriptor);
_ = provide("dh.plot.SeriesDescriptor", idwcawp.JsSeriesDescriptor);
idwcawpe.$clinit_JsSeriesPlotStyle();
_ = provide("dh.plot.SeriesPlotStyle", idwcawpe.JsSeriesPlotStyle);
_.AREA = idwcawpe.AREA;
_.BAR = idwcawpe.BAR;
_.ERROR_BAR = idwcawpe.ERROR_BAR;
_.HISTOGRAM = idwcawpe.HISTOGRAM;
_.LINE = idwcawpe.LINE;
_.OHLC = idwcawpe.OHLC_0;
_.PIE = idwcawpe.PIE_0;
_.SCATTER = idwcawpe.SCATTER;
_.STACKED_AREA = idwcawpe.STACKED_AREA;
_.STACKED_BAR = idwcawpe.STACKED_BAR;
_.STEP = idwcawpe.STEP;
_.TREEMAP = idwcawpe.TREEMAP_1;
_ = provide("dh.plot.SourceDescriptor", idwcawp.JsSourceDescriptor);
idwcawpe.$clinit_JsSourceType();
_ = provide("dh.plot.SourceType", idwcawpe.JsSourceType);
_.CLOSE = idwcawpe.CLOSE;
_.COLOR = idwcawpe.COLOR_0;
_.HIGH = idwcawpe.HIGH;
_.HOVER_TEXT = idwcawpe.HOVER_TEXT;
_.LABEL = idwcawpe.LABEL_0;
_.LOW = idwcawpe.LOW;
_.OPEN = idwcawpe.OPEN;
_.PARENT = idwcawpe.PARENT;
_.SHAPE = idwcawpe.SHAPE_0;
_.SIZE = idwcawpe.SIZE_1;
_.TEXT = idwcawpe.TEXT;
_.TIME = idwcawpe.TIME;
_.X = idwcawpe.X_0;
_.X_HIGH = idwcawpe.X_HIGH;
_.X_LOW = idwcawpe.X_LOW;
_.Y = idwcawpe.Y_0;
_.Y_HIGH = idwcawpe.Y_HIGH;
_.Y_LOW = idwcawpe.Y_LOW;
_.Z = idwcawpe.Z;
_ = provide("dh.storage.FileContents");
_.arrayBuffers = idwcas2.arrayBuffers;
_.blob = idwcas2.blob_0;
_.text = idwcas2.text_2;
_ = provide("dh.storage.ItemType", idwcas2.JsItemType);
_.DIRECTORY = idwcas2.DIRECTORY;
_.FILE = idwcas2.FILE;
_ = provide("java.io.Serializable");
_.$isInstance = $isInstance;
jl.$clinit_Boolean();
_ = provide("java.lang.Boolean");
_.$isInstance = $isInstance_0;
_ = provide("java.lang.CharSequence");
_.$isInstance = $isInstance_1;
_ = provide("java.lang.Cloneable");
_.$isInstance = $isInstance_2;
_ = provide("java.lang.Comparable");
_.$isInstance = $isInstance_3;
_ = provide("java.lang.Double");
_.$isInstance = $isInstance_5;
_ = provide("java.lang.Number");
_.$isInstance = jl.$isInstance_4;
_ = provide("java.lang.String");
_.$isInstance = $isInstance_6;
_ = provide("java.lang.Throwable");
_.of = of;
var $entry = (cggcci.$clinit_Impl(), entry_0);
var gwtOnLoad = (gwtOnLoad = gwtOnLoad_0);
addInitFunctions(init_0);
setGwtProperty("permProps", [
  [
    ["locale", "default"],
    ["user.agent", "gecko1_8"],
  ],
  [
    ["locale", "default"],
    ["user.agent", "ie10"],
  ],
  [
    ["locale", "default"],
    ["user.agent", "ie8"],
  ],
  [
    ["locale", "default"],
    ["user.agent", "ie9"],
  ],
  [
    ["locale", "default"],
    ["user.agent", "safari"],
  ],
]);

gwtOnLoad(null, "dhapi", null);
export default dh;
